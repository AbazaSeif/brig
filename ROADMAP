PRIORITIES:

[L]: Low    = Nice to have. Can be implemented when it fits.
[H]: High   = Important change, should be implemented soon.
[U]: Urgent = Design influencing change, should be implemented as soon as possible.

1. Rewrite ``cafs`` - The content addressed filesystem
======================================================

All changes should be with fitting unittests.

✓ [H] Implement a Garbage collector to ease the creation of intermediate nodes.
✓ [L] Implement transaction (at least on the write site) based key/value storage.
✓ [H] Implement Ghost creation and make Nodes have a ghost ref if they were moved.
✓ [U] Implement coreutils on top of linker (touch, mkdir, cat, move, remove).
✓ [H] Implement good locking strategy to allow giving nodes to fuse/outside.
- [L] Implement a command line util to do basic tasks for each cafs.
✓ [H] Implement sync & diff functionality (based on ghosts).
✓ [L] Prefix the Inode directory with the store's owner name to avoid collissions.

2. Re-integrate brig with newer version of ipfs.
================================================

- [U] Implement a backend interface that wraps all needed ipfs actions,
      and makes them easy to access in brig's ways.
- [H] Update fuse layer to use the new cafs to test ipfs/cafs interplay.

3. Bring back daemon/client mode.
=================================

✓ [U] Use capnproto to implement a rpc protocol between brigd and brigctl.
✓ [H] Implement a brigctl client library, that does not rely on internals of
  brig. (i.e. stripped down version of Files, Directories etc.)

4. Implement network interaction with other brigd clients
=========================================================

- [U] Implement separate transport protocol with other brig clients.
- [H] Implement an operation over this protocol to exchange stores.
...
NOTE: Below there are some bonus points that are not strictly necessart for a
prototype, but will be included in a 1.0 version of brig.
...

X. Implement Pub/Sub notifications to get real-time updates
===========================================================

- [H] Implement differential patches and application of them.
- [H] Figure out a (secure) (P2P) protocol 

Y. Implement Access Control Lists
=================================

Lists like:

```
sahib@nullcat.de/home:
    - photos
    - music
        - sync
```
