// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// Author is a person that changed something
type Author struct{ capnp.Struct }

// Author_TypeID is the unique identifier for the type Author.
const Author_TypeID = 0x8e88e8f85e1b3764

func NewAuthor(s *capnp.Segment) (Author, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Author{st}, err
}

func NewRootAuthor(s *capnp.Segment) (Author, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Author{st}, err
}

func ReadRootAuthor(msg *capnp.Message) (Author, error) {
	root, err := msg.RootPtr()
	return Author{root.Struct()}, err
}

func (s Author) String() string {
	str, _ := text.Marshal(0x8e88e8f85e1b3764, s.Struct)
	return str
}

func (s Author) Ident() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Author) HasIdent() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Author) IdentBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Author) SetIdent(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Author) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s Author) HasHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Author) SetHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

// Author_List is a list of Author.
type Author_List struct{ capnp.List }

// NewAuthor creates a new list of Author.
func NewAuthor_List(s *capnp.Segment, sz int32) (Author_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Author_List{l}, err
}

func (s Author_List) At(i int) Author { return Author{s.List.Struct(i)} }

func (s Author_List) Set(i int, v Author) error { return s.List.SetStruct(i, v.Struct) }

func (s Author_List) String() string {
	str, _ := text.MarshalList(0x8e88e8f85e1b3764, s.List)
	return str
}

// Author_Promise is a wrapper for a Author promised by a client call.
type Author_Promise struct{ *capnp.Pipeline }

func (p Author_Promise) Struct() (Author, error) {
	s, err := p.Pipeline.Struct()
	return Author{s}, err
}

const schema_9195d073cb5c5953 = "x\xda$\xca?K\xc3@\x1c\xc6\xf1\xe7\xf95\xb1\x0e" +
	")z*(8\xf4\x86\x0e*\xf8'\"(N\xf6\x1d" +
	"x:\x09R\x08M\xe8\x05l\x12z'\xfa\x12\xc4A" +
	"\x10q\xf6\x958\xba\xe8\xe2\xe4kpus)'\xea" +
	"\xf8\xfd\xf2\x99\xbf>\x924^\x16\xc0\xac\xc43!\xdf" +
	"_\x1d|\x7f\xde\xdcA-0\x9c\x9e\x9d\xbf\xb9\xf7\xc7" +
	"{\xc4\xd2\x06\xd4\xd7\xab\x9a\xb6\xd5\xb4\xbb\x98\xf2\x0a\x07" +
	"a\x985U\xb3=\xae%/.\xb6\xfe\xe2\xb0\x7f\xe9" +
	"m=\x01\x8eI\x13Q\xc2\xe0\xe1\xc9<\x7f\xdc\xbe\xc0" +
	"D\xc2~\x8fL\x80\x94'\x0c\xffP\x97\x91\xd3\x99n" +
	"\x8a\x89\xab+\xedm\xe6\xf5\xd0f\xd5\xa8\xc8\xb5\xab\xc7" +
	"\x85\xb7e\xc5\x11`f[\x11\x10\x11P\xeb\xbb\x80\xe9" +
	"\xb5hv\x84\x8a\\\xe2\xef\xdc\xdc\x00\xccZ\x8bfO" +
	"\xd8-\xf3\xa2\xf2L L\xc09\x9b9\xcb\x0e\x84\x1d" +
	"\xf0'\x00\x00\xff\xffb\xf4:\xdc"

func init() {
	schemas.Register(schema_9195d073cb5c5953,
		0x8e88e8f85e1b3764)
}
