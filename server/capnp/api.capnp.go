// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	context "golang.org/x/net/context"
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

// StatInfo is a stat-like description of any node
type StatInfo struct{ capnp.Struct }

// StatInfo_TypeID is the unique identifier for the type StatInfo.
const StatInfo_TypeID = 0xa2305f2ea25a3484

func NewStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 5})
	return StatInfo{st}, err
}

func NewRootStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 5})
	return StatInfo{st}, err
}

func ReadRootStatInfo(msg *capnp.Message) (StatInfo, error) {
	root, err := msg.RootPtr()
	return StatInfo{root.Struct()}, err
}

func (s StatInfo) String() string {
	str, _ := text.Marshal(0xa2305f2ea25a3484, s.Struct)
	return str
}

func (s StatInfo) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s StatInfo) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s StatInfo) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s StatInfo) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s StatInfo) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s StatInfo) HasHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s StatInfo) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s StatInfo) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s StatInfo) Inode() uint64 {
	return s.Struct.Uint64(8)
}

func (s StatInfo) SetInode(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s StatInfo) IsDir() bool {
	return s.Struct.Bit(128)
}

func (s StatInfo) SetIsDir(v bool) {
	s.Struct.SetBit(128, v)
}

func (s StatInfo) Depth() int32 {
	return int32(s.Struct.Uint32(20))
}

func (s StatInfo) SetDepth(v int32) {
	s.Struct.SetUint32(20, uint32(v))
}

func (s StatInfo) ModTime() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s StatInfo) HasModTime() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s StatInfo) ModTimeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s StatInfo) SetModTime(v string) error {
	return s.Struct.SetText(2, v)
}

func (s StatInfo) IsPinned() bool {
	return s.Struct.Bit(129)
}

func (s StatInfo) SetIsPinned(v bool) {
	s.Struct.SetBit(129, v)
}

func (s StatInfo) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s StatInfo) HasContent() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetContent(v []byte) error {
	return s.Struct.SetData(3, v)
}

func (s StatInfo) User() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s StatInfo) HasUser() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s StatInfo) UserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s StatInfo) SetUser(v string) error {
	return s.Struct.SetText(4, v)
}

// StatInfo_List is a list of StatInfo.
type StatInfo_List struct{ capnp.List }

// NewStatInfo creates a new list of StatInfo.
func NewStatInfo_List(s *capnp.Segment, sz int32) (StatInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 5}, sz)
	return StatInfo_List{l}, err
}

func (s StatInfo_List) At(i int) StatInfo { return StatInfo{s.List.Struct(i)} }

func (s StatInfo_List) Set(i int, v StatInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s StatInfo_List) String() string {
	str, _ := text.MarshalList(0xa2305f2ea25a3484, s.List)
	return str
}

// StatInfo_Promise is a wrapper for a StatInfo promised by a client call.
type StatInfo_Promise struct{ *capnp.Pipeline }

func (p StatInfo_Promise) Struct() (StatInfo, error) {
	s, err := p.Pipeline.Struct()
	return StatInfo{s}, err
}

// Single log entry
type Commit struct{ capnp.Struct }

// Commit_TypeID is the unique identifier for the type Commit.
const Commit_TypeID = 0xb47c58aa23289d55

func NewCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func NewRootCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func ReadRootCommit(msg *capnp.Message) (Commit, error) {
	root, err := msg.RootPtr()
	return Commit{root.Struct()}, err
}

func (s Commit) String() string {
	str, _ := text.Marshal(0xb47c58aa23289d55, s.Struct)
	return str
}

func (s Commit) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Commit) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Commit) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Commit) Msg() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Commit) HasMsg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Commit) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Commit) SetMsg(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Commit) Tags() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Commit) HasTags() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Commit) SetTags(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewTags sets the tags field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Commit) NewTags(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Commit) Date() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Commit) HasDate() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Commit) DateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Commit) SetDate(v string) error {
	return s.Struct.SetText(3, v)
}

// Commit_List is a list of Commit.
type Commit_List struct{ capnp.List }

// NewCommit creates a new list of Commit.
func NewCommit_List(s *capnp.Segment, sz int32) (Commit_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Commit_List{l}, err
}

func (s Commit_List) At(i int) Commit { return Commit{s.List.Struct(i)} }

func (s Commit_List) Set(i int, v Commit) error { return s.List.SetStruct(i, v.Struct) }

func (s Commit_List) String() string {
	str, _ := text.MarshalList(0xb47c58aa23289d55, s.List)
	return str
}

// Commit_Promise is a wrapper for a Commit promised by a client call.
type Commit_Promise struct{ *capnp.Pipeline }

func (p Commit_Promise) Struct() (Commit, error) {
	s, err := p.Pipeline.Struct()
	return Commit{s}, err
}

// Key/Value pair in the config
type ConfigPair struct{ capnp.Struct }

// ConfigPair_TypeID is the unique identifier for the type ConfigPair.
const ConfigPair_TypeID = 0xe54de22194de748a

func NewConfigPair(s *capnp.Segment) (ConfigPair, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ConfigPair{st}, err
}

func NewRootConfigPair(s *capnp.Segment) (ConfigPair, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ConfigPair{st}, err
}

func ReadRootConfigPair(msg *capnp.Message) (ConfigPair, error) {
	root, err := msg.RootPtr()
	return ConfigPair{root.Struct()}, err
}

func (s ConfigPair) String() string {
	str, _ := text.Marshal(0xe54de22194de748a, s.Struct)
	return str
}

func (s ConfigPair) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ConfigPair) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ConfigPair) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ConfigPair) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ConfigPair) Val() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ConfigPair) HasVal() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ConfigPair) ValBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ConfigPair) SetVal(v string) error {
	return s.Struct.SetText(1, v)
}

// ConfigPair_List is a list of ConfigPair.
type ConfigPair_List struct{ capnp.List }

// NewConfigPair creates a new list of ConfigPair.
func NewConfigPair_List(s *capnp.Segment, sz int32) (ConfigPair_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ConfigPair_List{l}, err
}

func (s ConfigPair_List) At(i int) ConfigPair { return ConfigPair{s.List.Struct(i)} }

func (s ConfigPair_List) Set(i int, v ConfigPair) error { return s.List.SetStruct(i, v.Struct) }

func (s ConfigPair_List) String() string {
	str, _ := text.MarshalList(0xe54de22194de748a, s.List)
	return str
}

// ConfigPair_Promise is a wrapper for a ConfigPair promised by a client call.
type ConfigPair_Promise struct{ *capnp.Pipeline }

func (p ConfigPair_Promise) Struct() (ConfigPair, error) {
	s, err := p.Pipeline.Struct()
	return ConfigPair{s}, err
}

// One History entry for a file
type Change struct{ capnp.Struct }

// Change_TypeID is the unique identifier for the type Change.
const Change_TypeID = 0xd01613feea87ee6a

func NewChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Change{st}, err
}

func NewRootChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return Change{st}, err
}

func ReadRootChange(msg *capnp.Message) (Change, error) {
	root, err := msg.RootPtr()
	return Change{root.Struct()}, err
}

func (s Change) String() string {
	str, _ := text.Marshal(0xd01613feea87ee6a, s.Struct)
	return str
}

func (s Change) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Change) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Change) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Change) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Change) Change() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Change) HasChange() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Change) ChangeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Change) SetChange(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Change) Head() (Commit, error) {
	p, err := s.Struct.Ptr(2)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasHead() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Change) SetHead(v Commit) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewHead sets the head field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewHead() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) Next() (Commit, error) {
	p, err := s.Struct.Ptr(3)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasNext() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Change) SetNext(v Commit) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewNext sets the next field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewNext() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) ReferTo() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Change) HasReferTo() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Change) ReferToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Change) SetReferTo(v string) error {
	return s.Struct.SetText(4, v)
}

// Change_List is a list of Change.
type Change_List struct{ capnp.List }

// NewChange creates a new list of Change.
func NewChange_List(s *capnp.Segment, sz int32) (Change_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return Change_List{l}, err
}

func (s Change_List) At(i int) Change { return Change{s.List.Struct(i)} }

func (s Change_List) Set(i int, v Change) error { return s.List.SetStruct(i, v.Struct) }

func (s Change_List) String() string {
	str, _ := text.MarshalList(0xd01613feea87ee6a, s.List)
	return str
}

// Change_Promise is a wrapper for a Change promised by a client call.
type Change_Promise struct{ *capnp.Pipeline }

func (p Change_Promise) Struct() (Change, error) {
	s, err := p.Pipeline.Struct()
	return Change{s}, err
}

func (p Change_Promise) Head() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

func (p Change_Promise) Next() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(3)}
}

// Represent two differing files
type DiffPair struct{ capnp.Struct }

// DiffPair_TypeID is the unique identifier for the type DiffPair.
const DiffPair_TypeID = 0xf8551f83bb42e152

func NewDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func NewRootDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func ReadRootDiffPair(msg *capnp.Message) (DiffPair, error) {
	root, err := msg.RootPtr()
	return DiffPair{root.Struct()}, err
}

func (s DiffPair) String() string {
	str, _ := text.Marshal(0xf8551f83bb42e152, s.Struct)
	return str
}

func (s DiffPair) Src() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasSrc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetSrc(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSrc sets the src field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewSrc() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s DiffPair) Dst() (StatInfo, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasDst() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetDst(v StatInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDst sets the dst field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewDst() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// DiffPair_List is a list of DiffPair.
type DiffPair_List struct{ capnp.List }

// NewDiffPair creates a new list of DiffPair.
func NewDiffPair_List(s *capnp.Segment, sz int32) (DiffPair_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DiffPair_List{l}, err
}

func (s DiffPair_List) At(i int) DiffPair { return DiffPair{s.List.Struct(i)} }

func (s DiffPair_List) Set(i int, v DiffPair) error { return s.List.SetStruct(i, v.Struct) }

func (s DiffPair_List) String() string {
	str, _ := text.MarshalList(0xf8551f83bb42e152, s.List)
	return str
}

// DiffPair_Promise is a wrapper for a DiffPair promised by a client call.
type DiffPair_Promise struct{ *capnp.Pipeline }

func (p DiffPair_Promise) Struct() (DiffPair, error) {
	s, err := p.Pipeline.Struct()
	return DiffPair{s}, err
}

func (p DiffPair_Promise) Src() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p DiffPair_Promise) Dst() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

// Difference between two commits
type Diff struct{ capnp.Struct }

// Diff_TypeID is the unique identifier for the type Diff.
const Diff_TypeID = 0xc9601ec89a6aa066

func NewDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return Diff{st}, err
}

func NewRootDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return Diff{st}, err
}

func ReadRootDiff(msg *capnp.Message) (Diff, error) {
	root, err := msg.RootPtr()
	return Diff{root.Struct()}, err
}

func (s Diff) String() string {
	str, _ := text.Marshal(0xc9601ec89a6aa066, s.Struct)
	return str
}

func (s Diff) Added() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasAdded() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Diff) SetAdded(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAdded sets the added field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewAdded(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Diff) Removed() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasRemoved() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Diff) SetRemoved(v StatInfo_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemoved sets the removed field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewRemoved(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Diff) Ignored() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(2)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasIgnored() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Diff) SetIgnored(v StatInfo_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewIgnored sets the ignored field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewIgnored(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Diff) Moved() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(3)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMoved() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Diff) SetMoved(v DiffPair_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMoved sets the moved field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMoved(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s Diff) Merged() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(4)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMerged() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Diff) SetMerged(v DiffPair_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMerged sets the merged field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMerged(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s Diff) Conflict() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(5)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasConflict() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Diff) SetConflict(v DiffPair_List) error {
	return s.Struct.SetPtr(5, v.List.ToPtr())
}

// NewConflict sets the conflict field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewConflict(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(5, l.List.ToPtr())
	return l, err
}

// Diff_List is a list of Diff.
type Diff_List struct{ capnp.List }

// NewDiff creates a new list of Diff.
func NewDiff_List(s *capnp.Segment, sz int32) (Diff_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6}, sz)
	return Diff_List{l}, err
}

func (s Diff_List) At(i int) Diff { return Diff{s.List.Struct(i)} }

func (s Diff_List) Set(i int, v Diff) error { return s.List.SetStruct(i, v.Struct) }

func (s Diff_List) String() string {
	str, _ := text.MarshalList(0xc9601ec89a6aa066, s.List)
	return str
}

// Diff_Promise is a wrapper for a Diff promised by a client call.
type Diff_Promise struct{ *capnp.Pipeline }

func (p Diff_Promise) Struct() (Diff, error) {
	s, err := p.Pipeline.Struct()
	return Diff{s}, err
}

// A folder that a remote is allowed to access
type RemoteFolder struct{ capnp.Struct }

// RemoteFolder_TypeID is the unique identifier for the type RemoteFolder.
const RemoteFolder_TypeID = 0x8ed051e9369ac720

func NewRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RemoteFolder{st}, err
}

func NewRootRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RemoteFolder{st}, err
}

func ReadRootRemoteFolder(msg *capnp.Message) (RemoteFolder, error) {
	root, err := msg.RootPtr()
	return RemoteFolder{root.Struct()}, err
}

func (s RemoteFolder) String() string {
	str, _ := text.Marshal(0x8ed051e9369ac720, s.Struct)
	return str
}

func (s RemoteFolder) Folder() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RemoteFolder) HasFolder() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) FolderBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetFolder(v string) error {
	return s.Struct.SetText(0, v)
}

func (s RemoteFolder) Perms() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RemoteFolder) HasPerms() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) PermsBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetPerms(v string) error {
	return s.Struct.SetText(1, v)
}

// RemoteFolder_List is a list of RemoteFolder.
type RemoteFolder_List struct{ capnp.List }

// NewRemoteFolder creates a new list of RemoteFolder.
func NewRemoteFolder_List(s *capnp.Segment, sz int32) (RemoteFolder_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RemoteFolder_List{l}, err
}

func (s RemoteFolder_List) At(i int) RemoteFolder { return RemoteFolder{s.List.Struct(i)} }

func (s RemoteFolder_List) Set(i int, v RemoteFolder) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteFolder_List) String() string {
	str, _ := text.MarshalList(0x8ed051e9369ac720, s.List)
	return str
}

// RemoteFolder_Promise is a wrapper for a RemoteFolder promised by a client call.
type RemoteFolder_Promise struct{ *capnp.Pipeline }

func (p RemoteFolder_Promise) Struct() (RemoteFolder, error) {
	s, err := p.Pipeline.Struct()
	return RemoteFolder{s}, err
}

// Info a remote peer we might sync with
type Remote struct{ capnp.Struct }

// Remote_TypeID is the unique identifier for the type Remote.
const Remote_TypeID = 0xbe71bb7b0ed4539a

func NewRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Remote{st}, err
}

func NewRootRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Remote{st}, err
}

func ReadRootRemote(msg *capnp.Message) (Remote, error) {
	root, err := msg.RootPtr()
	return Remote{root.Struct()}, err
}

func (s Remote) String() string {
	str, _ := text.Marshal(0xbe71bb7b0ed4539a, s.Struct)
	return str
}

func (s Remote) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Remote) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Remote) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Remote) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Remote) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Remote) HasFingerprint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Remote) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Remote) SetFingerprint(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Remote) Folders() (RemoteFolder_List, error) {
	p, err := s.Struct.Ptr(2)
	return RemoteFolder_List{List: p.List()}, err
}

func (s Remote) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Remote) SetFolders(v RemoteFolder_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated RemoteFolder_List, preferring placement in s's segment.
func (s Remote) NewFolders(n int32) (RemoteFolder_List, error) {
	l, err := NewRemoteFolder_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteFolder_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Remote_List is a list of Remote.
type Remote_List struct{ capnp.List }

// NewRemote creates a new list of Remote.
func NewRemote_List(s *capnp.Segment, sz int32) (Remote_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Remote_List{l}, err
}

func (s Remote_List) At(i int) Remote { return Remote{s.List.Struct(i)} }

func (s Remote_List) Set(i int, v Remote) error { return s.List.SetStruct(i, v.Struct) }

func (s Remote_List) String() string {
	str, _ := text.MarshalList(0xbe71bb7b0ed4539a, s.List)
	return str
}

// Remote_Promise is a wrapper for a Remote promised by a client call.
type Remote_Promise struct{ *capnp.Pipeline }

func (p Remote_Promise) Struct() (Remote, error) {
	s, err := p.Pipeline.Struct()
	return Remote{s}, err
}

type LocateResult struct{ capnp.Struct }

// LocateResult_TypeID is the unique identifier for the type LocateResult.
const LocateResult_TypeID = 0xd95473f6f8a89a69

func NewLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func NewRootLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func ReadRootLocateResult(msg *capnp.Message) (LocateResult, error) {
	root, err := msg.RootPtr()
	return LocateResult{root.Struct()}, err
}

func (s LocateResult) String() string {
	str, _ := text.Marshal(0xd95473f6f8a89a69, s.Struct)
	return str
}

func (s LocateResult) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s LocateResult) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s LocateResult) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s LocateResult) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s LocateResult) Addr() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s LocateResult) HasAddr() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s LocateResult) AddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s LocateResult) SetAddr(v string) error {
	return s.Struct.SetText(1, v)
}

func (s LocateResult) Mask() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s LocateResult) HasMask() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s LocateResult) MaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s LocateResult) SetMask(v string) error {
	return s.Struct.SetText(2, v)
}

func (s LocateResult) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s LocateResult) HasFingerprint() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s LocateResult) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s LocateResult) SetFingerprint(v string) error {
	return s.Struct.SetText(3, v)
}

// LocateResult_List is a list of LocateResult.
type LocateResult_List struct{ capnp.List }

// NewLocateResult creates a new list of LocateResult.
func NewLocateResult_List(s *capnp.Segment, sz int32) (LocateResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return LocateResult_List{l}, err
}

func (s LocateResult_List) At(i int) LocateResult { return LocateResult{s.List.Struct(i)} }

func (s LocateResult_List) Set(i int, v LocateResult) error { return s.List.SetStruct(i, v.Struct) }

func (s LocateResult_List) String() string {
	str, _ := text.MarshalList(0xd95473f6f8a89a69, s.List)
	return str
}

// LocateResult_Promise is a wrapper for a LocateResult promised by a client call.
type LocateResult_Promise struct{ *capnp.Pipeline }

func (p LocateResult_Promise) Struct() (LocateResult, error) {
	s, err := p.Pipeline.Struct()
	return LocateResult{s}, err
}

// Info about our current user state
type Identity struct{ capnp.Struct }

// Identity_TypeID is the unique identifier for the type Identity.
const Identity_TypeID = 0xd49a2570fb5a4342

func NewIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func NewRootIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func ReadRootIdentity(msg *capnp.Message) (Identity, error) {
	root, err := msg.RootPtr()
	return Identity{root.Struct()}, err
}

func (s Identity) String() string {
	str, _ := text.Marshal(0xd49a2570fb5a4342, s.Struct)
	return str
}

func (s Identity) CurrentUser() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Identity) HasCurrentUser() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Identity) CurrentUserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Identity) SetCurrentUser(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Identity) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Identity) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Identity) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Identity) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Identity) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Identity) HasFingerprint() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Identity) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Identity) SetFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Identity) IsOnline() bool {
	return s.Struct.Bit(0)
}

func (s Identity) SetIsOnline(v bool) {
	s.Struct.SetBit(0, v)
}

// Identity_List is a list of Identity.
type Identity_List struct{ capnp.List }

// NewIdentity creates a new list of Identity.
func NewIdentity_List(s *capnp.Segment, sz int32) (Identity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Identity_List{l}, err
}

func (s Identity_List) At(i int) Identity { return Identity{s.List.Struct(i)} }

func (s Identity_List) Set(i int, v Identity) error { return s.List.SetStruct(i, v.Struct) }

func (s Identity_List) String() string {
	str, _ := text.MarshalList(0xd49a2570fb5a4342, s.List)
	return str
}

// Identity_Promise is a wrapper for a Identity promised by a client call.
type Identity_Promise struct{ *capnp.Pipeline }

func (p Identity_Promise) Struct() (Identity, error) {
	s, err := p.Pipeline.Struct()
	return Identity{s}, err
}

type MountOptions struct{ capnp.Struct }

// MountOptions_TypeID is the unique identifier for the type MountOptions.
const MountOptions_TypeID = 0xbc4d5c31427dc498

func NewMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MountOptions{st}, err
}

func NewRootMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return MountOptions{st}, err
}

func ReadRootMountOptions(msg *capnp.Message) (MountOptions, error) {
	root, err := msg.RootPtr()
	return MountOptions{root.Struct()}, err
}

func (s MountOptions) String() string {
	str, _ := text.Marshal(0xbc4d5c31427dc498, s.Struct)
	return str
}

// MountOptions_List is a list of MountOptions.
type MountOptions_List struct{ capnp.List }

// NewMountOptions creates a new list of MountOptions.
func NewMountOptions_List(s *capnp.Segment, sz int32) (MountOptions_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return MountOptions_List{l}, err
}

func (s MountOptions_List) At(i int) MountOptions { return MountOptions{s.List.Struct(i)} }

func (s MountOptions_List) Set(i int, v MountOptions) error { return s.List.SetStruct(i, v.Struct) }

func (s MountOptions_List) String() string {
	str, _ := text.MarshalList(0xbc4d5c31427dc498, s.List)
	return str
}

// MountOptions_Promise is a wrapper for a MountOptions promised by a client call.
type MountOptions_Promise struct{ *capnp.Pipeline }

func (p MountOptions_Promise) Struct() (MountOptions, error) {
	s, err := p.Pipeline.Struct()
	return MountOptions{s}, err
}

// net status of a peer
type PeerStatus struct{ capnp.Struct }

// PeerStatus_TypeID is the unique identifier for the type PeerStatus.
const PeerStatus_TypeID = 0x8167eafcc8695b1c

func NewPeerStatus(s *capnp.Segment) (PeerStatus, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PeerStatus{st}, err
}

func NewRootPeerStatus(s *capnp.Segment) (PeerStatus, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PeerStatus{st}, err
}

func ReadRootPeerStatus(msg *capnp.Message) (PeerStatus, error) {
	root, err := msg.RootPtr()
	return PeerStatus{root.Struct()}, err
}

func (s PeerStatus) String() string {
	str, _ := text.Marshal(0x8167eafcc8695b1c, s.Struct)
	return str
}

func (s PeerStatus) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PeerStatus) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PeerStatus) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PeerStatus) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PeerStatus) Addr() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PeerStatus) HasAddr() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PeerStatus) AddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PeerStatus) SetAddr(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PeerStatus) LastSeen() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PeerStatus) HasLastSeen() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PeerStatus) LastSeenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PeerStatus) SetLastSeen(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PeerStatus) RoundtripMs() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s PeerStatus) SetRoundtripMs(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s PeerStatus) Error() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PeerStatus) HasError() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PeerStatus) ErrorBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PeerStatus) SetError(v string) error {
	return s.Struct.SetText(3, v)
}

// PeerStatus_List is a list of PeerStatus.
type PeerStatus_List struct{ capnp.List }

// NewPeerStatus creates a new list of PeerStatus.
func NewPeerStatus_List(s *capnp.Segment, sz int32) (PeerStatus_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return PeerStatus_List{l}, err
}

func (s PeerStatus_List) At(i int) PeerStatus { return PeerStatus{s.List.Struct(i)} }

func (s PeerStatus_List) Set(i int, v PeerStatus) error { return s.List.SetStruct(i, v.Struct) }

func (s PeerStatus_List) String() string {
	str, _ := text.MarshalList(0x8167eafcc8695b1c, s.List)
	return str
}

// PeerStatus_Promise is a wrapper for a PeerStatus promised by a client call.
type PeerStatus_Promise struct{ *capnp.Pipeline }

func (p PeerStatus_Promise) Struct() (PeerStatus, error) {
	s, err := p.Pipeline.Struct()
	return PeerStatus{s}, err
}

// A single item that was killed by the gc
type GarbageItem struct{ capnp.Struct }

// GarbageItem_TypeID is the unique identifier for the type GarbageItem.
const GarbageItem_TypeID = 0xecb10f87fbe0d6c5

func NewGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func NewRootGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func ReadRootGarbageItem(msg *capnp.Message) (GarbageItem, error) {
	root, err := msg.RootPtr()
	return GarbageItem{root.Struct()}, err
}

func (s GarbageItem) String() string {
	str, _ := text.Marshal(0xecb10f87fbe0d6c5, s.Struct)
	return str
}

func (s GarbageItem) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GarbageItem) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GarbageItem) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GarbageItem) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GarbageItem) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s GarbageItem) HasContent() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GarbageItem) SetContent(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s GarbageItem) Owner() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GarbageItem) HasOwner() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GarbageItem) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GarbageItem) SetOwner(v string) error {
	return s.Struct.SetText(2, v)
}

// GarbageItem_List is a list of GarbageItem.
type GarbageItem_List struct{ capnp.List }

// NewGarbageItem creates a new list of GarbageItem.
func NewGarbageItem_List(s *capnp.Segment, sz int32) (GarbageItem_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GarbageItem_List{l}, err
}

func (s GarbageItem_List) At(i int) GarbageItem { return GarbageItem{s.List.Struct(i)} }

func (s GarbageItem_List) Set(i int, v GarbageItem) error { return s.List.SetStruct(i, v.Struct) }

func (s GarbageItem_List) String() string {
	str, _ := text.MarshalList(0xecb10f87fbe0d6c5, s.List)
	return str
}

// GarbageItem_Promise is a wrapper for a GarbageItem promised by a client call.
type GarbageItem_Promise struct{ *capnp.Pipeline }

func (p GarbageItem_Promise) Struct() (GarbageItem, error) {
	s, err := p.Pipeline.Struct()
	return GarbageItem{s}, err
}

type FS struct{ Client capnp.Client }

// FS_TypeID is the unique identifier for the type FS.
const FS_TypeID = 0xe2b3585db47cd4f9

func (c FS) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type FS_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error
}

func FS_ServerToClient(s FS_Server) FS {
	c, _ := s.(server.Closer)
	return FS{Client: server.New(FS_Methods(nil, s), c)}
}

func FS_Methods(methods []server.Method, s FS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 13)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// FS_stage holds the arguments for a server call to FS.stage.
type FS_stage struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stage_Params
	Results FS_stage_Results
}

// FS_list holds the arguments for a server call to FS.list.
type FS_list struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_list_Params
	Results FS_list_Results
}

// FS_cat holds the arguments for a server call to FS.cat.
type FS_cat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_cat_Params
	Results FS_cat_Results
}

// FS_mkdir holds the arguments for a server call to FS.mkdir.
type FS_mkdir struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_mkdir_Params
	Results FS_mkdir_Results
}

// FS_remove holds the arguments for a server call to FS.remove.
type FS_remove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_remove_Params
	Results FS_remove_Results
}

// FS_move holds the arguments for a server call to FS.move.
type FS_move struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_move_Params
	Results FS_move_Results
}

// FS_copy holds the arguments for a server call to FS.copy.
type FS_copy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_copy_Params
	Results FS_copy_Results
}

// FS_pin holds the arguments for a server call to FS.pin.
type FS_pin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_pin_Params
	Results FS_pin_Results
}

// FS_unpin holds the arguments for a server call to FS.unpin.
type FS_unpin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_unpin_Params
	Results FS_unpin_Results
}

// FS_stat holds the arguments for a server call to FS.stat.
type FS_stat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stat_Params
	Results FS_stat_Results
}

// FS_garbageCollect holds the arguments for a server call to FS.garbageCollect.
type FS_garbageCollect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_garbageCollect_Params
	Results FS_garbageCollect_Results
}

// FS_touch holds the arguments for a server call to FS.touch.
type FS_touch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_touch_Params
	Results FS_touch_Results
}

// FS_exists holds the arguments for a server call to FS.exists.
type FS_exists struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_exists_Params
	Results FS_exists_Results
}

type FS_stage_Params struct{ capnp.Struct }

// FS_stage_Params_TypeID is the unique identifier for the type FS_stage_Params.
const FS_stage_Params_TypeID = 0x9ba7a818970a029c

func NewFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func NewRootFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func ReadRootFS_stage_Params(msg *capnp.Message) (FS_stage_Params, error) {
	root, err := msg.RootPtr()
	return FS_stage_Params{root.Struct()}, err
}

func (s FS_stage_Params) String() string {
	str, _ := text.Marshal(0x9ba7a818970a029c, s.Struct)
	return str
}

func (s FS_stage_Params) LocalPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stage_Params) HasLocalPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) LocalPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetLocalPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_stage_Params) RepoPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_stage_Params) HasRepoPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) RepoPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetRepoPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_stage_Params_List is a list of FS_stage_Params.
type FS_stage_Params_List struct{ capnp.List }

// NewFS_stage_Params creates a new list of FS_stage_Params.
func NewFS_stage_Params_List(s *capnp.Segment, sz int32) (FS_stage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_stage_Params_List{l}, err
}

func (s FS_stage_Params_List) At(i int) FS_stage_Params { return FS_stage_Params{s.List.Struct(i)} }

func (s FS_stage_Params_List) Set(i int, v FS_stage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Params_List) String() string {
	str, _ := text.MarshalList(0x9ba7a818970a029c, s.List)
	return str
}

// FS_stage_Params_Promise is a wrapper for a FS_stage_Params promised by a client call.
type FS_stage_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Params_Promise) Struct() (FS_stage_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Params{s}, err
}

type FS_stage_Results struct{ capnp.Struct }

// FS_stage_Results_TypeID is the unique identifier for the type FS_stage_Results.
const FS_stage_Results_TypeID = 0x884238694e8b8d88

func NewFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func NewRootFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func ReadRootFS_stage_Results(msg *capnp.Message) (FS_stage_Results, error) {
	root, err := msg.RootPtr()
	return FS_stage_Results{root.Struct()}, err
}

func (s FS_stage_Results) String() string {
	str, _ := text.Marshal(0x884238694e8b8d88, s.Struct)
	return str
}

// FS_stage_Results_List is a list of FS_stage_Results.
type FS_stage_Results_List struct{ capnp.List }

// NewFS_stage_Results creates a new list of FS_stage_Results.
func NewFS_stage_Results_List(s *capnp.Segment, sz int32) (FS_stage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_stage_Results_List{l}, err
}

func (s FS_stage_Results_List) At(i int) FS_stage_Results { return FS_stage_Results{s.List.Struct(i)} }

func (s FS_stage_Results_List) Set(i int, v FS_stage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Results_List) String() string {
	str, _ := text.MarshalList(0x884238694e8b8d88, s.List)
	return str
}

// FS_stage_Results_Promise is a wrapper for a FS_stage_Results promised by a client call.
type FS_stage_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Results_Promise) Struct() (FS_stage_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Results{s}, err
}

type FS_list_Params struct{ capnp.Struct }

// FS_list_Params_TypeID is the unique identifier for the type FS_list_Params.
const FS_list_Params_TypeID = 0xfd86771dd5950237

func NewFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func NewRootFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func ReadRootFS_list_Params(msg *capnp.Message) (FS_list_Params, error) {
	root, err := msg.RootPtr()
	return FS_list_Params{root.Struct()}, err
}

func (s FS_list_Params) String() string {
	str, _ := text.Marshal(0xfd86771dd5950237, s.Struct)
	return str
}

func (s FS_list_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_list_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_list_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_list_Params) MaxDepth() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_list_Params) SetMaxDepth(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_list_Params_List is a list of FS_list_Params.
type FS_list_Params_List struct{ capnp.List }

// NewFS_list_Params creates a new list of FS_list_Params.
func NewFS_list_Params_List(s *capnp.Segment, sz int32) (FS_list_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_list_Params_List{l}, err
}

func (s FS_list_Params_List) At(i int) FS_list_Params { return FS_list_Params{s.List.Struct(i)} }

func (s FS_list_Params_List) Set(i int, v FS_list_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_list_Params_List) String() string {
	str, _ := text.MarshalList(0xfd86771dd5950237, s.List)
	return str
}

// FS_list_Params_Promise is a wrapper for a FS_list_Params promised by a client call.
type FS_list_Params_Promise struct{ *capnp.Pipeline }

func (p FS_list_Params_Promise) Struct() (FS_list_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Params{s}, err
}

type FS_list_Results struct{ capnp.Struct }

// FS_list_Results_TypeID is the unique identifier for the type FS_list_Results.
const FS_list_Results_TypeID = 0xe92935bf20cc2856

func NewFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func NewRootFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func ReadRootFS_list_Results(msg *capnp.Message) (FS_list_Results, error) {
	root, err := msg.RootPtr()
	return FS_list_Results{root.Struct()}, err
}

func (s FS_list_Results) String() string {
	str, _ := text.Marshal(0xe92935bf20cc2856, s.Struct)
	return str
}

func (s FS_list_Results) Entries() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_list_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Results) SetEntries(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_list_Results) NewEntries(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_list_Results_List is a list of FS_list_Results.
type FS_list_Results_List struct{ capnp.List }

// NewFS_list_Results creates a new list of FS_list_Results.
func NewFS_list_Results_List(s *capnp.Segment, sz int32) (FS_list_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_list_Results_List{l}, err
}

func (s FS_list_Results_List) At(i int) FS_list_Results { return FS_list_Results{s.List.Struct(i)} }

func (s FS_list_Results_List) Set(i int, v FS_list_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_list_Results_List) String() string {
	str, _ := text.MarshalList(0xe92935bf20cc2856, s.List)
	return str
}

// FS_list_Results_Promise is a wrapper for a FS_list_Results promised by a client call.
type FS_list_Results_Promise struct{ *capnp.Pipeline }

func (p FS_list_Results_Promise) Struct() (FS_list_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Results{s}, err
}

type FS_cat_Params struct{ capnp.Struct }

// FS_cat_Params_TypeID is the unique identifier for the type FS_cat_Params.
const FS_cat_Params_TypeID = 0xa9095b4cff1e5634

func NewFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func NewRootFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func ReadRootFS_cat_Params(msg *capnp.Message) (FS_cat_Params, error) {
	root, err := msg.RootPtr()
	return FS_cat_Params{root.Struct()}, err
}

func (s FS_cat_Params) String() string {
	str, _ := text.Marshal(0xa9095b4cff1e5634, s.Struct)
	return str
}

func (s FS_cat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_cat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_cat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_cat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_cat_Params_List is a list of FS_cat_Params.
type FS_cat_Params_List struct{ capnp.List }

// NewFS_cat_Params creates a new list of FS_cat_Params.
func NewFS_cat_Params_List(s *capnp.Segment, sz int32) (FS_cat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_cat_Params_List{l}, err
}

func (s FS_cat_Params_List) At(i int) FS_cat_Params { return FS_cat_Params{s.List.Struct(i)} }

func (s FS_cat_Params_List) Set(i int, v FS_cat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Params_List) String() string {
	str, _ := text.MarshalList(0xa9095b4cff1e5634, s.List)
	return str
}

// FS_cat_Params_Promise is a wrapper for a FS_cat_Params promised by a client call.
type FS_cat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Params_Promise) Struct() (FS_cat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Params{s}, err
}

type FS_cat_Results struct{ capnp.Struct }

// FS_cat_Results_TypeID is the unique identifier for the type FS_cat_Results.
const FS_cat_Results_TypeID = 0x9fe8d2cd92c27a38

func NewFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func NewRootFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func ReadRootFS_cat_Results(msg *capnp.Message) (FS_cat_Results, error) {
	root, err := msg.RootPtr()
	return FS_cat_Results{root.Struct()}, err
}

func (s FS_cat_Results) String() string {
	str, _ := text.Marshal(0x9fe8d2cd92c27a38, s.Struct)
	return str
}

func (s FS_cat_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_cat_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_cat_Results_List is a list of FS_cat_Results.
type FS_cat_Results_List struct{ capnp.List }

// NewFS_cat_Results creates a new list of FS_cat_Results.
func NewFS_cat_Results_List(s *capnp.Segment, sz int32) (FS_cat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_cat_Results_List{l}, err
}

func (s FS_cat_Results_List) At(i int) FS_cat_Results { return FS_cat_Results{s.List.Struct(i)} }

func (s FS_cat_Results_List) Set(i int, v FS_cat_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Results_List) String() string {
	str, _ := text.MarshalList(0x9fe8d2cd92c27a38, s.List)
	return str
}

// FS_cat_Results_Promise is a wrapper for a FS_cat_Results promised by a client call.
type FS_cat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Results_Promise) Struct() (FS_cat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Results{s}, err
}

type FS_mkdir_Params struct{ capnp.Struct }

// FS_mkdir_Params_TypeID is the unique identifier for the type FS_mkdir_Params.
const FS_mkdir_Params_TypeID = 0xb030fc18cb3b0e61

func NewFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func NewRootFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func ReadRootFS_mkdir_Params(msg *capnp.Message) (FS_mkdir_Params, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Params{root.Struct()}, err
}

func (s FS_mkdir_Params) String() string {
	str, _ := text.Marshal(0xb030fc18cb3b0e61, s.Struct)
	return str
}

func (s FS_mkdir_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_mkdir_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_mkdir_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_mkdir_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_mkdir_Params) CreateParents() bool {
	return s.Struct.Bit(0)
}

func (s FS_mkdir_Params) SetCreateParents(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_mkdir_Params_List is a list of FS_mkdir_Params.
type FS_mkdir_Params_List struct{ capnp.List }

// NewFS_mkdir_Params creates a new list of FS_mkdir_Params.
func NewFS_mkdir_Params_List(s *capnp.Segment, sz int32) (FS_mkdir_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_mkdir_Params_List{l}, err
}

func (s FS_mkdir_Params_List) At(i int) FS_mkdir_Params { return FS_mkdir_Params{s.List.Struct(i)} }

func (s FS_mkdir_Params_List) Set(i int, v FS_mkdir_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Params_List) String() string {
	str, _ := text.MarshalList(0xb030fc18cb3b0e61, s.List)
	return str
}

// FS_mkdir_Params_Promise is a wrapper for a FS_mkdir_Params promised by a client call.
type FS_mkdir_Params_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Params_Promise) Struct() (FS_mkdir_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Params{s}, err
}

type FS_mkdir_Results struct{ capnp.Struct }

// FS_mkdir_Results_TypeID is the unique identifier for the type FS_mkdir_Results.
const FS_mkdir_Results_TypeID = 0xf3243256580294f3

func NewFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func NewRootFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func ReadRootFS_mkdir_Results(msg *capnp.Message) (FS_mkdir_Results, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Results{root.Struct()}, err
}

func (s FS_mkdir_Results) String() string {
	str, _ := text.Marshal(0xf3243256580294f3, s.Struct)
	return str
}

// FS_mkdir_Results_List is a list of FS_mkdir_Results.
type FS_mkdir_Results_List struct{ capnp.List }

// NewFS_mkdir_Results creates a new list of FS_mkdir_Results.
func NewFS_mkdir_Results_List(s *capnp.Segment, sz int32) (FS_mkdir_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_mkdir_Results_List{l}, err
}

func (s FS_mkdir_Results_List) At(i int) FS_mkdir_Results { return FS_mkdir_Results{s.List.Struct(i)} }

func (s FS_mkdir_Results_List) Set(i int, v FS_mkdir_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Results_List) String() string {
	str, _ := text.MarshalList(0xf3243256580294f3, s.List)
	return str
}

// FS_mkdir_Results_Promise is a wrapper for a FS_mkdir_Results promised by a client call.
type FS_mkdir_Results_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Results_Promise) Struct() (FS_mkdir_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Results{s}, err
}

type FS_remove_Params struct{ capnp.Struct }

// FS_remove_Params_TypeID is the unique identifier for the type FS_remove_Params.
const FS_remove_Params_TypeID = 0xa99c622e110c1203

func NewFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func NewRootFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func ReadRootFS_remove_Params(msg *capnp.Message) (FS_remove_Params, error) {
	root, err := msg.RootPtr()
	return FS_remove_Params{root.Struct()}, err
}

func (s FS_remove_Params) String() string {
	str, _ := text.Marshal(0xa99c622e110c1203, s.Struct)
	return str
}

func (s FS_remove_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_remove_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_remove_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_remove_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_remove_Params_List is a list of FS_remove_Params.
type FS_remove_Params_List struct{ capnp.List }

// NewFS_remove_Params creates a new list of FS_remove_Params.
func NewFS_remove_Params_List(s *capnp.Segment, sz int32) (FS_remove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_remove_Params_List{l}, err
}

func (s FS_remove_Params_List) At(i int) FS_remove_Params { return FS_remove_Params{s.List.Struct(i)} }

func (s FS_remove_Params_List) Set(i int, v FS_remove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Params_List) String() string {
	str, _ := text.MarshalList(0xa99c622e110c1203, s.List)
	return str
}

// FS_remove_Params_Promise is a wrapper for a FS_remove_Params promised by a client call.
type FS_remove_Params_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Params_Promise) Struct() (FS_remove_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Params{s}, err
}

type FS_remove_Results struct{ capnp.Struct }

// FS_remove_Results_TypeID is the unique identifier for the type FS_remove_Results.
const FS_remove_Results_TypeID = 0xc9b3a8263f6853d7

func NewFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func NewRootFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func ReadRootFS_remove_Results(msg *capnp.Message) (FS_remove_Results, error) {
	root, err := msg.RootPtr()
	return FS_remove_Results{root.Struct()}, err
}

func (s FS_remove_Results) String() string {
	str, _ := text.Marshal(0xc9b3a8263f6853d7, s.Struct)
	return str
}

// FS_remove_Results_List is a list of FS_remove_Results.
type FS_remove_Results_List struct{ capnp.List }

// NewFS_remove_Results creates a new list of FS_remove_Results.
func NewFS_remove_Results_List(s *capnp.Segment, sz int32) (FS_remove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_remove_Results_List{l}, err
}

func (s FS_remove_Results_List) At(i int) FS_remove_Results {
	return FS_remove_Results{s.List.Struct(i)}
}

func (s FS_remove_Results_List) Set(i int, v FS_remove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Results_List) String() string {
	str, _ := text.MarshalList(0xc9b3a8263f6853d7, s.List)
	return str
}

// FS_remove_Results_Promise is a wrapper for a FS_remove_Results promised by a client call.
type FS_remove_Results_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Results_Promise) Struct() (FS_remove_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Results{s}, err
}

type FS_move_Params struct{ capnp.Struct }

// FS_move_Params_TypeID is the unique identifier for the type FS_move_Params.
const FS_move_Params_TypeID = 0xb76f3dc1dcf4fdf1

func NewFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func NewRootFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func ReadRootFS_move_Params(msg *capnp.Message) (FS_move_Params, error) {
	root, err := msg.RootPtr()
	return FS_move_Params{root.Struct()}, err
}

func (s FS_move_Params) String() string {
	str, _ := text.Marshal(0xb76f3dc1dcf4fdf1, s.Struct)
	return str
}

func (s FS_move_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_move_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_move_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_move_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_move_Params_List is a list of FS_move_Params.
type FS_move_Params_List struct{ capnp.List }

// NewFS_move_Params creates a new list of FS_move_Params.
func NewFS_move_Params_List(s *capnp.Segment, sz int32) (FS_move_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_move_Params_List{l}, err
}

func (s FS_move_Params_List) At(i int) FS_move_Params { return FS_move_Params{s.List.Struct(i)} }

func (s FS_move_Params_List) Set(i int, v FS_move_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_move_Params_List) String() string {
	str, _ := text.MarshalList(0xb76f3dc1dcf4fdf1, s.List)
	return str
}

// FS_move_Params_Promise is a wrapper for a FS_move_Params promised by a client call.
type FS_move_Params_Promise struct{ *capnp.Pipeline }

func (p FS_move_Params_Promise) Struct() (FS_move_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Params{s}, err
}

type FS_move_Results struct{ capnp.Struct }

// FS_move_Results_TypeID is the unique identifier for the type FS_move_Results.
const FS_move_Results_TypeID = 0xab89c6fc9bf26f2a

func NewFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func NewRootFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func ReadRootFS_move_Results(msg *capnp.Message) (FS_move_Results, error) {
	root, err := msg.RootPtr()
	return FS_move_Results{root.Struct()}, err
}

func (s FS_move_Results) String() string {
	str, _ := text.Marshal(0xab89c6fc9bf26f2a, s.Struct)
	return str
}

// FS_move_Results_List is a list of FS_move_Results.
type FS_move_Results_List struct{ capnp.List }

// NewFS_move_Results creates a new list of FS_move_Results.
func NewFS_move_Results_List(s *capnp.Segment, sz int32) (FS_move_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_move_Results_List{l}, err
}

func (s FS_move_Results_List) At(i int) FS_move_Results { return FS_move_Results{s.List.Struct(i)} }

func (s FS_move_Results_List) Set(i int, v FS_move_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_move_Results_List) String() string {
	str, _ := text.MarshalList(0xab89c6fc9bf26f2a, s.List)
	return str
}

// FS_move_Results_Promise is a wrapper for a FS_move_Results promised by a client call.
type FS_move_Results_Promise struct{ *capnp.Pipeline }

func (p FS_move_Results_Promise) Struct() (FS_move_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Results{s}, err
}

type FS_copy_Params struct{ capnp.Struct }

// FS_copy_Params_TypeID is the unique identifier for the type FS_copy_Params.
const FS_copy_Params_TypeID = 0xc0dd66dedad92ef8

func NewFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func NewRootFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func ReadRootFS_copy_Params(msg *capnp.Message) (FS_copy_Params, error) {
	root, err := msg.RootPtr()
	return FS_copy_Params{root.Struct()}, err
}

func (s FS_copy_Params) String() string {
	str, _ := text.Marshal(0xc0dd66dedad92ef8, s.Struct)
	return str
}

func (s FS_copy_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_copy_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_copy_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_copy_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_copy_Params_List is a list of FS_copy_Params.
type FS_copy_Params_List struct{ capnp.List }

// NewFS_copy_Params creates a new list of FS_copy_Params.
func NewFS_copy_Params_List(s *capnp.Segment, sz int32) (FS_copy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_copy_Params_List{l}, err
}

func (s FS_copy_Params_List) At(i int) FS_copy_Params { return FS_copy_Params{s.List.Struct(i)} }

func (s FS_copy_Params_List) Set(i int, v FS_copy_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_copy_Params_List) String() string {
	str, _ := text.MarshalList(0xc0dd66dedad92ef8, s.List)
	return str
}

// FS_copy_Params_Promise is a wrapper for a FS_copy_Params promised by a client call.
type FS_copy_Params_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Params_Promise) Struct() (FS_copy_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Params{s}, err
}

type FS_copy_Results struct{ capnp.Struct }

// FS_copy_Results_TypeID is the unique identifier for the type FS_copy_Results.
const FS_copy_Results_TypeID = 0xccf4f28c8951edf6

func NewFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func NewRootFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func ReadRootFS_copy_Results(msg *capnp.Message) (FS_copy_Results, error) {
	root, err := msg.RootPtr()
	return FS_copy_Results{root.Struct()}, err
}

func (s FS_copy_Results) String() string {
	str, _ := text.Marshal(0xccf4f28c8951edf6, s.Struct)
	return str
}

// FS_copy_Results_List is a list of FS_copy_Results.
type FS_copy_Results_List struct{ capnp.List }

// NewFS_copy_Results creates a new list of FS_copy_Results.
func NewFS_copy_Results_List(s *capnp.Segment, sz int32) (FS_copy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_copy_Results_List{l}, err
}

func (s FS_copy_Results_List) At(i int) FS_copy_Results { return FS_copy_Results{s.List.Struct(i)} }

func (s FS_copy_Results_List) Set(i int, v FS_copy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_copy_Results_List) String() string {
	str, _ := text.MarshalList(0xccf4f28c8951edf6, s.List)
	return str
}

// FS_copy_Results_Promise is a wrapper for a FS_copy_Results promised by a client call.
type FS_copy_Results_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Results_Promise) Struct() (FS_copy_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Results{s}, err
}

type FS_pin_Params struct{ capnp.Struct }

// FS_pin_Params_TypeID is the unique identifier for the type FS_pin_Params.
const FS_pin_Params_TypeID = 0x9efc974402f016f6

func NewFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func NewRootFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func ReadRootFS_pin_Params(msg *capnp.Message) (FS_pin_Params, error) {
	root, err := msg.RootPtr()
	return FS_pin_Params{root.Struct()}, err
}

func (s FS_pin_Params) String() string {
	str, _ := text.Marshal(0x9efc974402f016f6, s.Struct)
	return str
}

func (s FS_pin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_pin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_pin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_pin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_pin_Params_List is a list of FS_pin_Params.
type FS_pin_Params_List struct{ capnp.List }

// NewFS_pin_Params creates a new list of FS_pin_Params.
func NewFS_pin_Params_List(s *capnp.Segment, sz int32) (FS_pin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_pin_Params_List{l}, err
}

func (s FS_pin_Params_List) At(i int) FS_pin_Params { return FS_pin_Params{s.List.Struct(i)} }

func (s FS_pin_Params_List) Set(i int, v FS_pin_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Params_List) String() string {
	str, _ := text.MarshalList(0x9efc974402f016f6, s.List)
	return str
}

// FS_pin_Params_Promise is a wrapper for a FS_pin_Params promised by a client call.
type FS_pin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Params_Promise) Struct() (FS_pin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Params{s}, err
}

type FS_pin_Results struct{ capnp.Struct }

// FS_pin_Results_TypeID is the unique identifier for the type FS_pin_Results.
const FS_pin_Results_TypeID = 0xdba8e30445acc3f4

func NewFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func NewRootFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func ReadRootFS_pin_Results(msg *capnp.Message) (FS_pin_Results, error) {
	root, err := msg.RootPtr()
	return FS_pin_Results{root.Struct()}, err
}

func (s FS_pin_Results) String() string {
	str, _ := text.Marshal(0xdba8e30445acc3f4, s.Struct)
	return str
}

// FS_pin_Results_List is a list of FS_pin_Results.
type FS_pin_Results_List struct{ capnp.List }

// NewFS_pin_Results creates a new list of FS_pin_Results.
func NewFS_pin_Results_List(s *capnp.Segment, sz int32) (FS_pin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_pin_Results_List{l}, err
}

func (s FS_pin_Results_List) At(i int) FS_pin_Results { return FS_pin_Results{s.List.Struct(i)} }

func (s FS_pin_Results_List) Set(i int, v FS_pin_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Results_List) String() string {
	str, _ := text.MarshalList(0xdba8e30445acc3f4, s.List)
	return str
}

// FS_pin_Results_Promise is a wrapper for a FS_pin_Results promised by a client call.
type FS_pin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Results_Promise) Struct() (FS_pin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Results{s}, err
}

type FS_unpin_Params struct{ capnp.Struct }

// FS_unpin_Params_TypeID is the unique identifier for the type FS_unpin_Params.
const FS_unpin_Params_TypeID = 0xc9558eac26b0f15e

func NewFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func NewRootFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func ReadRootFS_unpin_Params(msg *capnp.Message) (FS_unpin_Params, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Params{root.Struct()}, err
}

func (s FS_unpin_Params) String() string {
	str, _ := text.Marshal(0xc9558eac26b0f15e, s.Struct)
	return str
}

func (s FS_unpin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_unpin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_unpin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_unpin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_unpin_Params_List is a list of FS_unpin_Params.
type FS_unpin_Params_List struct{ capnp.List }

// NewFS_unpin_Params creates a new list of FS_unpin_Params.
func NewFS_unpin_Params_List(s *capnp.Segment, sz int32) (FS_unpin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_unpin_Params_List{l}, err
}

func (s FS_unpin_Params_List) At(i int) FS_unpin_Params { return FS_unpin_Params{s.List.Struct(i)} }

func (s FS_unpin_Params_List) Set(i int, v FS_unpin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Params_List) String() string {
	str, _ := text.MarshalList(0xc9558eac26b0f15e, s.List)
	return str
}

// FS_unpin_Params_Promise is a wrapper for a FS_unpin_Params promised by a client call.
type FS_unpin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Params_Promise) Struct() (FS_unpin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Params{s}, err
}

type FS_unpin_Results struct{ capnp.Struct }

// FS_unpin_Results_TypeID is the unique identifier for the type FS_unpin_Results.
const FS_unpin_Results_TypeID = 0x87c49e302c6516f8

func NewFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func NewRootFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func ReadRootFS_unpin_Results(msg *capnp.Message) (FS_unpin_Results, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Results{root.Struct()}, err
}

func (s FS_unpin_Results) String() string {
	str, _ := text.Marshal(0x87c49e302c6516f8, s.Struct)
	return str
}

// FS_unpin_Results_List is a list of FS_unpin_Results.
type FS_unpin_Results_List struct{ capnp.List }

// NewFS_unpin_Results creates a new list of FS_unpin_Results.
func NewFS_unpin_Results_List(s *capnp.Segment, sz int32) (FS_unpin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_unpin_Results_List{l}, err
}

func (s FS_unpin_Results_List) At(i int) FS_unpin_Results { return FS_unpin_Results{s.List.Struct(i)} }

func (s FS_unpin_Results_List) Set(i int, v FS_unpin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Results_List) String() string {
	str, _ := text.MarshalList(0x87c49e302c6516f8, s.List)
	return str
}

// FS_unpin_Results_Promise is a wrapper for a FS_unpin_Results promised by a client call.
type FS_unpin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Results_Promise) Struct() (FS_unpin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Results{s}, err
}

type FS_stat_Params struct{ capnp.Struct }

// FS_stat_Params_TypeID is the unique identifier for the type FS_stat_Params.
const FS_stat_Params_TypeID = 0xd78724f6fbd5c5c5

func NewFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func NewRootFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func ReadRootFS_stat_Params(msg *capnp.Message) (FS_stat_Params, error) {
	root, err := msg.RootPtr()
	return FS_stat_Params{root.Struct()}, err
}

func (s FS_stat_Params) String() string {
	str, _ := text.Marshal(0xd78724f6fbd5c5c5, s.Struct)
	return str
}

func (s FS_stat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_stat_Params_List is a list of FS_stat_Params.
type FS_stat_Params_List struct{ capnp.List }

// NewFS_stat_Params creates a new list of FS_stat_Params.
func NewFS_stat_Params_List(s *capnp.Segment, sz int32) (FS_stat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Params_List{l}, err
}

func (s FS_stat_Params_List) At(i int) FS_stat_Params { return FS_stat_Params{s.List.Struct(i)} }

func (s FS_stat_Params_List) Set(i int, v FS_stat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_stat_Params_List) String() string {
	str, _ := text.MarshalList(0xd78724f6fbd5c5c5, s.List)
	return str
}

// FS_stat_Params_Promise is a wrapper for a FS_stat_Params promised by a client call.
type FS_stat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Params_Promise) Struct() (FS_stat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Params{s}, err
}

type FS_stat_Results struct{ capnp.Struct }

// FS_stat_Results_TypeID is the unique identifier for the type FS_stat_Results.
const FS_stat_Results_TypeID = 0xbdb679ec96303b53

func NewFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func NewRootFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func ReadRootFS_stat_Results(msg *capnp.Message) (FS_stat_Results, error) {
	root, err := msg.RootPtr()
	return FS_stat_Results{root.Struct()}, err
}

func (s FS_stat_Results) String() string {
	str, _ := text.Marshal(0xbdb679ec96303b53, s.Struct)
	return str
}

func (s FS_stat_Results) Info() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s FS_stat_Results) HasInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Results) SetInfo(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s FS_stat_Results) NewInfo() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FS_stat_Results_List is a list of FS_stat_Results.
type FS_stat_Results_List struct{ capnp.List }

// NewFS_stat_Results creates a new list of FS_stat_Results.
func NewFS_stat_Results_List(s *capnp.Segment, sz int32) (FS_stat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Results_List{l}, err
}

func (s FS_stat_Results_List) At(i int) FS_stat_Results { return FS_stat_Results{s.List.Struct(i)} }

func (s FS_stat_Results_List) Set(i int, v FS_stat_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stat_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb679ec96303b53, s.List)
	return str
}

// FS_stat_Results_Promise is a wrapper for a FS_stat_Results promised by a client call.
type FS_stat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Results_Promise) Struct() (FS_stat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Results{s}, err
}

func (p FS_stat_Results_Promise) Info() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type FS_garbageCollect_Params struct{ capnp.Struct }

// FS_garbageCollect_Params_TypeID is the unique identifier for the type FS_garbageCollect_Params.
const FS_garbageCollect_Params_TypeID = 0x9cb31f0ede4f5117

func NewFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func NewRootFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func ReadRootFS_garbageCollect_Params(msg *capnp.Message) (FS_garbageCollect_Params, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Params{root.Struct()}, err
}

func (s FS_garbageCollect_Params) String() string {
	str, _ := text.Marshal(0x9cb31f0ede4f5117, s.Struct)
	return str
}

func (s FS_garbageCollect_Params) Aggressive() bool {
	return s.Struct.Bit(0)
}

func (s FS_garbageCollect_Params) SetAggressive(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_garbageCollect_Params_List is a list of FS_garbageCollect_Params.
type FS_garbageCollect_Params_List struct{ capnp.List }

// NewFS_garbageCollect_Params creates a new list of FS_garbageCollect_Params.
func NewFS_garbageCollect_Params_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_garbageCollect_Params_List{l}, err
}

func (s FS_garbageCollect_Params_List) At(i int) FS_garbageCollect_Params {
	return FS_garbageCollect_Params{s.List.Struct(i)}
}

func (s FS_garbageCollect_Params_List) Set(i int, v FS_garbageCollect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Params_List) String() string {
	str, _ := text.MarshalList(0x9cb31f0ede4f5117, s.List)
	return str
}

// FS_garbageCollect_Params_Promise is a wrapper for a FS_garbageCollect_Params promised by a client call.
type FS_garbageCollect_Params_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Params_Promise) Struct() (FS_garbageCollect_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Params{s}, err
}

type FS_garbageCollect_Results struct{ capnp.Struct }

// FS_garbageCollect_Results_TypeID is the unique identifier for the type FS_garbageCollect_Results.
const FS_garbageCollect_Results_TypeID = 0xbb5ea9a03dfddab3

func NewFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func NewRootFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func ReadRootFS_garbageCollect_Results(msg *capnp.Message) (FS_garbageCollect_Results, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Results{root.Struct()}, err
}

func (s FS_garbageCollect_Results) String() string {
	str, _ := text.Marshal(0xbb5ea9a03dfddab3, s.Struct)
	return str
}

func (s FS_garbageCollect_Results) Freed() (GarbageItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return GarbageItem_List{List: p.List()}, err
}

func (s FS_garbageCollect_Results) HasFreed() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_garbageCollect_Results) SetFreed(v GarbageItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFreed sets the freed field to a newly
// allocated GarbageItem_List, preferring placement in s's segment.
func (s FS_garbageCollect_Results) NewFreed(n int32) (GarbageItem_List, error) {
	l, err := NewGarbageItem_List(s.Struct.Segment(), n)
	if err != nil {
		return GarbageItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_garbageCollect_Results_List is a list of FS_garbageCollect_Results.
type FS_garbageCollect_Results_List struct{ capnp.List }

// NewFS_garbageCollect_Results creates a new list of FS_garbageCollect_Results.
func NewFS_garbageCollect_Results_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_garbageCollect_Results_List{l}, err
}

func (s FS_garbageCollect_Results_List) At(i int) FS_garbageCollect_Results {
	return FS_garbageCollect_Results{s.List.Struct(i)}
}

func (s FS_garbageCollect_Results_List) Set(i int, v FS_garbageCollect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Results_List) String() string {
	str, _ := text.MarshalList(0xbb5ea9a03dfddab3, s.List)
	return str
}

// FS_garbageCollect_Results_Promise is a wrapper for a FS_garbageCollect_Results promised by a client call.
type FS_garbageCollect_Results_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Results_Promise) Struct() (FS_garbageCollect_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Results{s}, err
}

type FS_touch_Params struct{ capnp.Struct }

// FS_touch_Params_TypeID is the unique identifier for the type FS_touch_Params.
const FS_touch_Params_TypeID = 0xab1e48e58e4c69af

func NewFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func NewRootFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func ReadRootFS_touch_Params(msg *capnp.Message) (FS_touch_Params, error) {
	root, err := msg.RootPtr()
	return FS_touch_Params{root.Struct()}, err
}

func (s FS_touch_Params) String() string {
	str, _ := text.Marshal(0xab1e48e58e4c69af, s.Struct)
	return str
}

func (s FS_touch_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_touch_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_touch_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_touch_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_touch_Params_List is a list of FS_touch_Params.
type FS_touch_Params_List struct{ capnp.List }

// NewFS_touch_Params creates a new list of FS_touch_Params.
func NewFS_touch_Params_List(s *capnp.Segment, sz int32) (FS_touch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_touch_Params_List{l}, err
}

func (s FS_touch_Params_List) At(i int) FS_touch_Params { return FS_touch_Params{s.List.Struct(i)} }

func (s FS_touch_Params_List) Set(i int, v FS_touch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Params_List) String() string {
	str, _ := text.MarshalList(0xab1e48e58e4c69af, s.List)
	return str
}

// FS_touch_Params_Promise is a wrapper for a FS_touch_Params promised by a client call.
type FS_touch_Params_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Params_Promise) Struct() (FS_touch_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Params{s}, err
}

type FS_touch_Results struct{ capnp.Struct }

// FS_touch_Results_TypeID is the unique identifier for the type FS_touch_Results.
const FS_touch_Results_TypeID = 0xbf1cf3d6e654e947

func NewFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func NewRootFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func ReadRootFS_touch_Results(msg *capnp.Message) (FS_touch_Results, error) {
	root, err := msg.RootPtr()
	return FS_touch_Results{root.Struct()}, err
}

func (s FS_touch_Results) String() string {
	str, _ := text.Marshal(0xbf1cf3d6e654e947, s.Struct)
	return str
}

// FS_touch_Results_List is a list of FS_touch_Results.
type FS_touch_Results_List struct{ capnp.List }

// NewFS_touch_Results creates a new list of FS_touch_Results.
func NewFS_touch_Results_List(s *capnp.Segment, sz int32) (FS_touch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_touch_Results_List{l}, err
}

func (s FS_touch_Results_List) At(i int) FS_touch_Results { return FS_touch_Results{s.List.Struct(i)} }

func (s FS_touch_Results_List) Set(i int, v FS_touch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Results_List) String() string {
	str, _ := text.MarshalList(0xbf1cf3d6e654e947, s.List)
	return str
}

// FS_touch_Results_Promise is a wrapper for a FS_touch_Results promised by a client call.
type FS_touch_Results_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Results_Promise) Struct() (FS_touch_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Results{s}, err
}

type FS_exists_Params struct{ capnp.Struct }

// FS_exists_Params_TypeID is the unique identifier for the type FS_exists_Params.
const FS_exists_Params_TypeID = 0xdb27e243a580d2f0

func NewFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func NewRootFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func ReadRootFS_exists_Params(msg *capnp.Message) (FS_exists_Params, error) {
	root, err := msg.RootPtr()
	return FS_exists_Params{root.Struct()}, err
}

func (s FS_exists_Params) String() string {
	str, _ := text.Marshal(0xdb27e243a580d2f0, s.Struct)
	return str
}

func (s FS_exists_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_exists_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_exists_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_exists_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_exists_Params_List is a list of FS_exists_Params.
type FS_exists_Params_List struct{ capnp.List }

// NewFS_exists_Params creates a new list of FS_exists_Params.
func NewFS_exists_Params_List(s *capnp.Segment, sz int32) (FS_exists_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_exists_Params_List{l}, err
}

func (s FS_exists_Params_List) At(i int) FS_exists_Params { return FS_exists_Params{s.List.Struct(i)} }

func (s FS_exists_Params_List) Set(i int, v FS_exists_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Params_List) String() string {
	str, _ := text.MarshalList(0xdb27e243a580d2f0, s.List)
	return str
}

// FS_exists_Params_Promise is a wrapper for a FS_exists_Params promised by a client call.
type FS_exists_Params_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Params_Promise) Struct() (FS_exists_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Params{s}, err
}

type FS_exists_Results struct{ capnp.Struct }

// FS_exists_Results_TypeID is the unique identifier for the type FS_exists_Results.
const FS_exists_Results_TypeID = 0xa5753d28ca12d2ba

func NewFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func NewRootFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func ReadRootFS_exists_Results(msg *capnp.Message) (FS_exists_Results, error) {
	root, err := msg.RootPtr()
	return FS_exists_Results{root.Struct()}, err
}

func (s FS_exists_Results) String() string {
	str, _ := text.Marshal(0xa5753d28ca12d2ba, s.Struct)
	return str
}

func (s FS_exists_Results) Exists() bool {
	return s.Struct.Bit(0)
}

func (s FS_exists_Results) SetExists(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_exists_Results_List is a list of FS_exists_Results.
type FS_exists_Results_List struct{ capnp.List }

// NewFS_exists_Results creates a new list of FS_exists_Results.
func NewFS_exists_Results_List(s *capnp.Segment, sz int32) (FS_exists_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_exists_Results_List{l}, err
}

func (s FS_exists_Results_List) At(i int) FS_exists_Results {
	return FS_exists_Results{s.List.Struct(i)}
}

func (s FS_exists_Results_List) Set(i int, v FS_exists_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Results_List) String() string {
	str, _ := text.MarshalList(0xa5753d28ca12d2ba, s.List)
	return str
}

// FS_exists_Results_Promise is a wrapper for a FS_exists_Results promised by a client call.
type FS_exists_Results_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Results_Promise) Struct() (FS_exists_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Results{s}, err
}

type VCS struct{ Client capnp.Client }

// VCS_TypeID is the unique identifier for the type VCS.
const VCS_TypeID = 0xfaa680ef12c44624

func (c VCS) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type VCS_Server interface {
	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error
}

func VCS_ServerToClient(s VCS_Server) VCS {
	c, _ := s.(server.Closer)
	return VCS{Client: server.New(VCS_Methods(nil, s), c)}
}

func VCS_Methods(methods []server.Method, s VCS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// VCS_log holds the arguments for a server call to VCS.log.
type VCS_log struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_log_Params
	Results VCS_log_Results
}

// VCS_commit holds the arguments for a server call to VCS.commit.
type VCS_commit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commit_Params
	Results VCS_commit_Results
}

// VCS_tag holds the arguments for a server call to VCS.tag.
type VCS_tag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_tag_Params
	Results VCS_tag_Results
}

// VCS_untag holds the arguments for a server call to VCS.untag.
type VCS_untag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_untag_Params
	Results VCS_untag_Results
}

// VCS_reset holds the arguments for a server call to VCS.reset.
type VCS_reset struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_reset_Params
	Results VCS_reset_Results
}

// VCS_history holds the arguments for a server call to VCS.history.
type VCS_history struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_history_Params
	Results VCS_history_Results
}

// VCS_makeDiff holds the arguments for a server call to VCS.makeDiff.
type VCS_makeDiff struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_makeDiff_Params
	Results VCS_makeDiff_Results
}

// VCS_sync holds the arguments for a server call to VCS.sync.
type VCS_sync struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_sync_Params
	Results VCS_sync_Results
}

// VCS_fetch holds the arguments for a server call to VCS.fetch.
type VCS_fetch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_fetch_Params
	Results VCS_fetch_Results
}

type VCS_log_Params struct{ capnp.Struct }

// VCS_log_Params_TypeID is the unique identifier for the type VCS_log_Params.
const VCS_log_Params_TypeID = 0xa4efd353c57d2b85

func NewVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func NewRootVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func ReadRootVCS_log_Params(msg *capnp.Message) (VCS_log_Params, error) {
	root, err := msg.RootPtr()
	return VCS_log_Params{root.Struct()}, err
}

func (s VCS_log_Params) String() string {
	str, _ := text.Marshal(0xa4efd353c57d2b85, s.Struct)
	return str
}

// VCS_log_Params_List is a list of VCS_log_Params.
type VCS_log_Params_List struct{ capnp.List }

// NewVCS_log_Params creates a new list of VCS_log_Params.
func NewVCS_log_Params_List(s *capnp.Segment, sz int32) (VCS_log_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_log_Params_List{l}, err
}

func (s VCS_log_Params_List) At(i int) VCS_log_Params { return VCS_log_Params{s.List.Struct(i)} }

func (s VCS_log_Params_List) Set(i int, v VCS_log_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_log_Params_List) String() string {
	str, _ := text.MarshalList(0xa4efd353c57d2b85, s.List)
	return str
}

// VCS_log_Params_Promise is a wrapper for a VCS_log_Params promised by a client call.
type VCS_log_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Params_Promise) Struct() (VCS_log_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Params{s}, err
}

type VCS_log_Results struct{ capnp.Struct }

// VCS_log_Results_TypeID is the unique identifier for the type VCS_log_Results.
const VCS_log_Results_TypeID = 0xf7250939585a23f6

func NewVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func NewRootVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func ReadRootVCS_log_Results(msg *capnp.Message) (VCS_log_Results, error) {
	root, err := msg.RootPtr()
	return VCS_log_Results{root.Struct()}, err
}

func (s VCS_log_Results) String() string {
	str, _ := text.Marshal(0xf7250939585a23f6, s.Struct)
	return str
}

func (s VCS_log_Results) Entries() (Commit_List, error) {
	p, err := s.Struct.Ptr(0)
	return Commit_List{List: p.List()}, err
}

func (s VCS_log_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_log_Results) SetEntries(v Commit_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated Commit_List, preferring placement in s's segment.
func (s VCS_log_Results) NewEntries(n int32) (Commit_List, error) {
	l, err := NewCommit_List(s.Struct.Segment(), n)
	if err != nil {
		return Commit_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_log_Results_List is a list of VCS_log_Results.
type VCS_log_Results_List struct{ capnp.List }

// NewVCS_log_Results creates a new list of VCS_log_Results.
func NewVCS_log_Results_List(s *capnp.Segment, sz int32) (VCS_log_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_log_Results_List{l}, err
}

func (s VCS_log_Results_List) At(i int) VCS_log_Results { return VCS_log_Results{s.List.Struct(i)} }

func (s VCS_log_Results_List) Set(i int, v VCS_log_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_log_Results_List) String() string {
	str, _ := text.MarshalList(0xf7250939585a23f6, s.List)
	return str
}

// VCS_log_Results_Promise is a wrapper for a VCS_log_Results promised by a client call.
type VCS_log_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Results_Promise) Struct() (VCS_log_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Results{s}, err
}

type VCS_commit_Params struct{ capnp.Struct }

// VCS_commit_Params_TypeID is the unique identifier for the type VCS_commit_Params.
const VCS_commit_Params_TypeID = 0xd9459f2361338d96

func NewVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func NewRootVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func ReadRootVCS_commit_Params(msg *capnp.Message) (VCS_commit_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Params{root.Struct()}, err
}

func (s VCS_commit_Params) String() string {
	str, _ := text.Marshal(0xd9459f2361338d96, s.Struct)
	return str
}

func (s VCS_commit_Params) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commit_Params) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commit_Params) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commit_Params) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commit_Params_List is a list of VCS_commit_Params.
type VCS_commit_Params_List struct{ capnp.List }

// NewVCS_commit_Params creates a new list of VCS_commit_Params.
func NewVCS_commit_Params_List(s *capnp.Segment, sz int32) (VCS_commit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commit_Params_List{l}, err
}

func (s VCS_commit_Params_List) At(i int) VCS_commit_Params {
	return VCS_commit_Params{s.List.Struct(i)}
}

func (s VCS_commit_Params_List) Set(i int, v VCS_commit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Params_List) String() string {
	str, _ := text.MarshalList(0xd9459f2361338d96, s.List)
	return str
}

// VCS_commit_Params_Promise is a wrapper for a VCS_commit_Params promised by a client call.
type VCS_commit_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Params_Promise) Struct() (VCS_commit_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Params{s}, err
}

type VCS_commit_Results struct{ capnp.Struct }

// VCS_commit_Results_TypeID is the unique identifier for the type VCS_commit_Results.
const VCS_commit_Results_TypeID = 0xb7d0dd6b467e7539

func NewVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func NewRootVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func ReadRootVCS_commit_Results(msg *capnp.Message) (VCS_commit_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Results{root.Struct()}, err
}

func (s VCS_commit_Results) String() string {
	str, _ := text.Marshal(0xb7d0dd6b467e7539, s.Struct)
	return str
}

// VCS_commit_Results_List is a list of VCS_commit_Results.
type VCS_commit_Results_List struct{ capnp.List }

// NewVCS_commit_Results creates a new list of VCS_commit_Results.
func NewVCS_commit_Results_List(s *capnp.Segment, sz int32) (VCS_commit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_commit_Results_List{l}, err
}

func (s VCS_commit_Results_List) At(i int) VCS_commit_Results {
	return VCS_commit_Results{s.List.Struct(i)}
}

func (s VCS_commit_Results_List) Set(i int, v VCS_commit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Results_List) String() string {
	str, _ := text.MarshalList(0xb7d0dd6b467e7539, s.List)
	return str
}

// VCS_commit_Results_Promise is a wrapper for a VCS_commit_Results promised by a client call.
type VCS_commit_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Results_Promise) Struct() (VCS_commit_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Results{s}, err
}

type VCS_tag_Params struct{ capnp.Struct }

// VCS_tag_Params_TypeID is the unique identifier for the type VCS_tag_Params.
const VCS_tag_Params_TypeID = 0xa97d67096ee7d46d

func NewVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func NewRootVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func ReadRootVCS_tag_Params(msg *capnp.Message) (VCS_tag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Params{root.Struct()}, err
}

func (s VCS_tag_Params) String() string {
	str, _ := text.Marshal(0xa97d67096ee7d46d, s.Struct)
	return str
}

func (s VCS_tag_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_tag_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_tag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_tag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetTagName(v string) error {
	return s.Struct.SetText(1, v)
}

// VCS_tag_Params_List is a list of VCS_tag_Params.
type VCS_tag_Params_List struct{ capnp.List }

// NewVCS_tag_Params creates a new list of VCS_tag_Params.
func NewVCS_tag_Params_List(s *capnp.Segment, sz int32) (VCS_tag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return VCS_tag_Params_List{l}, err
}

func (s VCS_tag_Params_List) At(i int) VCS_tag_Params { return VCS_tag_Params{s.List.Struct(i)} }

func (s VCS_tag_Params_List) Set(i int, v VCS_tag_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_tag_Params_List) String() string {
	str, _ := text.MarshalList(0xa97d67096ee7d46d, s.List)
	return str
}

// VCS_tag_Params_Promise is a wrapper for a VCS_tag_Params promised by a client call.
type VCS_tag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Params_Promise) Struct() (VCS_tag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Params{s}, err
}

type VCS_tag_Results struct{ capnp.Struct }

// VCS_tag_Results_TypeID is the unique identifier for the type VCS_tag_Results.
const VCS_tag_Results_TypeID = 0xbda949777c149f4b

func NewVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func NewRootVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func ReadRootVCS_tag_Results(msg *capnp.Message) (VCS_tag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Results{root.Struct()}, err
}

func (s VCS_tag_Results) String() string {
	str, _ := text.Marshal(0xbda949777c149f4b, s.Struct)
	return str
}

// VCS_tag_Results_List is a list of VCS_tag_Results.
type VCS_tag_Results_List struct{ capnp.List }

// NewVCS_tag_Results creates a new list of VCS_tag_Results.
func NewVCS_tag_Results_List(s *capnp.Segment, sz int32) (VCS_tag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_tag_Results_List{l}, err
}

func (s VCS_tag_Results_List) At(i int) VCS_tag_Results { return VCS_tag_Results{s.List.Struct(i)} }

func (s VCS_tag_Results_List) Set(i int, v VCS_tag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_tag_Results_List) String() string {
	str, _ := text.MarshalList(0xbda949777c149f4b, s.List)
	return str
}

// VCS_tag_Results_Promise is a wrapper for a VCS_tag_Results promised by a client call.
type VCS_tag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Results_Promise) Struct() (VCS_tag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Results{s}, err
}

type VCS_untag_Params struct{ capnp.Struct }

// VCS_untag_Params_TypeID is the unique identifier for the type VCS_untag_Params.
const VCS_untag_Params_TypeID = 0xf4d42db113af3a4b

func NewVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func NewRootVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func ReadRootVCS_untag_Params(msg *capnp.Message) (VCS_untag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Params{root.Struct()}, err
}

func (s VCS_untag_Params) String() string {
	str, _ := text.Marshal(0xf4d42db113af3a4b, s.Struct)
	return str
}

func (s VCS_untag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_untag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_untag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_untag_Params) SetTagName(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_untag_Params_List is a list of VCS_untag_Params.
type VCS_untag_Params_List struct{ capnp.List }

// NewVCS_untag_Params creates a new list of VCS_untag_Params.
func NewVCS_untag_Params_List(s *capnp.Segment, sz int32) (VCS_untag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_untag_Params_List{l}, err
}

func (s VCS_untag_Params_List) At(i int) VCS_untag_Params { return VCS_untag_Params{s.List.Struct(i)} }

func (s VCS_untag_Params_List) Set(i int, v VCS_untag_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Params_List) String() string {
	str, _ := text.MarshalList(0xf4d42db113af3a4b, s.List)
	return str
}

// VCS_untag_Params_Promise is a wrapper for a VCS_untag_Params promised by a client call.
type VCS_untag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Params_Promise) Struct() (VCS_untag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Params{s}, err
}

type VCS_untag_Results struct{ capnp.Struct }

// VCS_untag_Results_TypeID is the unique identifier for the type VCS_untag_Results.
const VCS_untag_Results_TypeID = 0xba0de490234c27af

func NewVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func NewRootVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func ReadRootVCS_untag_Results(msg *capnp.Message) (VCS_untag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Results{root.Struct()}, err
}

func (s VCS_untag_Results) String() string {
	str, _ := text.Marshal(0xba0de490234c27af, s.Struct)
	return str
}

// VCS_untag_Results_List is a list of VCS_untag_Results.
type VCS_untag_Results_List struct{ capnp.List }

// NewVCS_untag_Results creates a new list of VCS_untag_Results.
func NewVCS_untag_Results_List(s *capnp.Segment, sz int32) (VCS_untag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_untag_Results_List{l}, err
}

func (s VCS_untag_Results_List) At(i int) VCS_untag_Results {
	return VCS_untag_Results{s.List.Struct(i)}
}

func (s VCS_untag_Results_List) Set(i int, v VCS_untag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Results_List) String() string {
	str, _ := text.MarshalList(0xba0de490234c27af, s.List)
	return str
}

// VCS_untag_Results_Promise is a wrapper for a VCS_untag_Results promised by a client call.
type VCS_untag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Results_Promise) Struct() (VCS_untag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Results{s}, err
}

type VCS_reset_Params struct{ capnp.Struct }

// VCS_reset_Params_TypeID is the unique identifier for the type VCS_reset_Params.
const VCS_reset_Params_TypeID = 0xe71560d8bc06c6fd

func NewVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func NewRootVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func ReadRootVCS_reset_Params(msg *capnp.Message) (VCS_reset_Params, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Params{root.Struct()}, err
}

func (s VCS_reset_Params) String() string {
	str, _ := text.Marshal(0xe71560d8bc06c6fd, s.Struct)
	return str
}

func (s VCS_reset_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_reset_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_reset_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_reset_Params) HasRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_reset_Params) Force() bool {
	return s.Struct.Bit(0)
}

func (s VCS_reset_Params) SetForce(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_reset_Params_List is a list of VCS_reset_Params.
type VCS_reset_Params_List struct{ capnp.List }

// NewVCS_reset_Params creates a new list of VCS_reset_Params.
func NewVCS_reset_Params_List(s *capnp.Segment, sz int32) (VCS_reset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return VCS_reset_Params_List{l}, err
}

func (s VCS_reset_Params_List) At(i int) VCS_reset_Params { return VCS_reset_Params{s.List.Struct(i)} }

func (s VCS_reset_Params_List) Set(i int, v VCS_reset_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Params_List) String() string {
	str, _ := text.MarshalList(0xe71560d8bc06c6fd, s.List)
	return str
}

// VCS_reset_Params_Promise is a wrapper for a VCS_reset_Params promised by a client call.
type VCS_reset_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Params_Promise) Struct() (VCS_reset_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Params{s}, err
}

type VCS_reset_Results struct{ capnp.Struct }

// VCS_reset_Results_TypeID is the unique identifier for the type VCS_reset_Results.
const VCS_reset_Results_TypeID = 0xf9b772853fd93ea9

func NewVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func NewRootVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func ReadRootVCS_reset_Results(msg *capnp.Message) (VCS_reset_Results, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Results{root.Struct()}, err
}

func (s VCS_reset_Results) String() string {
	str, _ := text.Marshal(0xf9b772853fd93ea9, s.Struct)
	return str
}

// VCS_reset_Results_List is a list of VCS_reset_Results.
type VCS_reset_Results_List struct{ capnp.List }

// NewVCS_reset_Results creates a new list of VCS_reset_Results.
func NewVCS_reset_Results_List(s *capnp.Segment, sz int32) (VCS_reset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_reset_Results_List{l}, err
}

func (s VCS_reset_Results_List) At(i int) VCS_reset_Results {
	return VCS_reset_Results{s.List.Struct(i)}
}

func (s VCS_reset_Results_List) Set(i int, v VCS_reset_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b772853fd93ea9, s.List)
	return str
}

// VCS_reset_Results_Promise is a wrapper for a VCS_reset_Results promised by a client call.
type VCS_reset_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Results_Promise) Struct() (VCS_reset_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Results{s}, err
}

type VCS_history_Params struct{ capnp.Struct }

// VCS_history_Params_TypeID is the unique identifier for the type VCS_history_Params.
const VCS_history_Params_TypeID = 0xe154e487144bf3c2

func NewVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func NewRootVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func ReadRootVCS_history_Params(msg *capnp.Message) (VCS_history_Params, error) {
	root, err := msg.RootPtr()
	return VCS_history_Params{root.Struct()}, err
}

func (s VCS_history_Params) String() string {
	str, _ := text.Marshal(0xe154e487144bf3c2, s.Struct)
	return str
}

func (s VCS_history_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_history_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_history_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_history_Params_List is a list of VCS_history_Params.
type VCS_history_Params_List struct{ capnp.List }

// NewVCS_history_Params creates a new list of VCS_history_Params.
func NewVCS_history_Params_List(s *capnp.Segment, sz int32) (VCS_history_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Params_List{l}, err
}

func (s VCS_history_Params_List) At(i int) VCS_history_Params {
	return VCS_history_Params{s.List.Struct(i)}
}

func (s VCS_history_Params_List) Set(i int, v VCS_history_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Params_List) String() string {
	str, _ := text.MarshalList(0xe154e487144bf3c2, s.List)
	return str
}

// VCS_history_Params_Promise is a wrapper for a VCS_history_Params promised by a client call.
type VCS_history_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Params_Promise) Struct() (VCS_history_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Params{s}, err
}

type VCS_history_Results struct{ capnp.Struct }

// VCS_history_Results_TypeID is the unique identifier for the type VCS_history_Results.
const VCS_history_Results_TypeID = 0xe0f49db8c42c72b2

func NewVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func NewRootVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func ReadRootVCS_history_Results(msg *capnp.Message) (VCS_history_Results, error) {
	root, err := msg.RootPtr()
	return VCS_history_Results{root.Struct()}, err
}

func (s VCS_history_Results) String() string {
	str, _ := text.Marshal(0xe0f49db8c42c72b2, s.Struct)
	return str
}

func (s VCS_history_Results) History() (Change_List, error) {
	p, err := s.Struct.Ptr(0)
	return Change_List{List: p.List()}, err
}

func (s VCS_history_Results) HasHistory() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Results) SetHistory(v Change_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHistory sets the history field to a newly
// allocated Change_List, preferring placement in s's segment.
func (s VCS_history_Results) NewHistory(n int32) (Change_List, error) {
	l, err := NewChange_List(s.Struct.Segment(), n)
	if err != nil {
		return Change_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_history_Results_List is a list of VCS_history_Results.
type VCS_history_Results_List struct{ capnp.List }

// NewVCS_history_Results creates a new list of VCS_history_Results.
func NewVCS_history_Results_List(s *capnp.Segment, sz int32) (VCS_history_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Results_List{l}, err
}

func (s VCS_history_Results_List) At(i int) VCS_history_Results {
	return VCS_history_Results{s.List.Struct(i)}
}

func (s VCS_history_Results_List) Set(i int, v VCS_history_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f49db8c42c72b2, s.List)
	return str
}

// VCS_history_Results_Promise is a wrapper for a VCS_history_Results promised by a client call.
type VCS_history_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Results_Promise) Struct() (VCS_history_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Results{s}, err
}

type VCS_makeDiff_Params struct{ capnp.Struct }

// VCS_makeDiff_Params_TypeID is the unique identifier for the type VCS_makeDiff_Params.
const VCS_makeDiff_Params_TypeID = 0xe2f81b4403ef433b

func NewVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func NewRootVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func ReadRootVCS_makeDiff_Params(msg *capnp.Message) (VCS_makeDiff_Params, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Params{root.Struct()}, err
}

func (s VCS_makeDiff_Params) String() string {
	str, _ := text.Marshal(0xe2f81b4403ef433b, s.Struct)
	return str
}

func (s VCS_makeDiff_Params) LocalOwner() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalOwner() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalOwner(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_makeDiff_Params) RemoteOwner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_makeDiff_Params) LocalRev() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalRev() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalRev(v string) error {
	return s.Struct.SetText(2, v)
}

func (s VCS_makeDiff_Params) RemoteRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteRev(v string) error {
	return s.Struct.SetText(3, v)
}

// VCS_makeDiff_Params_List is a list of VCS_makeDiff_Params.
type VCS_makeDiff_Params_List struct{ capnp.List }

// NewVCS_makeDiff_Params creates a new list of VCS_makeDiff_Params.
func NewVCS_makeDiff_Params_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return VCS_makeDiff_Params_List{l}, err
}

func (s VCS_makeDiff_Params_List) At(i int) VCS_makeDiff_Params {
	return VCS_makeDiff_Params{s.List.Struct(i)}
}

func (s VCS_makeDiff_Params_List) Set(i int, v VCS_makeDiff_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Params_List) String() string {
	str, _ := text.MarshalList(0xe2f81b4403ef433b, s.List)
	return str
}

// VCS_makeDiff_Params_Promise is a wrapper for a VCS_makeDiff_Params promised by a client call.
type VCS_makeDiff_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Params_Promise) Struct() (VCS_makeDiff_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Params{s}, err
}

type VCS_makeDiff_Results struct{ capnp.Struct }

// VCS_makeDiff_Results_TypeID is the unique identifier for the type VCS_makeDiff_Results.
const VCS_makeDiff_Results_TypeID = 0xd7ef486de484610d

func NewVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func NewRootVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func ReadRootVCS_makeDiff_Results(msg *capnp.Message) (VCS_makeDiff_Results, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Results{root.Struct()}, err
}

func (s VCS_makeDiff_Results) String() string {
	str, _ := text.Marshal(0xd7ef486de484610d, s.Struct)
	return str
}

func (s VCS_makeDiff_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_makeDiff_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_makeDiff_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_makeDiff_Results_List is a list of VCS_makeDiff_Results.
type VCS_makeDiff_Results_List struct{ capnp.List }

// NewVCS_makeDiff_Results creates a new list of VCS_makeDiff_Results.
func NewVCS_makeDiff_Results_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_makeDiff_Results_List{l}, err
}

func (s VCS_makeDiff_Results_List) At(i int) VCS_makeDiff_Results {
	return VCS_makeDiff_Results{s.List.Struct(i)}
}

func (s VCS_makeDiff_Results_List) Set(i int, v VCS_makeDiff_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Results_List) String() string {
	str, _ := text.MarshalList(0xd7ef486de484610d, s.List)
	return str
}

// VCS_makeDiff_Results_Promise is a wrapper for a VCS_makeDiff_Results promised by a client call.
type VCS_makeDiff_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Results_Promise) Struct() (VCS_makeDiff_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Results{s}, err
}

func (p VCS_makeDiff_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_sync_Params struct{ capnp.Struct }

// VCS_sync_Params_TypeID is the unique identifier for the type VCS_sync_Params.
const VCS_sync_Params_TypeID = 0xb05bd83a34de71b7

func NewVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func NewRootVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func ReadRootVCS_sync_Params(msg *capnp.Message) (VCS_sync_Params, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Params{root.Struct()}, err
}

func (s VCS_sync_Params) String() string {
	str, _ := text.Marshal(0xb05bd83a34de71b7, s.Struct)
	return str
}

func (s VCS_sync_Params) WithWhom() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_sync_Params) HasWithWhom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Params) WithWhomBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_sync_Params) SetWithWhom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_sync_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_sync_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_sync_Params_List is a list of VCS_sync_Params.
type VCS_sync_Params_List struct{ capnp.List }

// NewVCS_sync_Params creates a new list of VCS_sync_Params.
func NewVCS_sync_Params_List(s *capnp.Segment, sz int32) (VCS_sync_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_sync_Params_List{l}, err
}

func (s VCS_sync_Params_List) At(i int) VCS_sync_Params { return VCS_sync_Params{s.List.Struct(i)} }

func (s VCS_sync_Params_List) Set(i int, v VCS_sync_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Params_List) String() string {
	str, _ := text.MarshalList(0xb05bd83a34de71b7, s.List)
	return str
}

// VCS_sync_Params_Promise is a wrapper for a VCS_sync_Params promised by a client call.
type VCS_sync_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Params_Promise) Struct() (VCS_sync_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Params{s}, err
}

type VCS_sync_Results struct{ capnp.Struct }

// VCS_sync_Results_TypeID is the unique identifier for the type VCS_sync_Results.
const VCS_sync_Results_TypeID = 0xfa04b4272d0ffcd9

func NewVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_sync_Results{st}, err
}

func NewRootVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_sync_Results{st}, err
}

func ReadRootVCS_sync_Results(msg *capnp.Message) (VCS_sync_Results, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Results{root.Struct()}, err
}

func (s VCS_sync_Results) String() string {
	str, _ := text.Marshal(0xfa04b4272d0ffcd9, s.Struct)
	return str
}

// VCS_sync_Results_List is a list of VCS_sync_Results.
type VCS_sync_Results_List struct{ capnp.List }

// NewVCS_sync_Results creates a new list of VCS_sync_Results.
func NewVCS_sync_Results_List(s *capnp.Segment, sz int32) (VCS_sync_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_sync_Results_List{l}, err
}

func (s VCS_sync_Results_List) At(i int) VCS_sync_Results { return VCS_sync_Results{s.List.Struct(i)} }

func (s VCS_sync_Results_List) Set(i int, v VCS_sync_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Results_List) String() string {
	str, _ := text.MarshalList(0xfa04b4272d0ffcd9, s.List)
	return str
}

// VCS_sync_Results_Promise is a wrapper for a VCS_sync_Results promised by a client call.
type VCS_sync_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Results_Promise) Struct() (VCS_sync_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Results{s}, err
}

type VCS_fetch_Params struct{ capnp.Struct }

// VCS_fetch_Params_TypeID is the unique identifier for the type VCS_fetch_Params.
const VCS_fetch_Params_TypeID = 0xaff62edfdbfe53d0

func NewVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func NewRootVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func ReadRootVCS_fetch_Params(msg *capnp.Message) (VCS_fetch_Params, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Params{root.Struct()}, err
}

func (s VCS_fetch_Params) String() string {
	str, _ := text.Marshal(0xaff62edfdbfe53d0, s.Struct)
	return str
}

func (s VCS_fetch_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_fetch_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_fetch_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_fetch_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_fetch_Params_List is a list of VCS_fetch_Params.
type VCS_fetch_Params_List struct{ capnp.List }

// NewVCS_fetch_Params creates a new list of VCS_fetch_Params.
func NewVCS_fetch_Params_List(s *capnp.Segment, sz int32) (VCS_fetch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_fetch_Params_List{l}, err
}

func (s VCS_fetch_Params_List) At(i int) VCS_fetch_Params { return VCS_fetch_Params{s.List.Struct(i)} }

func (s VCS_fetch_Params_List) Set(i int, v VCS_fetch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Params_List) String() string {
	str, _ := text.MarshalList(0xaff62edfdbfe53d0, s.List)
	return str
}

// VCS_fetch_Params_Promise is a wrapper for a VCS_fetch_Params promised by a client call.
type VCS_fetch_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Params_Promise) Struct() (VCS_fetch_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Params{s}, err
}

type VCS_fetch_Results struct{ capnp.Struct }

// VCS_fetch_Results_TypeID is the unique identifier for the type VCS_fetch_Results.
const VCS_fetch_Results_TypeID = 0xb262e0d6c2474d9c

func NewVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func NewRootVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func ReadRootVCS_fetch_Results(msg *capnp.Message) (VCS_fetch_Results, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Results{root.Struct()}, err
}

func (s VCS_fetch_Results) String() string {
	str, _ := text.Marshal(0xb262e0d6c2474d9c, s.Struct)
	return str
}

// VCS_fetch_Results_List is a list of VCS_fetch_Results.
type VCS_fetch_Results_List struct{ capnp.List }

// NewVCS_fetch_Results creates a new list of VCS_fetch_Results.
func NewVCS_fetch_Results_List(s *capnp.Segment, sz int32) (VCS_fetch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_fetch_Results_List{l}, err
}

func (s VCS_fetch_Results_List) At(i int) VCS_fetch_Results {
	return VCS_fetch_Results{s.List.Struct(i)}
}

func (s VCS_fetch_Results_List) Set(i int, v VCS_fetch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Results_List) String() string {
	str, _ := text.MarshalList(0xb262e0d6c2474d9c, s.List)
	return str
}

// VCS_fetch_Results_Promise is a wrapper for a VCS_fetch_Results promised by a client call.
type VCS_fetch_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Results_Promise) Struct() (VCS_fetch_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Results{s}, err
}

type Meta struct{ Client capnp.Client }

// Meta_TypeID is the unique identifier for the type Meta.
const Meta_TypeID = 0x83e6cb306e77e311

func (c Meta) Quit(ctx context.Context, params func(Meta_quit_Params) error, opts ...capnp.CallOption) Meta_quit_Results_Promise {
	if c.Client == nil {
		return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_quit_Params{Struct: s}) }
	}
	return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Ping(ctx context.Context, params func(Meta_ping_Params) error, opts ...capnp.CallOption) Meta_ping_Results_Promise {
	if c.Client == nil {
		return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_ping_Params{Struct: s}) }
	}
	return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Init(ctx context.Context, params func(Meta_init_Params) error, opts ...capnp.CallOption) Meta_init_Results_Promise {
	if c.Client == nil {
		return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_init_Params{Struct: s}) }
	}
	return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Mount(ctx context.Context, params func(Meta_mount_Params) error, opts ...capnp.CallOption) Meta_mount_Results_Promise {
	if c.Client == nil {
		return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_mount_Params{Struct: s}) }
	}
	return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Unmount(ctx context.Context, params func(Meta_unmount_Params) error, opts ...capnp.CallOption) Meta_unmount_Results_Promise {
	if c.Client == nil {
		return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_unmount_Params{Struct: s}) }
	}
	return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigGet(ctx context.Context, params func(Meta_configGet_Params) error, opts ...capnp.CallOption) Meta_configGet_Results_Promise {
	if c.Client == nil {
		return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configGet_Params{Struct: s}) }
	}
	return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigSet(ctx context.Context, params func(Meta_configSet_Params) error, opts ...capnp.CallOption) Meta_configSet_Results_Promise {
	if c.Client == nil {
		return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configSet_Params{Struct: s}) }
	}
	return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigAll(ctx context.Context, params func(Meta_configAll_Params) error, opts ...capnp.CallOption) Meta_configAll_Results_Promise {
	if c.Client == nil {
		return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configAll_Params{Struct: s}) }
	}
	return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteAdd(ctx context.Context, params func(Meta_remoteAdd_Params) error, opts ...capnp.CallOption) Meta_remoteAdd_Results_Promise {
	if c.Client == nil {
		return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteAdd_Params{Struct: s}) }
	}
	return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteRm(ctx context.Context, params func(Meta_remoteRm_Params) error, opts ...capnp.CallOption) Meta_remoteRm_Results_Promise {
	if c.Client == nil {
		return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteRm_Params{Struct: s}) }
	}
	return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteLs(ctx context.Context, params func(Meta_remoteLs_Params) error, opts ...capnp.CallOption) Meta_remoteLs_Results_Promise {
	if c.Client == nil {
		return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteLs_Params{Struct: s}) }
	}
	return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteSave(ctx context.Context, params func(Meta_remoteSave_Params) error, opts ...capnp.CallOption) Meta_remoteSave_Results_Promise {
	if c.Client == nil {
		return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteSave_Params{Struct: s}) }
	}
	return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemotePing(ctx context.Context, params func(Meta_remotePing_Params) error, opts ...capnp.CallOption) Meta_remotePing_Results_Promise {
	if c.Client == nil {
		return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remotePing_Params{Struct: s}) }
	}
	return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteClear(ctx context.Context, params func(Meta_remoteClear_Params) error, opts ...capnp.CallOption) Meta_remoteClear_Results_Promise {
	if c.Client == nil {
		return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteClear_Params{Struct: s}) }
	}
	return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) NetLocate(ctx context.Context, params func(Meta_netLocate_Params) error, opts ...capnp.CallOption) Meta_netLocate_Results_Promise {
	if c.Client == nil {
		return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocate_Params{Struct: s}) }
	}
	return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) NetLocateNext(ctx context.Context, params func(Meta_netLocateNext_Params) error, opts ...capnp.CallOption) Meta_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocateNext_Params{Struct: s}) }
	}
	return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Whoami(ctx context.Context, params func(Meta_whoami_Params) error, opts ...capnp.CallOption) Meta_whoami_Results_Promise {
	if c.Client == nil {
		return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_whoami_Params{Struct: s}) }
	}
	return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Become(ctx context.Context, params func(Meta_become_Params) error, opts ...capnp.CallOption) Meta_become_Results_Promise {
	if c.Client == nil {
		return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_become_Params{Struct: s}) }
	}
	return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Connect(ctx context.Context, params func(Meta_connect_Params) error, opts ...capnp.CallOption) Meta_connect_Results_Promise {
	if c.Client == nil {
		return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_connect_Params{Struct: s}) }
	}
	return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Disconnect(ctx context.Context, params func(Meta_disconnect_Params) error, opts ...capnp.CallOption) Meta_disconnect_Results_Promise {
	if c.Client == nil {
		return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_disconnect_Params{Struct: s}) }
	}
	return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) OnlinePeers(ctx context.Context, params func(Meta_onlinePeers_Params) error, opts ...capnp.CallOption) Meta_onlinePeers_Results_Promise {
	if c.Client == nil {
		return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_onlinePeers_Params{Struct: s}) }
	}
	return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Meta_Server interface {
	Quit(Meta_quit) error

	Ping(Meta_ping) error

	Init(Meta_init) error

	Mount(Meta_mount) error

	Unmount(Meta_unmount) error

	ConfigGet(Meta_configGet) error

	ConfigSet(Meta_configSet) error

	ConfigAll(Meta_configAll) error

	RemoteAdd(Meta_remoteAdd) error

	RemoteRm(Meta_remoteRm) error

	RemoteLs(Meta_remoteLs) error

	RemoteSave(Meta_remoteSave) error

	RemotePing(Meta_remotePing) error

	RemoteClear(Meta_remoteClear) error

	NetLocate(Meta_netLocate) error

	NetLocateNext(Meta_netLocateNext) error

	Whoami(Meta_whoami) error

	Become(Meta_become) error

	Connect(Meta_connect) error

	Disconnect(Meta_disconnect) error

	OnlinePeers(Meta_onlinePeers) error
}

func Meta_ServerToClient(s Meta_Server) Meta {
	c, _ := s.(server.Closer)
	return Meta{Client: server.New(Meta_Methods(nil, s), c)}
}

func Meta_Methods(methods []server.Method, s Meta_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 21)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_quit{c, opts, Meta_quit_Params{Struct: p}, Meta_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_ping{c, opts, Meta_ping_Params{Struct: p}, Meta_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_init{c, opts, Meta_init_Params{Struct: p}, Meta_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_mount{c, opts, Meta_mount_Params{Struct: p}, Meta_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_unmount{c, opts, Meta_unmount_Params{Struct: p}, Meta_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configGet{c, opts, Meta_configGet_Params{Struct: p}, Meta_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configSet{c, opts, Meta_configSet_Params{Struct: p}, Meta_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configAll{c, opts, Meta_configAll_Params{Struct: p}, Meta_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteAdd{c, opts, Meta_remoteAdd_Params{Struct: p}, Meta_remoteAdd_Results{Struct: r}}
			return s.RemoteAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteRm{c, opts, Meta_remoteRm_Params{Struct: p}, Meta_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteLs{c, opts, Meta_remoteLs_Params{Struct: p}, Meta_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteSave{c, opts, Meta_remoteSave_Params{Struct: p}, Meta_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remotePing{c, opts, Meta_remotePing_Params{Struct: p}, Meta_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteClear{c, opts, Meta_remoteClear_Params{Struct: p}, Meta_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocate{c, opts, Meta_netLocate_Params{Struct: p}, Meta_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocateNext{c, opts, Meta_netLocateNext_Params{Struct: p}, Meta_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_whoami{c, opts, Meta_whoami_Params{Struct: p}, Meta_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_become{c, opts, Meta_become_Params{Struct: p}, Meta_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_connect{c, opts, Meta_connect_Params{Struct: p}, Meta_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_disconnect{c, opts, Meta_disconnect_Params{Struct: p}, Meta_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_onlinePeers{c, opts, Meta_onlinePeers_Params{Struct: p}, Meta_onlinePeers_Results{Struct: r}}
			return s.OnlinePeers(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Meta_quit holds the arguments for a server call to Meta.quit.
type Meta_quit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_quit_Params
	Results Meta_quit_Results
}

// Meta_ping holds the arguments for a server call to Meta.ping.
type Meta_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_ping_Params
	Results Meta_ping_Results
}

// Meta_init holds the arguments for a server call to Meta.init.
type Meta_init struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_init_Params
	Results Meta_init_Results
}

// Meta_mount holds the arguments for a server call to Meta.mount.
type Meta_mount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_mount_Params
	Results Meta_mount_Results
}

// Meta_unmount holds the arguments for a server call to Meta.unmount.
type Meta_unmount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_unmount_Params
	Results Meta_unmount_Results
}

// Meta_configGet holds the arguments for a server call to Meta.configGet.
type Meta_configGet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configGet_Params
	Results Meta_configGet_Results
}

// Meta_configSet holds the arguments for a server call to Meta.configSet.
type Meta_configSet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configSet_Params
	Results Meta_configSet_Results
}

// Meta_configAll holds the arguments for a server call to Meta.configAll.
type Meta_configAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configAll_Params
	Results Meta_configAll_Results
}

// Meta_remoteAdd holds the arguments for a server call to Meta.remoteAdd.
type Meta_remoteAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteAdd_Params
	Results Meta_remoteAdd_Results
}

// Meta_remoteRm holds the arguments for a server call to Meta.remoteRm.
type Meta_remoteRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteRm_Params
	Results Meta_remoteRm_Results
}

// Meta_remoteLs holds the arguments for a server call to Meta.remoteLs.
type Meta_remoteLs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteLs_Params
	Results Meta_remoteLs_Results
}

// Meta_remoteSave holds the arguments for a server call to Meta.remoteSave.
type Meta_remoteSave struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteSave_Params
	Results Meta_remoteSave_Results
}

// Meta_remotePing holds the arguments for a server call to Meta.remotePing.
type Meta_remotePing struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remotePing_Params
	Results Meta_remotePing_Results
}

// Meta_remoteClear holds the arguments for a server call to Meta.remoteClear.
type Meta_remoteClear struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteClear_Params
	Results Meta_remoteClear_Results
}

// Meta_netLocate holds the arguments for a server call to Meta.netLocate.
type Meta_netLocate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_netLocate_Params
	Results Meta_netLocate_Results
}

// Meta_netLocateNext holds the arguments for a server call to Meta.netLocateNext.
type Meta_netLocateNext struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_netLocateNext_Params
	Results Meta_netLocateNext_Results
}

// Meta_whoami holds the arguments for a server call to Meta.whoami.
type Meta_whoami struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_whoami_Params
	Results Meta_whoami_Results
}

// Meta_become holds the arguments for a server call to Meta.become.
type Meta_become struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_become_Params
	Results Meta_become_Results
}

// Meta_connect holds the arguments for a server call to Meta.connect.
type Meta_connect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_connect_Params
	Results Meta_connect_Results
}

// Meta_disconnect holds the arguments for a server call to Meta.disconnect.
type Meta_disconnect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_disconnect_Params
	Results Meta_disconnect_Results
}

// Meta_onlinePeers holds the arguments for a server call to Meta.onlinePeers.
type Meta_onlinePeers struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_onlinePeers_Params
	Results Meta_onlinePeers_Results
}

type Meta_quit_Params struct{ capnp.Struct }

// Meta_quit_Params_TypeID is the unique identifier for the type Meta_quit_Params.
const Meta_quit_Params_TypeID = 0xdf3a2e83d0d533b3

func NewMeta_quit_Params(s *capnp.Segment) (Meta_quit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Params{st}, err
}

func NewRootMeta_quit_Params(s *capnp.Segment) (Meta_quit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Params{st}, err
}

func ReadRootMeta_quit_Params(msg *capnp.Message) (Meta_quit_Params, error) {
	root, err := msg.RootPtr()
	return Meta_quit_Params{root.Struct()}, err
}

func (s Meta_quit_Params) String() string {
	str, _ := text.Marshal(0xdf3a2e83d0d533b3, s.Struct)
	return str
}

// Meta_quit_Params_List is a list of Meta_quit_Params.
type Meta_quit_Params_List struct{ capnp.List }

// NewMeta_quit_Params creates a new list of Meta_quit_Params.
func NewMeta_quit_Params_List(s *capnp.Segment, sz int32) (Meta_quit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_quit_Params_List{l}, err
}

func (s Meta_quit_Params_List) At(i int) Meta_quit_Params { return Meta_quit_Params{s.List.Struct(i)} }

func (s Meta_quit_Params_List) Set(i int, v Meta_quit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_quit_Params_List) String() string {
	str, _ := text.MarshalList(0xdf3a2e83d0d533b3, s.List)
	return str
}

// Meta_quit_Params_Promise is a wrapper for a Meta_quit_Params promised by a client call.
type Meta_quit_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_quit_Params_Promise) Struct() (Meta_quit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_quit_Params{s}, err
}

type Meta_quit_Results struct{ capnp.Struct }

// Meta_quit_Results_TypeID is the unique identifier for the type Meta_quit_Results.
const Meta_quit_Results_TypeID = 0xe1dd2f0c85965fd6

func NewMeta_quit_Results(s *capnp.Segment) (Meta_quit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Results{st}, err
}

func NewRootMeta_quit_Results(s *capnp.Segment) (Meta_quit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Results{st}, err
}

func ReadRootMeta_quit_Results(msg *capnp.Message) (Meta_quit_Results, error) {
	root, err := msg.RootPtr()
	return Meta_quit_Results{root.Struct()}, err
}

func (s Meta_quit_Results) String() string {
	str, _ := text.Marshal(0xe1dd2f0c85965fd6, s.Struct)
	return str
}

// Meta_quit_Results_List is a list of Meta_quit_Results.
type Meta_quit_Results_List struct{ capnp.List }

// NewMeta_quit_Results creates a new list of Meta_quit_Results.
func NewMeta_quit_Results_List(s *capnp.Segment, sz int32) (Meta_quit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_quit_Results_List{l}, err
}

func (s Meta_quit_Results_List) At(i int) Meta_quit_Results {
	return Meta_quit_Results{s.List.Struct(i)}
}

func (s Meta_quit_Results_List) Set(i int, v Meta_quit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_quit_Results_List) String() string {
	str, _ := text.MarshalList(0xe1dd2f0c85965fd6, s.List)
	return str
}

// Meta_quit_Results_Promise is a wrapper for a Meta_quit_Results promised by a client call.
type Meta_quit_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_quit_Results_Promise) Struct() (Meta_quit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_quit_Results{s}, err
}

type Meta_ping_Params struct{ capnp.Struct }

// Meta_ping_Params_TypeID is the unique identifier for the type Meta_ping_Params.
const Meta_ping_Params_TypeID = 0xc9ac448a01179aec

func NewMeta_ping_Params(s *capnp.Segment) (Meta_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_ping_Params{st}, err
}

func NewRootMeta_ping_Params(s *capnp.Segment) (Meta_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_ping_Params{st}, err
}

func ReadRootMeta_ping_Params(msg *capnp.Message) (Meta_ping_Params, error) {
	root, err := msg.RootPtr()
	return Meta_ping_Params{root.Struct()}, err
}

func (s Meta_ping_Params) String() string {
	str, _ := text.Marshal(0xc9ac448a01179aec, s.Struct)
	return str
}

// Meta_ping_Params_List is a list of Meta_ping_Params.
type Meta_ping_Params_List struct{ capnp.List }

// NewMeta_ping_Params creates a new list of Meta_ping_Params.
func NewMeta_ping_Params_List(s *capnp.Segment, sz int32) (Meta_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_ping_Params_List{l}, err
}

func (s Meta_ping_Params_List) At(i int) Meta_ping_Params { return Meta_ping_Params{s.List.Struct(i)} }

func (s Meta_ping_Params_List) Set(i int, v Meta_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_ping_Params_List) String() string {
	str, _ := text.MarshalList(0xc9ac448a01179aec, s.List)
	return str
}

// Meta_ping_Params_Promise is a wrapper for a Meta_ping_Params promised by a client call.
type Meta_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_ping_Params_Promise) Struct() (Meta_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_ping_Params{s}, err
}

type Meta_ping_Results struct{ capnp.Struct }

// Meta_ping_Results_TypeID is the unique identifier for the type Meta_ping_Results.
const Meta_ping_Results_TypeID = 0xffd34f15ec608676

func NewMeta_ping_Results(s *capnp.Segment) (Meta_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_ping_Results{st}, err
}

func NewRootMeta_ping_Results(s *capnp.Segment) (Meta_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_ping_Results{st}, err
}

func ReadRootMeta_ping_Results(msg *capnp.Message) (Meta_ping_Results, error) {
	root, err := msg.RootPtr()
	return Meta_ping_Results{root.Struct()}, err
}

func (s Meta_ping_Results) String() string {
	str, _ := text.Marshal(0xffd34f15ec608676, s.Struct)
	return str
}

func (s Meta_ping_Results) Reply() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_ping_Results) HasReply() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_ping_Results) ReplyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_ping_Results) SetReply(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_ping_Results_List is a list of Meta_ping_Results.
type Meta_ping_Results_List struct{ capnp.List }

// NewMeta_ping_Results creates a new list of Meta_ping_Results.
func NewMeta_ping_Results_List(s *capnp.Segment, sz int32) (Meta_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_ping_Results_List{l}, err
}

func (s Meta_ping_Results_List) At(i int) Meta_ping_Results {
	return Meta_ping_Results{s.List.Struct(i)}
}

func (s Meta_ping_Results_List) Set(i int, v Meta_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_ping_Results_List) String() string {
	str, _ := text.MarshalList(0xffd34f15ec608676, s.List)
	return str
}

// Meta_ping_Results_Promise is a wrapper for a Meta_ping_Results promised by a client call.
type Meta_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_ping_Results_Promise) Struct() (Meta_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_ping_Results{s}, err
}

type Meta_init_Params struct{ capnp.Struct }

// Meta_init_Params_TypeID is the unique identifier for the type Meta_init_Params.
const Meta_init_Params_TypeID = 0xed03ac5ef50453fb

func NewMeta_init_Params(s *capnp.Segment) (Meta_init_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Meta_init_Params{st}, err
}

func NewRootMeta_init_Params(s *capnp.Segment) (Meta_init_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Meta_init_Params{st}, err
}

func ReadRootMeta_init_Params(msg *capnp.Message) (Meta_init_Params, error) {
	root, err := msg.RootPtr()
	return Meta_init_Params{root.Struct()}, err
}

func (s Meta_init_Params) String() string {
	str, _ := text.Marshal(0xed03ac5ef50453fb, s.Struct)
	return str
}

func (s Meta_init_Params) BasePath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_init_Params) HasBasePath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) BasePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetBasePath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_init_Params) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Meta_init_Params) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Meta_init_Params) Backend() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Meta_init_Params) HasBackend() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) BackendBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetBackend(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Meta_init_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Meta_init_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetPassword(v string) error {
	return s.Struct.SetText(3, v)
}

// Meta_init_Params_List is a list of Meta_init_Params.
type Meta_init_Params_List struct{ capnp.List }

// NewMeta_init_Params creates a new list of Meta_init_Params.
func NewMeta_init_Params_List(s *capnp.Segment, sz int32) (Meta_init_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Meta_init_Params_List{l}, err
}

func (s Meta_init_Params_List) At(i int) Meta_init_Params { return Meta_init_Params{s.List.Struct(i)} }

func (s Meta_init_Params_List) Set(i int, v Meta_init_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_init_Params_List) String() string {
	str, _ := text.MarshalList(0xed03ac5ef50453fb, s.List)
	return str
}

// Meta_init_Params_Promise is a wrapper for a Meta_init_Params promised by a client call.
type Meta_init_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_init_Params_Promise) Struct() (Meta_init_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_init_Params{s}, err
}

type Meta_init_Results struct{ capnp.Struct }

// Meta_init_Results_TypeID is the unique identifier for the type Meta_init_Results.
const Meta_init_Results_TypeID = 0xe826e800c318a7c4

func NewMeta_init_Results(s *capnp.Segment) (Meta_init_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_init_Results{st}, err
}

func NewRootMeta_init_Results(s *capnp.Segment) (Meta_init_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_init_Results{st}, err
}

func ReadRootMeta_init_Results(msg *capnp.Message) (Meta_init_Results, error) {
	root, err := msg.RootPtr()
	return Meta_init_Results{root.Struct()}, err
}

func (s Meta_init_Results) String() string {
	str, _ := text.Marshal(0xe826e800c318a7c4, s.Struct)
	return str
}

// Meta_init_Results_List is a list of Meta_init_Results.
type Meta_init_Results_List struct{ capnp.List }

// NewMeta_init_Results creates a new list of Meta_init_Results.
func NewMeta_init_Results_List(s *capnp.Segment, sz int32) (Meta_init_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_init_Results_List{l}, err
}

func (s Meta_init_Results_List) At(i int) Meta_init_Results {
	return Meta_init_Results{s.List.Struct(i)}
}

func (s Meta_init_Results_List) Set(i int, v Meta_init_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_init_Results_List) String() string {
	str, _ := text.MarshalList(0xe826e800c318a7c4, s.List)
	return str
}

// Meta_init_Results_Promise is a wrapper for a Meta_init_Results promised by a client call.
type Meta_init_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_init_Results_Promise) Struct() (Meta_init_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_init_Results{s}, err
}

type Meta_mount_Params struct{ capnp.Struct }

// Meta_mount_Params_TypeID is the unique identifier for the type Meta_mount_Params.
const Meta_mount_Params_TypeID = 0x9f647c7028225a97

func NewMeta_mount_Params(s *capnp.Segment) (Meta_mount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_mount_Params{st}, err
}

func NewRootMeta_mount_Params(s *capnp.Segment) (Meta_mount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_mount_Params{st}, err
}

func ReadRootMeta_mount_Params(msg *capnp.Message) (Meta_mount_Params, error) {
	root, err := msg.RootPtr()
	return Meta_mount_Params{root.Struct()}, err
}

func (s Meta_mount_Params) String() string {
	str, _ := text.Marshal(0x9f647c7028225a97, s.Struct)
	return str
}

func (s Meta_mount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_mount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_mount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_mount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_mount_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(1)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Meta_mount_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_mount_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Meta_mount_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Meta_mount_Params_List is a list of Meta_mount_Params.
type Meta_mount_Params_List struct{ capnp.List }

// NewMeta_mount_Params creates a new list of Meta_mount_Params.
func NewMeta_mount_Params_List(s *capnp.Segment, sz int32) (Meta_mount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Meta_mount_Params_List{l}, err
}

func (s Meta_mount_Params_List) At(i int) Meta_mount_Params {
	return Meta_mount_Params{s.List.Struct(i)}
}

func (s Meta_mount_Params_List) Set(i int, v Meta_mount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_mount_Params_List) String() string {
	str, _ := text.MarshalList(0x9f647c7028225a97, s.List)
	return str
}

// Meta_mount_Params_Promise is a wrapper for a Meta_mount_Params promised by a client call.
type Meta_mount_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_mount_Params_Promise) Struct() (Meta_mount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_mount_Params{s}, err
}

func (p Meta_mount_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Meta_mount_Results struct{ capnp.Struct }

// Meta_mount_Results_TypeID is the unique identifier for the type Meta_mount_Results.
const Meta_mount_Results_TypeID = 0x9ec3cfd8ff4bae06

func NewMeta_mount_Results(s *capnp.Segment) (Meta_mount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_mount_Results{st}, err
}

func NewRootMeta_mount_Results(s *capnp.Segment) (Meta_mount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_mount_Results{st}, err
}

func ReadRootMeta_mount_Results(msg *capnp.Message) (Meta_mount_Results, error) {
	root, err := msg.RootPtr()
	return Meta_mount_Results{root.Struct()}, err
}

func (s Meta_mount_Results) String() string {
	str, _ := text.Marshal(0x9ec3cfd8ff4bae06, s.Struct)
	return str
}

// Meta_mount_Results_List is a list of Meta_mount_Results.
type Meta_mount_Results_List struct{ capnp.List }

// NewMeta_mount_Results creates a new list of Meta_mount_Results.
func NewMeta_mount_Results_List(s *capnp.Segment, sz int32) (Meta_mount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_mount_Results_List{l}, err
}

func (s Meta_mount_Results_List) At(i int) Meta_mount_Results {
	return Meta_mount_Results{s.List.Struct(i)}
}

func (s Meta_mount_Results_List) Set(i int, v Meta_mount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_mount_Results_List) String() string {
	str, _ := text.MarshalList(0x9ec3cfd8ff4bae06, s.List)
	return str
}

// Meta_mount_Results_Promise is a wrapper for a Meta_mount_Results promised by a client call.
type Meta_mount_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_mount_Results_Promise) Struct() (Meta_mount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_mount_Results{s}, err
}

type Meta_unmount_Params struct{ capnp.Struct }

// Meta_unmount_Params_TypeID is the unique identifier for the type Meta_unmount_Params.
const Meta_unmount_Params_TypeID = 0xd0b0c690855bac45

func NewMeta_unmount_Params(s *capnp.Segment) (Meta_unmount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_unmount_Params{st}, err
}

func NewRootMeta_unmount_Params(s *capnp.Segment) (Meta_unmount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_unmount_Params{st}, err
}

func ReadRootMeta_unmount_Params(msg *capnp.Message) (Meta_unmount_Params, error) {
	root, err := msg.RootPtr()
	return Meta_unmount_Params{root.Struct()}, err
}

func (s Meta_unmount_Params) String() string {
	str, _ := text.Marshal(0xd0b0c690855bac45, s.Struct)
	return str
}

func (s Meta_unmount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_unmount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_unmount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_unmount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_unmount_Params_List is a list of Meta_unmount_Params.
type Meta_unmount_Params_List struct{ capnp.List }

// NewMeta_unmount_Params creates a new list of Meta_unmount_Params.
func NewMeta_unmount_Params_List(s *capnp.Segment, sz int32) (Meta_unmount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_unmount_Params_List{l}, err
}

func (s Meta_unmount_Params_List) At(i int) Meta_unmount_Params {
	return Meta_unmount_Params{s.List.Struct(i)}
}

func (s Meta_unmount_Params_List) Set(i int, v Meta_unmount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_unmount_Params_List) String() string {
	str, _ := text.MarshalList(0xd0b0c690855bac45, s.List)
	return str
}

// Meta_unmount_Params_Promise is a wrapper for a Meta_unmount_Params promised by a client call.
type Meta_unmount_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_unmount_Params_Promise) Struct() (Meta_unmount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_unmount_Params{s}, err
}

type Meta_unmount_Results struct{ capnp.Struct }

// Meta_unmount_Results_TypeID is the unique identifier for the type Meta_unmount_Results.
const Meta_unmount_Results_TypeID = 0xe275355b4989aaee

func NewMeta_unmount_Results(s *capnp.Segment) (Meta_unmount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_unmount_Results{st}, err
}

func NewRootMeta_unmount_Results(s *capnp.Segment) (Meta_unmount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_unmount_Results{st}, err
}

func ReadRootMeta_unmount_Results(msg *capnp.Message) (Meta_unmount_Results, error) {
	root, err := msg.RootPtr()
	return Meta_unmount_Results{root.Struct()}, err
}

func (s Meta_unmount_Results) String() string {
	str, _ := text.Marshal(0xe275355b4989aaee, s.Struct)
	return str
}

// Meta_unmount_Results_List is a list of Meta_unmount_Results.
type Meta_unmount_Results_List struct{ capnp.List }

// NewMeta_unmount_Results creates a new list of Meta_unmount_Results.
func NewMeta_unmount_Results_List(s *capnp.Segment, sz int32) (Meta_unmount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_unmount_Results_List{l}, err
}

func (s Meta_unmount_Results_List) At(i int) Meta_unmount_Results {
	return Meta_unmount_Results{s.List.Struct(i)}
}

func (s Meta_unmount_Results_List) Set(i int, v Meta_unmount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_unmount_Results_List) String() string {
	str, _ := text.MarshalList(0xe275355b4989aaee, s.List)
	return str
}

// Meta_unmount_Results_Promise is a wrapper for a Meta_unmount_Results promised by a client call.
type Meta_unmount_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_unmount_Results_Promise) Struct() (Meta_unmount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_unmount_Results{s}, err
}

type Meta_configGet_Params struct{ capnp.Struct }

// Meta_configGet_Params_TypeID is the unique identifier for the type Meta_configGet_Params.
const Meta_configGet_Params_TypeID = 0x8c8ac84e843e98c6

func NewMeta_configGet_Params(s *capnp.Segment) (Meta_configGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Params{st}, err
}

func NewRootMeta_configGet_Params(s *capnp.Segment) (Meta_configGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Params{st}, err
}

func ReadRootMeta_configGet_Params(msg *capnp.Message) (Meta_configGet_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configGet_Params{root.Struct()}, err
}

func (s Meta_configGet_Params) String() string {
	str, _ := text.Marshal(0x8c8ac84e843e98c6, s.Struct)
	return str
}

func (s Meta_configGet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configGet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configGet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configGet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_configGet_Params_List is a list of Meta_configGet_Params.
type Meta_configGet_Params_List struct{ capnp.List }

// NewMeta_configGet_Params creates a new list of Meta_configGet_Params.
func NewMeta_configGet_Params_List(s *capnp.Segment, sz int32) (Meta_configGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configGet_Params_List{l}, err
}

func (s Meta_configGet_Params_List) At(i int) Meta_configGet_Params {
	return Meta_configGet_Params{s.List.Struct(i)}
}

func (s Meta_configGet_Params_List) Set(i int, v Meta_configGet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configGet_Params_List) String() string {
	str, _ := text.MarshalList(0x8c8ac84e843e98c6, s.List)
	return str
}

// Meta_configGet_Params_Promise is a wrapper for a Meta_configGet_Params promised by a client call.
type Meta_configGet_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configGet_Params_Promise) Struct() (Meta_configGet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configGet_Params{s}, err
}

type Meta_configGet_Results struct{ capnp.Struct }

// Meta_configGet_Results_TypeID is the unique identifier for the type Meta_configGet_Results.
const Meta_configGet_Results_TypeID = 0xfd36e047f496768b

func NewMeta_configGet_Results(s *capnp.Segment) (Meta_configGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Results{st}, err
}

func NewRootMeta_configGet_Results(s *capnp.Segment) (Meta_configGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Results{st}, err
}

func ReadRootMeta_configGet_Results(msg *capnp.Message) (Meta_configGet_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configGet_Results{root.Struct()}, err
}

func (s Meta_configGet_Results) String() string {
	str, _ := text.Marshal(0xfd36e047f496768b, s.Struct)
	return str
}

func (s Meta_configGet_Results) Value() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configGet_Results) HasValue() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configGet_Results) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configGet_Results) SetValue(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_configGet_Results_List is a list of Meta_configGet_Results.
type Meta_configGet_Results_List struct{ capnp.List }

// NewMeta_configGet_Results creates a new list of Meta_configGet_Results.
func NewMeta_configGet_Results_List(s *capnp.Segment, sz int32) (Meta_configGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configGet_Results_List{l}, err
}

func (s Meta_configGet_Results_List) At(i int) Meta_configGet_Results {
	return Meta_configGet_Results{s.List.Struct(i)}
}

func (s Meta_configGet_Results_List) Set(i int, v Meta_configGet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configGet_Results_List) String() string {
	str, _ := text.MarshalList(0xfd36e047f496768b, s.List)
	return str
}

// Meta_configGet_Results_Promise is a wrapper for a Meta_configGet_Results promised by a client call.
type Meta_configGet_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configGet_Results_Promise) Struct() (Meta_configGet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configGet_Results{s}, err
}

type Meta_configSet_Params struct{ capnp.Struct }

// Meta_configSet_Params_TypeID is the unique identifier for the type Meta_configSet_Params.
const Meta_configSet_Params_TypeID = 0x97e9d1c7a00e713e

func NewMeta_configSet_Params(s *capnp.Segment) (Meta_configSet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_configSet_Params{st}, err
}

func NewRootMeta_configSet_Params(s *capnp.Segment) (Meta_configSet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_configSet_Params{st}, err
}

func ReadRootMeta_configSet_Params(msg *capnp.Message) (Meta_configSet_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configSet_Params{root.Struct()}, err
}

func (s Meta_configSet_Params) String() string {
	str, _ := text.Marshal(0x97e9d1c7a00e713e, s.Struct)
	return str
}

func (s Meta_configSet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configSet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configSet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configSet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_configSet_Params) Value() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Meta_configSet_Params) HasValue() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_configSet_Params) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Meta_configSet_Params) SetValue(v string) error {
	return s.Struct.SetText(1, v)
}

// Meta_configSet_Params_List is a list of Meta_configSet_Params.
type Meta_configSet_Params_List struct{ capnp.List }

// NewMeta_configSet_Params creates a new list of Meta_configSet_Params.
func NewMeta_configSet_Params_List(s *capnp.Segment, sz int32) (Meta_configSet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Meta_configSet_Params_List{l}, err
}

func (s Meta_configSet_Params_List) At(i int) Meta_configSet_Params {
	return Meta_configSet_Params{s.List.Struct(i)}
}

func (s Meta_configSet_Params_List) Set(i int, v Meta_configSet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configSet_Params_List) String() string {
	str, _ := text.MarshalList(0x97e9d1c7a00e713e, s.List)
	return str
}

// Meta_configSet_Params_Promise is a wrapper for a Meta_configSet_Params promised by a client call.
type Meta_configSet_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configSet_Params_Promise) Struct() (Meta_configSet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configSet_Params{s}, err
}

type Meta_configSet_Results struct{ capnp.Struct }

// Meta_configSet_Results_TypeID is the unique identifier for the type Meta_configSet_Results.
const Meta_configSet_Results_TypeID = 0xa3b41ad02b8645ed

func NewMeta_configSet_Results(s *capnp.Segment) (Meta_configSet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configSet_Results{st}, err
}

func NewRootMeta_configSet_Results(s *capnp.Segment) (Meta_configSet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configSet_Results{st}, err
}

func ReadRootMeta_configSet_Results(msg *capnp.Message) (Meta_configSet_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configSet_Results{root.Struct()}, err
}

func (s Meta_configSet_Results) String() string {
	str, _ := text.Marshal(0xa3b41ad02b8645ed, s.Struct)
	return str
}

// Meta_configSet_Results_List is a list of Meta_configSet_Results.
type Meta_configSet_Results_List struct{ capnp.List }

// NewMeta_configSet_Results creates a new list of Meta_configSet_Results.
func NewMeta_configSet_Results_List(s *capnp.Segment, sz int32) (Meta_configSet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_configSet_Results_List{l}, err
}

func (s Meta_configSet_Results_List) At(i int) Meta_configSet_Results {
	return Meta_configSet_Results{s.List.Struct(i)}
}

func (s Meta_configSet_Results_List) Set(i int, v Meta_configSet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configSet_Results_List) String() string {
	str, _ := text.MarshalList(0xa3b41ad02b8645ed, s.List)
	return str
}

// Meta_configSet_Results_Promise is a wrapper for a Meta_configSet_Results promised by a client call.
type Meta_configSet_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configSet_Results_Promise) Struct() (Meta_configSet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configSet_Results{s}, err
}

type Meta_configAll_Params struct{ capnp.Struct }

// Meta_configAll_Params_TypeID is the unique identifier for the type Meta_configAll_Params.
const Meta_configAll_Params_TypeID = 0xb4b684abc5f91831

func NewMeta_configAll_Params(s *capnp.Segment) (Meta_configAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configAll_Params{st}, err
}

func NewRootMeta_configAll_Params(s *capnp.Segment) (Meta_configAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configAll_Params{st}, err
}

func ReadRootMeta_configAll_Params(msg *capnp.Message) (Meta_configAll_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configAll_Params{root.Struct()}, err
}

func (s Meta_configAll_Params) String() string {
	str, _ := text.Marshal(0xb4b684abc5f91831, s.Struct)
	return str
}

// Meta_configAll_Params_List is a list of Meta_configAll_Params.
type Meta_configAll_Params_List struct{ capnp.List }

// NewMeta_configAll_Params creates a new list of Meta_configAll_Params.
func NewMeta_configAll_Params_List(s *capnp.Segment, sz int32) (Meta_configAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_configAll_Params_List{l}, err
}

func (s Meta_configAll_Params_List) At(i int) Meta_configAll_Params {
	return Meta_configAll_Params{s.List.Struct(i)}
}

func (s Meta_configAll_Params_List) Set(i int, v Meta_configAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configAll_Params_List) String() string {
	str, _ := text.MarshalList(0xb4b684abc5f91831, s.List)
	return str
}

// Meta_configAll_Params_Promise is a wrapper for a Meta_configAll_Params promised by a client call.
type Meta_configAll_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configAll_Params_Promise) Struct() (Meta_configAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configAll_Params{s}, err
}

type Meta_configAll_Results struct{ capnp.Struct }

// Meta_configAll_Results_TypeID is the unique identifier for the type Meta_configAll_Results.
const Meta_configAll_Results_TypeID = 0x8cdf119f2d20b743

func NewMeta_configAll_Results(s *capnp.Segment) (Meta_configAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configAll_Results{st}, err
}

func NewRootMeta_configAll_Results(s *capnp.Segment) (Meta_configAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configAll_Results{st}, err
}

func ReadRootMeta_configAll_Results(msg *capnp.Message) (Meta_configAll_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configAll_Results{root.Struct()}, err
}

func (s Meta_configAll_Results) String() string {
	str, _ := text.Marshal(0x8cdf119f2d20b743, s.Struct)
	return str
}

func (s Meta_configAll_Results) All() (ConfigPair_List, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigPair_List{List: p.List()}, err
}

func (s Meta_configAll_Results) HasAll() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configAll_Results) SetAll(v ConfigPair_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAll sets the all field to a newly
// allocated ConfigPair_List, preferring placement in s's segment.
func (s Meta_configAll_Results) NewAll(n int32) (ConfigPair_List, error) {
	l, err := NewConfigPair_List(s.Struct.Segment(), n)
	if err != nil {
		return ConfigPair_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_configAll_Results_List is a list of Meta_configAll_Results.
type Meta_configAll_Results_List struct{ capnp.List }

// NewMeta_configAll_Results creates a new list of Meta_configAll_Results.
func NewMeta_configAll_Results_List(s *capnp.Segment, sz int32) (Meta_configAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configAll_Results_List{l}, err
}

func (s Meta_configAll_Results_List) At(i int) Meta_configAll_Results {
	return Meta_configAll_Results{s.List.Struct(i)}
}

func (s Meta_configAll_Results_List) Set(i int, v Meta_configAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configAll_Results_List) String() string {
	str, _ := text.MarshalList(0x8cdf119f2d20b743, s.List)
	return str
}

// Meta_configAll_Results_Promise is a wrapper for a Meta_configAll_Results promised by a client call.
type Meta_configAll_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configAll_Results_Promise) Struct() (Meta_configAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configAll_Results{s}, err
}

type Meta_remoteAdd_Params struct{ capnp.Struct }

// Meta_remoteAdd_Params_TypeID is the unique identifier for the type Meta_remoteAdd_Params.
const Meta_remoteAdd_Params_TypeID = 0xc3b93ffa6fc9f160

func NewMeta_remoteAdd_Params(s *capnp.Segment) (Meta_remoteAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteAdd_Params{st}, err
}

func NewRootMeta_remoteAdd_Params(s *capnp.Segment) (Meta_remoteAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteAdd_Params{st}, err
}

func ReadRootMeta_remoteAdd_Params(msg *capnp.Message) (Meta_remoteAdd_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteAdd_Params{root.Struct()}, err
}

func (s Meta_remoteAdd_Params) String() string {
	str, _ := text.Marshal(0xc3b93ffa6fc9f160, s.Struct)
	return str
}

func (s Meta_remoteAdd_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Meta_remoteAdd_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteAdd_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Meta_remoteAdd_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_remoteAdd_Params_List is a list of Meta_remoteAdd_Params.
type Meta_remoteAdd_Params_List struct{ capnp.List }

// NewMeta_remoteAdd_Params creates a new list of Meta_remoteAdd_Params.
func NewMeta_remoteAdd_Params_List(s *capnp.Segment, sz int32) (Meta_remoteAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteAdd_Params_List{l}, err
}

func (s Meta_remoteAdd_Params_List) At(i int) Meta_remoteAdd_Params {
	return Meta_remoteAdd_Params{s.List.Struct(i)}
}

func (s Meta_remoteAdd_Params_List) Set(i int, v Meta_remoteAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xc3b93ffa6fc9f160, s.List)
	return str
}

// Meta_remoteAdd_Params_Promise is a wrapper for a Meta_remoteAdd_Params promised by a client call.
type Meta_remoteAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteAdd_Params_Promise) Struct() (Meta_remoteAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteAdd_Params{s}, err
}

func (p Meta_remoteAdd_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_remoteAdd_Results struct{ capnp.Struct }

// Meta_remoteAdd_Results_TypeID is the unique identifier for the type Meta_remoteAdd_Results.
const Meta_remoteAdd_Results_TypeID = 0xc920e06b8110e91f

func NewMeta_remoteAdd_Results(s *capnp.Segment) (Meta_remoteAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteAdd_Results{st}, err
}

func NewRootMeta_remoteAdd_Results(s *capnp.Segment) (Meta_remoteAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteAdd_Results{st}, err
}

func ReadRootMeta_remoteAdd_Results(msg *capnp.Message) (Meta_remoteAdd_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteAdd_Results{root.Struct()}, err
}

func (s Meta_remoteAdd_Results) String() string {
	str, _ := text.Marshal(0xc920e06b8110e91f, s.Struct)
	return str
}

// Meta_remoteAdd_Results_List is a list of Meta_remoteAdd_Results.
type Meta_remoteAdd_Results_List struct{ capnp.List }

// NewMeta_remoteAdd_Results creates a new list of Meta_remoteAdd_Results.
func NewMeta_remoteAdd_Results_List(s *capnp.Segment, sz int32) (Meta_remoteAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteAdd_Results_List{l}, err
}

func (s Meta_remoteAdd_Results_List) At(i int) Meta_remoteAdd_Results {
	return Meta_remoteAdd_Results{s.List.Struct(i)}
}

func (s Meta_remoteAdd_Results_List) Set(i int, v Meta_remoteAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xc920e06b8110e91f, s.List)
	return str
}

// Meta_remoteAdd_Results_Promise is a wrapper for a Meta_remoteAdd_Results promised by a client call.
type Meta_remoteAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteAdd_Results_Promise) Struct() (Meta_remoteAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteAdd_Results{s}, err
}

type Meta_remoteRm_Params struct{ capnp.Struct }

// Meta_remoteRm_Params_TypeID is the unique identifier for the type Meta_remoteRm_Params.
const Meta_remoteRm_Params_TypeID = 0xc53b6f91dec2daaa

func NewMeta_remoteRm_Params(s *capnp.Segment) (Meta_remoteRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteRm_Params{st}, err
}

func NewRootMeta_remoteRm_Params(s *capnp.Segment) (Meta_remoteRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteRm_Params{st}, err
}

func ReadRootMeta_remoteRm_Params(msg *capnp.Message) (Meta_remoteRm_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteRm_Params{root.Struct()}, err
}

func (s Meta_remoteRm_Params) String() string {
	str, _ := text.Marshal(0xc53b6f91dec2daaa, s.Struct)
	return str
}

func (s Meta_remoteRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_remoteRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_remoteRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_remoteRm_Params_List is a list of Meta_remoteRm_Params.
type Meta_remoteRm_Params_List struct{ capnp.List }

// NewMeta_remoteRm_Params creates a new list of Meta_remoteRm_Params.
func NewMeta_remoteRm_Params_List(s *capnp.Segment, sz int32) (Meta_remoteRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteRm_Params_List{l}, err
}

func (s Meta_remoteRm_Params_List) At(i int) Meta_remoteRm_Params {
	return Meta_remoteRm_Params{s.List.Struct(i)}
}

func (s Meta_remoteRm_Params_List) Set(i int, v Meta_remoteRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteRm_Params_List) String() string {
	str, _ := text.MarshalList(0xc53b6f91dec2daaa, s.List)
	return str
}

// Meta_remoteRm_Params_Promise is a wrapper for a Meta_remoteRm_Params promised by a client call.
type Meta_remoteRm_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteRm_Params_Promise) Struct() (Meta_remoteRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteRm_Params{s}, err
}

type Meta_remoteRm_Results struct{ capnp.Struct }

// Meta_remoteRm_Results_TypeID is the unique identifier for the type Meta_remoteRm_Results.
const Meta_remoteRm_Results_TypeID = 0x956cdf6b89128744

func NewMeta_remoteRm_Results(s *capnp.Segment) (Meta_remoteRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteRm_Results{st}, err
}

func NewRootMeta_remoteRm_Results(s *capnp.Segment) (Meta_remoteRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteRm_Results{st}, err
}

func ReadRootMeta_remoteRm_Results(msg *capnp.Message) (Meta_remoteRm_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteRm_Results{root.Struct()}, err
}

func (s Meta_remoteRm_Results) String() string {
	str, _ := text.Marshal(0x956cdf6b89128744, s.Struct)
	return str
}

// Meta_remoteRm_Results_List is a list of Meta_remoteRm_Results.
type Meta_remoteRm_Results_List struct{ capnp.List }

// NewMeta_remoteRm_Results creates a new list of Meta_remoteRm_Results.
func NewMeta_remoteRm_Results_List(s *capnp.Segment, sz int32) (Meta_remoteRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteRm_Results_List{l}, err
}

func (s Meta_remoteRm_Results_List) At(i int) Meta_remoteRm_Results {
	return Meta_remoteRm_Results{s.List.Struct(i)}
}

func (s Meta_remoteRm_Results_List) Set(i int, v Meta_remoteRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteRm_Results_List) String() string {
	str, _ := text.MarshalList(0x956cdf6b89128744, s.List)
	return str
}

// Meta_remoteRm_Results_Promise is a wrapper for a Meta_remoteRm_Results promised by a client call.
type Meta_remoteRm_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteRm_Results_Promise) Struct() (Meta_remoteRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteRm_Results{s}, err
}

type Meta_remoteLs_Params struct{ capnp.Struct }

// Meta_remoteLs_Params_TypeID is the unique identifier for the type Meta_remoteLs_Params.
const Meta_remoteLs_Params_TypeID = 0xbb6cabb7ec800819

func NewMeta_remoteLs_Params(s *capnp.Segment) (Meta_remoteLs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteLs_Params{st}, err
}

func NewRootMeta_remoteLs_Params(s *capnp.Segment) (Meta_remoteLs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteLs_Params{st}, err
}

func ReadRootMeta_remoteLs_Params(msg *capnp.Message) (Meta_remoteLs_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteLs_Params{root.Struct()}, err
}

func (s Meta_remoteLs_Params) String() string {
	str, _ := text.Marshal(0xbb6cabb7ec800819, s.Struct)
	return str
}

// Meta_remoteLs_Params_List is a list of Meta_remoteLs_Params.
type Meta_remoteLs_Params_List struct{ capnp.List }

// NewMeta_remoteLs_Params creates a new list of Meta_remoteLs_Params.
func NewMeta_remoteLs_Params_List(s *capnp.Segment, sz int32) (Meta_remoteLs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteLs_Params_List{l}, err
}

func (s Meta_remoteLs_Params_List) At(i int) Meta_remoteLs_Params {
	return Meta_remoteLs_Params{s.List.Struct(i)}
}

func (s Meta_remoteLs_Params_List) Set(i int, v Meta_remoteLs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteLs_Params_List) String() string {
	str, _ := text.MarshalList(0xbb6cabb7ec800819, s.List)
	return str
}

// Meta_remoteLs_Params_Promise is a wrapper for a Meta_remoteLs_Params promised by a client call.
type Meta_remoteLs_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteLs_Params_Promise) Struct() (Meta_remoteLs_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteLs_Params{s}, err
}

type Meta_remoteLs_Results struct{ capnp.Struct }

// Meta_remoteLs_Results_TypeID is the unique identifier for the type Meta_remoteLs_Results.
const Meta_remoteLs_Results_TypeID = 0xe21b4052865cf7c4

func NewMeta_remoteLs_Results(s *capnp.Segment) (Meta_remoteLs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteLs_Results{st}, err
}

func NewRootMeta_remoteLs_Results(s *capnp.Segment) (Meta_remoteLs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteLs_Results{st}, err
}

func ReadRootMeta_remoteLs_Results(msg *capnp.Message) (Meta_remoteLs_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteLs_Results{root.Struct()}, err
}

func (s Meta_remoteLs_Results) String() string {
	str, _ := text.Marshal(0xe21b4052865cf7c4, s.Struct)
	return str
}

func (s Meta_remoteLs_Results) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Meta_remoteLs_Results) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteLs_Results) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Meta_remoteLs_Results) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_remoteLs_Results_List is a list of Meta_remoteLs_Results.
type Meta_remoteLs_Results_List struct{ capnp.List }

// NewMeta_remoteLs_Results creates a new list of Meta_remoteLs_Results.
func NewMeta_remoteLs_Results_List(s *capnp.Segment, sz int32) (Meta_remoteLs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteLs_Results_List{l}, err
}

func (s Meta_remoteLs_Results_List) At(i int) Meta_remoteLs_Results {
	return Meta_remoteLs_Results{s.List.Struct(i)}
}

func (s Meta_remoteLs_Results_List) Set(i int, v Meta_remoteLs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteLs_Results_List) String() string {
	str, _ := text.MarshalList(0xe21b4052865cf7c4, s.List)
	return str
}

// Meta_remoteLs_Results_Promise is a wrapper for a Meta_remoteLs_Results promised by a client call.
type Meta_remoteLs_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteLs_Results_Promise) Struct() (Meta_remoteLs_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteLs_Results{s}, err
}

type Meta_remoteSave_Params struct{ capnp.Struct }

// Meta_remoteSave_Params_TypeID is the unique identifier for the type Meta_remoteSave_Params.
const Meta_remoteSave_Params_TypeID = 0x94ee8cc65b181abe

func NewMeta_remoteSave_Params(s *capnp.Segment) (Meta_remoteSave_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteSave_Params{st}, err
}

func NewRootMeta_remoteSave_Params(s *capnp.Segment) (Meta_remoteSave_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteSave_Params{st}, err
}

func ReadRootMeta_remoteSave_Params(msg *capnp.Message) (Meta_remoteSave_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteSave_Params{root.Struct()}, err
}

func (s Meta_remoteSave_Params) String() string {
	str, _ := text.Marshal(0x94ee8cc65b181abe, s.Struct)
	return str
}

func (s Meta_remoteSave_Params) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Meta_remoteSave_Params) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteSave_Params) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Meta_remoteSave_Params) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_remoteSave_Params_List is a list of Meta_remoteSave_Params.
type Meta_remoteSave_Params_List struct{ capnp.List }

// NewMeta_remoteSave_Params creates a new list of Meta_remoteSave_Params.
func NewMeta_remoteSave_Params_List(s *capnp.Segment, sz int32) (Meta_remoteSave_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteSave_Params_List{l}, err
}

func (s Meta_remoteSave_Params_List) At(i int) Meta_remoteSave_Params {
	return Meta_remoteSave_Params{s.List.Struct(i)}
}

func (s Meta_remoteSave_Params_List) Set(i int, v Meta_remoteSave_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteSave_Params_List) String() string {
	str, _ := text.MarshalList(0x94ee8cc65b181abe, s.List)
	return str
}

// Meta_remoteSave_Params_Promise is a wrapper for a Meta_remoteSave_Params promised by a client call.
type Meta_remoteSave_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteSave_Params_Promise) Struct() (Meta_remoteSave_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteSave_Params{s}, err
}

type Meta_remoteSave_Results struct{ capnp.Struct }

// Meta_remoteSave_Results_TypeID is the unique identifier for the type Meta_remoteSave_Results.
const Meta_remoteSave_Results_TypeID = 0xb05ff814dad43968

func NewMeta_remoteSave_Results(s *capnp.Segment) (Meta_remoteSave_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteSave_Results{st}, err
}

func NewRootMeta_remoteSave_Results(s *capnp.Segment) (Meta_remoteSave_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteSave_Results{st}, err
}

func ReadRootMeta_remoteSave_Results(msg *capnp.Message) (Meta_remoteSave_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteSave_Results{root.Struct()}, err
}

func (s Meta_remoteSave_Results) String() string {
	str, _ := text.Marshal(0xb05ff814dad43968, s.Struct)
	return str
}

// Meta_remoteSave_Results_List is a list of Meta_remoteSave_Results.
type Meta_remoteSave_Results_List struct{ capnp.List }

// NewMeta_remoteSave_Results creates a new list of Meta_remoteSave_Results.
func NewMeta_remoteSave_Results_List(s *capnp.Segment, sz int32) (Meta_remoteSave_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteSave_Results_List{l}, err
}

func (s Meta_remoteSave_Results_List) At(i int) Meta_remoteSave_Results {
	return Meta_remoteSave_Results{s.List.Struct(i)}
}

func (s Meta_remoteSave_Results_List) Set(i int, v Meta_remoteSave_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteSave_Results_List) String() string {
	str, _ := text.MarshalList(0xb05ff814dad43968, s.List)
	return str
}

// Meta_remoteSave_Results_Promise is a wrapper for a Meta_remoteSave_Results promised by a client call.
type Meta_remoteSave_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteSave_Results_Promise) Struct() (Meta_remoteSave_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteSave_Results{s}, err
}

type Meta_remotePing_Params struct{ capnp.Struct }

// Meta_remotePing_Params_TypeID is the unique identifier for the type Meta_remotePing_Params.
const Meta_remotePing_Params_TypeID = 0x81b6b14efe0127c4

func NewMeta_remotePing_Params(s *capnp.Segment) (Meta_remotePing_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remotePing_Params{st}, err
}

func NewRootMeta_remotePing_Params(s *capnp.Segment) (Meta_remotePing_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remotePing_Params{st}, err
}

func ReadRootMeta_remotePing_Params(msg *capnp.Message) (Meta_remotePing_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remotePing_Params{root.Struct()}, err
}

func (s Meta_remotePing_Params) String() string {
	str, _ := text.Marshal(0x81b6b14efe0127c4, s.Struct)
	return str
}

func (s Meta_remotePing_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_remotePing_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remotePing_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_remotePing_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_remotePing_Params_List is a list of Meta_remotePing_Params.
type Meta_remotePing_Params_List struct{ capnp.List }

// NewMeta_remotePing_Params creates a new list of Meta_remotePing_Params.
func NewMeta_remotePing_Params_List(s *capnp.Segment, sz int32) (Meta_remotePing_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remotePing_Params_List{l}, err
}

func (s Meta_remotePing_Params_List) At(i int) Meta_remotePing_Params {
	return Meta_remotePing_Params{s.List.Struct(i)}
}

func (s Meta_remotePing_Params_List) Set(i int, v Meta_remotePing_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remotePing_Params_List) String() string {
	str, _ := text.MarshalList(0x81b6b14efe0127c4, s.List)
	return str
}

// Meta_remotePing_Params_Promise is a wrapper for a Meta_remotePing_Params promised by a client call.
type Meta_remotePing_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remotePing_Params_Promise) Struct() (Meta_remotePing_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remotePing_Params{s}, err
}

type Meta_remotePing_Results struct{ capnp.Struct }

// Meta_remotePing_Results_TypeID is the unique identifier for the type Meta_remotePing_Results.
const Meta_remotePing_Results_TypeID = 0xf9b3f22591273e08

func NewMeta_remotePing_Results(s *capnp.Segment) (Meta_remotePing_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_remotePing_Results{st}, err
}

func NewRootMeta_remotePing_Results(s *capnp.Segment) (Meta_remotePing_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_remotePing_Results{st}, err
}

func ReadRootMeta_remotePing_Results(msg *capnp.Message) (Meta_remotePing_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remotePing_Results{root.Struct()}, err
}

func (s Meta_remotePing_Results) String() string {
	str, _ := text.Marshal(0xf9b3f22591273e08, s.Struct)
	return str
}

func (s Meta_remotePing_Results) Roundtrip() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Meta_remotePing_Results) SetRoundtrip(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Meta_remotePing_Results_List is a list of Meta_remotePing_Results.
type Meta_remotePing_Results_List struct{ capnp.List }

// NewMeta_remotePing_Results creates a new list of Meta_remotePing_Results.
func NewMeta_remotePing_Results_List(s *capnp.Segment, sz int32) (Meta_remotePing_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Meta_remotePing_Results_List{l}, err
}

func (s Meta_remotePing_Results_List) At(i int) Meta_remotePing_Results {
	return Meta_remotePing_Results{s.List.Struct(i)}
}

func (s Meta_remotePing_Results_List) Set(i int, v Meta_remotePing_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remotePing_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b3f22591273e08, s.List)
	return str
}

// Meta_remotePing_Results_Promise is a wrapper for a Meta_remotePing_Results promised by a client call.
type Meta_remotePing_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remotePing_Results_Promise) Struct() (Meta_remotePing_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remotePing_Results{s}, err
}

type Meta_remoteClear_Params struct{ capnp.Struct }

// Meta_remoteClear_Params_TypeID is the unique identifier for the type Meta_remoteClear_Params.
const Meta_remoteClear_Params_TypeID = 0xbea1cb452f61974f

func NewMeta_remoteClear_Params(s *capnp.Segment) (Meta_remoteClear_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Params{st}, err
}

func NewRootMeta_remoteClear_Params(s *capnp.Segment) (Meta_remoteClear_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Params{st}, err
}

func ReadRootMeta_remoteClear_Params(msg *capnp.Message) (Meta_remoteClear_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteClear_Params{root.Struct()}, err
}

func (s Meta_remoteClear_Params) String() string {
	str, _ := text.Marshal(0xbea1cb452f61974f, s.Struct)
	return str
}

// Meta_remoteClear_Params_List is a list of Meta_remoteClear_Params.
type Meta_remoteClear_Params_List struct{ capnp.List }

// NewMeta_remoteClear_Params creates a new list of Meta_remoteClear_Params.
func NewMeta_remoteClear_Params_List(s *capnp.Segment, sz int32) (Meta_remoteClear_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteClear_Params_List{l}, err
}

func (s Meta_remoteClear_Params_List) At(i int) Meta_remoteClear_Params {
	return Meta_remoteClear_Params{s.List.Struct(i)}
}

func (s Meta_remoteClear_Params_List) Set(i int, v Meta_remoteClear_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteClear_Params_List) String() string {
	str, _ := text.MarshalList(0xbea1cb452f61974f, s.List)
	return str
}

// Meta_remoteClear_Params_Promise is a wrapper for a Meta_remoteClear_Params promised by a client call.
type Meta_remoteClear_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteClear_Params_Promise) Struct() (Meta_remoteClear_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteClear_Params{s}, err
}

type Meta_remoteClear_Results struct{ capnp.Struct }

// Meta_remoteClear_Results_TypeID is the unique identifier for the type Meta_remoteClear_Results.
const Meta_remoteClear_Results_TypeID = 0xf0f86c25885c5fe0

func NewMeta_remoteClear_Results(s *capnp.Segment) (Meta_remoteClear_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Results{st}, err
}

func NewRootMeta_remoteClear_Results(s *capnp.Segment) (Meta_remoteClear_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Results{st}, err
}

func ReadRootMeta_remoteClear_Results(msg *capnp.Message) (Meta_remoteClear_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteClear_Results{root.Struct()}, err
}

func (s Meta_remoteClear_Results) String() string {
	str, _ := text.Marshal(0xf0f86c25885c5fe0, s.Struct)
	return str
}

// Meta_remoteClear_Results_List is a list of Meta_remoteClear_Results.
type Meta_remoteClear_Results_List struct{ capnp.List }

// NewMeta_remoteClear_Results creates a new list of Meta_remoteClear_Results.
func NewMeta_remoteClear_Results_List(s *capnp.Segment, sz int32) (Meta_remoteClear_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteClear_Results_List{l}, err
}

func (s Meta_remoteClear_Results_List) At(i int) Meta_remoteClear_Results {
	return Meta_remoteClear_Results{s.List.Struct(i)}
}

func (s Meta_remoteClear_Results_List) Set(i int, v Meta_remoteClear_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteClear_Results_List) String() string {
	str, _ := text.MarshalList(0xf0f86c25885c5fe0, s.List)
	return str
}

// Meta_remoteClear_Results_Promise is a wrapper for a Meta_remoteClear_Results promised by a client call.
type Meta_remoteClear_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteClear_Results_Promise) Struct() (Meta_remoteClear_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteClear_Results{s}, err
}

type Meta_netLocate_Params struct{ capnp.Struct }

// Meta_netLocate_Params_TypeID is the unique identifier for the type Meta_netLocate_Params.
const Meta_netLocate_Params_TypeID = 0xd4353ecb879426a0

func NewMeta_netLocate_Params(s *capnp.Segment) (Meta_netLocate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Meta_netLocate_Params{st}, err
}

func NewRootMeta_netLocate_Params(s *capnp.Segment) (Meta_netLocate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Meta_netLocate_Params{st}, err
}

func ReadRootMeta_netLocate_Params(msg *capnp.Message) (Meta_netLocate_Params, error) {
	root, err := msg.RootPtr()
	return Meta_netLocate_Params{root.Struct()}, err
}

func (s Meta_netLocate_Params) String() string {
	str, _ := text.Marshal(0xd4353ecb879426a0, s.Struct)
	return str
}

func (s Meta_netLocate_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_netLocate_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_netLocate_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_netLocate_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_netLocate_Params) TimeoutSec() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Meta_netLocate_Params) SetTimeoutSec(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// Meta_netLocate_Params_List is a list of Meta_netLocate_Params.
type Meta_netLocate_Params_List struct{ capnp.List }

// NewMeta_netLocate_Params creates a new list of Meta_netLocate_Params.
func NewMeta_netLocate_Params_List(s *capnp.Segment, sz int32) (Meta_netLocate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Meta_netLocate_Params_List{l}, err
}

func (s Meta_netLocate_Params_List) At(i int) Meta_netLocate_Params {
	return Meta_netLocate_Params{s.List.Struct(i)}
}

func (s Meta_netLocate_Params_List) Set(i int, v Meta_netLocate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocate_Params_List) String() string {
	str, _ := text.MarshalList(0xd4353ecb879426a0, s.List)
	return str
}

// Meta_netLocate_Params_Promise is a wrapper for a Meta_netLocate_Params promised by a client call.
type Meta_netLocate_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocate_Params_Promise) Struct() (Meta_netLocate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocate_Params{s}, err
}

type Meta_netLocate_Results struct{ capnp.Struct }

// Meta_netLocate_Results_TypeID is the unique identifier for the type Meta_netLocate_Results.
const Meta_netLocate_Results_TypeID = 0xc538e655744911c7

func NewMeta_netLocate_Results(s *capnp.Segment) (Meta_netLocate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocate_Results{st}, err
}

func NewRootMeta_netLocate_Results(s *capnp.Segment) (Meta_netLocate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocate_Results{st}, err
}

func ReadRootMeta_netLocate_Results(msg *capnp.Message) (Meta_netLocate_Results, error) {
	root, err := msg.RootPtr()
	return Meta_netLocate_Results{root.Struct()}, err
}

func (s Meta_netLocate_Results) String() string {
	str, _ := text.Marshal(0xc538e655744911c7, s.Struct)
	return str
}

func (s Meta_netLocate_Results) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Meta_netLocate_Results) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Meta_netLocate_Results_List is a list of Meta_netLocate_Results.
type Meta_netLocate_Results_List struct{ capnp.List }

// NewMeta_netLocate_Results creates a new list of Meta_netLocate_Results.
func NewMeta_netLocate_Results_List(s *capnp.Segment, sz int32) (Meta_netLocate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Meta_netLocate_Results_List{l}, err
}

func (s Meta_netLocate_Results_List) At(i int) Meta_netLocate_Results {
	return Meta_netLocate_Results{s.List.Struct(i)}
}

func (s Meta_netLocate_Results_List) Set(i int, v Meta_netLocate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocate_Results_List) String() string {
	str, _ := text.MarshalList(0xc538e655744911c7, s.List)
	return str
}

// Meta_netLocate_Results_Promise is a wrapper for a Meta_netLocate_Results promised by a client call.
type Meta_netLocate_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocate_Results_Promise) Struct() (Meta_netLocate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocate_Results{s}, err
}

type Meta_netLocateNext_Params struct{ capnp.Struct }

// Meta_netLocateNext_Params_TypeID is the unique identifier for the type Meta_netLocateNext_Params.
const Meta_netLocateNext_Params_TypeID = 0x943e5e6dc1abe7b8

func NewMeta_netLocateNext_Params(s *capnp.Segment) (Meta_netLocateNext_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocateNext_Params{st}, err
}

func NewRootMeta_netLocateNext_Params(s *capnp.Segment) (Meta_netLocateNext_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocateNext_Params{st}, err
}

func ReadRootMeta_netLocateNext_Params(msg *capnp.Message) (Meta_netLocateNext_Params, error) {
	root, err := msg.RootPtr()
	return Meta_netLocateNext_Params{root.Struct()}, err
}

func (s Meta_netLocateNext_Params) String() string {
	str, _ := text.Marshal(0x943e5e6dc1abe7b8, s.Struct)
	return str
}

func (s Meta_netLocateNext_Params) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Meta_netLocateNext_Params) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Meta_netLocateNext_Params_List is a list of Meta_netLocateNext_Params.
type Meta_netLocateNext_Params_List struct{ capnp.List }

// NewMeta_netLocateNext_Params creates a new list of Meta_netLocateNext_Params.
func NewMeta_netLocateNext_Params_List(s *capnp.Segment, sz int32) (Meta_netLocateNext_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Meta_netLocateNext_Params_List{l}, err
}

func (s Meta_netLocateNext_Params_List) At(i int) Meta_netLocateNext_Params {
	return Meta_netLocateNext_Params{s.List.Struct(i)}
}

func (s Meta_netLocateNext_Params_List) Set(i int, v Meta_netLocateNext_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocateNext_Params_List) String() string {
	str, _ := text.MarshalList(0x943e5e6dc1abe7b8, s.List)
	return str
}

// Meta_netLocateNext_Params_Promise is a wrapper for a Meta_netLocateNext_Params promised by a client call.
type Meta_netLocateNext_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocateNext_Params_Promise) Struct() (Meta_netLocateNext_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocateNext_Params{s}, err
}

type Meta_netLocateNext_Results struct{ capnp.Struct }

// Meta_netLocateNext_Results_TypeID is the unique identifier for the type Meta_netLocateNext_Results.
const Meta_netLocateNext_Results_TypeID = 0xad2dd70d5d17decb

func NewMeta_netLocateNext_Results(s *capnp.Segment) (Meta_netLocateNext_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_netLocateNext_Results{st}, err
}

func NewRootMeta_netLocateNext_Results(s *capnp.Segment) (Meta_netLocateNext_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_netLocateNext_Results{st}, err
}

func ReadRootMeta_netLocateNext_Results(msg *capnp.Message) (Meta_netLocateNext_Results, error) {
	root, err := msg.RootPtr()
	return Meta_netLocateNext_Results{root.Struct()}, err
}

func (s Meta_netLocateNext_Results) String() string {
	str, _ := text.Marshal(0xad2dd70d5d17decb, s.Struct)
	return str
}

func (s Meta_netLocateNext_Results) Result() (LocateResult, error) {
	p, err := s.Struct.Ptr(0)
	return LocateResult{Struct: p.Struct()}, err
}

func (s Meta_netLocateNext_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_netLocateNext_Results) SetResult(v LocateResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated LocateResult struct, preferring placement in s's segment.
func (s Meta_netLocateNext_Results) NewResult() (LocateResult, error) {
	ss, err := NewLocateResult(s.Struct.Segment())
	if err != nil {
		return LocateResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_netLocateNext_Results_List is a list of Meta_netLocateNext_Results.
type Meta_netLocateNext_Results_List struct{ capnp.List }

// NewMeta_netLocateNext_Results creates a new list of Meta_netLocateNext_Results.
func NewMeta_netLocateNext_Results_List(s *capnp.Segment, sz int32) (Meta_netLocateNext_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_netLocateNext_Results_List{l}, err
}

func (s Meta_netLocateNext_Results_List) At(i int) Meta_netLocateNext_Results {
	return Meta_netLocateNext_Results{s.List.Struct(i)}
}

func (s Meta_netLocateNext_Results_List) Set(i int, v Meta_netLocateNext_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocateNext_Results_List) String() string {
	str, _ := text.MarshalList(0xad2dd70d5d17decb, s.List)
	return str
}

// Meta_netLocateNext_Results_Promise is a wrapper for a Meta_netLocateNext_Results promised by a client call.
type Meta_netLocateNext_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocateNext_Results_Promise) Struct() (Meta_netLocateNext_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocateNext_Results{s}, err
}

func (p Meta_netLocateNext_Results_Promise) Result() LocateResult_Promise {
	return LocateResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_whoami_Params struct{ capnp.Struct }

// Meta_whoami_Params_TypeID is the unique identifier for the type Meta_whoami_Params.
const Meta_whoami_Params_TypeID = 0xd289114a83107db7

func NewMeta_whoami_Params(s *capnp.Segment) (Meta_whoami_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_whoami_Params{st}, err
}

func NewRootMeta_whoami_Params(s *capnp.Segment) (Meta_whoami_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_whoami_Params{st}, err
}

func ReadRootMeta_whoami_Params(msg *capnp.Message) (Meta_whoami_Params, error) {
	root, err := msg.RootPtr()
	return Meta_whoami_Params{root.Struct()}, err
}

func (s Meta_whoami_Params) String() string {
	str, _ := text.Marshal(0xd289114a83107db7, s.Struct)
	return str
}

// Meta_whoami_Params_List is a list of Meta_whoami_Params.
type Meta_whoami_Params_List struct{ capnp.List }

// NewMeta_whoami_Params creates a new list of Meta_whoami_Params.
func NewMeta_whoami_Params_List(s *capnp.Segment, sz int32) (Meta_whoami_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_whoami_Params_List{l}, err
}

func (s Meta_whoami_Params_List) At(i int) Meta_whoami_Params {
	return Meta_whoami_Params{s.List.Struct(i)}
}

func (s Meta_whoami_Params_List) Set(i int, v Meta_whoami_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_whoami_Params_List) String() string {
	str, _ := text.MarshalList(0xd289114a83107db7, s.List)
	return str
}

// Meta_whoami_Params_Promise is a wrapper for a Meta_whoami_Params promised by a client call.
type Meta_whoami_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_whoami_Params_Promise) Struct() (Meta_whoami_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_whoami_Params{s}, err
}

type Meta_whoami_Results struct{ capnp.Struct }

// Meta_whoami_Results_TypeID is the unique identifier for the type Meta_whoami_Results.
const Meta_whoami_Results_TypeID = 0x9eadc3c7605bd657

func NewMeta_whoami_Results(s *capnp.Segment) (Meta_whoami_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_whoami_Results{st}, err
}

func NewRootMeta_whoami_Results(s *capnp.Segment) (Meta_whoami_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_whoami_Results{st}, err
}

func ReadRootMeta_whoami_Results(msg *capnp.Message) (Meta_whoami_Results, error) {
	root, err := msg.RootPtr()
	return Meta_whoami_Results{root.Struct()}, err
}

func (s Meta_whoami_Results) String() string {
	str, _ := text.Marshal(0x9eadc3c7605bd657, s.Struct)
	return str
}

func (s Meta_whoami_Results) Whoami() (Identity, error) {
	p, err := s.Struct.Ptr(0)
	return Identity{Struct: p.Struct()}, err
}

func (s Meta_whoami_Results) HasWhoami() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_whoami_Results) SetWhoami(v Identity) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWhoami sets the whoami field to a newly
// allocated Identity struct, preferring placement in s's segment.
func (s Meta_whoami_Results) NewWhoami() (Identity, error) {
	ss, err := NewIdentity(s.Struct.Segment())
	if err != nil {
		return Identity{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_whoami_Results_List is a list of Meta_whoami_Results.
type Meta_whoami_Results_List struct{ capnp.List }

// NewMeta_whoami_Results creates a new list of Meta_whoami_Results.
func NewMeta_whoami_Results_List(s *capnp.Segment, sz int32) (Meta_whoami_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_whoami_Results_List{l}, err
}

func (s Meta_whoami_Results_List) At(i int) Meta_whoami_Results {
	return Meta_whoami_Results{s.List.Struct(i)}
}

func (s Meta_whoami_Results_List) Set(i int, v Meta_whoami_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_whoami_Results_List) String() string {
	str, _ := text.MarshalList(0x9eadc3c7605bd657, s.List)
	return str
}

// Meta_whoami_Results_Promise is a wrapper for a Meta_whoami_Results promised by a client call.
type Meta_whoami_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_whoami_Results_Promise) Struct() (Meta_whoami_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_whoami_Results{s}, err
}

func (p Meta_whoami_Results_Promise) Whoami() Identity_Promise {
	return Identity_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_become_Params struct{ capnp.Struct }

// Meta_become_Params_TypeID is the unique identifier for the type Meta_become_Params.
const Meta_become_Params_TypeID = 0x90027b0333e503ee

func NewMeta_become_Params(s *capnp.Segment) (Meta_become_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_become_Params{st}, err
}

func NewRootMeta_become_Params(s *capnp.Segment) (Meta_become_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_become_Params{st}, err
}

func ReadRootMeta_become_Params(msg *capnp.Message) (Meta_become_Params, error) {
	root, err := msg.RootPtr()
	return Meta_become_Params{root.Struct()}, err
}

func (s Meta_become_Params) String() string {
	str, _ := text.Marshal(0x90027b0333e503ee, s.Struct)
	return str
}

func (s Meta_become_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_become_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_become_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_become_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_become_Params_List is a list of Meta_become_Params.
type Meta_become_Params_List struct{ capnp.List }

// NewMeta_become_Params creates a new list of Meta_become_Params.
func NewMeta_become_Params_List(s *capnp.Segment, sz int32) (Meta_become_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_become_Params_List{l}, err
}

func (s Meta_become_Params_List) At(i int) Meta_become_Params {
	return Meta_become_Params{s.List.Struct(i)}
}

func (s Meta_become_Params_List) Set(i int, v Meta_become_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_become_Params_List) String() string {
	str, _ := text.MarshalList(0x90027b0333e503ee, s.List)
	return str
}

// Meta_become_Params_Promise is a wrapper for a Meta_become_Params promised by a client call.
type Meta_become_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_become_Params_Promise) Struct() (Meta_become_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_become_Params{s}, err
}

type Meta_become_Results struct{ capnp.Struct }

// Meta_become_Results_TypeID is the unique identifier for the type Meta_become_Results.
const Meta_become_Results_TypeID = 0xf135f1bd71a1071f

func NewMeta_become_Results(s *capnp.Segment) (Meta_become_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_become_Results{st}, err
}

func NewRootMeta_become_Results(s *capnp.Segment) (Meta_become_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_become_Results{st}, err
}

func ReadRootMeta_become_Results(msg *capnp.Message) (Meta_become_Results, error) {
	root, err := msg.RootPtr()
	return Meta_become_Results{root.Struct()}, err
}

func (s Meta_become_Results) String() string {
	str, _ := text.Marshal(0xf135f1bd71a1071f, s.Struct)
	return str
}

// Meta_become_Results_List is a list of Meta_become_Results.
type Meta_become_Results_List struct{ capnp.List }

// NewMeta_become_Results creates a new list of Meta_become_Results.
func NewMeta_become_Results_List(s *capnp.Segment, sz int32) (Meta_become_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_become_Results_List{l}, err
}

func (s Meta_become_Results_List) At(i int) Meta_become_Results {
	return Meta_become_Results{s.List.Struct(i)}
}

func (s Meta_become_Results_List) Set(i int, v Meta_become_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_become_Results_List) String() string {
	str, _ := text.MarshalList(0xf135f1bd71a1071f, s.List)
	return str
}

// Meta_become_Results_Promise is a wrapper for a Meta_become_Results promised by a client call.
type Meta_become_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_become_Results_Promise) Struct() (Meta_become_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_become_Results{s}, err
}

type Meta_connect_Params struct{ capnp.Struct }

// Meta_connect_Params_TypeID is the unique identifier for the type Meta_connect_Params.
const Meta_connect_Params_TypeID = 0xe478c8af63857432

func NewMeta_connect_Params(s *capnp.Segment) (Meta_connect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Params{st}, err
}

func NewRootMeta_connect_Params(s *capnp.Segment) (Meta_connect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Params{st}, err
}

func ReadRootMeta_connect_Params(msg *capnp.Message) (Meta_connect_Params, error) {
	root, err := msg.RootPtr()
	return Meta_connect_Params{root.Struct()}, err
}

func (s Meta_connect_Params) String() string {
	str, _ := text.Marshal(0xe478c8af63857432, s.Struct)
	return str
}

// Meta_connect_Params_List is a list of Meta_connect_Params.
type Meta_connect_Params_List struct{ capnp.List }

// NewMeta_connect_Params creates a new list of Meta_connect_Params.
func NewMeta_connect_Params_List(s *capnp.Segment, sz int32) (Meta_connect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_connect_Params_List{l}, err
}

func (s Meta_connect_Params_List) At(i int) Meta_connect_Params {
	return Meta_connect_Params{s.List.Struct(i)}
}

func (s Meta_connect_Params_List) Set(i int, v Meta_connect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_connect_Params_List) String() string {
	str, _ := text.MarshalList(0xe478c8af63857432, s.List)
	return str
}

// Meta_connect_Params_Promise is a wrapper for a Meta_connect_Params promised by a client call.
type Meta_connect_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_connect_Params_Promise) Struct() (Meta_connect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_connect_Params{s}, err
}

type Meta_connect_Results struct{ capnp.Struct }

// Meta_connect_Results_TypeID is the unique identifier for the type Meta_connect_Results.
const Meta_connect_Results_TypeID = 0xf580568dec00ba9f

func NewMeta_connect_Results(s *capnp.Segment) (Meta_connect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Results{st}, err
}

func NewRootMeta_connect_Results(s *capnp.Segment) (Meta_connect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Results{st}, err
}

func ReadRootMeta_connect_Results(msg *capnp.Message) (Meta_connect_Results, error) {
	root, err := msg.RootPtr()
	return Meta_connect_Results{root.Struct()}, err
}

func (s Meta_connect_Results) String() string {
	str, _ := text.Marshal(0xf580568dec00ba9f, s.Struct)
	return str
}

// Meta_connect_Results_List is a list of Meta_connect_Results.
type Meta_connect_Results_List struct{ capnp.List }

// NewMeta_connect_Results creates a new list of Meta_connect_Results.
func NewMeta_connect_Results_List(s *capnp.Segment, sz int32) (Meta_connect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_connect_Results_List{l}, err
}

func (s Meta_connect_Results_List) At(i int) Meta_connect_Results {
	return Meta_connect_Results{s.List.Struct(i)}
}

func (s Meta_connect_Results_List) Set(i int, v Meta_connect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_connect_Results_List) String() string {
	str, _ := text.MarshalList(0xf580568dec00ba9f, s.List)
	return str
}

// Meta_connect_Results_Promise is a wrapper for a Meta_connect_Results promised by a client call.
type Meta_connect_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_connect_Results_Promise) Struct() (Meta_connect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_connect_Results{s}, err
}

type Meta_disconnect_Params struct{ capnp.Struct }

// Meta_disconnect_Params_TypeID is the unique identifier for the type Meta_disconnect_Params.
const Meta_disconnect_Params_TypeID = 0xb81842457ebf1a07

func NewMeta_disconnect_Params(s *capnp.Segment) (Meta_disconnect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Params{st}, err
}

func NewRootMeta_disconnect_Params(s *capnp.Segment) (Meta_disconnect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Params{st}, err
}

func ReadRootMeta_disconnect_Params(msg *capnp.Message) (Meta_disconnect_Params, error) {
	root, err := msg.RootPtr()
	return Meta_disconnect_Params{root.Struct()}, err
}

func (s Meta_disconnect_Params) String() string {
	str, _ := text.Marshal(0xb81842457ebf1a07, s.Struct)
	return str
}

// Meta_disconnect_Params_List is a list of Meta_disconnect_Params.
type Meta_disconnect_Params_List struct{ capnp.List }

// NewMeta_disconnect_Params creates a new list of Meta_disconnect_Params.
func NewMeta_disconnect_Params_List(s *capnp.Segment, sz int32) (Meta_disconnect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_disconnect_Params_List{l}, err
}

func (s Meta_disconnect_Params_List) At(i int) Meta_disconnect_Params {
	return Meta_disconnect_Params{s.List.Struct(i)}
}

func (s Meta_disconnect_Params_List) Set(i int, v Meta_disconnect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_disconnect_Params_List) String() string {
	str, _ := text.MarshalList(0xb81842457ebf1a07, s.List)
	return str
}

// Meta_disconnect_Params_Promise is a wrapper for a Meta_disconnect_Params promised by a client call.
type Meta_disconnect_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_disconnect_Params_Promise) Struct() (Meta_disconnect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_disconnect_Params{s}, err
}

type Meta_disconnect_Results struct{ capnp.Struct }

// Meta_disconnect_Results_TypeID is the unique identifier for the type Meta_disconnect_Results.
const Meta_disconnect_Results_TypeID = 0xd5616267acef42a7

func NewMeta_disconnect_Results(s *capnp.Segment) (Meta_disconnect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Results{st}, err
}

func NewRootMeta_disconnect_Results(s *capnp.Segment) (Meta_disconnect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Results{st}, err
}

func ReadRootMeta_disconnect_Results(msg *capnp.Message) (Meta_disconnect_Results, error) {
	root, err := msg.RootPtr()
	return Meta_disconnect_Results{root.Struct()}, err
}

func (s Meta_disconnect_Results) String() string {
	str, _ := text.Marshal(0xd5616267acef42a7, s.Struct)
	return str
}

// Meta_disconnect_Results_List is a list of Meta_disconnect_Results.
type Meta_disconnect_Results_List struct{ capnp.List }

// NewMeta_disconnect_Results creates a new list of Meta_disconnect_Results.
func NewMeta_disconnect_Results_List(s *capnp.Segment, sz int32) (Meta_disconnect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_disconnect_Results_List{l}, err
}

func (s Meta_disconnect_Results_List) At(i int) Meta_disconnect_Results {
	return Meta_disconnect_Results{s.List.Struct(i)}
}

func (s Meta_disconnect_Results_List) Set(i int, v Meta_disconnect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_disconnect_Results_List) String() string {
	str, _ := text.MarshalList(0xd5616267acef42a7, s.List)
	return str
}

// Meta_disconnect_Results_Promise is a wrapper for a Meta_disconnect_Results promised by a client call.
type Meta_disconnect_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_disconnect_Results_Promise) Struct() (Meta_disconnect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_disconnect_Results{s}, err
}

type Meta_onlinePeers_Params struct{ capnp.Struct }

// Meta_onlinePeers_Params_TypeID is the unique identifier for the type Meta_onlinePeers_Params.
const Meta_onlinePeers_Params_TypeID = 0xa596c7cd35022b4b

func NewMeta_onlinePeers_Params(s *capnp.Segment) (Meta_onlinePeers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_onlinePeers_Params{st}, err
}

func NewRootMeta_onlinePeers_Params(s *capnp.Segment) (Meta_onlinePeers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_onlinePeers_Params{st}, err
}

func ReadRootMeta_onlinePeers_Params(msg *capnp.Message) (Meta_onlinePeers_Params, error) {
	root, err := msg.RootPtr()
	return Meta_onlinePeers_Params{root.Struct()}, err
}

func (s Meta_onlinePeers_Params) String() string {
	str, _ := text.Marshal(0xa596c7cd35022b4b, s.Struct)
	return str
}

// Meta_onlinePeers_Params_List is a list of Meta_onlinePeers_Params.
type Meta_onlinePeers_Params_List struct{ capnp.List }

// NewMeta_onlinePeers_Params creates a new list of Meta_onlinePeers_Params.
func NewMeta_onlinePeers_Params_List(s *capnp.Segment, sz int32) (Meta_onlinePeers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_onlinePeers_Params_List{l}, err
}

func (s Meta_onlinePeers_Params_List) At(i int) Meta_onlinePeers_Params {
	return Meta_onlinePeers_Params{s.List.Struct(i)}
}

func (s Meta_onlinePeers_Params_List) Set(i int, v Meta_onlinePeers_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_onlinePeers_Params_List) String() string {
	str, _ := text.MarshalList(0xa596c7cd35022b4b, s.List)
	return str
}

// Meta_onlinePeers_Params_Promise is a wrapper for a Meta_onlinePeers_Params promised by a client call.
type Meta_onlinePeers_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_onlinePeers_Params_Promise) Struct() (Meta_onlinePeers_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_onlinePeers_Params{s}, err
}

type Meta_onlinePeers_Results struct{ capnp.Struct }

// Meta_onlinePeers_Results_TypeID is the unique identifier for the type Meta_onlinePeers_Results.
const Meta_onlinePeers_Results_TypeID = 0xf9be86640a05f28e

func NewMeta_onlinePeers_Results(s *capnp.Segment) (Meta_onlinePeers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_onlinePeers_Results{st}, err
}

func NewRootMeta_onlinePeers_Results(s *capnp.Segment) (Meta_onlinePeers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_onlinePeers_Results{st}, err
}

func ReadRootMeta_onlinePeers_Results(msg *capnp.Message) (Meta_onlinePeers_Results, error) {
	root, err := msg.RootPtr()
	return Meta_onlinePeers_Results{root.Struct()}, err
}

func (s Meta_onlinePeers_Results) String() string {
	str, _ := text.Marshal(0xf9be86640a05f28e, s.Struct)
	return str
}

func (s Meta_onlinePeers_Results) Infos() (PeerStatus_List, error) {
	p, err := s.Struct.Ptr(0)
	return PeerStatus_List{List: p.List()}, err
}

func (s Meta_onlinePeers_Results) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_onlinePeers_Results) SetInfos(v PeerStatus_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated PeerStatus_List, preferring placement in s's segment.
func (s Meta_onlinePeers_Results) NewInfos(n int32) (PeerStatus_List, error) {
	l, err := NewPeerStatus_List(s.Struct.Segment(), n)
	if err != nil {
		return PeerStatus_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_onlinePeers_Results_List is a list of Meta_onlinePeers_Results.
type Meta_onlinePeers_Results_List struct{ capnp.List }

// NewMeta_onlinePeers_Results creates a new list of Meta_onlinePeers_Results.
func NewMeta_onlinePeers_Results_List(s *capnp.Segment, sz int32) (Meta_onlinePeers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_onlinePeers_Results_List{l}, err
}

func (s Meta_onlinePeers_Results_List) At(i int) Meta_onlinePeers_Results {
	return Meta_onlinePeers_Results{s.List.Struct(i)}
}

func (s Meta_onlinePeers_Results_List) Set(i int, v Meta_onlinePeers_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_onlinePeers_Results_List) String() string {
	str, _ := text.MarshalList(0xf9be86640a05f28e, s.List)
	return str
}

// Meta_onlinePeers_Results_Promise is a wrapper for a Meta_onlinePeers_Results promised by a client call.
type Meta_onlinePeers_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_onlinePeers_Results_Promise) Struct() (Meta_onlinePeers_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_onlinePeers_Results{s}, err
}

type API struct{ Client capnp.Client }

// API_TypeID is the unique identifier for the type API.
const API_TypeID = 0xfc487818328b97ef

func (c API) Version(ctx context.Context, params func(API_version_Params) error, opts ...capnp.CallOption) API_version_Results_Promise {
	if c.Client == nil {
		return API_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfc487818328b97ef,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:API",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(API_version_Params{Struct: s}) }
	}
	return API_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Quit(ctx context.Context, params func(Meta_quit_Params) error, opts ...capnp.CallOption) Meta_quit_Results_Promise {
	if c.Client == nil {
		return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_quit_Params{Struct: s}) }
	}
	return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Ping(ctx context.Context, params func(Meta_ping_Params) error, opts ...capnp.CallOption) Meta_ping_Results_Promise {
	if c.Client == nil {
		return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_ping_Params{Struct: s}) }
	}
	return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Init(ctx context.Context, params func(Meta_init_Params) error, opts ...capnp.CallOption) Meta_init_Results_Promise {
	if c.Client == nil {
		return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_init_Params{Struct: s}) }
	}
	return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mount(ctx context.Context, params func(Meta_mount_Params) error, opts ...capnp.CallOption) Meta_mount_Results_Promise {
	if c.Client == nil {
		return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_mount_Params{Struct: s}) }
	}
	return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unmount(ctx context.Context, params func(Meta_unmount_Params) error, opts ...capnp.CallOption) Meta_unmount_Results_Promise {
	if c.Client == nil {
		return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_unmount_Params{Struct: s}) }
	}
	return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigGet(ctx context.Context, params func(Meta_configGet_Params) error, opts ...capnp.CallOption) Meta_configGet_Results_Promise {
	if c.Client == nil {
		return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configGet_Params{Struct: s}) }
	}
	return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigSet(ctx context.Context, params func(Meta_configSet_Params) error, opts ...capnp.CallOption) Meta_configSet_Results_Promise {
	if c.Client == nil {
		return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configSet_Params{Struct: s}) }
	}
	return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigAll(ctx context.Context, params func(Meta_configAll_Params) error, opts ...capnp.CallOption) Meta_configAll_Results_Promise {
	if c.Client == nil {
		return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configAll_Params{Struct: s}) }
	}
	return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteAdd(ctx context.Context, params func(Meta_remoteAdd_Params) error, opts ...capnp.CallOption) Meta_remoteAdd_Results_Promise {
	if c.Client == nil {
		return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteAdd_Params{Struct: s}) }
	}
	return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteRm(ctx context.Context, params func(Meta_remoteRm_Params) error, opts ...capnp.CallOption) Meta_remoteRm_Results_Promise {
	if c.Client == nil {
		return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteRm_Params{Struct: s}) }
	}
	return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteLs(ctx context.Context, params func(Meta_remoteLs_Params) error, opts ...capnp.CallOption) Meta_remoteLs_Results_Promise {
	if c.Client == nil {
		return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteLs_Params{Struct: s}) }
	}
	return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteSave(ctx context.Context, params func(Meta_remoteSave_Params) error, opts ...capnp.CallOption) Meta_remoteSave_Results_Promise {
	if c.Client == nil {
		return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteSave_Params{Struct: s}) }
	}
	return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemotePing(ctx context.Context, params func(Meta_remotePing_Params) error, opts ...capnp.CallOption) Meta_remotePing_Results_Promise {
	if c.Client == nil {
		return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remotePing_Params{Struct: s}) }
	}
	return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteClear(ctx context.Context, params func(Meta_remoteClear_Params) error, opts ...capnp.CallOption) Meta_remoteClear_Results_Promise {
	if c.Client == nil {
		return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteClear_Params{Struct: s}) }
	}
	return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocate(ctx context.Context, params func(Meta_netLocate_Params) error, opts ...capnp.CallOption) Meta_netLocate_Results_Promise {
	if c.Client == nil {
		return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocate_Params{Struct: s}) }
	}
	return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocateNext(ctx context.Context, params func(Meta_netLocateNext_Params) error, opts ...capnp.CallOption) Meta_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocateNext_Params{Struct: s}) }
	}
	return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Whoami(ctx context.Context, params func(Meta_whoami_Params) error, opts ...capnp.CallOption) Meta_whoami_Results_Promise {
	if c.Client == nil {
		return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_whoami_Params{Struct: s}) }
	}
	return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Become(ctx context.Context, params func(Meta_become_Params) error, opts ...capnp.CallOption) Meta_become_Results_Promise {
	if c.Client == nil {
		return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_become_Params{Struct: s}) }
	}
	return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Connect(ctx context.Context, params func(Meta_connect_Params) error, opts ...capnp.CallOption) Meta_connect_Results_Promise {
	if c.Client == nil {
		return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_connect_Params{Struct: s}) }
	}
	return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Disconnect(ctx context.Context, params func(Meta_disconnect_Params) error, opts ...capnp.CallOption) Meta_disconnect_Results_Promise {
	if c.Client == nil {
		return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_disconnect_Params{Struct: s}) }
	}
	return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) OnlinePeers(ctx context.Context, params func(Meta_onlinePeers_Params) error, opts ...capnp.CallOption) Meta_onlinePeers_Results_Promise {
	if c.Client == nil {
		return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_onlinePeers_Params{Struct: s}) }
	}
	return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type API_Server interface {
	Version(API_version) error

	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	Quit(Meta_quit) error

	Ping(Meta_ping) error

	Init(Meta_init) error

	Mount(Meta_mount) error

	Unmount(Meta_unmount) error

	ConfigGet(Meta_configGet) error

	ConfigSet(Meta_configSet) error

	ConfigAll(Meta_configAll) error

	RemoteAdd(Meta_remoteAdd) error

	RemoteRm(Meta_remoteRm) error

	RemoteLs(Meta_remoteLs) error

	RemoteSave(Meta_remoteSave) error

	RemotePing(Meta_remotePing) error

	RemoteClear(Meta_remoteClear) error

	NetLocate(Meta_netLocate) error

	NetLocateNext(Meta_netLocateNext) error

	Whoami(Meta_whoami) error

	Become(Meta_become) error

	Connect(Meta_connect) error

	Disconnect(Meta_disconnect) error

	OnlinePeers(Meta_onlinePeers) error
}

func API_ServerToClient(s API_Server) API {
	c, _ := s.(server.Closer)
	return API{Client: server.New(API_Methods(nil, s), c)}
}

func API_Methods(methods []server.Method, s API_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 44)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfc487818328b97ef,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:API",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := API_version{c, opts, API_version_Params{Struct: p}, API_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_quit{c, opts, Meta_quit_Params{Struct: p}, Meta_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_ping{c, opts, Meta_ping_Params{Struct: p}, Meta_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_init{c, opts, Meta_init_Params{Struct: p}, Meta_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_mount{c, opts, Meta_mount_Params{Struct: p}, Meta_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_unmount{c, opts, Meta_unmount_Params{Struct: p}, Meta_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configGet{c, opts, Meta_configGet_Params{Struct: p}, Meta_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configSet{c, opts, Meta_configSet_Params{Struct: p}, Meta_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configAll{c, opts, Meta_configAll_Params{Struct: p}, Meta_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteAdd{c, opts, Meta_remoteAdd_Params{Struct: p}, Meta_remoteAdd_Results{Struct: r}}
			return s.RemoteAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteRm{c, opts, Meta_remoteRm_Params{Struct: p}, Meta_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteLs{c, opts, Meta_remoteLs_Params{Struct: p}, Meta_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteSave{c, opts, Meta_remoteSave_Params{Struct: p}, Meta_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remotePing{c, opts, Meta_remotePing_Params{Struct: p}, Meta_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteClear{c, opts, Meta_remoteClear_Params{Struct: p}, Meta_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocate{c, opts, Meta_netLocate_Params{Struct: p}, Meta_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocateNext{c, opts, Meta_netLocateNext_Params{Struct: p}, Meta_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_whoami{c, opts, Meta_whoami_Params{Struct: p}, Meta_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_become{c, opts, Meta_become_Params{Struct: p}, Meta_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_connect{c, opts, Meta_connect_Params{Struct: p}, Meta_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_disconnect{c, opts, Meta_disconnect_Params{Struct: p}, Meta_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_onlinePeers{c, opts, Meta_onlinePeers_Params{Struct: p}, Meta_onlinePeers_Results{Struct: r}}
			return s.OnlinePeers(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// API_version holds the arguments for a server call to API.version.
type API_version struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  API_version_Params
	Results API_version_Results
}

type API_version_Params struct{ capnp.Struct }

// API_version_Params_TypeID is the unique identifier for the type API_version_Params.
const API_version_Params_TypeID = 0xc6920dee4bb4a443

func NewAPI_version_Params(s *capnp.Segment) (API_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return API_version_Params{st}, err
}

func NewRootAPI_version_Params(s *capnp.Segment) (API_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return API_version_Params{st}, err
}

func ReadRootAPI_version_Params(msg *capnp.Message) (API_version_Params, error) {
	root, err := msg.RootPtr()
	return API_version_Params{root.Struct()}, err
}

func (s API_version_Params) String() string {
	str, _ := text.Marshal(0xc6920dee4bb4a443, s.Struct)
	return str
}

// API_version_Params_List is a list of API_version_Params.
type API_version_Params_List struct{ capnp.List }

// NewAPI_version_Params creates a new list of API_version_Params.
func NewAPI_version_Params_List(s *capnp.Segment, sz int32) (API_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return API_version_Params_List{l}, err
}

func (s API_version_Params_List) At(i int) API_version_Params {
	return API_version_Params{s.List.Struct(i)}
}

func (s API_version_Params_List) Set(i int, v API_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s API_version_Params_List) String() string {
	str, _ := text.MarshalList(0xc6920dee4bb4a443, s.List)
	return str
}

// API_version_Params_Promise is a wrapper for a API_version_Params promised by a client call.
type API_version_Params_Promise struct{ *capnp.Pipeline }

func (p API_version_Params_Promise) Struct() (API_version_Params, error) {
	s, err := p.Pipeline.Struct()
	return API_version_Params{s}, err
}

type API_version_Results struct{ capnp.Struct }

// API_version_Results_TypeID is the unique identifier for the type API_version_Results.
const API_version_Results_TypeID = 0xd81779091ced5513

func NewAPI_version_Results(s *capnp.Segment) (API_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return API_version_Results{st}, err
}

func NewRootAPI_version_Results(s *capnp.Segment) (API_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return API_version_Results{st}, err
}

func ReadRootAPI_version_Results(msg *capnp.Message) (API_version_Results, error) {
	root, err := msg.RootPtr()
	return API_version_Results{root.Struct()}, err
}

func (s API_version_Results) String() string {
	str, _ := text.Marshal(0xd81779091ced5513, s.Struct)
	return str
}

func (s API_version_Results) Version() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s API_version_Results) SetVersion(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// API_version_Results_List is a list of API_version_Results.
type API_version_Results_List struct{ capnp.List }

// NewAPI_version_Results creates a new list of API_version_Results.
func NewAPI_version_Results_List(s *capnp.Segment, sz int32) (API_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return API_version_Results_List{l}, err
}

func (s API_version_Results_List) At(i int) API_version_Results {
	return API_version_Results{s.List.Struct(i)}
}

func (s API_version_Results_List) Set(i int, v API_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s API_version_Results_List) String() string {
	str, _ := text.MarshalList(0xd81779091ced5513, s.List)
	return str
}

// API_version_Results_Promise is a wrapper for a API_version_Results promised by a client call.
type API_version_Results_Promise struct{ *capnp.Pipeline }

func (p API_version_Results_Promise) Struct() (API_version_Results, error) {
	s, err := p.Pipeline.Struct()
	return API_version_Results{s}, err
}

const schema_ea883e7d5248d81b = "x\xda\xbc{}|\x14\xd5\xb9\xffyf\x12\x86(\x90" +
	"\x0c\x13\x9b\x17\x81\x9d\x84\x04\"\x90W\xa4U\xfci\x96" +
	"\xf0f\x80H&K\xac\x82o\x93\xdd\x93ddwf" +
	"\x99\x99M\x88\x95B\xaa\x88X\xf1\xa3\xfd\x81\x16\xab\"" +
	"\xbd\xf5\xd67.Zm\xb1Z\xecUA\xe5Z>\x17" +
	"-\xf8\xd6\x8b\x0a\xd5*~@\x0a\x8a\x05\x85\xee\xfd\x9c" +
	"\xb3;\xb3g\x93\xdd\xec\xd2\xde{\xffJ\xf6\xcc3\xe7" +
	"<\xe7y\x9e\xf3<\xdf\xe79\xcf\xd4}S\xe0\xe5\xea" +
	"s\xdf\xa9D\xc8\xf7\x1c\xe4\x0e\x8b\x8eY\xa2\xbd~\xfa" +
	"\xf3\xae~\xa4\x14\x01D\xcf\x7f\xf7\xf2\xb6\x15\x97\xdd\xfe" +
	"9\xca\xcd\x11\x10\x9a\xfa\xe6\xe8\xd1 \x1d\x18-H\x07" +
	"F{\xa6\xe6I\x1e@\x10\xdd1\x11\xfe~\xc5\xd3\xbf" +
	"\xe9G\xe2\x18@(\x17\x08]Y\xa1\x09\x08\xa4\xea\xc2" +
	"F\x04Q\xf1\xcf\xbdz\xdd\x1b\x7f\xb9\x05\x89E|b" +
	"B\x04RK\xe1A\xe9\xeaBB\xdf^87Wz" +
	"\xb3H@(z\xf2;xJ\xddC;\xd6 \xb1\x14" +
	"\x10\xa2\xab\xfe\xb6\xa8\x09PN\xf4\xf6u?\xbeB\xbb" +
	"\xa8\xe9v\xe6\xc9\xe6\xd8\x93W\x7fz\xd9\xadW\xbc~" +
	"\xc7\x9d,\x0bk\x8bn$,l(\",\xcc\xdc&" +
	"Wo\x12?L\"\xf8u\x11\xe5\xf1%J \xbfv" +
	"\xffw\x0f){\xeeBb\x11\xbbi\x8e\x10\x1e+*" +
	"\x07\x09\x8a\x05\x09\x8a=\xd2\xb4\xe2^\x04\xd1/\xf8O" +
	"\xa6\xf2?\xe0\xeef\xe7\xbb\xa7\xb8\x8d\xcc\xf7`1\x99" +
	"\xef\xb9O\x9fx)t\xdde\xeb\x912\x06\x1cf\xb7" +
	"\x17\xdfA\x08vS\x82\x17K\x8b\x97\xbcz\xe7\x17\xeb" +
	"\xd9\x19\x8e\x14S\x8eNQ\x82YkF\xaf]\xfaa" +
	"pC\x8c\x80NpA\xc9\x8dd\xb7\x97-\x1b\xf5\xf0" +
	"ko\x1e\xba/\xfe*\xe5\xf1\xbc\x12\xba\xdb\xb2\x12\xc2" +
	"\xdd\x03\xdc9\xf7\x15?\xfa\xcb\x9f\xc5\x04\x15#XQ" +
	"2\x9d\x10\xac\xa6\x04E\xca\xc2\x0fFy\x9ey\x00)" +
	"\xa5.w\x87J~D\x08N\x94\x90\xc5\xbf\xff\xf6\x92" +
	"\x1b^{e\xcbC,w%\xa5\x8b\x09Ae)!" +
	"\x18\xf6o\xf3\xa3\xef\xfe\xe7+\x0f1\xdc\xcd.m#" +
	"\xdc}\xfd\x9d\xbfr\xb3\xee;\xfdP|q\xfaj}" +
	"\xe9$\xf2\xea\xc5\xf4\xd5\xfb\x16\x97W\x85o\x0elb" +
	"\xd9\xbf\xbat\x1e!\xc0\xa5\x84\xbb\x8bnz\xf9'\xbb" +
	"\xdf\xfal\x13\xcb\xdd\xce\xd2\x06*;:\xc3\xad\x17." +
	"\xfey\xcd\xf5u?'&\xcaXTn.\x15b)" +
	"\x07\xd2\xa9RA:U\xea\x99Z}\xfe\xf78\x04\xd1" +
	"#\xb3o\x9b\xbc\xa7\xf4\xd9\x7fa\xb8\x0d\x8d5\x09\xb7" +
	"\xab'\xaf\xd8\xe9\xfb\xe3\xd1_ \xf1|\xe7\xc9\xd5c" +
	"\x1b\xc8\x93\xe7\xdf\x1a\xfd\x1fU\x97F\x1ea\xb9\x981" +
	"\x96\xb2\xd92\x96p1\x7f27m\xf7k\xf7>\x92" +
	"4\xe9M\xe4\xd5\x0b\xaf\x1c\x17]\xb0$\xef1V\x04" +
	"W\x8f\xa5\"P\xe9\xab\xa1\xbd\x9f\xeay]+\x1e\x8b" +
	"\xad\x1a\x13A\xffX\xba\xc3\xb5c\x89\x08\xf8\xd1#\xc4" +
	"\x9a\x8e\x07\x92f\xf8dl\x13!8Bg\xd8\xaa-" +
	"\xb8\xeb\x93\xcb\xc7=\xc1\x12\x8c\x1cGU|\xde8B" +
	"0\xc98\xfe\xb3\xd3\xaf\xae}\x829,\xd3\xc8\xf3\x9c" +
	"\xe8\x1b\x1f\x14];\xf2\x9d\xea-\xacn\xc7\x8e\xfb\x09" +
	"=\xaf\xf4\xd5=\xbe\xbf\xff\xe9\xc3\x9a\xaf\xb7\xc6\xb9\xa3" +
	"\x04-\xe3\xe8\xe2\xed\x94@\x1du\xc9\x1b\xc5\xa7\xeb\x9e" +
	"\x8a\x8b&F\x11\x89\xad\xbeb\x1c\xe1\x7f\xdb\xb2\x0f." +
	"\x9c\xfe\xee\x92\xa7\x90r~\x82b\x7f\x8c\xe2\x13J\xd1" +
	"}\xf1\xde\xf7\x0bO^\xff\x14#\xbdf\x0f\x95\xde\x03" +
	"-s_~\xfb\xa3\x8e_1*\x99\xe6\x99G\x9e\xb4" +
	"?X5\xfe\xf1\xabn~v\xc0!%$R\x99\xe7" +
	"\xb8T\xed\x11\xa4j\x8fGj\xf7|\x8a Z_|" +
	"j\xe7\x13\xb7\xfe\xe6Yf\x85\x8bez\x80\x8e\x9d\xf9" +
	"\xea\xbf^\xba\xd4\xd8\xc6\x9e\x8fJ\x99\x8a\xbfZ&\xcc" +
	"]\x1c\xf9\xe1\x9c\xa5\xfb\xf7lcXX+S\xeb\x16" +
	"J\x7f\xff\xc3\xd9M\xc5\xcf1\x93FdjI['" +
	".\x18\x7f\xf7\xc7#\x9fg\xdeQe\xca\xf63\xef\x9f" +
	"\xb9\xf4\xe1\xc7\xae{\x81\xd5U\x8bL}\xc1\xb52\x91" +
	"g\xc9\xf0U\x87\xb7=\x11|\x81\x99t\x9d\xdcA^" +
	"\xfd\xe9\x8e\x15M\xf5\xd7\xb4\xfc.y\xc7\x94\xa2O." +
	"\x07i\xad, >:\x7fS\xe1\xcd\xbd\xcd\x8fmg" +
	"\x96\xc62\xd5\xb5\xef\x92\xba{\x0f\xf7\xfdf{\xf2\xd2" +
	"T\x0d\xedt\xe9\xfb}{G\xfd\xe0\x85e/\x0e\x10" +
	")OD\x1a\x91\x8fK\xfd\xb2 \xf5\xcb\x1e\xe9iy" +
	"+\x82\xe8\xc2\xfb\xd4\xda\xd9ol~\x91a\xf4\xda2" +
	"\xaa\xb4\xb9\x87\x16\xfd\xe5\xed/\xc7\xfc\x9e1\xb7\xe62" +
	"\xea\x9bO\xd6\xbc\xf7\xfe\x07\x9d\xfb\xff\x9d\x15v}\x19" +
	"\x15\xf6\xc5eD\xd87\x1c\xdbe|\xd3\xf8\xdbWX" +
	"{\xdcPF\xdd\xd9\xe62\xc2\xe3kb\xb3\xdd\xfe\x97" +
	"\x8bv\xb2\xbe\xf4\xa52\xea*wS\x82\xc7\xdf\x7f\xf9" +
	"\x83{\x8cKv&\xf9\xd2\xb2\x0e\xeaK)\xc1\xcc_" +
	"<;\xff\x8b\x91?y\x95\x11PI9\xd5\xa7\xe7P" +
	"A\xff\xd2\x8f\xe4]\xcc\x8er\xcb\xa9>\xaf;\xf6\xd4" +
	"\x84'\xefj\xdf\xc5\x8a\xeeX\xd9\xf4\xc4\xa4\x9d\x0f\xdf" +
	"x\xff\xeb\xe3n\xd85@t\xc3\x88\xe8J\xca\x0fJ" +
	"\x95\xe5\x82TY\xee\x99\xaa\x94\x7f\x9f\x84\xc9\xc3\xf7\x17" +
	"\xc1\x1d\xb3\x9edW\x82\x0a*\xa1w|\xdd\x8d\x13\x1e" +
	"}f\x17#\xbbC\xe3\xa9\xe5|}DY{\xe7\xf1" +
	"\xaf\xfe\xc0<\xd97\x9e*\xf6\xc6/\xd6|\xfew\xe9" +
	";{\x06,N<\xa0\xb4}\xfcqi\xd7xA\xda" +
	"5\xde3\xf5\xc4x\x1a\xa3g?\xb9d\xf5\xdd\xaf>" +
	"\xb5\x87\x95Pn%\xf5\xe7b%\xd9\xcc\xb6\x15\x05\xb7" +
	"\xcc\x13\xd7\xbe\xc5p7\xad\x92J\xe8\xe1\x09\xeb\xd7\xbc" +
	"q\xd9\xb4\xbdq\xe9\xc7\xe3{%\xd5Ou%Q`" +
	"\xd3\xcc\xc5\xdf\x86+\xef\xdf;\x101\xf0\xd4\x90+9" +
	"\x906V\x0a\xd2\xc6J\x8f\xb4\xab\x92\x1c\xcc_6\x1d" +
	"}\xb2\xabC\xdd\xc7\xac\xf5\xd8\x04jE;w\xee\xfb" +
	"\xf6\xeb\x8a5\xef\xb02\xdf0\x81\xda\xca\x83\x13\x08\x9b" +
	"#\xd5[?\x0e]~\xf4\x1d\xd65m\x9f@5\xbd" +
	"\x8b\x12H\xedG\xc6\xe4\xf5\x15\xbd\x1bw<1aN" +
	"\xa0\x1b=A\x09\xee]7U\x1d\xbfi\xf6{\xec\x0c" +
	"\xe7M\xa4n\xbdl\"!\xd0\xee\x7f\xf4\xe4\xd7\xd6\xa2" +
	"\xf7R8\x99\xa93&\x96\x83\xa4L$Bn\x99H" +
	"\xb6\xf2\xd7\xb7V=2\xf3\xe0\xc4?\xb1\x0cWVQ" +
	"WY]Ef\xfb\xea\x95'g\xe7\xfc\xf9\xd1?1" +
	"\x1al\xa9\xa2\xf1\xe5\x99\xa9\xfb\xf6\xdcR3\xfdCV" +
	"\xe2U\xd4\x1e~eN\xd9\xf1\xdc\x83_}\xc4\xb28" +
	"\xb6\x8a\xee\xe1\x02:\xe9\xcb_\xce/\\\xf3\xf1\xa2\x03" +
	",\xc1\xd5U\x14}`J\xf0\xf6\xf5\xf7\xae\x1eQ\xbb" +
	"\xff\x003\xf7\xea*jQ;\xfev\xcdmm\xde\xf3" +
	"\x0f\xb2\x86\xb0\xac\x8a*s\x05}\xf5\x8b\xc7\xd76/" +
	"\x99\x169\xc8\xbc\xba\xa5\x8a\xfa\xa2S{o~\xf6\xda" +
	"\xab\x9e98\x08\xc6m\xaczKz\xa4\x8a\xc2\xb1\xaa" +
	"\xb9\xbc\xb4e\x12\x81q\x97\xcc<\xca\xcf:\xff\xe4\xc1" +
	"8\x8ft\xa2\x0d\x93\xe8&6O\"\xa2k\xb0W\xfb" +
	"\xb7\xbe\xbe\xfcc\x96\xc7\xc9\x8b\xc9Bw\xd8\x1f\xac/" +
	";\xd8\xf2I*,\xb6l\xf2h\x90\xfa'\x0bR\xff" +
	"d\x8f\xb4e21\xbf3\xaf\x0e\xfb\xdd\xbb7\x9c\xf7" +
	"\xa9\x13k(]\xde\x14\xaa\x04q\xcaV\x04Gw\xfc" +
	"\xb2\xf8\x95\xcf&|\xc6\x98\xdb\x14*\x8c+\xab\xfe " +
	"\xff~\xda\x05\x87\x92\xccm\x0a=\xe2\x0fN!\xc2\xd8" +
	"\xf9\xf6G\xdf\xae\xc9\x7f\xfap\x0a\xef8u\xf7\x94R" +
	"\x90\xf6O\x11\xa4\xfdS<\xd2\xc8j\xe2\x1e\xbf\xf5\xe5" +
	"\x9c\xb8\xeeI\xfeH\\\xb8t\xa9G\xaa)#[\xaa" +
	"\xc9\x9e?\xba\xfe\x9a\xdb+\x83'\xff\xca\xecym\xcd" +
	"\x8f\xa8\x1f\x126/\xdb~l\xda16\xae\xd4Pi" +
	"|\xb9\x9e\xbb\xea\xca\x86\x8a/\x19\x0bRk\xa8\x9d\xcc" +
	"\x9f\xbeUz\xbaz\xefW\xac\x194\xd7\xd0\xe5\x94\x9a" +
	"F\x04\xdfnz\xfe\xf0\xba+W\x9dHL\xb9\xac\x86" +
	"j\xf2\xeb\xf1\x8b\xaf\xba8\xaf\xf2o\xec\x8b\xd7\xd6\xd0" +
	"}c\xf2b\xb4\xed@\xd3\x0b\xb7x\xdaO\xa6\xd2\xc0" +
	"\x86\x1a\x0e\xa4\xcd5\x82\xb4\xb9\xc6#\xed\xae!\x1a\x18" +
	"~\xd9\xc4{*\x8f?s\x8au\xd0\x17\xd4\xdeD\xe6" +
	"\x9bVK\xe6{\xec\xb2\xf7\x1aW\x9b\xdbN\xb1(\xab" +
	"\x96\xaa\xe0\xae\xe3\xb9\xe7\x04n{\xf1\x14k\x8f\xb3k" +
	")\x12U\xe8\xab\xef\x9d\xce\xaf\x9e\xf8l\xce7\xcc\xab" +
	"\xfd\xb5t\xfb\x15sv\x8c>\xba\xea_\xbf\x19d\x8f" +
	"Z\xed\xfbR\xa4\x96\xee\xb7v.'\xed\xaf#\xf6x" +
	"\xf4\xbe\x1f7\x14/\xbf\xfc\xf4 \xea\x9du\xefKo" +
	"\x12\x12iw\xdd\\\xe9D\xdd\xf7\x10\x8a\xfe\xb8\xe7\xde" +
	"\xaf\xe6~\xf4\xdd3,W'\xeah\xc4\x81z\xc2\xd5" +
	"\xf7\xb8\x0d\xfb\xc6\xf6\xdev&\x09\x01\x95\xd5SOu" +
	"A=\x91I\xcfm7\x1c>o\xe1\x1f\xa3I)I" +
	"=\xf53\x1b\xea\x1b\xd1EQ\x0b\x9b=\xd8\xac\xf5\xf3" +
	"jX\x0f\xd7\xaaa\xad\xc6O\xfe\x9b\xde\x8a\xb1\xe9\xb3" +
	"U;\x02V+\x80\x92\x03\\\xf4\xba\xff\xbfI\xd9\xfe" +
	"\xf6\x1d;\x91\x92\xc3\xc1\x8cb\x80\x11\x08\x89\xf0xT" +
	"\xc7\xb6l\xd9\xaa\x0d\x11K6:eU\xce\x0fcl" +
	"\"\xa4\x14\xf29\x08\xe5\x00B\xe2\x8aI\x08)\xcby" +
	"Pn\xe5@\x04($\xdc\x8a\xfdd\xf0f\x1e\x94\xdb" +
	"9\x109\xae\x108\x84\xc4\xd5\xf3\x10Rn\xe5A\xb9" +
	"\x9b\x03\xe0\x0b\x81GH\\\xd7\x81\x90r'\x0f\xcaO" +
	"9\x10s\xf8B\xc8AH\xdc\xd0\x80\x90r7\x0f\xca" +
	"\x03\x1c\xe4\xebj\x08\xc3\x08\xc4\xc1\x08\x04\xf9j `" +
	":?\xa2A\xd5\xb2}\x18\xeb\x08!w\xcc4\"z" +
	"\xc065$\x84[,\xc8A\x1c\xe4 \xf0`\xd34" +
	"\x12\xef9r\xc9\x19 \x97\x16l\xab5&\x0e\x196" +
	"n\xd5\xf4\xae\x8aV\x8fj\xaa!K\xc9q\xf7:\xb2" +
	"\x1c!e8\x0fJ!\x07Bo\xb71hJn\xe0" +
	"\x94\x02\xb6U\"\xe4E|.B\xaeG\x06\xc7}J" +
	"\xf7p\x93\x10'\xad\xe6\x04H\xc4op4+\xf5\xd1" +
	"\xa7!N\x00\xce=\xfa@|\x0d\xfal\xc2g\x92J" +
	"\x9f\xb6s\x02\xf0n\xca\x03N\xda$5s\x0d\x88\x93" +
	".\xe5\x04\xc8q\x8338\xbeW\xaa\xe7\x9a\x10'U" +
	"r\x02\xe4\xba\xb9-8F)\x95pm\x88\x93DN" +
	"\x80an.\x08N\x8a#\xe5\xd2\xa7g@\x00\xc1\x85" +
	"\xc0\xe0\xe4\xbf\xd21 O\x0f\x81\x00\xc3]\xe0\x05\x0e" +
	"\x08\x92\xf6\xd3\xa7\xfb@\x80<\x17T\x81\x93\x88J\xbb" +
	"`\x1e\xe2\xa4\x97@\x80s\\\xc8\x0aN@\x91~M" +
	"\x9fn\x01\x01\xceu\x93[pP\xbe\xb4\x19\x16#N" +
	"\xda\x08\x02\x8cp\x0b\x06\xe0\xf8\x0di\x1d}\xba\x1a\x04" +
	"\x18\xe9bLp\x9c\xa5\xd4\x07\x1d\x88\x93\x96\x81\x00\xa3" +
	"\\4\x02\x0e(\x940\xe5\xf9Z\x10 \xdf\xcd\xba\xc1" +
	"\xc9q$\x05L\xc4I\xcd @\x81\x8bq\xc0\xc9n" +
	"\xa5Ka:\xe2\xa4z\x10@tSzp\\\xb1T" +
	"I\x9f\x96\x80\x00\xa3\xddh\x05\x9b\x9eG\xd4\xa9J#" +
	"\x81\xe8\x08@\x00\xc9\xcd\x0a\xc0\x816\xe2\x89\xc5\x88\x13" +
	"\x8f\x08P\xe8\xa6\x89\xe0\xb8:\xf1@\x07\xe2\xc4\xf7\x84" +
	"\xfce\x11\xcd\xf6B~X\xd3\xbb\xbc\x90\xaf\xe9\xe4\x97" +
	"'dDt\xdb\x0b+#z\xfc\xbf\xa8\xdf\xd0;\xb5" +
	"\xae\xb9\x18A\xe2\x97/\xe9\xd7\x8c \x82\xa0\x17\xa2\xb1" +
	"\xd31#\x80 \xe0\xfej\x0b!\x84\xdc_\x0b,\xf6" +
	"\x97OE|\x0fv\x7f\xb6j\x88'\xac\xc4\x7f\xce\x0c" +
	"\"\x01\xab\xa6\x17\x88\x9fY`\xf8U\x1b\x01f\x7fy" +
	"\xf0\x15x\xb9\xed\x85\xc6\xdenC\x0di^h\xec\xc0" +
	"~#\x84\xbd\xb0\xd2o\xe8:\xf6\x13\x0e\x03\x9aE\x7f" +
	" \x9e\xfe4\xf4\xa0\xa6\xe3V\x8c\x04lZ^h\x85" +
	"\xc4\xe9\x1c5\xe0t\xce\xf1\xd5D\xf4\xb0\xa6W\xb4a" +
	"+\x12\xb4-\xe4\x10\x0e\xa6\xb3l\xb5\x0bg\xa2\xa3\x0e" +
	"\xc4\x11\xa6]\xd1\xaa\xe6\x0f\xe5?\x96\xe2\xbe\xec\\\x92" +
	"\xa3\x82`E\x1b\xf6P\x06RMY\xc1\x81\xa0\x06\x83" +
	"0\x0aA+\x0fP\x90\x009\x08\xc8`\xdap\xd0F" +
	"u1\xc7\x08\x0a\x01l\xa6\x0e\x08\x154 \xd4C\x07" +
	"Dg\xc8\x9dF0\x80\xcd\x1c\xd9\xeeVmY\x95c" +
	"\xaa\x945KV\x83A\xa3\x17\x07d\xdb\x90U\xbf_" +
	"\xc0\x96EYs8\xbd`:BJ\x05\x0fJ\x1d\x13" +
	"(\xaa\x89\xab\xaf\xe2A\xb9\x90\x83\xc6\xd8\xcc\x8eP<" +
	"al\x86\xac\xecD\x143\x8b\x8aV\xe2\xb0\xe1\xac<" +
	"vn\xaa\xe9\x1c\x03\xa4\xe6\x17\x9b\x95\xec\x85\x99vz" +
	"b\xdaF[\xf3/\xc56\xe4!\x0e\xf2\xb2\x0b/>" +
	"\xb5\x07\xa7\x0a/M\x09]\xae\x8cQZ\x09}\xba\x89" +
	"\xf4\x00}\x0e\xb1N[\x88\x98l>1\x99lL\xcc" +
	"\xc7\x18-\xa3\xb7\xf2\x0czc-\xd9\xd3\xa3\x06#x" +
	"\x90\x94\xf9t'\xaa1&\\v\xb9\xb6\xc4\xcc\xeer" +
	"\xf5\x04:\xd4\xf1\xa0\xfc?\x0e\xa2A\xc3\xaf\x06[\x89" +
	"\xb3\xe8N\xc4}\x1c6ZU\xbb\x9b\xc5\x02\xe9T<" +
	"\xc7W\xd3\xa5\x9a\x1dj\x17\x9ei\x04\x83\xd8\xefj\x98" +
	"U\xc5b\x84\x94\x11<(\xc5\x1cD\xd5\xae.\x13[" +
	"\x96F|\x19\x00\xe2\x002\x89?\xe6\xafb\xfe\x82O" +
	">\xaf\xac\xe5\xc4\xc8\xa0 \x91\xe0\"\x80\x82L\x93S" +
	"\xb7\x1d\xf7E`\x0d%c\xe2\xdbRx\xa1I\x09\x16" +
	"\xf2\xc3\xaa\xdd\x9d\xdd\x19\x8b-\xeb\x1e\x86L\x1a#\xb6" +
	"<\x85\x07\xe5\"\x0e\xa2\xf4\xd5d\x8d\xad4\xc2\xb6f" +
	"\xe8\x16\x14$JP\x036\x9fbC~\xd5N\xe9\x04" +
	"\x93vd\x98\xb6\x83\xfc\xd2\xceE\xf0o\xb3\xdei\xa0" +
	"\xa1\x1d\xde\x8f \xeaP\xe6R\x17G\xd1puP[" +
	"\x8a\xe5\x00\xb6\xfc\xa6FwA\xb1\xb1\xde'\xebF\x00" +
	"#*\x8c8gR\x1eLB\xc8\x97\x03<\xf8\x0a " +
	"!\x1ei$\x1d\x1fN\xc6\x0b\x81\x03\x88AdI\xa4" +
	"\xc3#\xc8p1!\xe7\x81\xc2d\xe9<h@\xc8W" +
	"@\xc6\xc7\x90\xf1\x9cU\x14)K%t\xbc\x90\x8c\xcb" +
	"d<7\xb7\x10r\x11\x92\xc6\xd2\xf1b2^A\xc6" +
	"\x87q\x850\x0c!\xa9\x0c\x9a\x10\xf2\x8d!\xe3Ud" +
	"\\\xe8/$y\x83T\x09\xf3\x10\xf2U\x90\xf1:2" +
	">\x9c/\x84\xe1\x08I\xd5\x94\xbe\x8a\x8c_H\xc6\xf3" +
	"r\x0a!\x0f!\xa9\x9e\xf29\x85\x8c_\x04\x03\xac(" +
	"\xbf[\xb5\xbaa$\xe2`$\x82|K\xbb\x09;\xae" +
	"\xd1\xa3\x11\x01%~Y\xb34\xd39O\x9e\x00\x0e\xdb" +
	"\xdd\x8e\xdeV\x86\x8c\xc0\"-\x01\xfc\xa3\x9a\xd5\xaa\xe9" +
	":\x0e\x90\xf3\x1d\x7f\x83@\x00\x1b\xeb\xb6\xbbT\xc4\xc2" +
	"\xe6\xd9DT\xe2\xee\x1ccJk(W\xce\xf4\xd5\x04" +
	"\x0d7\x19H;\xef\x1c_\x0d^\xaeY\xb6\xe5\x82\x84" +
	"\xb4\xf1\"F\x97\x9d#q\xd0\x0c6-\xc7Wf:" +
	"\x1f\xff\xc8\x81O\xb5k[M\xa4@\x99\xa2A\x13\x13" +
	"\x0dL\xdc\xe3\x1er[\xed\xba\x82\xc9\xdf\x86\x92\x1e\x89" +
	"X=8\x95+>k\xee\xe7\xf8jl#\xe2\xefv" +
	"\xa3\xcb?9\x19e\xac\xad\x11'[J\x16\xc8\xc1\xf1" +
	"\xd1\xe9,\xc1\x8c=/H\x94\x043\xf8\x7f\xa2\x97N" +
	"l\xfb\xbbS\xc9)\x13\xd4I\xb5\xb3\xa5\x01\xcdL\x15" +
	"\x84'%\xb4\xec*\xd9Lx\xf4d\xd1\xf9M\xac\xda" +
	"\xb8UE\x1e\x13\xeb),;\x95uY}\xba?\xd5" +
	"\xc2\xf3\x12\x96\xe4\x86\x926&\xf8\xf7jv\xf7\xf7\xbb" +
	"\x8d\x10\x1b\xe8u\x8c\x03s\xb0\xed'\xe1%\xabS\xc5" +
	"\xa0\xb0AjM/r\xf7`\xa7M\xf7gz\x8cP" +
	"H\xb3\x87\xae\xaa\xdc\x11\xf5izW\x10\xcbA0\xba" +
	"d\xac\xdbf\x1f\x02\xa5\xc0\x15\x81Jd\x7f\x0d\x0fJ" +
	"7s\xc20Q\xee\x0d<(A\xa6\xa0\xa2\x11\xca\x00" +
	"\x0f\xca*\x12*\xe2\x15\x15\xb6\x1e\x93\xe4\x8a\x85\x90\xd5" +
	"\xe5\xfah[\xedr\xa1%\x19\x1b\x85 ?\xa0\xda\xf8" +
	"l3\x92\xb8\xb3\xc9xzR8\x92\xa6\x0c\x8ed\xa5" +
	"e\xfa[\x193[\x19\xb0\xec\xd6l\xd0\x0a\xd1\x98\x9f" +
	"*b0HJ\xb9\x1d'\x83$H0\x83\x9b's" +
	"Gt\xe2\x1a\x07[Cf\x9c\x99244$@\xbf" +
	"\xa7\xd3\xc48\x90\x80\xfcnu8{\xc8\xbf\xc0\"\xae" +
	"A\x18J'-\x04\x8d-\x0c\xdb\x9a`\xe8\x16\x9b\x1f" +
	"\xa7\x8b\x02\x83\xceHj8o\xbb\x84\xe9\x1c\xae\xa6w" +
	"\x1aP\x90\xb8]\x1f\xe0\xed\x06\x1e\xa76O\xacj\x90" +
	"\xf28\xc9q\x88\xd6\x00Q\x02\xcfH&\xca\xc7R\xd1" +
	"0\xc6\xa6\xdc\x8b\xe5\x90\xd6\xd5m\xcb\xc4\xd1xd\xe2" +
	"6(\xa2w\xf8\x9aM\xf8\xf2\xf2\xa0,`\xcc\xaf\xb9" +
	"\x03!\xe5r\x1e\x94E\xcc)S\x88M.\x88\x9d\xc7" +
	"\xa4jd\xb4S\xd3\xbb\xb0\x196\x91\xa0\xe9\xb6k\xa6" +
	"\xb1,\x96I\xdc\xdc\xce\x8f\xec\xb583\x88UsP" +
	"\xc0\x1f\x9e.\xcee\xae_\xf8\x8dp\xdf\xff\xe9!d" +
	"63#\x10H\x05J\x92\x03!!\x1c\x90\xe4fL" +
	"\x84\xdc`\x9b2'\xf8\xe7R\xf4\xb6\x90s\x8e\xd2\x19" +
	"\xb3\x9e\x0d\xb0\x99\xd1\xda\\\xd3\x83MK3t\xa7:" +
	"\x91\xad\xc82BS\xb7|\xf5\x8f\xc0\x9c\x81gm\x96" +
	"\xa0uv\xa6>ic\xe2\x81\xeb\x9b\xe8,\xad\xb3\x13" +
	"\x9bX\xe7\xfcX\xee\xc0v/\xc6\xbal\xf7\x1a\xb2\xbf" +
	"\x91\xba[\xe2\xd8\x8a]\x1e6\x12\xc7\xb6\x9e\x07\xe5)" +
	"\xc6\xb6\xb6\x10\xdbz\x94\x07e\x07s\xc2^\"\x83\xbf" +
	"\xe3Ay\x97\x89c\xfb\xc8\xeb{xP\x0e\x93|'" +
	"'v3p\x88(\xf5c\x1e\xda\x98dG<C0" +
	"\xc3\xe9x\xca\xe4Q\x03\x01\xd6\x85\xb2\xbef\x14\x8a\x95" +
	"Uz\x86\"\xd0\xbat\xc3\x1c\x82\xc03\xe0}\xf7&" +
	"+\xf6\xb81\x84\xcd\xae!\x9e\xd3\x82jP\xf3\xdb\x04" +
	"\xc0\xa4%r\xb4\x94\x97\xcaD\xc2\xf4r\"\x86\xff\xd2" +
	"\x9f\xf88\x9e\x1e\x1c\xa6\xf84\xdea\x90\x97\x1f\x8cn" +
	"\xbaU\xbd\x0b\x0fm$\x9fG\x17\xeaX\xbe\\\xb3l" +
	"\xce0\xfbb\xf0F\xee4LY\x95\xf3;\xb5 \xce" +
	"\xe2\xeehz\xaa\xbb#B\xb9\x8a\x07\xe5N\xc6D\xd6" +
	"NJ\\(\xb9&\xb2\x8e\x18\xd3\xed<(\xeb\x07\x98" +
	"~\xa3\x9f\xb2\x9fHS\xb1\x1a\x80\x82D\xcbO\xcc\xe3" +
	"\xe4\xebx\xb9=xx\xa5\x89;\xb1\xb9\xc8\xc8\xce\xef" +
	"\xc5K\xebTI|\xf2\xc1lc\xeaJ)\xca\"Y" +
	"\x95\x95\xb2r$\x09\xe78tI\xcf\xf5\xfa\x8b\x13\xf0" +
	">)}\xb0\xb5\x106\"\xb6\x0f\xf1\xd8\x9f\xb1\xae\xd2" +
	"\x1c\xc0\xba\xad\xd9}h\xe8\xa0=\xda\x09\xda\x1d\x06\x1f" +
	"\xb1e#b\xca\xfe\x88I\xb2\x07\x99d\xf1\xb1;G" +
	"b+\x0c,\xee`\x10\xb0\xc3\xb4\xd6\x10G\xc0a\xc6" +
	"VB\x842\xc8\x83\xb2<q\xcf\x18!>\xc2\x8eA" +
	"\xe5h|\xa9v$0\x15\x03\x8f\xd1\xab3\xf5\x83\x94" +
	"\xb1=\xaaY\x0biB\xce\x94!\xb2\x86\x96Y\xa3\xa8" +
	"\x14\x85\xe1\xb3\xae\xd8\x11\xe8\x16R\x97b\xe2\xb1\xa9\x0f" +
	"\x10\x86\x80e\x01\xad\xb3\x13\x0a\x12\xedF\x19b/\x1b" +
	"\xd3RU8\x9b\x12S\xaf\x8c\xd3\x0d\xb2\x9b!0{" +
	"\xaar;\x9b\xda2iLZQ\xc6,\xbf\x0d[B" +
	"$H\xd3\xb1L\xe9\xd5\xa4\xa1\xd2\xab0\xe3sX\xe3" +
	"J\x7f7\x9d\x1fR\xad\xa5\x19l)s%\xe9\x7f\xa8" +
	"\x16\x12\xbb\xe1\x1a\x00&RF\x96e\x91\x84\xfc\xd3D" +
	"\x16\xa2\xa8n\xcd\xb2\x0d\xb3oH\xe5Wp\xb02N" +
	"\x97\x08snOY\x06$\xcc.\x92\xe2N\xe7\x1f\xab" +
	"_\xd3\xcd\x0d\x0e\x87C\xe7R\xce\xf5\xc9\xff\xce-\x8d" +
	"\x13'\x9c\x03\x9a6\xf4\xce\x01\x1f\xb1\xe2\x0bi\x17\x81" +
	"\xd3|\x0dN\xbb\xbat\x0f4\xc4o\xb7\x13\x8d#\xe0" +
	"\xf4\x1eI}@\xbb\x08@\x00\xcem\x1c\x06\xa7\x05Z" +
	"R\xa1\x1cqR;\x08\xc0\xbbm\xb7\xe0\xb4\x04I\xcd" +
	"t\xe6KA\x80\x1c\xb7e\x18\x9cvB\xa9\x9e\xde_" +
	"W\x82\x00\xb9n\xcb+8}\xc1R\x09]w$\x08" +
	"0\xcc\xed\xd1\x04\xa7\xe1P\x02\xf2T<!\x80\xe06" +
	"t\x83\xd3\xcb&\x1e*G\x9c\xb8_\x80\xe1n\x93$" +
	"8]\xfb\xe2\x9b\x0d\x88\x13w\x0a\x90\xe76\xf3\x81\xd3" +
	"\x84*\xfe\x96\xcc\xb9E\x80s\xdc\x06tpzc\xc5" +
	"\xcd7!N\xdc(\xc0\xb9nk38=\xa5\xe2:" +
	"2g\xbf\x00#\xdc~;p\xba\xb3\xc5\xc8t\xc4\x89" +
	"\x9a\xe0\xa1\x17V^\xc8\x0fj\x96\xed\x05\xc1\xaf\xd2\xcb" +
	"\xf4\xa5\x01\xcd\xf4\xc6\x12\x98\x1e\xf24\xfe\x87 */" +
	"\x08aM\xf7\x82\x87\xa2t/\xe4\x13\xef\xee\x85\xa8S" +
	"\x14@\x8d\xb1\xb2\x80\x17<4\x8d\xf3:\xa5\xe1\xe4[" +
	"\xeb!]\xbb\x830\x18\xff\xb68U\x9c$^\xab\x9b" +
	"\x07\xc5f\xfc\xdb2\x12\x13\xc3<(73\xfe\xad\xaf" +
	"-\x01\xc9b7m\x0b{u\xc43\x911f\xf2\x0b" +
	"{\x91\xc0\xc6KJ\xda\x86{\x92\x9aqb\x99\x14F" +
	"\xd0\x93u]Iw\xee\xe3\xf8!*\x183i\xfd\xa9" +
	"U\xd5\xc0\xcc\x84F\xe7\xe3\xbe\xda+\xd5`\x84\xc3r" +
	"X\xd5LY\xd3e\xbb\x1b\xcb~#\x9fL\x91|\x8f" +
	"\x95\xb2\xb4]\x9e\xfa\xa2S\xe8Q\x83YEa\x13[" +
	"8q\xc3\x98\xa9\x00AV\x9b\xc5\x83\xd2\xea\xde\x09\x89" +
	"-\x0d\x89\xa2D\x92\xbbc+\xed\x9eN\xc3\xf4gy" +
	"9\xa9\xe9)\x1da\x8a\xc8AL=eQ\x87u\x81" +
	"\x04\xe2k\xac\x0b\x1c\x900\xa5]`n\xec\x1c4\xdb" +
	"<\x0e\x0d\x0d\x17\x9b :C\xb6h\xd54G\xd6l" +
	"\x1c\x8a5\x1f\xf4\xaa\x96\xbcT\x0b\x06q@\xee\xe8\xa3" +
	"j\xed\xf2\xa3,\xaa<M\x09!\xbb\x87!\xad\x94\x07" +
	"^3\x0d\xc0\x89\x99%\xed\xa8\x9e9\xa2\xf3\xb2\x86\xb2" +
	"M\xcc\xb9u\x8e({n\xa3\x1d\xaa\x85\x07\\|'" +
	"s\xb8\xb2C\xf5/\xc5z\xc0\xe58\xacZV\xafa" +
	"\x06R]\x95\x9f\x93\xa9$\x95M\x07L\xbc\x19\xc3A" +
	"\x07i!\x87{\xff\x90a\xd2D\xcd5\x05 b\xc1" +
	"f\xb6\xb7MI\xbefP\xecMw\x03x\xd6\xe7\x80" +
	"M!\x87:\x07\xc4\x91\xb7\xaa\x9a\x89\x86\xf6e\xc7\xa3" +
	"m8L\xbc\x89\xce\xd9\xb4\xea\x12\xa0\xd5\x18M\xef\x92" +
	"=$\xb3\xb6\xce\xd2\x99Y\xa6\x7fp-V\x08X\xf6" +
	"\x10\x15\xdaL-\x93\xa9d\xc4f\xbcn{&\x84\xe1" +
	"\\\xc4\xc1\xb9Y9\xcf\xcc\xa5\xf6Aw\xa5\xce+\xe9" +
	"\x0a\xed\x9a\xdei0\xaar?I\x1c\xa0*!\xdd\xcd" +
	"U&\x93\xe5gR\xc0VA\x01\x9b\xf3\x09\x188m" +
	"\xd1\x92HAW.\x05l\xce\xf7\x02\xe0|\x13$\x9e" +
	"\x9a\x1ek\xed\xe3\xdc\xcf\xb8\xc0\xf9\x00G<@\x90\xd1" +
	">\x02\xd6\x9c\xe6lp\xbe\x0b\x12w\x11\x14\xb3\x9d@" +
	"5\xa7c\x1d\x9c\xbeh\xf1i\xf2\xec\x11\x02\xd4\x9c\xde" +
	"~p\xbe\x02\x1076!N\\G`\x9a\xd3S\x0f" +
	"\xceg\x10b\xff<\xc4\x89}\x04\xa59_\\\x81\xd3" +
	"0-\x86\x08\xdaR\x09Js>\xe8\x02\xe7\xd3*\xb1" +
	"\x9d\xac\xd7,\x08A\xa3\xcb\x0b\x8d\xb1\xd4\xce\x0b\x82\xad" +
	"vQ@\x14\xfbK\xd5\xebu\x13\x05/D\x1d`C" +
	"\x9b\x08\xf3\x89\xa8\xbd\xe0\xa1\xd7o\xc9\xa0h @\x9e" +
	"\xc1\xb76\xd3\xe3C\x05\xee|\x8d\x03\xce\xc7\x1a\xa2H" +
	"\xb6\x98+8\xf9\xa8\x17\x94\x11\x00\x89\x0f\x0e\x10J4" +
	"{#\x94\xf8\x9e4S\x9e\x90h\xf6KU\x81nH" +
	"\xf8\xa6\xec\xfb\xa2h\xccMQ\xa9Ou#;\x8f\xb9" +
	"\x915\x0d#\x91[\x86\xd4\xe5\xb3p8\x16\x152\xa5" +
	"\xde\x89\x9a\xe2\x90\xd7Sd\x13&\x0e\x07]\x04\xf4\xdf" +
	"\x01\x00\x00\xff\xff`G)n"

func init() {
	schemas.Register(schema_ea883e7d5248d81b,
		0x8167eafcc8695b1c,
		0x81b6b14efe0127c4,
		0x83e6cb306e77e311,
		0x87c49e302c6516f8,
		0x884238694e8b8d88,
		0x8c8ac84e843e98c6,
		0x8cdf119f2d20b743,
		0x8ed051e9369ac720,
		0x90027b0333e503ee,
		0x943e5e6dc1abe7b8,
		0x94ee8cc65b181abe,
		0x956cdf6b89128744,
		0x97e9d1c7a00e713e,
		0x9ba7a818970a029c,
		0x9cb31f0ede4f5117,
		0x9eadc3c7605bd657,
		0x9ec3cfd8ff4bae06,
		0x9efc974402f016f6,
		0x9f647c7028225a97,
		0x9fe8d2cd92c27a38,
		0xa2305f2ea25a3484,
		0xa3b41ad02b8645ed,
		0xa4efd353c57d2b85,
		0xa5753d28ca12d2ba,
		0xa596c7cd35022b4b,
		0xa9095b4cff1e5634,
		0xa97d67096ee7d46d,
		0xa99c622e110c1203,
		0xab1e48e58e4c69af,
		0xab89c6fc9bf26f2a,
		0xad2dd70d5d17decb,
		0xaff62edfdbfe53d0,
		0xb030fc18cb3b0e61,
		0xb05bd83a34de71b7,
		0xb05ff814dad43968,
		0xb262e0d6c2474d9c,
		0xb47c58aa23289d55,
		0xb4b684abc5f91831,
		0xb76f3dc1dcf4fdf1,
		0xb7d0dd6b467e7539,
		0xb81842457ebf1a07,
		0xba0de490234c27af,
		0xbb5ea9a03dfddab3,
		0xbb6cabb7ec800819,
		0xbc4d5c31427dc498,
		0xbda949777c149f4b,
		0xbdb679ec96303b53,
		0xbe71bb7b0ed4539a,
		0xbea1cb452f61974f,
		0xbf1cf3d6e654e947,
		0xc0dd66dedad92ef8,
		0xc3b93ffa6fc9f160,
		0xc538e655744911c7,
		0xc53b6f91dec2daaa,
		0xc6920dee4bb4a443,
		0xc920e06b8110e91f,
		0xc9558eac26b0f15e,
		0xc9601ec89a6aa066,
		0xc9ac448a01179aec,
		0xc9b3a8263f6853d7,
		0xccf4f28c8951edf6,
		0xd01613feea87ee6a,
		0xd0b0c690855bac45,
		0xd289114a83107db7,
		0xd4353ecb879426a0,
		0xd49a2570fb5a4342,
		0xd5616267acef42a7,
		0xd78724f6fbd5c5c5,
		0xd7ef486de484610d,
		0xd81779091ced5513,
		0xd9459f2361338d96,
		0xd95473f6f8a89a69,
		0xdb27e243a580d2f0,
		0xdba8e30445acc3f4,
		0xdf3a2e83d0d533b3,
		0xe0f49db8c42c72b2,
		0xe154e487144bf3c2,
		0xe1dd2f0c85965fd6,
		0xe21b4052865cf7c4,
		0xe275355b4989aaee,
		0xe2b3585db47cd4f9,
		0xe2f81b4403ef433b,
		0xe478c8af63857432,
		0xe54de22194de748a,
		0xe71560d8bc06c6fd,
		0xe826e800c318a7c4,
		0xe92935bf20cc2856,
		0xecb10f87fbe0d6c5,
		0xed03ac5ef50453fb,
		0xf0f86c25885c5fe0,
		0xf135f1bd71a1071f,
		0xf3243256580294f3,
		0xf4d42db113af3a4b,
		0xf580568dec00ba9f,
		0xf7250939585a23f6,
		0xf8551f83bb42e152,
		0xf9b3f22591273e08,
		0xf9b772853fd93ea9,
		0xf9be86640a05f28e,
		0xfa04b4272d0ffcd9,
		0xfaa680ef12c44624,
		0xfc487818328b97ef,
		0xfd36e047f496768b,
		0xfd86771dd5950237,
		0xffd34f15ec608676)
}
