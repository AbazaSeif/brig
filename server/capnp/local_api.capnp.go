// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	context "golang.org/x/net/context"
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

// StatInfo is a stat-like description of any node
type StatInfo struct{ capnp.Struct }

// StatInfo_TypeID is the unique identifier for the type StatInfo.
const StatInfo_TypeID = 0xa2305f2ea25a3484

func NewStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6})
	return StatInfo{st}, err
}

func NewRootStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6})
	return StatInfo{st}, err
}

func ReadRootStatInfo(msg *capnp.Message) (StatInfo, error) {
	root, err := msg.RootPtr()
	return StatInfo{root.Struct()}, err
}

func (s StatInfo) String() string {
	str, _ := text.Marshal(0xa2305f2ea25a3484, s.Struct)
	return str
}

func (s StatInfo) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s StatInfo) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s StatInfo) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s StatInfo) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s StatInfo) TreeHash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s StatInfo) HasTreeHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetTreeHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s StatInfo) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s StatInfo) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s StatInfo) Inode() uint64 {
	return s.Struct.Uint64(8)
}

func (s StatInfo) SetInode(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s StatInfo) IsDir() bool {
	return s.Struct.Bit(128)
}

func (s StatInfo) SetIsDir(v bool) {
	s.Struct.SetBit(128, v)
}

func (s StatInfo) Depth() int32 {
	return int32(s.Struct.Uint32(20))
}

func (s StatInfo) SetDepth(v int32) {
	s.Struct.SetUint32(20, uint32(v))
}

func (s StatInfo) ModTime() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s StatInfo) HasModTime() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s StatInfo) ModTimeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s StatInfo) SetModTime(v string) error {
	return s.Struct.SetText(2, v)
}

func (s StatInfo) IsPinned() bool {
	return s.Struct.Bit(129)
}

func (s StatInfo) SetIsPinned(v bool) {
	s.Struct.SetBit(129, v)
}

func (s StatInfo) IsExplicit() bool {
	return s.Struct.Bit(130)
}

func (s StatInfo) SetIsExplicit(v bool) {
	s.Struct.SetBit(130, v)
}

func (s StatInfo) ContentHash() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s StatInfo) HasContentHash() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetContentHash(v []byte) error {
	return s.Struct.SetData(3, v)
}

func (s StatInfo) User() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s StatInfo) HasUser() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s StatInfo) UserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s StatInfo) SetUser(v string) error {
	return s.Struct.SetText(4, v)
}

func (s StatInfo) BackendHash() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return []byte(p.Data()), err
}

func (s StatInfo) HasBackendHash() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetBackendHash(v []byte) error {
	return s.Struct.SetData(5, v)
}

// StatInfo_List is a list of StatInfo.
type StatInfo_List struct{ capnp.List }

// NewStatInfo creates a new list of StatInfo.
func NewStatInfo_List(s *capnp.Segment, sz int32) (StatInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6}, sz)
	return StatInfo_List{l}, err
}

func (s StatInfo_List) At(i int) StatInfo { return StatInfo{s.List.Struct(i)} }

func (s StatInfo_List) Set(i int, v StatInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s StatInfo_List) String() string {
	str, _ := text.MarshalList(0xa2305f2ea25a3484, s.List)
	return str
}

// StatInfo_Promise is a wrapper for a StatInfo promised by a client call.
type StatInfo_Promise struct{ *capnp.Pipeline }

func (p StatInfo_Promise) Struct() (StatInfo, error) {
	s, err := p.Pipeline.Struct()
	return StatInfo{s}, err
}

// Single log entry
type Commit struct{ capnp.Struct }

// Commit_TypeID is the unique identifier for the type Commit.
const Commit_TypeID = 0xb47c58aa23289d55

func NewCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func NewRootCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func ReadRootCommit(msg *capnp.Message) (Commit, error) {
	root, err := msg.RootPtr()
	return Commit{root.Struct()}, err
}

func (s Commit) String() string {
	str, _ := text.Marshal(0xb47c58aa23289d55, s.Struct)
	return str
}

func (s Commit) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Commit) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Commit) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Commit) Msg() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Commit) HasMsg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Commit) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Commit) SetMsg(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Commit) Tags() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Commit) HasTags() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Commit) SetTags(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewTags sets the tags field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Commit) NewTags(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Commit) Date() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Commit) HasDate() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Commit) DateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Commit) SetDate(v string) error {
	return s.Struct.SetText(3, v)
}

// Commit_List is a list of Commit.
type Commit_List struct{ capnp.List }

// NewCommit creates a new list of Commit.
func NewCommit_List(s *capnp.Segment, sz int32) (Commit_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Commit_List{l}, err
}

func (s Commit_List) At(i int) Commit { return Commit{s.List.Struct(i)} }

func (s Commit_List) Set(i int, v Commit) error { return s.List.SetStruct(i, v.Struct) }

func (s Commit_List) String() string {
	str, _ := text.MarshalList(0xb47c58aa23289d55, s.List)
	return str
}

// Commit_Promise is a wrapper for a Commit promised by a client call.
type Commit_Promise struct{ *capnp.Pipeline }

func (p Commit_Promise) Struct() (Commit, error) {
	s, err := p.Pipeline.Struct()
	return Commit{s}, err
}

// A config entry (including meta info)
type ConfigEntry struct{ capnp.Struct }

// ConfigEntry_TypeID is the unique identifier for the type ConfigEntry.
const ConfigEntry_TypeID = 0x974c11f8cfed4247

func NewConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func NewRootConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func ReadRootConfigEntry(msg *capnp.Message) (ConfigEntry, error) {
	root, err := msg.RootPtr()
	return ConfigEntry{root.Struct()}, err
}

func (s ConfigEntry) String() string {
	str, _ := text.Marshal(0x974c11f8cfed4247, s.Struct)
	return str
}

func (s ConfigEntry) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ConfigEntry) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ConfigEntry) Val() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ConfigEntry) HasVal() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) ValBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetVal(v string) error {
	return s.Struct.SetText(1, v)
}

func (s ConfigEntry) Doc() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s ConfigEntry) HasDoc() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DocBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDoc(v string) error {
	return s.Struct.SetText(2, v)
}

func (s ConfigEntry) Default() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s ConfigEntry) HasDefault() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DefaultBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDefault(v string) error {
	return s.Struct.SetText(3, v)
}

func (s ConfigEntry) NeedsRestart() bool {
	return s.Struct.Bit(0)
}

func (s ConfigEntry) SetNeedsRestart(v bool) {
	s.Struct.SetBit(0, v)
}

// ConfigEntry_List is a list of ConfigEntry.
type ConfigEntry_List struct{ capnp.List }

// NewConfigEntry creates a new list of ConfigEntry.
func NewConfigEntry_List(s *capnp.Segment, sz int32) (ConfigEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return ConfigEntry_List{l}, err
}

func (s ConfigEntry_List) At(i int) ConfigEntry { return ConfigEntry{s.List.Struct(i)} }

func (s ConfigEntry_List) Set(i int, v ConfigEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s ConfigEntry_List) String() string {
	str, _ := text.MarshalList(0x974c11f8cfed4247, s.List)
	return str
}

// ConfigEntry_Promise is a wrapper for a ConfigEntry promised by a client call.
type ConfigEntry_Promise struct{ *capnp.Pipeline }

func (p ConfigEntry_Promise) Struct() (ConfigEntry, error) {
	s, err := p.Pipeline.Struct()
	return ConfigEntry{s}, err
}

// One History entry for a file
type Change struct{ capnp.Struct }

// Change_TypeID is the unique identifier for the type Change.
const Change_TypeID = 0xd01613feea87ee6a

func NewChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return Change{st}, err
}

func NewRootChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return Change{st}, err
}

func ReadRootChange(msg *capnp.Message) (Change, error) {
	root, err := msg.RootPtr()
	return Change{root.Struct()}, err
}

func (s Change) String() string {
	str, _ := text.Marshal(0xd01613feea87ee6a, s.Struct)
	return str
}

func (s Change) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Change) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Change) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Change) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Change) Change() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Change) HasChange() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Change) ChangeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Change) SetChange(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Change) Head() (Commit, error) {
	p, err := s.Struct.Ptr(2)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasHead() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Change) SetHead(v Commit) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewHead sets the head field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewHead() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) Next() (Commit, error) {
	p, err := s.Struct.Ptr(3)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasNext() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Change) SetNext(v Commit) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewNext sets the next field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewNext() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) MovedTo() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Change) HasMovedTo() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Change) MovedToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Change) SetMovedTo(v string) error {
	return s.Struct.SetText(4, v)
}

func (s Change) WasPreviouslyAt() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s Change) HasWasPreviouslyAt() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Change) WasPreviouslyAtBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s Change) SetWasPreviouslyAt(v string) error {
	return s.Struct.SetText(5, v)
}

// Change_List is a list of Change.
type Change_List struct{ capnp.List }

// NewChange creates a new list of Change.
func NewChange_List(s *capnp.Segment, sz int32) (Change_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6}, sz)
	return Change_List{l}, err
}

func (s Change_List) At(i int) Change { return Change{s.List.Struct(i)} }

func (s Change_List) Set(i int, v Change) error { return s.List.SetStruct(i, v.Struct) }

func (s Change_List) String() string {
	str, _ := text.MarshalList(0xd01613feea87ee6a, s.List)
	return str
}

// Change_Promise is a wrapper for a Change promised by a client call.
type Change_Promise struct{ *capnp.Pipeline }

func (p Change_Promise) Struct() (Change, error) {
	s, err := p.Pipeline.Struct()
	return Change{s}, err
}

func (p Change_Promise) Head() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

func (p Change_Promise) Next() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(3)}
}

// Represent two differing files
type DiffPair struct{ capnp.Struct }

// DiffPair_TypeID is the unique identifier for the type DiffPair.
const DiffPair_TypeID = 0xf8551f83bb42e152

func NewDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func NewRootDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func ReadRootDiffPair(msg *capnp.Message) (DiffPair, error) {
	root, err := msg.RootPtr()
	return DiffPair{root.Struct()}, err
}

func (s DiffPair) String() string {
	str, _ := text.Marshal(0xf8551f83bb42e152, s.Struct)
	return str
}

func (s DiffPair) Src() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasSrc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetSrc(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSrc sets the src field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewSrc() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s DiffPair) Dst() (StatInfo, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasDst() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetDst(v StatInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDst sets the dst field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewDst() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// DiffPair_List is a list of DiffPair.
type DiffPair_List struct{ capnp.List }

// NewDiffPair creates a new list of DiffPair.
func NewDiffPair_List(s *capnp.Segment, sz int32) (DiffPair_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DiffPair_List{l}, err
}

func (s DiffPair_List) At(i int) DiffPair { return DiffPair{s.List.Struct(i)} }

func (s DiffPair_List) Set(i int, v DiffPair) error { return s.List.SetStruct(i, v.Struct) }

func (s DiffPair_List) String() string {
	str, _ := text.MarshalList(0xf8551f83bb42e152, s.List)
	return str
}

// DiffPair_Promise is a wrapper for a DiffPair promised by a client call.
type DiffPair_Promise struct{ *capnp.Pipeline }

func (p DiffPair_Promise) Struct() (DiffPair, error) {
	s, err := p.Pipeline.Struct()
	return DiffPair{s}, err
}

func (p DiffPair_Promise) Src() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p DiffPair_Promise) Dst() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

// Difference between two commits
type Diff struct{ capnp.Struct }

// Diff_TypeID is the unique identifier for the type Diff.
const Diff_TypeID = 0xc9601ec89a6aa066

func NewDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func NewRootDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func ReadRootDiff(msg *capnp.Message) (Diff, error) {
	root, err := msg.RootPtr()
	return Diff{root.Struct()}, err
}

func (s Diff) String() string {
	str, _ := text.Marshal(0xc9601ec89a6aa066, s.Struct)
	return str
}

func (s Diff) Added() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasAdded() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Diff) SetAdded(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAdded sets the added field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewAdded(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Diff) Removed() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasRemoved() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Diff) SetRemoved(v StatInfo_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemoved sets the removed field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewRemoved(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Diff) Ignored() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(2)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasIgnored() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Diff) SetIgnored(v StatInfo_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewIgnored sets the ignored field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewIgnored(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Diff) Missing() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(3)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasMissing() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Diff) SetMissing(v StatInfo_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMissing sets the missing field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewMissing(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s Diff) Moved() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(4)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMoved() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Diff) SetMoved(v DiffPair_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMoved sets the moved field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMoved(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s Diff) Merged() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(5)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMerged() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Diff) SetMerged(v DiffPair_List) error {
	return s.Struct.SetPtr(5, v.List.ToPtr())
}

// NewMerged sets the merged field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMerged(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(5, l.List.ToPtr())
	return l, err
}

func (s Diff) Conflict() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(6)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasConflict() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s Diff) SetConflict(v DiffPair_List) error {
	return s.Struct.SetPtr(6, v.List.ToPtr())
}

// NewConflict sets the conflict field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewConflict(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(6, l.List.ToPtr())
	return l, err
}

// Diff_List is a list of Diff.
type Diff_List struct{ capnp.List }

// NewDiff creates a new list of Diff.
func NewDiff_List(s *capnp.Segment, sz int32) (Diff_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7}, sz)
	return Diff_List{l}, err
}

func (s Diff_List) At(i int) Diff { return Diff{s.List.Struct(i)} }

func (s Diff_List) Set(i int, v Diff) error { return s.List.SetStruct(i, v.Struct) }

func (s Diff_List) String() string {
	str, _ := text.MarshalList(0xc9601ec89a6aa066, s.List)
	return str
}

// Diff_Promise is a wrapper for a Diff promised by a client call.
type Diff_Promise struct{ *capnp.Pipeline }

func (p Diff_Promise) Struct() (Diff, error) {
	s, err := p.Pipeline.Struct()
	return Diff{s}, err
}

// A folder that a remote is allowed to access
type RemoteFolder struct{ capnp.Struct }

// RemoteFolder_TypeID is the unique identifier for the type RemoteFolder.
const RemoteFolder_TypeID = 0x8ed051e9369ac720

func NewRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RemoteFolder{st}, err
}

func NewRootRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RemoteFolder{st}, err
}

func ReadRootRemoteFolder(msg *capnp.Message) (RemoteFolder, error) {
	root, err := msg.RootPtr()
	return RemoteFolder{root.Struct()}, err
}

func (s RemoteFolder) String() string {
	str, _ := text.Marshal(0x8ed051e9369ac720, s.Struct)
	return str
}

func (s RemoteFolder) Folder() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RemoteFolder) HasFolder() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) FolderBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetFolder(v string) error {
	return s.Struct.SetText(0, v)
}

// RemoteFolder_List is a list of RemoteFolder.
type RemoteFolder_List struct{ capnp.List }

// NewRemoteFolder creates a new list of RemoteFolder.
func NewRemoteFolder_List(s *capnp.Segment, sz int32) (RemoteFolder_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RemoteFolder_List{l}, err
}

func (s RemoteFolder_List) At(i int) RemoteFolder { return RemoteFolder{s.List.Struct(i)} }

func (s RemoteFolder_List) Set(i int, v RemoteFolder) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteFolder_List) String() string {
	str, _ := text.MarshalList(0x8ed051e9369ac720, s.List)
	return str
}

// RemoteFolder_Promise is a wrapper for a RemoteFolder promised by a client call.
type RemoteFolder_Promise struct{ *capnp.Pipeline }

func (p RemoteFolder_Promise) Struct() (RemoteFolder, error) {
	s, err := p.Pipeline.Struct()
	return RemoteFolder{s}, err
}

// Info a remote peer we might sync with
type Remote struct{ capnp.Struct }

// Remote_TypeID is the unique identifier for the type Remote.
const Remote_TypeID = 0xbe71bb7b0ed4539a

func NewRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Remote{st}, err
}

func NewRootRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Remote{st}, err
}

func ReadRootRemote(msg *capnp.Message) (Remote, error) {
	root, err := msg.RootPtr()
	return Remote{root.Struct()}, err
}

func (s Remote) String() string {
	str, _ := text.Marshal(0xbe71bb7b0ed4539a, s.Struct)
	return str
}

func (s Remote) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Remote) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Remote) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Remote) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Remote) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Remote) HasFingerprint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Remote) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Remote) SetFingerprint(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Remote) Folders() (RemoteFolder_List, error) {
	p, err := s.Struct.Ptr(2)
	return RemoteFolder_List{List: p.List()}, err
}

func (s Remote) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Remote) SetFolders(v RemoteFolder_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated RemoteFolder_List, preferring placement in s's segment.
func (s Remote) NewFolders(n int32) (RemoteFolder_List, error) {
	l, err := NewRemoteFolder_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteFolder_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// Remote_List is a list of Remote.
type Remote_List struct{ capnp.List }

// NewRemote creates a new list of Remote.
func NewRemote_List(s *capnp.Segment, sz int32) (Remote_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Remote_List{l}, err
}

func (s Remote_List) At(i int) Remote { return Remote{s.List.Struct(i)} }

func (s Remote_List) Set(i int, v Remote) error { return s.List.SetStruct(i, v.Struct) }

func (s Remote_List) String() string {
	str, _ := text.MarshalList(0xbe71bb7b0ed4539a, s.List)
	return str
}

// Remote_Promise is a wrapper for a Remote promised by a client call.
type Remote_Promise struct{ *capnp.Pipeline }

func (p Remote_Promise) Struct() (Remote, error) {
	s, err := p.Pipeline.Struct()
	return Remote{s}, err
}

type LocateResult struct{ capnp.Struct }

// LocateResult_TypeID is the unique identifier for the type LocateResult.
const LocateResult_TypeID = 0xd95473f6f8a89a69

func NewLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func NewRootLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func ReadRootLocateResult(msg *capnp.Message) (LocateResult, error) {
	root, err := msg.RootPtr()
	return LocateResult{root.Struct()}, err
}

func (s LocateResult) String() string {
	str, _ := text.Marshal(0xd95473f6f8a89a69, s.Struct)
	return str
}

func (s LocateResult) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s LocateResult) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s LocateResult) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s LocateResult) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s LocateResult) Addr() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s LocateResult) HasAddr() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s LocateResult) AddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s LocateResult) SetAddr(v string) error {
	return s.Struct.SetText(1, v)
}

func (s LocateResult) Mask() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s LocateResult) HasMask() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s LocateResult) MaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s LocateResult) SetMask(v string) error {
	return s.Struct.SetText(2, v)
}

func (s LocateResult) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s LocateResult) HasFingerprint() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s LocateResult) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s LocateResult) SetFingerprint(v string) error {
	return s.Struct.SetText(3, v)
}

// LocateResult_List is a list of LocateResult.
type LocateResult_List struct{ capnp.List }

// NewLocateResult creates a new list of LocateResult.
func NewLocateResult_List(s *capnp.Segment, sz int32) (LocateResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return LocateResult_List{l}, err
}

func (s LocateResult_List) At(i int) LocateResult { return LocateResult{s.List.Struct(i)} }

func (s LocateResult_List) Set(i int, v LocateResult) error { return s.List.SetStruct(i, v.Struct) }

func (s LocateResult_List) String() string {
	str, _ := text.MarshalList(0xd95473f6f8a89a69, s.List)
	return str
}

// LocateResult_Promise is a wrapper for a LocateResult promised by a client call.
type LocateResult_Promise struct{ *capnp.Pipeline }

func (p LocateResult_Promise) Struct() (LocateResult, error) {
	s, err := p.Pipeline.Struct()
	return LocateResult{s}, err
}

// Info about our current user state
type Identity struct{ capnp.Struct }

// Identity_TypeID is the unique identifier for the type Identity.
const Identity_TypeID = 0xd49a2570fb5a4342

func NewIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func NewRootIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func ReadRootIdentity(msg *capnp.Message) (Identity, error) {
	root, err := msg.RootPtr()
	return Identity{root.Struct()}, err
}

func (s Identity) String() string {
	str, _ := text.Marshal(0xd49a2570fb5a4342, s.Struct)
	return str
}

func (s Identity) CurrentUser() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Identity) HasCurrentUser() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Identity) CurrentUserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Identity) SetCurrentUser(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Identity) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Identity) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Identity) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Identity) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Identity) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Identity) HasFingerprint() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Identity) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Identity) SetFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Identity) IsOnline() bool {
	return s.Struct.Bit(0)
}

func (s Identity) SetIsOnline(v bool) {
	s.Struct.SetBit(0, v)
}

// Identity_List is a list of Identity.
type Identity_List struct{ capnp.List }

// NewIdentity creates a new list of Identity.
func NewIdentity_List(s *capnp.Segment, sz int32) (Identity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Identity_List{l}, err
}

func (s Identity_List) At(i int) Identity { return Identity{s.List.Struct(i)} }

func (s Identity_List) Set(i int, v Identity) error { return s.List.SetStruct(i, v.Struct) }

func (s Identity_List) String() string {
	str, _ := text.MarshalList(0xd49a2570fb5a4342, s.List)
	return str
}

// Identity_Promise is a wrapper for a Identity promised by a client call.
type Identity_Promise struct{ *capnp.Pipeline }

func (p Identity_Promise) Struct() (Identity, error) {
	s, err := p.Pipeline.Struct()
	return Identity{s}, err
}

type MountOptions struct{ capnp.Struct }

// MountOptions_TypeID is the unique identifier for the type MountOptions.
const MountOptions_TypeID = 0xbc4d5c31427dc498

func NewMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func NewRootMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func ReadRootMountOptions(msg *capnp.Message) (MountOptions, error) {
	root, err := msg.RootPtr()
	return MountOptions{root.Struct()}, err
}

func (s MountOptions) String() string {
	str, _ := text.Marshal(0xbc4d5c31427dc498, s.Struct)
	return str
}

func (s MountOptions) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s MountOptions) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s MountOptions) RootPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s MountOptions) HasRootPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s MountOptions) RootPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s MountOptions) SetRootPath(v string) error {
	return s.Struct.SetText(0, v)
}

// MountOptions_List is a list of MountOptions.
type MountOptions_List struct{ capnp.List }

// NewMountOptions creates a new list of MountOptions.
func NewMountOptions_List(s *capnp.Segment, sz int32) (MountOptions_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return MountOptions_List{l}, err
}

func (s MountOptions_List) At(i int) MountOptions { return MountOptions{s.List.Struct(i)} }

func (s MountOptions_List) Set(i int, v MountOptions) error { return s.List.SetStruct(i, v.Struct) }

func (s MountOptions_List) String() string {
	str, _ := text.MarshalList(0xbc4d5c31427dc498, s.List)
	return str
}

// MountOptions_Promise is a wrapper for a MountOptions promised by a client call.
type MountOptions_Promise struct{ *capnp.Pipeline }

func (p MountOptions_Promise) Struct() (MountOptions, error) {
	s, err := p.Pipeline.Struct()
	return MountOptions{s}, err
}

// net status of a peer
type PeerStatus struct{ capnp.Struct }

// PeerStatus_TypeID is the unique identifier for the type PeerStatus.
const PeerStatus_TypeID = 0x8167eafcc8695b1c

func NewPeerStatus(s *capnp.Segment) (PeerStatus, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PeerStatus{st}, err
}

func NewRootPeerStatus(s *capnp.Segment) (PeerStatus, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PeerStatus{st}, err
}

func ReadRootPeerStatus(msg *capnp.Message) (PeerStatus, error) {
	root, err := msg.RootPtr()
	return PeerStatus{root.Struct()}, err
}

func (s PeerStatus) String() string {
	str, _ := text.Marshal(0x8167eafcc8695b1c, s.Struct)
	return str
}

func (s PeerStatus) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PeerStatus) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PeerStatus) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PeerStatus) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PeerStatus) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PeerStatus) HasFingerprint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PeerStatus) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PeerStatus) SetFingerprint(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PeerStatus) LastSeen() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PeerStatus) HasLastSeen() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PeerStatus) LastSeenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PeerStatus) SetLastSeen(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PeerStatus) RoundtripMs() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s PeerStatus) SetRoundtripMs(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s PeerStatus) Error() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PeerStatus) HasError() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PeerStatus) ErrorBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PeerStatus) SetError(v string) error {
	return s.Struct.SetText(3, v)
}

// PeerStatus_List is a list of PeerStatus.
type PeerStatus_List struct{ capnp.List }

// NewPeerStatus creates a new list of PeerStatus.
func NewPeerStatus_List(s *capnp.Segment, sz int32) (PeerStatus_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return PeerStatus_List{l}, err
}

func (s PeerStatus_List) At(i int) PeerStatus { return PeerStatus{s.List.Struct(i)} }

func (s PeerStatus_List) Set(i int, v PeerStatus) error { return s.List.SetStruct(i, v.Struct) }

func (s PeerStatus_List) String() string {
	str, _ := text.MarshalList(0x8167eafcc8695b1c, s.List)
	return str
}

// PeerStatus_Promise is a wrapper for a PeerStatus promised by a client call.
type PeerStatus_Promise struct{ *capnp.Pipeline }

func (p PeerStatus_Promise) Struct() (PeerStatus, error) {
	s, err := p.Pipeline.Struct()
	return PeerStatus{s}, err
}

// A single item that was killed by the gc
type GarbageItem struct{ capnp.Struct }

// GarbageItem_TypeID is the unique identifier for the type GarbageItem.
const GarbageItem_TypeID = 0xecb10f87fbe0d6c5

func NewGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func NewRootGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func ReadRootGarbageItem(msg *capnp.Message) (GarbageItem, error) {
	root, err := msg.RootPtr()
	return GarbageItem{root.Struct()}, err
}

func (s GarbageItem) String() string {
	str, _ := text.Marshal(0xecb10f87fbe0d6c5, s.Struct)
	return str
}

func (s GarbageItem) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GarbageItem) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GarbageItem) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GarbageItem) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GarbageItem) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s GarbageItem) HasContent() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GarbageItem) SetContent(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s GarbageItem) Owner() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GarbageItem) HasOwner() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GarbageItem) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GarbageItem) SetOwner(v string) error {
	return s.Struct.SetText(2, v)
}

// GarbageItem_List is a list of GarbageItem.
type GarbageItem_List struct{ capnp.List }

// NewGarbageItem creates a new list of GarbageItem.
func NewGarbageItem_List(s *capnp.Segment, sz int32) (GarbageItem_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GarbageItem_List{l}, err
}

func (s GarbageItem_List) At(i int) GarbageItem { return GarbageItem{s.List.Struct(i)} }

func (s GarbageItem_List) Set(i int, v GarbageItem) error { return s.List.SetStruct(i, v.Struct) }

func (s GarbageItem_List) String() string {
	str, _ := text.MarshalList(0xecb10f87fbe0d6c5, s.List)
	return str
}

// GarbageItem_Promise is a wrapper for a GarbageItem promised by a client call.
type GarbageItem_Promise struct{ *capnp.Pipeline }

func (p GarbageItem_Promise) Struct() (GarbageItem, error) {
	s, err := p.Pipeline.Struct()
	return GarbageItem{s}, err
}

type Version struct{ capnp.Struct }

// Version_TypeID is the unique identifier for the type Version.
const Version_TypeID = 0xe1b522247fc407ad

func NewVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func NewRootVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func ReadRootVersion(msg *capnp.Message) (Version, error) {
	root, err := msg.RootPtr()
	return Version{root.Struct()}, err
}

func (s Version) String() string {
	str, _ := text.Marshal(0xe1b522247fc407ad, s.Struct)
	return str
}

func (s Version) ServerVersion() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Version) HasServerVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Version) ServerVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Version) SetServerVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Version) ServerRev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Version) HasServerRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Version) ServerRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Version) SetServerRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Version) BackendVersion() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Version) HasBackendVersion() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Version) BackendVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Version) SetBackendVersion(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Version) BackendRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Version) HasBackendRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Version) BackendRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Version) SetBackendRev(v string) error {
	return s.Struct.SetText(3, v)
}

// Version_List is a list of Version.
type Version_List struct{ capnp.List }

// NewVersion creates a new list of Version.
func NewVersion_List(s *capnp.Segment, sz int32) (Version_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Version_List{l}, err
}

func (s Version_List) At(i int) Version { return Version{s.List.Struct(i)} }

func (s Version_List) Set(i int, v Version) error { return s.List.SetStruct(i, v.Struct) }

func (s Version_List) String() string {
	str, _ := text.MarshalList(0xe1b522247fc407ad, s.List)
	return str
}

// Version_Promise is a wrapper for a Version promised by a client call.
type Version_Promise struct{ *capnp.Pipeline }

func (p Version_Promise) Struct() (Version, error) {
	s, err := p.Pipeline.Struct()
	return Version{s}, err
}

type ExplicitPin struct{ capnp.Struct }

// ExplicitPin_TypeID is the unique identifier for the type ExplicitPin.
const ExplicitPin_TypeID = 0xdc876697979bc7e5

func NewExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func NewRootExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func ReadRootExplicitPin(msg *capnp.Message) (ExplicitPin, error) {
	root, err := msg.RootPtr()
	return ExplicitPin{root.Struct()}, err
}

func (s ExplicitPin) String() string {
	str, _ := text.Marshal(0xdc876697979bc7e5, s.Struct)
	return str
}

func (s ExplicitPin) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ExplicitPin) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ExplicitPin) Commit() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ExplicitPin) HasCommit() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetCommit(v string) error {
	return s.Struct.SetText(1, v)
}

// ExplicitPin_List is a list of ExplicitPin.
type ExplicitPin_List struct{ capnp.List }

// NewExplicitPin creates a new list of ExplicitPin.
func NewExplicitPin_List(s *capnp.Segment, sz int32) (ExplicitPin_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ExplicitPin_List{l}, err
}

func (s ExplicitPin_List) At(i int) ExplicitPin { return ExplicitPin{s.List.Struct(i)} }

func (s ExplicitPin_List) Set(i int, v ExplicitPin) error { return s.List.SetStruct(i, v.Struct) }

func (s ExplicitPin_List) String() string {
	str, _ := text.MarshalList(0xdc876697979bc7e5, s.List)
	return str
}

// ExplicitPin_Promise is a wrapper for a ExplicitPin promised by a client call.
type ExplicitPin_Promise struct{ *capnp.Pipeline }

func (p ExplicitPin_Promise) Struct() (ExplicitPin, error) {
	s, err := p.Pipeline.Struct()
	return ExplicitPin{s}, err
}

type FS struct{ Client capnp.Client }

// FS_TypeID is the unique identifier for the type FS.
const FS_TypeID = 0xe2b3585db47cd4f9

func (c FS) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) ListExplicitPins(ctx context.Context, params func(FS_listExplicitPins_Params) error, opts ...capnp.CallOption) FS_listExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_listExplicitPins_Params{Struct: s}) }
	}
	return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) ClearExplicitPins(ctx context.Context, params func(FS_clearExplicitPins_Params) error, opts ...capnp.CallOption) FS_clearExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_clearExplicitPins_Params{Struct: s}) }
	}
	return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) SetExplicitPins(ctx context.Context, params func(FS_setExplicitPins_Params) error, opts ...capnp.CallOption) FS_setExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_setExplicitPins_Params{Struct: s}) }
	}
	return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type FS_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	ListExplicitPins(FS_listExplicitPins) error

	ClearExplicitPins(FS_clearExplicitPins) error

	SetExplicitPins(FS_setExplicitPins) error
}

func FS_ServerToClient(s FS_Server) FS {
	c, _ := s.(server.Closer)
	return FS{Client: server.New(FS_Methods(nil, s), c)}
}

func FS_Methods(methods []server.Method, s FS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 16)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_listExplicitPins{c, opts, FS_listExplicitPins_Params{Struct: p}, FS_listExplicitPins_Results{Struct: r}}
			return s.ListExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_clearExplicitPins{c, opts, FS_clearExplicitPins_Params{Struct: p}, FS_clearExplicitPins_Results{Struct: r}}
			return s.ClearExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_setExplicitPins{c, opts, FS_setExplicitPins_Params{Struct: p}, FS_setExplicitPins_Results{Struct: r}}
			return s.SetExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// FS_stage holds the arguments for a server call to FS.stage.
type FS_stage struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stage_Params
	Results FS_stage_Results
}

// FS_list holds the arguments for a server call to FS.list.
type FS_list struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_list_Params
	Results FS_list_Results
}

// FS_cat holds the arguments for a server call to FS.cat.
type FS_cat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_cat_Params
	Results FS_cat_Results
}

// FS_mkdir holds the arguments for a server call to FS.mkdir.
type FS_mkdir struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_mkdir_Params
	Results FS_mkdir_Results
}

// FS_remove holds the arguments for a server call to FS.remove.
type FS_remove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_remove_Params
	Results FS_remove_Results
}

// FS_move holds the arguments for a server call to FS.move.
type FS_move struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_move_Params
	Results FS_move_Results
}

// FS_copy holds the arguments for a server call to FS.copy.
type FS_copy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_copy_Params
	Results FS_copy_Results
}

// FS_pin holds the arguments for a server call to FS.pin.
type FS_pin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_pin_Params
	Results FS_pin_Results
}

// FS_unpin holds the arguments for a server call to FS.unpin.
type FS_unpin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_unpin_Params
	Results FS_unpin_Results
}

// FS_stat holds the arguments for a server call to FS.stat.
type FS_stat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stat_Params
	Results FS_stat_Results
}

// FS_garbageCollect holds the arguments for a server call to FS.garbageCollect.
type FS_garbageCollect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_garbageCollect_Params
	Results FS_garbageCollect_Results
}

// FS_touch holds the arguments for a server call to FS.touch.
type FS_touch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_touch_Params
	Results FS_touch_Results
}

// FS_exists holds the arguments for a server call to FS.exists.
type FS_exists struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_exists_Params
	Results FS_exists_Results
}

// FS_listExplicitPins holds the arguments for a server call to FS.listExplicitPins.
type FS_listExplicitPins struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_listExplicitPins_Params
	Results FS_listExplicitPins_Results
}

// FS_clearExplicitPins holds the arguments for a server call to FS.clearExplicitPins.
type FS_clearExplicitPins struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_clearExplicitPins_Params
	Results FS_clearExplicitPins_Results
}

// FS_setExplicitPins holds the arguments for a server call to FS.setExplicitPins.
type FS_setExplicitPins struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_setExplicitPins_Params
	Results FS_setExplicitPins_Results
}

type FS_stage_Params struct{ capnp.Struct }

// FS_stage_Params_TypeID is the unique identifier for the type FS_stage_Params.
const FS_stage_Params_TypeID = 0x9ba7a818970a029c

func NewFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func NewRootFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func ReadRootFS_stage_Params(msg *capnp.Message) (FS_stage_Params, error) {
	root, err := msg.RootPtr()
	return FS_stage_Params{root.Struct()}, err
}

func (s FS_stage_Params) String() string {
	str, _ := text.Marshal(0x9ba7a818970a029c, s.Struct)
	return str
}

func (s FS_stage_Params) LocalPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stage_Params) HasLocalPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) LocalPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetLocalPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_stage_Params) RepoPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_stage_Params) HasRepoPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) RepoPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetRepoPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_stage_Params_List is a list of FS_stage_Params.
type FS_stage_Params_List struct{ capnp.List }

// NewFS_stage_Params creates a new list of FS_stage_Params.
func NewFS_stage_Params_List(s *capnp.Segment, sz int32) (FS_stage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_stage_Params_List{l}, err
}

func (s FS_stage_Params_List) At(i int) FS_stage_Params { return FS_stage_Params{s.List.Struct(i)} }

func (s FS_stage_Params_List) Set(i int, v FS_stage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Params_List) String() string {
	str, _ := text.MarshalList(0x9ba7a818970a029c, s.List)
	return str
}

// FS_stage_Params_Promise is a wrapper for a FS_stage_Params promised by a client call.
type FS_stage_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Params_Promise) Struct() (FS_stage_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Params{s}, err
}

type FS_stage_Results struct{ capnp.Struct }

// FS_stage_Results_TypeID is the unique identifier for the type FS_stage_Results.
const FS_stage_Results_TypeID = 0x884238694e8b8d88

func NewFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func NewRootFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func ReadRootFS_stage_Results(msg *capnp.Message) (FS_stage_Results, error) {
	root, err := msg.RootPtr()
	return FS_stage_Results{root.Struct()}, err
}

func (s FS_stage_Results) String() string {
	str, _ := text.Marshal(0x884238694e8b8d88, s.Struct)
	return str
}

// FS_stage_Results_List is a list of FS_stage_Results.
type FS_stage_Results_List struct{ capnp.List }

// NewFS_stage_Results creates a new list of FS_stage_Results.
func NewFS_stage_Results_List(s *capnp.Segment, sz int32) (FS_stage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_stage_Results_List{l}, err
}

func (s FS_stage_Results_List) At(i int) FS_stage_Results { return FS_stage_Results{s.List.Struct(i)} }

func (s FS_stage_Results_List) Set(i int, v FS_stage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Results_List) String() string {
	str, _ := text.MarshalList(0x884238694e8b8d88, s.List)
	return str
}

// FS_stage_Results_Promise is a wrapper for a FS_stage_Results promised by a client call.
type FS_stage_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Results_Promise) Struct() (FS_stage_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Results{s}, err
}

type FS_list_Params struct{ capnp.Struct }

// FS_list_Params_TypeID is the unique identifier for the type FS_list_Params.
const FS_list_Params_TypeID = 0xfd86771dd5950237

func NewFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func NewRootFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func ReadRootFS_list_Params(msg *capnp.Message) (FS_list_Params, error) {
	root, err := msg.RootPtr()
	return FS_list_Params{root.Struct()}, err
}

func (s FS_list_Params) String() string {
	str, _ := text.Marshal(0xfd86771dd5950237, s.Struct)
	return str
}

func (s FS_list_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_list_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_list_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_list_Params) MaxDepth() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_list_Params) SetMaxDepth(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_list_Params_List is a list of FS_list_Params.
type FS_list_Params_List struct{ capnp.List }

// NewFS_list_Params creates a new list of FS_list_Params.
func NewFS_list_Params_List(s *capnp.Segment, sz int32) (FS_list_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_list_Params_List{l}, err
}

func (s FS_list_Params_List) At(i int) FS_list_Params { return FS_list_Params{s.List.Struct(i)} }

func (s FS_list_Params_List) Set(i int, v FS_list_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_list_Params_List) String() string {
	str, _ := text.MarshalList(0xfd86771dd5950237, s.List)
	return str
}

// FS_list_Params_Promise is a wrapper for a FS_list_Params promised by a client call.
type FS_list_Params_Promise struct{ *capnp.Pipeline }

func (p FS_list_Params_Promise) Struct() (FS_list_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Params{s}, err
}

type FS_list_Results struct{ capnp.Struct }

// FS_list_Results_TypeID is the unique identifier for the type FS_list_Results.
const FS_list_Results_TypeID = 0xe92935bf20cc2856

func NewFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func NewRootFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func ReadRootFS_list_Results(msg *capnp.Message) (FS_list_Results, error) {
	root, err := msg.RootPtr()
	return FS_list_Results{root.Struct()}, err
}

func (s FS_list_Results) String() string {
	str, _ := text.Marshal(0xe92935bf20cc2856, s.Struct)
	return str
}

func (s FS_list_Results) Entries() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_list_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Results) SetEntries(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_list_Results) NewEntries(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_list_Results_List is a list of FS_list_Results.
type FS_list_Results_List struct{ capnp.List }

// NewFS_list_Results creates a new list of FS_list_Results.
func NewFS_list_Results_List(s *capnp.Segment, sz int32) (FS_list_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_list_Results_List{l}, err
}

func (s FS_list_Results_List) At(i int) FS_list_Results { return FS_list_Results{s.List.Struct(i)} }

func (s FS_list_Results_List) Set(i int, v FS_list_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_list_Results_List) String() string {
	str, _ := text.MarshalList(0xe92935bf20cc2856, s.List)
	return str
}

// FS_list_Results_Promise is a wrapper for a FS_list_Results promised by a client call.
type FS_list_Results_Promise struct{ *capnp.Pipeline }

func (p FS_list_Results_Promise) Struct() (FS_list_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Results{s}, err
}

type FS_cat_Params struct{ capnp.Struct }

// FS_cat_Params_TypeID is the unique identifier for the type FS_cat_Params.
const FS_cat_Params_TypeID = 0xa9095b4cff1e5634

func NewFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func NewRootFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func ReadRootFS_cat_Params(msg *capnp.Message) (FS_cat_Params, error) {
	root, err := msg.RootPtr()
	return FS_cat_Params{root.Struct()}, err
}

func (s FS_cat_Params) String() string {
	str, _ := text.Marshal(0xa9095b4cff1e5634, s.Struct)
	return str
}

func (s FS_cat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_cat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_cat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_cat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_cat_Params_List is a list of FS_cat_Params.
type FS_cat_Params_List struct{ capnp.List }

// NewFS_cat_Params creates a new list of FS_cat_Params.
func NewFS_cat_Params_List(s *capnp.Segment, sz int32) (FS_cat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_cat_Params_List{l}, err
}

func (s FS_cat_Params_List) At(i int) FS_cat_Params { return FS_cat_Params{s.List.Struct(i)} }

func (s FS_cat_Params_List) Set(i int, v FS_cat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Params_List) String() string {
	str, _ := text.MarshalList(0xa9095b4cff1e5634, s.List)
	return str
}

// FS_cat_Params_Promise is a wrapper for a FS_cat_Params promised by a client call.
type FS_cat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Params_Promise) Struct() (FS_cat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Params{s}, err
}

type FS_cat_Results struct{ capnp.Struct }

// FS_cat_Results_TypeID is the unique identifier for the type FS_cat_Results.
const FS_cat_Results_TypeID = 0x9fe8d2cd92c27a38

func NewFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func NewRootFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func ReadRootFS_cat_Results(msg *capnp.Message) (FS_cat_Results, error) {
	root, err := msg.RootPtr()
	return FS_cat_Results{root.Struct()}, err
}

func (s FS_cat_Results) String() string {
	str, _ := text.Marshal(0x9fe8d2cd92c27a38, s.Struct)
	return str
}

func (s FS_cat_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_cat_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_cat_Results_List is a list of FS_cat_Results.
type FS_cat_Results_List struct{ capnp.List }

// NewFS_cat_Results creates a new list of FS_cat_Results.
func NewFS_cat_Results_List(s *capnp.Segment, sz int32) (FS_cat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_cat_Results_List{l}, err
}

func (s FS_cat_Results_List) At(i int) FS_cat_Results { return FS_cat_Results{s.List.Struct(i)} }

func (s FS_cat_Results_List) Set(i int, v FS_cat_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Results_List) String() string {
	str, _ := text.MarshalList(0x9fe8d2cd92c27a38, s.List)
	return str
}

// FS_cat_Results_Promise is a wrapper for a FS_cat_Results promised by a client call.
type FS_cat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Results_Promise) Struct() (FS_cat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Results{s}, err
}

type FS_mkdir_Params struct{ capnp.Struct }

// FS_mkdir_Params_TypeID is the unique identifier for the type FS_mkdir_Params.
const FS_mkdir_Params_TypeID = 0xb030fc18cb3b0e61

func NewFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func NewRootFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func ReadRootFS_mkdir_Params(msg *capnp.Message) (FS_mkdir_Params, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Params{root.Struct()}, err
}

func (s FS_mkdir_Params) String() string {
	str, _ := text.Marshal(0xb030fc18cb3b0e61, s.Struct)
	return str
}

func (s FS_mkdir_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_mkdir_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_mkdir_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_mkdir_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_mkdir_Params) CreateParents() bool {
	return s.Struct.Bit(0)
}

func (s FS_mkdir_Params) SetCreateParents(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_mkdir_Params_List is a list of FS_mkdir_Params.
type FS_mkdir_Params_List struct{ capnp.List }

// NewFS_mkdir_Params creates a new list of FS_mkdir_Params.
func NewFS_mkdir_Params_List(s *capnp.Segment, sz int32) (FS_mkdir_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_mkdir_Params_List{l}, err
}

func (s FS_mkdir_Params_List) At(i int) FS_mkdir_Params { return FS_mkdir_Params{s.List.Struct(i)} }

func (s FS_mkdir_Params_List) Set(i int, v FS_mkdir_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Params_List) String() string {
	str, _ := text.MarshalList(0xb030fc18cb3b0e61, s.List)
	return str
}

// FS_mkdir_Params_Promise is a wrapper for a FS_mkdir_Params promised by a client call.
type FS_mkdir_Params_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Params_Promise) Struct() (FS_mkdir_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Params{s}, err
}

type FS_mkdir_Results struct{ capnp.Struct }

// FS_mkdir_Results_TypeID is the unique identifier for the type FS_mkdir_Results.
const FS_mkdir_Results_TypeID = 0xf3243256580294f3

func NewFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func NewRootFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func ReadRootFS_mkdir_Results(msg *capnp.Message) (FS_mkdir_Results, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Results{root.Struct()}, err
}

func (s FS_mkdir_Results) String() string {
	str, _ := text.Marshal(0xf3243256580294f3, s.Struct)
	return str
}

// FS_mkdir_Results_List is a list of FS_mkdir_Results.
type FS_mkdir_Results_List struct{ capnp.List }

// NewFS_mkdir_Results creates a new list of FS_mkdir_Results.
func NewFS_mkdir_Results_List(s *capnp.Segment, sz int32) (FS_mkdir_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_mkdir_Results_List{l}, err
}

func (s FS_mkdir_Results_List) At(i int) FS_mkdir_Results { return FS_mkdir_Results{s.List.Struct(i)} }

func (s FS_mkdir_Results_List) Set(i int, v FS_mkdir_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Results_List) String() string {
	str, _ := text.MarshalList(0xf3243256580294f3, s.List)
	return str
}

// FS_mkdir_Results_Promise is a wrapper for a FS_mkdir_Results promised by a client call.
type FS_mkdir_Results_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Results_Promise) Struct() (FS_mkdir_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Results{s}, err
}

type FS_remove_Params struct{ capnp.Struct }

// FS_remove_Params_TypeID is the unique identifier for the type FS_remove_Params.
const FS_remove_Params_TypeID = 0xa99c622e110c1203

func NewFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func NewRootFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func ReadRootFS_remove_Params(msg *capnp.Message) (FS_remove_Params, error) {
	root, err := msg.RootPtr()
	return FS_remove_Params{root.Struct()}, err
}

func (s FS_remove_Params) String() string {
	str, _ := text.Marshal(0xa99c622e110c1203, s.Struct)
	return str
}

func (s FS_remove_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_remove_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_remove_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_remove_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_remove_Params_List is a list of FS_remove_Params.
type FS_remove_Params_List struct{ capnp.List }

// NewFS_remove_Params creates a new list of FS_remove_Params.
func NewFS_remove_Params_List(s *capnp.Segment, sz int32) (FS_remove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_remove_Params_List{l}, err
}

func (s FS_remove_Params_List) At(i int) FS_remove_Params { return FS_remove_Params{s.List.Struct(i)} }

func (s FS_remove_Params_List) Set(i int, v FS_remove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Params_List) String() string {
	str, _ := text.MarshalList(0xa99c622e110c1203, s.List)
	return str
}

// FS_remove_Params_Promise is a wrapper for a FS_remove_Params promised by a client call.
type FS_remove_Params_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Params_Promise) Struct() (FS_remove_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Params{s}, err
}

type FS_remove_Results struct{ capnp.Struct }

// FS_remove_Results_TypeID is the unique identifier for the type FS_remove_Results.
const FS_remove_Results_TypeID = 0xc9b3a8263f6853d7

func NewFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func NewRootFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func ReadRootFS_remove_Results(msg *capnp.Message) (FS_remove_Results, error) {
	root, err := msg.RootPtr()
	return FS_remove_Results{root.Struct()}, err
}

func (s FS_remove_Results) String() string {
	str, _ := text.Marshal(0xc9b3a8263f6853d7, s.Struct)
	return str
}

// FS_remove_Results_List is a list of FS_remove_Results.
type FS_remove_Results_List struct{ capnp.List }

// NewFS_remove_Results creates a new list of FS_remove_Results.
func NewFS_remove_Results_List(s *capnp.Segment, sz int32) (FS_remove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_remove_Results_List{l}, err
}

func (s FS_remove_Results_List) At(i int) FS_remove_Results {
	return FS_remove_Results{s.List.Struct(i)}
}

func (s FS_remove_Results_List) Set(i int, v FS_remove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Results_List) String() string {
	str, _ := text.MarshalList(0xc9b3a8263f6853d7, s.List)
	return str
}

// FS_remove_Results_Promise is a wrapper for a FS_remove_Results promised by a client call.
type FS_remove_Results_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Results_Promise) Struct() (FS_remove_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Results{s}, err
}

type FS_move_Params struct{ capnp.Struct }

// FS_move_Params_TypeID is the unique identifier for the type FS_move_Params.
const FS_move_Params_TypeID = 0xb76f3dc1dcf4fdf1

func NewFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func NewRootFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func ReadRootFS_move_Params(msg *capnp.Message) (FS_move_Params, error) {
	root, err := msg.RootPtr()
	return FS_move_Params{root.Struct()}, err
}

func (s FS_move_Params) String() string {
	str, _ := text.Marshal(0xb76f3dc1dcf4fdf1, s.Struct)
	return str
}

func (s FS_move_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_move_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_move_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_move_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_move_Params_List is a list of FS_move_Params.
type FS_move_Params_List struct{ capnp.List }

// NewFS_move_Params creates a new list of FS_move_Params.
func NewFS_move_Params_List(s *capnp.Segment, sz int32) (FS_move_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_move_Params_List{l}, err
}

func (s FS_move_Params_List) At(i int) FS_move_Params { return FS_move_Params{s.List.Struct(i)} }

func (s FS_move_Params_List) Set(i int, v FS_move_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_move_Params_List) String() string {
	str, _ := text.MarshalList(0xb76f3dc1dcf4fdf1, s.List)
	return str
}

// FS_move_Params_Promise is a wrapper for a FS_move_Params promised by a client call.
type FS_move_Params_Promise struct{ *capnp.Pipeline }

func (p FS_move_Params_Promise) Struct() (FS_move_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Params{s}, err
}

type FS_move_Results struct{ capnp.Struct }

// FS_move_Results_TypeID is the unique identifier for the type FS_move_Results.
const FS_move_Results_TypeID = 0xab89c6fc9bf26f2a

func NewFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func NewRootFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func ReadRootFS_move_Results(msg *capnp.Message) (FS_move_Results, error) {
	root, err := msg.RootPtr()
	return FS_move_Results{root.Struct()}, err
}

func (s FS_move_Results) String() string {
	str, _ := text.Marshal(0xab89c6fc9bf26f2a, s.Struct)
	return str
}

// FS_move_Results_List is a list of FS_move_Results.
type FS_move_Results_List struct{ capnp.List }

// NewFS_move_Results creates a new list of FS_move_Results.
func NewFS_move_Results_List(s *capnp.Segment, sz int32) (FS_move_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_move_Results_List{l}, err
}

func (s FS_move_Results_List) At(i int) FS_move_Results { return FS_move_Results{s.List.Struct(i)} }

func (s FS_move_Results_List) Set(i int, v FS_move_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_move_Results_List) String() string {
	str, _ := text.MarshalList(0xab89c6fc9bf26f2a, s.List)
	return str
}

// FS_move_Results_Promise is a wrapper for a FS_move_Results promised by a client call.
type FS_move_Results_Promise struct{ *capnp.Pipeline }

func (p FS_move_Results_Promise) Struct() (FS_move_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Results{s}, err
}

type FS_copy_Params struct{ capnp.Struct }

// FS_copy_Params_TypeID is the unique identifier for the type FS_copy_Params.
const FS_copy_Params_TypeID = 0xc0dd66dedad92ef8

func NewFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func NewRootFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func ReadRootFS_copy_Params(msg *capnp.Message) (FS_copy_Params, error) {
	root, err := msg.RootPtr()
	return FS_copy_Params{root.Struct()}, err
}

func (s FS_copy_Params) String() string {
	str, _ := text.Marshal(0xc0dd66dedad92ef8, s.Struct)
	return str
}

func (s FS_copy_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_copy_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_copy_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_copy_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_copy_Params_List is a list of FS_copy_Params.
type FS_copy_Params_List struct{ capnp.List }

// NewFS_copy_Params creates a new list of FS_copy_Params.
func NewFS_copy_Params_List(s *capnp.Segment, sz int32) (FS_copy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_copy_Params_List{l}, err
}

func (s FS_copy_Params_List) At(i int) FS_copy_Params { return FS_copy_Params{s.List.Struct(i)} }

func (s FS_copy_Params_List) Set(i int, v FS_copy_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_copy_Params_List) String() string {
	str, _ := text.MarshalList(0xc0dd66dedad92ef8, s.List)
	return str
}

// FS_copy_Params_Promise is a wrapper for a FS_copy_Params promised by a client call.
type FS_copy_Params_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Params_Promise) Struct() (FS_copy_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Params{s}, err
}

type FS_copy_Results struct{ capnp.Struct }

// FS_copy_Results_TypeID is the unique identifier for the type FS_copy_Results.
const FS_copy_Results_TypeID = 0xccf4f28c8951edf6

func NewFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func NewRootFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func ReadRootFS_copy_Results(msg *capnp.Message) (FS_copy_Results, error) {
	root, err := msg.RootPtr()
	return FS_copy_Results{root.Struct()}, err
}

func (s FS_copy_Results) String() string {
	str, _ := text.Marshal(0xccf4f28c8951edf6, s.Struct)
	return str
}

// FS_copy_Results_List is a list of FS_copy_Results.
type FS_copy_Results_List struct{ capnp.List }

// NewFS_copy_Results creates a new list of FS_copy_Results.
func NewFS_copy_Results_List(s *capnp.Segment, sz int32) (FS_copy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_copy_Results_List{l}, err
}

func (s FS_copy_Results_List) At(i int) FS_copy_Results { return FS_copy_Results{s.List.Struct(i)} }

func (s FS_copy_Results_List) Set(i int, v FS_copy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_copy_Results_List) String() string {
	str, _ := text.MarshalList(0xccf4f28c8951edf6, s.List)
	return str
}

// FS_copy_Results_Promise is a wrapper for a FS_copy_Results promised by a client call.
type FS_copy_Results_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Results_Promise) Struct() (FS_copy_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Results{s}, err
}

type FS_pin_Params struct{ capnp.Struct }

// FS_pin_Params_TypeID is the unique identifier for the type FS_pin_Params.
const FS_pin_Params_TypeID = 0x9efc974402f016f6

func NewFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func NewRootFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func ReadRootFS_pin_Params(msg *capnp.Message) (FS_pin_Params, error) {
	root, err := msg.RootPtr()
	return FS_pin_Params{root.Struct()}, err
}

func (s FS_pin_Params) String() string {
	str, _ := text.Marshal(0x9efc974402f016f6, s.Struct)
	return str
}

func (s FS_pin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_pin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_pin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_pin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_pin_Params_List is a list of FS_pin_Params.
type FS_pin_Params_List struct{ capnp.List }

// NewFS_pin_Params creates a new list of FS_pin_Params.
func NewFS_pin_Params_List(s *capnp.Segment, sz int32) (FS_pin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_pin_Params_List{l}, err
}

func (s FS_pin_Params_List) At(i int) FS_pin_Params { return FS_pin_Params{s.List.Struct(i)} }

func (s FS_pin_Params_List) Set(i int, v FS_pin_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Params_List) String() string {
	str, _ := text.MarshalList(0x9efc974402f016f6, s.List)
	return str
}

// FS_pin_Params_Promise is a wrapper for a FS_pin_Params promised by a client call.
type FS_pin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Params_Promise) Struct() (FS_pin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Params{s}, err
}

type FS_pin_Results struct{ capnp.Struct }

// FS_pin_Results_TypeID is the unique identifier for the type FS_pin_Results.
const FS_pin_Results_TypeID = 0xdba8e30445acc3f4

func NewFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func NewRootFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func ReadRootFS_pin_Results(msg *capnp.Message) (FS_pin_Results, error) {
	root, err := msg.RootPtr()
	return FS_pin_Results{root.Struct()}, err
}

func (s FS_pin_Results) String() string {
	str, _ := text.Marshal(0xdba8e30445acc3f4, s.Struct)
	return str
}

// FS_pin_Results_List is a list of FS_pin_Results.
type FS_pin_Results_List struct{ capnp.List }

// NewFS_pin_Results creates a new list of FS_pin_Results.
func NewFS_pin_Results_List(s *capnp.Segment, sz int32) (FS_pin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_pin_Results_List{l}, err
}

func (s FS_pin_Results_List) At(i int) FS_pin_Results { return FS_pin_Results{s.List.Struct(i)} }

func (s FS_pin_Results_List) Set(i int, v FS_pin_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Results_List) String() string {
	str, _ := text.MarshalList(0xdba8e30445acc3f4, s.List)
	return str
}

// FS_pin_Results_Promise is a wrapper for a FS_pin_Results promised by a client call.
type FS_pin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Results_Promise) Struct() (FS_pin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Results{s}, err
}

type FS_unpin_Params struct{ capnp.Struct }

// FS_unpin_Params_TypeID is the unique identifier for the type FS_unpin_Params.
const FS_unpin_Params_TypeID = 0xc9558eac26b0f15e

func NewFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func NewRootFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func ReadRootFS_unpin_Params(msg *capnp.Message) (FS_unpin_Params, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Params{root.Struct()}, err
}

func (s FS_unpin_Params) String() string {
	str, _ := text.Marshal(0xc9558eac26b0f15e, s.Struct)
	return str
}

func (s FS_unpin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_unpin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_unpin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_unpin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_unpin_Params_List is a list of FS_unpin_Params.
type FS_unpin_Params_List struct{ capnp.List }

// NewFS_unpin_Params creates a new list of FS_unpin_Params.
func NewFS_unpin_Params_List(s *capnp.Segment, sz int32) (FS_unpin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_unpin_Params_List{l}, err
}

func (s FS_unpin_Params_List) At(i int) FS_unpin_Params { return FS_unpin_Params{s.List.Struct(i)} }

func (s FS_unpin_Params_List) Set(i int, v FS_unpin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Params_List) String() string {
	str, _ := text.MarshalList(0xc9558eac26b0f15e, s.List)
	return str
}

// FS_unpin_Params_Promise is a wrapper for a FS_unpin_Params promised by a client call.
type FS_unpin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Params_Promise) Struct() (FS_unpin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Params{s}, err
}

type FS_unpin_Results struct{ capnp.Struct }

// FS_unpin_Results_TypeID is the unique identifier for the type FS_unpin_Results.
const FS_unpin_Results_TypeID = 0x87c49e302c6516f8

func NewFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func NewRootFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func ReadRootFS_unpin_Results(msg *capnp.Message) (FS_unpin_Results, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Results{root.Struct()}, err
}

func (s FS_unpin_Results) String() string {
	str, _ := text.Marshal(0x87c49e302c6516f8, s.Struct)
	return str
}

// FS_unpin_Results_List is a list of FS_unpin_Results.
type FS_unpin_Results_List struct{ capnp.List }

// NewFS_unpin_Results creates a new list of FS_unpin_Results.
func NewFS_unpin_Results_List(s *capnp.Segment, sz int32) (FS_unpin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_unpin_Results_List{l}, err
}

func (s FS_unpin_Results_List) At(i int) FS_unpin_Results { return FS_unpin_Results{s.List.Struct(i)} }

func (s FS_unpin_Results_List) Set(i int, v FS_unpin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Results_List) String() string {
	str, _ := text.MarshalList(0x87c49e302c6516f8, s.List)
	return str
}

// FS_unpin_Results_Promise is a wrapper for a FS_unpin_Results promised by a client call.
type FS_unpin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Results_Promise) Struct() (FS_unpin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Results{s}, err
}

type FS_stat_Params struct{ capnp.Struct }

// FS_stat_Params_TypeID is the unique identifier for the type FS_stat_Params.
const FS_stat_Params_TypeID = 0xd78724f6fbd5c5c5

func NewFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func NewRootFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func ReadRootFS_stat_Params(msg *capnp.Message) (FS_stat_Params, error) {
	root, err := msg.RootPtr()
	return FS_stat_Params{root.Struct()}, err
}

func (s FS_stat_Params) String() string {
	str, _ := text.Marshal(0xd78724f6fbd5c5c5, s.Struct)
	return str
}

func (s FS_stat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_stat_Params_List is a list of FS_stat_Params.
type FS_stat_Params_List struct{ capnp.List }

// NewFS_stat_Params creates a new list of FS_stat_Params.
func NewFS_stat_Params_List(s *capnp.Segment, sz int32) (FS_stat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Params_List{l}, err
}

func (s FS_stat_Params_List) At(i int) FS_stat_Params { return FS_stat_Params{s.List.Struct(i)} }

func (s FS_stat_Params_List) Set(i int, v FS_stat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_stat_Params_List) String() string {
	str, _ := text.MarshalList(0xd78724f6fbd5c5c5, s.List)
	return str
}

// FS_stat_Params_Promise is a wrapper for a FS_stat_Params promised by a client call.
type FS_stat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Params_Promise) Struct() (FS_stat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Params{s}, err
}

type FS_stat_Results struct{ capnp.Struct }

// FS_stat_Results_TypeID is the unique identifier for the type FS_stat_Results.
const FS_stat_Results_TypeID = 0xbdb679ec96303b53

func NewFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func NewRootFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func ReadRootFS_stat_Results(msg *capnp.Message) (FS_stat_Results, error) {
	root, err := msg.RootPtr()
	return FS_stat_Results{root.Struct()}, err
}

func (s FS_stat_Results) String() string {
	str, _ := text.Marshal(0xbdb679ec96303b53, s.Struct)
	return str
}

func (s FS_stat_Results) Info() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s FS_stat_Results) HasInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Results) SetInfo(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s FS_stat_Results) NewInfo() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FS_stat_Results_List is a list of FS_stat_Results.
type FS_stat_Results_List struct{ capnp.List }

// NewFS_stat_Results creates a new list of FS_stat_Results.
func NewFS_stat_Results_List(s *capnp.Segment, sz int32) (FS_stat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Results_List{l}, err
}

func (s FS_stat_Results_List) At(i int) FS_stat_Results { return FS_stat_Results{s.List.Struct(i)} }

func (s FS_stat_Results_List) Set(i int, v FS_stat_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stat_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb679ec96303b53, s.List)
	return str
}

// FS_stat_Results_Promise is a wrapper for a FS_stat_Results promised by a client call.
type FS_stat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Results_Promise) Struct() (FS_stat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Results{s}, err
}

func (p FS_stat_Results_Promise) Info() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type FS_garbageCollect_Params struct{ capnp.Struct }

// FS_garbageCollect_Params_TypeID is the unique identifier for the type FS_garbageCollect_Params.
const FS_garbageCollect_Params_TypeID = 0x9cb31f0ede4f5117

func NewFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func NewRootFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func ReadRootFS_garbageCollect_Params(msg *capnp.Message) (FS_garbageCollect_Params, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Params{root.Struct()}, err
}

func (s FS_garbageCollect_Params) String() string {
	str, _ := text.Marshal(0x9cb31f0ede4f5117, s.Struct)
	return str
}

func (s FS_garbageCollect_Params) Aggressive() bool {
	return s.Struct.Bit(0)
}

func (s FS_garbageCollect_Params) SetAggressive(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_garbageCollect_Params_List is a list of FS_garbageCollect_Params.
type FS_garbageCollect_Params_List struct{ capnp.List }

// NewFS_garbageCollect_Params creates a new list of FS_garbageCollect_Params.
func NewFS_garbageCollect_Params_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_garbageCollect_Params_List{l}, err
}

func (s FS_garbageCollect_Params_List) At(i int) FS_garbageCollect_Params {
	return FS_garbageCollect_Params{s.List.Struct(i)}
}

func (s FS_garbageCollect_Params_List) Set(i int, v FS_garbageCollect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Params_List) String() string {
	str, _ := text.MarshalList(0x9cb31f0ede4f5117, s.List)
	return str
}

// FS_garbageCollect_Params_Promise is a wrapper for a FS_garbageCollect_Params promised by a client call.
type FS_garbageCollect_Params_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Params_Promise) Struct() (FS_garbageCollect_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Params{s}, err
}

type FS_garbageCollect_Results struct{ capnp.Struct }

// FS_garbageCollect_Results_TypeID is the unique identifier for the type FS_garbageCollect_Results.
const FS_garbageCollect_Results_TypeID = 0xbb5ea9a03dfddab3

func NewFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func NewRootFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func ReadRootFS_garbageCollect_Results(msg *capnp.Message) (FS_garbageCollect_Results, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Results{root.Struct()}, err
}

func (s FS_garbageCollect_Results) String() string {
	str, _ := text.Marshal(0xbb5ea9a03dfddab3, s.Struct)
	return str
}

func (s FS_garbageCollect_Results) Freed() (GarbageItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return GarbageItem_List{List: p.List()}, err
}

func (s FS_garbageCollect_Results) HasFreed() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_garbageCollect_Results) SetFreed(v GarbageItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFreed sets the freed field to a newly
// allocated GarbageItem_List, preferring placement in s's segment.
func (s FS_garbageCollect_Results) NewFreed(n int32) (GarbageItem_List, error) {
	l, err := NewGarbageItem_List(s.Struct.Segment(), n)
	if err != nil {
		return GarbageItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_garbageCollect_Results_List is a list of FS_garbageCollect_Results.
type FS_garbageCollect_Results_List struct{ capnp.List }

// NewFS_garbageCollect_Results creates a new list of FS_garbageCollect_Results.
func NewFS_garbageCollect_Results_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_garbageCollect_Results_List{l}, err
}

func (s FS_garbageCollect_Results_List) At(i int) FS_garbageCollect_Results {
	return FS_garbageCollect_Results{s.List.Struct(i)}
}

func (s FS_garbageCollect_Results_List) Set(i int, v FS_garbageCollect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Results_List) String() string {
	str, _ := text.MarshalList(0xbb5ea9a03dfddab3, s.List)
	return str
}

// FS_garbageCollect_Results_Promise is a wrapper for a FS_garbageCollect_Results promised by a client call.
type FS_garbageCollect_Results_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Results_Promise) Struct() (FS_garbageCollect_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Results{s}, err
}

type FS_touch_Params struct{ capnp.Struct }

// FS_touch_Params_TypeID is the unique identifier for the type FS_touch_Params.
const FS_touch_Params_TypeID = 0xab1e48e58e4c69af

func NewFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func NewRootFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func ReadRootFS_touch_Params(msg *capnp.Message) (FS_touch_Params, error) {
	root, err := msg.RootPtr()
	return FS_touch_Params{root.Struct()}, err
}

func (s FS_touch_Params) String() string {
	str, _ := text.Marshal(0xab1e48e58e4c69af, s.Struct)
	return str
}

func (s FS_touch_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_touch_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_touch_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_touch_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_touch_Params_List is a list of FS_touch_Params.
type FS_touch_Params_List struct{ capnp.List }

// NewFS_touch_Params creates a new list of FS_touch_Params.
func NewFS_touch_Params_List(s *capnp.Segment, sz int32) (FS_touch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_touch_Params_List{l}, err
}

func (s FS_touch_Params_List) At(i int) FS_touch_Params { return FS_touch_Params{s.List.Struct(i)} }

func (s FS_touch_Params_List) Set(i int, v FS_touch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Params_List) String() string {
	str, _ := text.MarshalList(0xab1e48e58e4c69af, s.List)
	return str
}

// FS_touch_Params_Promise is a wrapper for a FS_touch_Params promised by a client call.
type FS_touch_Params_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Params_Promise) Struct() (FS_touch_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Params{s}, err
}

type FS_touch_Results struct{ capnp.Struct }

// FS_touch_Results_TypeID is the unique identifier for the type FS_touch_Results.
const FS_touch_Results_TypeID = 0xbf1cf3d6e654e947

func NewFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func NewRootFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func ReadRootFS_touch_Results(msg *capnp.Message) (FS_touch_Results, error) {
	root, err := msg.RootPtr()
	return FS_touch_Results{root.Struct()}, err
}

func (s FS_touch_Results) String() string {
	str, _ := text.Marshal(0xbf1cf3d6e654e947, s.Struct)
	return str
}

// FS_touch_Results_List is a list of FS_touch_Results.
type FS_touch_Results_List struct{ capnp.List }

// NewFS_touch_Results creates a new list of FS_touch_Results.
func NewFS_touch_Results_List(s *capnp.Segment, sz int32) (FS_touch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_touch_Results_List{l}, err
}

func (s FS_touch_Results_List) At(i int) FS_touch_Results { return FS_touch_Results{s.List.Struct(i)} }

func (s FS_touch_Results_List) Set(i int, v FS_touch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Results_List) String() string {
	str, _ := text.MarshalList(0xbf1cf3d6e654e947, s.List)
	return str
}

// FS_touch_Results_Promise is a wrapper for a FS_touch_Results promised by a client call.
type FS_touch_Results_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Results_Promise) Struct() (FS_touch_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Results{s}, err
}

type FS_exists_Params struct{ capnp.Struct }

// FS_exists_Params_TypeID is the unique identifier for the type FS_exists_Params.
const FS_exists_Params_TypeID = 0xdb27e243a580d2f0

func NewFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func NewRootFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func ReadRootFS_exists_Params(msg *capnp.Message) (FS_exists_Params, error) {
	root, err := msg.RootPtr()
	return FS_exists_Params{root.Struct()}, err
}

func (s FS_exists_Params) String() string {
	str, _ := text.Marshal(0xdb27e243a580d2f0, s.Struct)
	return str
}

func (s FS_exists_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_exists_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_exists_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_exists_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_exists_Params_List is a list of FS_exists_Params.
type FS_exists_Params_List struct{ capnp.List }

// NewFS_exists_Params creates a new list of FS_exists_Params.
func NewFS_exists_Params_List(s *capnp.Segment, sz int32) (FS_exists_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_exists_Params_List{l}, err
}

func (s FS_exists_Params_List) At(i int) FS_exists_Params { return FS_exists_Params{s.List.Struct(i)} }

func (s FS_exists_Params_List) Set(i int, v FS_exists_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Params_List) String() string {
	str, _ := text.MarshalList(0xdb27e243a580d2f0, s.List)
	return str
}

// FS_exists_Params_Promise is a wrapper for a FS_exists_Params promised by a client call.
type FS_exists_Params_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Params_Promise) Struct() (FS_exists_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Params{s}, err
}

type FS_exists_Results struct{ capnp.Struct }

// FS_exists_Results_TypeID is the unique identifier for the type FS_exists_Results.
const FS_exists_Results_TypeID = 0xa5753d28ca12d2ba

func NewFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func NewRootFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func ReadRootFS_exists_Results(msg *capnp.Message) (FS_exists_Results, error) {
	root, err := msg.RootPtr()
	return FS_exists_Results{root.Struct()}, err
}

func (s FS_exists_Results) String() string {
	str, _ := text.Marshal(0xa5753d28ca12d2ba, s.Struct)
	return str
}

func (s FS_exists_Results) Exists() bool {
	return s.Struct.Bit(0)
}

func (s FS_exists_Results) SetExists(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_exists_Results_List is a list of FS_exists_Results.
type FS_exists_Results_List struct{ capnp.List }

// NewFS_exists_Results creates a new list of FS_exists_Results.
func NewFS_exists_Results_List(s *capnp.Segment, sz int32) (FS_exists_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_exists_Results_List{l}, err
}

func (s FS_exists_Results_List) At(i int) FS_exists_Results {
	return FS_exists_Results{s.List.Struct(i)}
}

func (s FS_exists_Results_List) Set(i int, v FS_exists_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Results_List) String() string {
	str, _ := text.MarshalList(0xa5753d28ca12d2ba, s.List)
	return str
}

// FS_exists_Results_Promise is a wrapper for a FS_exists_Results promised by a client call.
type FS_exists_Results_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Results_Promise) Struct() (FS_exists_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Results{s}, err
}

type FS_listExplicitPins_Params struct{ capnp.Struct }

// FS_listExplicitPins_Params_TypeID is the unique identifier for the type FS_listExplicitPins_Params.
const FS_listExplicitPins_Params_TypeID = 0x958ea6b33d4e8cbb

func NewFS_listExplicitPins_Params(s *capnp.Segment) (FS_listExplicitPins_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_listExplicitPins_Params{st}, err
}

func NewRootFS_listExplicitPins_Params(s *capnp.Segment) (FS_listExplicitPins_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_listExplicitPins_Params{st}, err
}

func ReadRootFS_listExplicitPins_Params(msg *capnp.Message) (FS_listExplicitPins_Params, error) {
	root, err := msg.RootPtr()
	return FS_listExplicitPins_Params{root.Struct()}, err
}

func (s FS_listExplicitPins_Params) String() string {
	str, _ := text.Marshal(0x958ea6b33d4e8cbb, s.Struct)
	return str
}

func (s FS_listExplicitPins_Params) Prefix() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_listExplicitPins_Params) HasPrefix() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Params) PrefixBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_listExplicitPins_Params) SetPrefix(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_listExplicitPins_Params) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_listExplicitPins_Params) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Params) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_listExplicitPins_Params) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FS_listExplicitPins_Params) To() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FS_listExplicitPins_Params) HasTo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Params) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FS_listExplicitPins_Params) SetTo(v string) error {
	return s.Struct.SetText(2, v)
}

// FS_listExplicitPins_Params_List is a list of FS_listExplicitPins_Params.
type FS_listExplicitPins_Params_List struct{ capnp.List }

// NewFS_listExplicitPins_Params creates a new list of FS_listExplicitPins_Params.
func NewFS_listExplicitPins_Params_List(s *capnp.Segment, sz int32) (FS_listExplicitPins_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return FS_listExplicitPins_Params_List{l}, err
}

func (s FS_listExplicitPins_Params_List) At(i int) FS_listExplicitPins_Params {
	return FS_listExplicitPins_Params{s.List.Struct(i)}
}

func (s FS_listExplicitPins_Params_List) Set(i int, v FS_listExplicitPins_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_listExplicitPins_Params_List) String() string {
	str, _ := text.MarshalList(0x958ea6b33d4e8cbb, s.List)
	return str
}

// FS_listExplicitPins_Params_Promise is a wrapper for a FS_listExplicitPins_Params promised by a client call.
type FS_listExplicitPins_Params_Promise struct{ *capnp.Pipeline }

func (p FS_listExplicitPins_Params_Promise) Struct() (FS_listExplicitPins_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_listExplicitPins_Params{s}, err
}

type FS_listExplicitPins_Results struct{ capnp.Struct }

// FS_listExplicitPins_Results_TypeID is the unique identifier for the type FS_listExplicitPins_Results.
const FS_listExplicitPins_Results_TypeID = 0x809d4e73dc197b11

func NewFS_listExplicitPins_Results(s *capnp.Segment) (FS_listExplicitPins_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_listExplicitPins_Results{st}, err
}

func NewRootFS_listExplicitPins_Results(s *capnp.Segment) (FS_listExplicitPins_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_listExplicitPins_Results{st}, err
}

func ReadRootFS_listExplicitPins_Results(msg *capnp.Message) (FS_listExplicitPins_Results, error) {
	root, err := msg.RootPtr()
	return FS_listExplicitPins_Results{root.Struct()}, err
}

func (s FS_listExplicitPins_Results) String() string {
	str, _ := text.Marshal(0x809d4e73dc197b11, s.Struct)
	return str
}

func (s FS_listExplicitPins_Results) Pins() (ExplicitPin_List, error) {
	p, err := s.Struct.Ptr(0)
	return ExplicitPin_List{List: p.List()}, err
}

func (s FS_listExplicitPins_Results) HasPins() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Results) SetPins(v ExplicitPin_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPins sets the pins field to a newly
// allocated ExplicitPin_List, preferring placement in s's segment.
func (s FS_listExplicitPins_Results) NewPins(n int32) (ExplicitPin_List, error) {
	l, err := NewExplicitPin_List(s.Struct.Segment(), n)
	if err != nil {
		return ExplicitPin_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_listExplicitPins_Results_List is a list of FS_listExplicitPins_Results.
type FS_listExplicitPins_Results_List struct{ capnp.List }

// NewFS_listExplicitPins_Results creates a new list of FS_listExplicitPins_Results.
func NewFS_listExplicitPins_Results_List(s *capnp.Segment, sz int32) (FS_listExplicitPins_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_listExplicitPins_Results_List{l}, err
}

func (s FS_listExplicitPins_Results_List) At(i int) FS_listExplicitPins_Results {
	return FS_listExplicitPins_Results{s.List.Struct(i)}
}

func (s FS_listExplicitPins_Results_List) Set(i int, v FS_listExplicitPins_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_listExplicitPins_Results_List) String() string {
	str, _ := text.MarshalList(0x809d4e73dc197b11, s.List)
	return str
}

// FS_listExplicitPins_Results_Promise is a wrapper for a FS_listExplicitPins_Results promised by a client call.
type FS_listExplicitPins_Results_Promise struct{ *capnp.Pipeline }

func (p FS_listExplicitPins_Results_Promise) Struct() (FS_listExplicitPins_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_listExplicitPins_Results{s}, err
}

type FS_clearExplicitPins_Params struct{ capnp.Struct }

// FS_clearExplicitPins_Params_TypeID is the unique identifier for the type FS_clearExplicitPins_Params.
const FS_clearExplicitPins_Params_TypeID = 0xa17d6c20c2174ec8

func NewFS_clearExplicitPins_Params(s *capnp.Segment) (FS_clearExplicitPins_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_clearExplicitPins_Params{st}, err
}

func NewRootFS_clearExplicitPins_Params(s *capnp.Segment) (FS_clearExplicitPins_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_clearExplicitPins_Params{st}, err
}

func ReadRootFS_clearExplicitPins_Params(msg *capnp.Message) (FS_clearExplicitPins_Params, error) {
	root, err := msg.RootPtr()
	return FS_clearExplicitPins_Params{root.Struct()}, err
}

func (s FS_clearExplicitPins_Params) String() string {
	str, _ := text.Marshal(0xa17d6c20c2174ec8, s.Struct)
	return str
}

func (s FS_clearExplicitPins_Params) Prefix() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_clearExplicitPins_Params) HasPrefix() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_clearExplicitPins_Params) PrefixBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_clearExplicitPins_Params) SetPrefix(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_clearExplicitPins_Params) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_clearExplicitPins_Params) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_clearExplicitPins_Params) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_clearExplicitPins_Params) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FS_clearExplicitPins_Params) To() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FS_clearExplicitPins_Params) HasTo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FS_clearExplicitPins_Params) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FS_clearExplicitPins_Params) SetTo(v string) error {
	return s.Struct.SetText(2, v)
}

// FS_clearExplicitPins_Params_List is a list of FS_clearExplicitPins_Params.
type FS_clearExplicitPins_Params_List struct{ capnp.List }

// NewFS_clearExplicitPins_Params creates a new list of FS_clearExplicitPins_Params.
func NewFS_clearExplicitPins_Params_List(s *capnp.Segment, sz int32) (FS_clearExplicitPins_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return FS_clearExplicitPins_Params_List{l}, err
}

func (s FS_clearExplicitPins_Params_List) At(i int) FS_clearExplicitPins_Params {
	return FS_clearExplicitPins_Params{s.List.Struct(i)}
}

func (s FS_clearExplicitPins_Params_List) Set(i int, v FS_clearExplicitPins_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_clearExplicitPins_Params_List) String() string {
	str, _ := text.MarshalList(0xa17d6c20c2174ec8, s.List)
	return str
}

// FS_clearExplicitPins_Params_Promise is a wrapper for a FS_clearExplicitPins_Params promised by a client call.
type FS_clearExplicitPins_Params_Promise struct{ *capnp.Pipeline }

func (p FS_clearExplicitPins_Params_Promise) Struct() (FS_clearExplicitPins_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_clearExplicitPins_Params{s}, err
}

type FS_clearExplicitPins_Results struct{ capnp.Struct }

// FS_clearExplicitPins_Results_TypeID is the unique identifier for the type FS_clearExplicitPins_Results.
const FS_clearExplicitPins_Results_TypeID = 0xa78946d2af827622

func NewFS_clearExplicitPins_Results(s *capnp.Segment) (FS_clearExplicitPins_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_clearExplicitPins_Results{st}, err
}

func NewRootFS_clearExplicitPins_Results(s *capnp.Segment) (FS_clearExplicitPins_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_clearExplicitPins_Results{st}, err
}

func ReadRootFS_clearExplicitPins_Results(msg *capnp.Message) (FS_clearExplicitPins_Results, error) {
	root, err := msg.RootPtr()
	return FS_clearExplicitPins_Results{root.Struct()}, err
}

func (s FS_clearExplicitPins_Results) String() string {
	str, _ := text.Marshal(0xa78946d2af827622, s.Struct)
	return str
}

func (s FS_clearExplicitPins_Results) Count() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_clearExplicitPins_Results) SetCount(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_clearExplicitPins_Results_List is a list of FS_clearExplicitPins_Results.
type FS_clearExplicitPins_Results_List struct{ capnp.List }

// NewFS_clearExplicitPins_Results creates a new list of FS_clearExplicitPins_Results.
func NewFS_clearExplicitPins_Results_List(s *capnp.Segment, sz int32) (FS_clearExplicitPins_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_clearExplicitPins_Results_List{l}, err
}

func (s FS_clearExplicitPins_Results_List) At(i int) FS_clearExplicitPins_Results {
	return FS_clearExplicitPins_Results{s.List.Struct(i)}
}

func (s FS_clearExplicitPins_Results_List) Set(i int, v FS_clearExplicitPins_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_clearExplicitPins_Results_List) String() string {
	str, _ := text.MarshalList(0xa78946d2af827622, s.List)
	return str
}

// FS_clearExplicitPins_Results_Promise is a wrapper for a FS_clearExplicitPins_Results promised by a client call.
type FS_clearExplicitPins_Results_Promise struct{ *capnp.Pipeline }

func (p FS_clearExplicitPins_Results_Promise) Struct() (FS_clearExplicitPins_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_clearExplicitPins_Results{s}, err
}

type FS_setExplicitPins_Params struct{ capnp.Struct }

// FS_setExplicitPins_Params_TypeID is the unique identifier for the type FS_setExplicitPins_Params.
const FS_setExplicitPins_Params_TypeID = 0x946963af664858d0

func NewFS_setExplicitPins_Params(s *capnp.Segment) (FS_setExplicitPins_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_setExplicitPins_Params{st}, err
}

func NewRootFS_setExplicitPins_Params(s *capnp.Segment) (FS_setExplicitPins_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_setExplicitPins_Params{st}, err
}

func ReadRootFS_setExplicitPins_Params(msg *capnp.Message) (FS_setExplicitPins_Params, error) {
	root, err := msg.RootPtr()
	return FS_setExplicitPins_Params{root.Struct()}, err
}

func (s FS_setExplicitPins_Params) String() string {
	str, _ := text.Marshal(0x946963af664858d0, s.Struct)
	return str
}

func (s FS_setExplicitPins_Params) Prefix() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_setExplicitPins_Params) HasPrefix() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_setExplicitPins_Params) PrefixBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_setExplicitPins_Params) SetPrefix(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_setExplicitPins_Params) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_setExplicitPins_Params) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_setExplicitPins_Params) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_setExplicitPins_Params) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FS_setExplicitPins_Params) To() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FS_setExplicitPins_Params) HasTo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FS_setExplicitPins_Params) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FS_setExplicitPins_Params) SetTo(v string) error {
	return s.Struct.SetText(2, v)
}

// FS_setExplicitPins_Params_List is a list of FS_setExplicitPins_Params.
type FS_setExplicitPins_Params_List struct{ capnp.List }

// NewFS_setExplicitPins_Params creates a new list of FS_setExplicitPins_Params.
func NewFS_setExplicitPins_Params_List(s *capnp.Segment, sz int32) (FS_setExplicitPins_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return FS_setExplicitPins_Params_List{l}, err
}

func (s FS_setExplicitPins_Params_List) At(i int) FS_setExplicitPins_Params {
	return FS_setExplicitPins_Params{s.List.Struct(i)}
}

func (s FS_setExplicitPins_Params_List) Set(i int, v FS_setExplicitPins_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_setExplicitPins_Params_List) String() string {
	str, _ := text.MarshalList(0x946963af664858d0, s.List)
	return str
}

// FS_setExplicitPins_Params_Promise is a wrapper for a FS_setExplicitPins_Params promised by a client call.
type FS_setExplicitPins_Params_Promise struct{ *capnp.Pipeline }

func (p FS_setExplicitPins_Params_Promise) Struct() (FS_setExplicitPins_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_setExplicitPins_Params{s}, err
}

type FS_setExplicitPins_Results struct{ capnp.Struct }

// FS_setExplicitPins_Results_TypeID is the unique identifier for the type FS_setExplicitPins_Results.
const FS_setExplicitPins_Results_TypeID = 0x95a8b7d1ed942672

func NewFS_setExplicitPins_Results(s *capnp.Segment) (FS_setExplicitPins_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_setExplicitPins_Results{st}, err
}

func NewRootFS_setExplicitPins_Results(s *capnp.Segment) (FS_setExplicitPins_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_setExplicitPins_Results{st}, err
}

func ReadRootFS_setExplicitPins_Results(msg *capnp.Message) (FS_setExplicitPins_Results, error) {
	root, err := msg.RootPtr()
	return FS_setExplicitPins_Results{root.Struct()}, err
}

func (s FS_setExplicitPins_Results) String() string {
	str, _ := text.Marshal(0x95a8b7d1ed942672, s.Struct)
	return str
}

func (s FS_setExplicitPins_Results) Count() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_setExplicitPins_Results) SetCount(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_setExplicitPins_Results_List is a list of FS_setExplicitPins_Results.
type FS_setExplicitPins_Results_List struct{ capnp.List }

// NewFS_setExplicitPins_Results creates a new list of FS_setExplicitPins_Results.
func NewFS_setExplicitPins_Results_List(s *capnp.Segment, sz int32) (FS_setExplicitPins_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_setExplicitPins_Results_List{l}, err
}

func (s FS_setExplicitPins_Results_List) At(i int) FS_setExplicitPins_Results {
	return FS_setExplicitPins_Results{s.List.Struct(i)}
}

func (s FS_setExplicitPins_Results_List) Set(i int, v FS_setExplicitPins_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_setExplicitPins_Results_List) String() string {
	str, _ := text.MarshalList(0x95a8b7d1ed942672, s.List)
	return str
}

// FS_setExplicitPins_Results_Promise is a wrapper for a FS_setExplicitPins_Results promised by a client call.
type FS_setExplicitPins_Results_Promise struct{ *capnp.Pipeline }

func (p FS_setExplicitPins_Results_Promise) Struct() (FS_setExplicitPins_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_setExplicitPins_Results{s}, err
}

type VCS struct{ Client capnp.Client }

// VCS_TypeID is the unique identifier for the type VCS.
const VCS_TypeID = 0xfaa680ef12c44624

func (c VCS) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type VCS_Server interface {
	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error
}

func VCS_ServerToClient(s VCS_Server) VCS {
	c, _ := s.(server.Closer)
	return VCS{Client: server.New(VCS_Methods(nil, s), c)}
}

func VCS_Methods(methods []server.Method, s VCS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// VCS_log holds the arguments for a server call to VCS.log.
type VCS_log struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_log_Params
	Results VCS_log_Results
}

// VCS_commit holds the arguments for a server call to VCS.commit.
type VCS_commit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commit_Params
	Results VCS_commit_Results
}

// VCS_tag holds the arguments for a server call to VCS.tag.
type VCS_tag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_tag_Params
	Results VCS_tag_Results
}

// VCS_untag holds the arguments for a server call to VCS.untag.
type VCS_untag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_untag_Params
	Results VCS_untag_Results
}

// VCS_reset holds the arguments for a server call to VCS.reset.
type VCS_reset struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_reset_Params
	Results VCS_reset_Results
}

// VCS_history holds the arguments for a server call to VCS.history.
type VCS_history struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_history_Params
	Results VCS_history_Results
}

// VCS_makeDiff holds the arguments for a server call to VCS.makeDiff.
type VCS_makeDiff struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_makeDiff_Params
	Results VCS_makeDiff_Results
}

// VCS_sync holds the arguments for a server call to VCS.sync.
type VCS_sync struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_sync_Params
	Results VCS_sync_Results
}

// VCS_fetch holds the arguments for a server call to VCS.fetch.
type VCS_fetch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_fetch_Params
	Results VCS_fetch_Results
}

type VCS_log_Params struct{ capnp.Struct }

// VCS_log_Params_TypeID is the unique identifier for the type VCS_log_Params.
const VCS_log_Params_TypeID = 0xa4efd353c57d2b85

func NewVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func NewRootVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func ReadRootVCS_log_Params(msg *capnp.Message) (VCS_log_Params, error) {
	root, err := msg.RootPtr()
	return VCS_log_Params{root.Struct()}, err
}

func (s VCS_log_Params) String() string {
	str, _ := text.Marshal(0xa4efd353c57d2b85, s.Struct)
	return str
}

// VCS_log_Params_List is a list of VCS_log_Params.
type VCS_log_Params_List struct{ capnp.List }

// NewVCS_log_Params creates a new list of VCS_log_Params.
func NewVCS_log_Params_List(s *capnp.Segment, sz int32) (VCS_log_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_log_Params_List{l}, err
}

func (s VCS_log_Params_List) At(i int) VCS_log_Params { return VCS_log_Params{s.List.Struct(i)} }

func (s VCS_log_Params_List) Set(i int, v VCS_log_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_log_Params_List) String() string {
	str, _ := text.MarshalList(0xa4efd353c57d2b85, s.List)
	return str
}

// VCS_log_Params_Promise is a wrapper for a VCS_log_Params promised by a client call.
type VCS_log_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Params_Promise) Struct() (VCS_log_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Params{s}, err
}

type VCS_log_Results struct{ capnp.Struct }

// VCS_log_Results_TypeID is the unique identifier for the type VCS_log_Results.
const VCS_log_Results_TypeID = 0xf7250939585a23f6

func NewVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func NewRootVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func ReadRootVCS_log_Results(msg *capnp.Message) (VCS_log_Results, error) {
	root, err := msg.RootPtr()
	return VCS_log_Results{root.Struct()}, err
}

func (s VCS_log_Results) String() string {
	str, _ := text.Marshal(0xf7250939585a23f6, s.Struct)
	return str
}

func (s VCS_log_Results) Entries() (Commit_List, error) {
	p, err := s.Struct.Ptr(0)
	return Commit_List{List: p.List()}, err
}

func (s VCS_log_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_log_Results) SetEntries(v Commit_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated Commit_List, preferring placement in s's segment.
func (s VCS_log_Results) NewEntries(n int32) (Commit_List, error) {
	l, err := NewCommit_List(s.Struct.Segment(), n)
	if err != nil {
		return Commit_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_log_Results_List is a list of VCS_log_Results.
type VCS_log_Results_List struct{ capnp.List }

// NewVCS_log_Results creates a new list of VCS_log_Results.
func NewVCS_log_Results_List(s *capnp.Segment, sz int32) (VCS_log_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_log_Results_List{l}, err
}

func (s VCS_log_Results_List) At(i int) VCS_log_Results { return VCS_log_Results{s.List.Struct(i)} }

func (s VCS_log_Results_List) Set(i int, v VCS_log_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_log_Results_List) String() string {
	str, _ := text.MarshalList(0xf7250939585a23f6, s.List)
	return str
}

// VCS_log_Results_Promise is a wrapper for a VCS_log_Results promised by a client call.
type VCS_log_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Results_Promise) Struct() (VCS_log_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Results{s}, err
}

type VCS_commit_Params struct{ capnp.Struct }

// VCS_commit_Params_TypeID is the unique identifier for the type VCS_commit_Params.
const VCS_commit_Params_TypeID = 0xd9459f2361338d96

func NewVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func NewRootVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func ReadRootVCS_commit_Params(msg *capnp.Message) (VCS_commit_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Params{root.Struct()}, err
}

func (s VCS_commit_Params) String() string {
	str, _ := text.Marshal(0xd9459f2361338d96, s.Struct)
	return str
}

func (s VCS_commit_Params) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commit_Params) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commit_Params) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commit_Params) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commit_Params_List is a list of VCS_commit_Params.
type VCS_commit_Params_List struct{ capnp.List }

// NewVCS_commit_Params creates a new list of VCS_commit_Params.
func NewVCS_commit_Params_List(s *capnp.Segment, sz int32) (VCS_commit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commit_Params_List{l}, err
}

func (s VCS_commit_Params_List) At(i int) VCS_commit_Params {
	return VCS_commit_Params{s.List.Struct(i)}
}

func (s VCS_commit_Params_List) Set(i int, v VCS_commit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Params_List) String() string {
	str, _ := text.MarshalList(0xd9459f2361338d96, s.List)
	return str
}

// VCS_commit_Params_Promise is a wrapper for a VCS_commit_Params promised by a client call.
type VCS_commit_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Params_Promise) Struct() (VCS_commit_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Params{s}, err
}

type VCS_commit_Results struct{ capnp.Struct }

// VCS_commit_Results_TypeID is the unique identifier for the type VCS_commit_Results.
const VCS_commit_Results_TypeID = 0xb7d0dd6b467e7539

func NewVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func NewRootVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func ReadRootVCS_commit_Results(msg *capnp.Message) (VCS_commit_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Results{root.Struct()}, err
}

func (s VCS_commit_Results) String() string {
	str, _ := text.Marshal(0xb7d0dd6b467e7539, s.Struct)
	return str
}

// VCS_commit_Results_List is a list of VCS_commit_Results.
type VCS_commit_Results_List struct{ capnp.List }

// NewVCS_commit_Results creates a new list of VCS_commit_Results.
func NewVCS_commit_Results_List(s *capnp.Segment, sz int32) (VCS_commit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_commit_Results_List{l}, err
}

func (s VCS_commit_Results_List) At(i int) VCS_commit_Results {
	return VCS_commit_Results{s.List.Struct(i)}
}

func (s VCS_commit_Results_List) Set(i int, v VCS_commit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Results_List) String() string {
	str, _ := text.MarshalList(0xb7d0dd6b467e7539, s.List)
	return str
}

// VCS_commit_Results_Promise is a wrapper for a VCS_commit_Results promised by a client call.
type VCS_commit_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Results_Promise) Struct() (VCS_commit_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Results{s}, err
}

type VCS_tag_Params struct{ capnp.Struct }

// VCS_tag_Params_TypeID is the unique identifier for the type VCS_tag_Params.
const VCS_tag_Params_TypeID = 0xa97d67096ee7d46d

func NewVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func NewRootVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func ReadRootVCS_tag_Params(msg *capnp.Message) (VCS_tag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Params{root.Struct()}, err
}

func (s VCS_tag_Params) String() string {
	str, _ := text.Marshal(0xa97d67096ee7d46d, s.Struct)
	return str
}

func (s VCS_tag_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_tag_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_tag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_tag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetTagName(v string) error {
	return s.Struct.SetText(1, v)
}

// VCS_tag_Params_List is a list of VCS_tag_Params.
type VCS_tag_Params_List struct{ capnp.List }

// NewVCS_tag_Params creates a new list of VCS_tag_Params.
func NewVCS_tag_Params_List(s *capnp.Segment, sz int32) (VCS_tag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return VCS_tag_Params_List{l}, err
}

func (s VCS_tag_Params_List) At(i int) VCS_tag_Params { return VCS_tag_Params{s.List.Struct(i)} }

func (s VCS_tag_Params_List) Set(i int, v VCS_tag_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_tag_Params_List) String() string {
	str, _ := text.MarshalList(0xa97d67096ee7d46d, s.List)
	return str
}

// VCS_tag_Params_Promise is a wrapper for a VCS_tag_Params promised by a client call.
type VCS_tag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Params_Promise) Struct() (VCS_tag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Params{s}, err
}

type VCS_tag_Results struct{ capnp.Struct }

// VCS_tag_Results_TypeID is the unique identifier for the type VCS_tag_Results.
const VCS_tag_Results_TypeID = 0xbda949777c149f4b

func NewVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func NewRootVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func ReadRootVCS_tag_Results(msg *capnp.Message) (VCS_tag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Results{root.Struct()}, err
}

func (s VCS_tag_Results) String() string {
	str, _ := text.Marshal(0xbda949777c149f4b, s.Struct)
	return str
}

// VCS_tag_Results_List is a list of VCS_tag_Results.
type VCS_tag_Results_List struct{ capnp.List }

// NewVCS_tag_Results creates a new list of VCS_tag_Results.
func NewVCS_tag_Results_List(s *capnp.Segment, sz int32) (VCS_tag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_tag_Results_List{l}, err
}

func (s VCS_tag_Results_List) At(i int) VCS_tag_Results { return VCS_tag_Results{s.List.Struct(i)} }

func (s VCS_tag_Results_List) Set(i int, v VCS_tag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_tag_Results_List) String() string {
	str, _ := text.MarshalList(0xbda949777c149f4b, s.List)
	return str
}

// VCS_tag_Results_Promise is a wrapper for a VCS_tag_Results promised by a client call.
type VCS_tag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Results_Promise) Struct() (VCS_tag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Results{s}, err
}

type VCS_untag_Params struct{ capnp.Struct }

// VCS_untag_Params_TypeID is the unique identifier for the type VCS_untag_Params.
const VCS_untag_Params_TypeID = 0xf4d42db113af3a4b

func NewVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func NewRootVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func ReadRootVCS_untag_Params(msg *capnp.Message) (VCS_untag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Params{root.Struct()}, err
}

func (s VCS_untag_Params) String() string {
	str, _ := text.Marshal(0xf4d42db113af3a4b, s.Struct)
	return str
}

func (s VCS_untag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_untag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_untag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_untag_Params) SetTagName(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_untag_Params_List is a list of VCS_untag_Params.
type VCS_untag_Params_List struct{ capnp.List }

// NewVCS_untag_Params creates a new list of VCS_untag_Params.
func NewVCS_untag_Params_List(s *capnp.Segment, sz int32) (VCS_untag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_untag_Params_List{l}, err
}

func (s VCS_untag_Params_List) At(i int) VCS_untag_Params { return VCS_untag_Params{s.List.Struct(i)} }

func (s VCS_untag_Params_List) Set(i int, v VCS_untag_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Params_List) String() string {
	str, _ := text.MarshalList(0xf4d42db113af3a4b, s.List)
	return str
}

// VCS_untag_Params_Promise is a wrapper for a VCS_untag_Params promised by a client call.
type VCS_untag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Params_Promise) Struct() (VCS_untag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Params{s}, err
}

type VCS_untag_Results struct{ capnp.Struct }

// VCS_untag_Results_TypeID is the unique identifier for the type VCS_untag_Results.
const VCS_untag_Results_TypeID = 0xba0de490234c27af

func NewVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func NewRootVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func ReadRootVCS_untag_Results(msg *capnp.Message) (VCS_untag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Results{root.Struct()}, err
}

func (s VCS_untag_Results) String() string {
	str, _ := text.Marshal(0xba0de490234c27af, s.Struct)
	return str
}

// VCS_untag_Results_List is a list of VCS_untag_Results.
type VCS_untag_Results_List struct{ capnp.List }

// NewVCS_untag_Results creates a new list of VCS_untag_Results.
func NewVCS_untag_Results_List(s *capnp.Segment, sz int32) (VCS_untag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_untag_Results_List{l}, err
}

func (s VCS_untag_Results_List) At(i int) VCS_untag_Results {
	return VCS_untag_Results{s.List.Struct(i)}
}

func (s VCS_untag_Results_List) Set(i int, v VCS_untag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Results_List) String() string {
	str, _ := text.MarshalList(0xba0de490234c27af, s.List)
	return str
}

// VCS_untag_Results_Promise is a wrapper for a VCS_untag_Results promised by a client call.
type VCS_untag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Results_Promise) Struct() (VCS_untag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Results{s}, err
}

type VCS_reset_Params struct{ capnp.Struct }

// VCS_reset_Params_TypeID is the unique identifier for the type VCS_reset_Params.
const VCS_reset_Params_TypeID = 0xe71560d8bc06c6fd

func NewVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func NewRootVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func ReadRootVCS_reset_Params(msg *capnp.Message) (VCS_reset_Params, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Params{root.Struct()}, err
}

func (s VCS_reset_Params) String() string {
	str, _ := text.Marshal(0xe71560d8bc06c6fd, s.Struct)
	return str
}

func (s VCS_reset_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_reset_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_reset_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_reset_Params) HasRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_reset_Params) Force() bool {
	return s.Struct.Bit(0)
}

func (s VCS_reset_Params) SetForce(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_reset_Params_List is a list of VCS_reset_Params.
type VCS_reset_Params_List struct{ capnp.List }

// NewVCS_reset_Params creates a new list of VCS_reset_Params.
func NewVCS_reset_Params_List(s *capnp.Segment, sz int32) (VCS_reset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return VCS_reset_Params_List{l}, err
}

func (s VCS_reset_Params_List) At(i int) VCS_reset_Params { return VCS_reset_Params{s.List.Struct(i)} }

func (s VCS_reset_Params_List) Set(i int, v VCS_reset_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Params_List) String() string {
	str, _ := text.MarshalList(0xe71560d8bc06c6fd, s.List)
	return str
}

// VCS_reset_Params_Promise is a wrapper for a VCS_reset_Params promised by a client call.
type VCS_reset_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Params_Promise) Struct() (VCS_reset_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Params{s}, err
}

type VCS_reset_Results struct{ capnp.Struct }

// VCS_reset_Results_TypeID is the unique identifier for the type VCS_reset_Results.
const VCS_reset_Results_TypeID = 0xf9b772853fd93ea9

func NewVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func NewRootVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func ReadRootVCS_reset_Results(msg *capnp.Message) (VCS_reset_Results, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Results{root.Struct()}, err
}

func (s VCS_reset_Results) String() string {
	str, _ := text.Marshal(0xf9b772853fd93ea9, s.Struct)
	return str
}

// VCS_reset_Results_List is a list of VCS_reset_Results.
type VCS_reset_Results_List struct{ capnp.List }

// NewVCS_reset_Results creates a new list of VCS_reset_Results.
func NewVCS_reset_Results_List(s *capnp.Segment, sz int32) (VCS_reset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_reset_Results_List{l}, err
}

func (s VCS_reset_Results_List) At(i int) VCS_reset_Results {
	return VCS_reset_Results{s.List.Struct(i)}
}

func (s VCS_reset_Results_List) Set(i int, v VCS_reset_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b772853fd93ea9, s.List)
	return str
}

// VCS_reset_Results_Promise is a wrapper for a VCS_reset_Results promised by a client call.
type VCS_reset_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Results_Promise) Struct() (VCS_reset_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Results{s}, err
}

type VCS_history_Params struct{ capnp.Struct }

// VCS_history_Params_TypeID is the unique identifier for the type VCS_history_Params.
const VCS_history_Params_TypeID = 0xe154e487144bf3c2

func NewVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func NewRootVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func ReadRootVCS_history_Params(msg *capnp.Message) (VCS_history_Params, error) {
	root, err := msg.RootPtr()
	return VCS_history_Params{root.Struct()}, err
}

func (s VCS_history_Params) String() string {
	str, _ := text.Marshal(0xe154e487144bf3c2, s.Struct)
	return str
}

func (s VCS_history_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_history_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_history_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_history_Params_List is a list of VCS_history_Params.
type VCS_history_Params_List struct{ capnp.List }

// NewVCS_history_Params creates a new list of VCS_history_Params.
func NewVCS_history_Params_List(s *capnp.Segment, sz int32) (VCS_history_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Params_List{l}, err
}

func (s VCS_history_Params_List) At(i int) VCS_history_Params {
	return VCS_history_Params{s.List.Struct(i)}
}

func (s VCS_history_Params_List) Set(i int, v VCS_history_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Params_List) String() string {
	str, _ := text.MarshalList(0xe154e487144bf3c2, s.List)
	return str
}

// VCS_history_Params_Promise is a wrapper for a VCS_history_Params promised by a client call.
type VCS_history_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Params_Promise) Struct() (VCS_history_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Params{s}, err
}

type VCS_history_Results struct{ capnp.Struct }

// VCS_history_Results_TypeID is the unique identifier for the type VCS_history_Results.
const VCS_history_Results_TypeID = 0xe0f49db8c42c72b2

func NewVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func NewRootVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func ReadRootVCS_history_Results(msg *capnp.Message) (VCS_history_Results, error) {
	root, err := msg.RootPtr()
	return VCS_history_Results{root.Struct()}, err
}

func (s VCS_history_Results) String() string {
	str, _ := text.Marshal(0xe0f49db8c42c72b2, s.Struct)
	return str
}

func (s VCS_history_Results) History() (Change_List, error) {
	p, err := s.Struct.Ptr(0)
	return Change_List{List: p.List()}, err
}

func (s VCS_history_Results) HasHistory() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Results) SetHistory(v Change_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHistory sets the history field to a newly
// allocated Change_List, preferring placement in s's segment.
func (s VCS_history_Results) NewHistory(n int32) (Change_List, error) {
	l, err := NewChange_List(s.Struct.Segment(), n)
	if err != nil {
		return Change_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_history_Results_List is a list of VCS_history_Results.
type VCS_history_Results_List struct{ capnp.List }

// NewVCS_history_Results creates a new list of VCS_history_Results.
func NewVCS_history_Results_List(s *capnp.Segment, sz int32) (VCS_history_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Results_List{l}, err
}

func (s VCS_history_Results_List) At(i int) VCS_history_Results {
	return VCS_history_Results{s.List.Struct(i)}
}

func (s VCS_history_Results_List) Set(i int, v VCS_history_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f49db8c42c72b2, s.List)
	return str
}

// VCS_history_Results_Promise is a wrapper for a VCS_history_Results promised by a client call.
type VCS_history_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Results_Promise) Struct() (VCS_history_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Results{s}, err
}

type VCS_makeDiff_Params struct{ capnp.Struct }

// VCS_makeDiff_Params_TypeID is the unique identifier for the type VCS_makeDiff_Params.
const VCS_makeDiff_Params_TypeID = 0xe2f81b4403ef433b

func NewVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func NewRootVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func ReadRootVCS_makeDiff_Params(msg *capnp.Message) (VCS_makeDiff_Params, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Params{root.Struct()}, err
}

func (s VCS_makeDiff_Params) String() string {
	str, _ := text.Marshal(0xe2f81b4403ef433b, s.Struct)
	return str
}

func (s VCS_makeDiff_Params) LocalOwner() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalOwner() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalOwner(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_makeDiff_Params) RemoteOwner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_makeDiff_Params) LocalRev() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalRev() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalRev(v string) error {
	return s.Struct.SetText(2, v)
}

func (s VCS_makeDiff_Params) RemoteRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteRev(v string) error {
	return s.Struct.SetText(3, v)
}

func (s VCS_makeDiff_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_makeDiff_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_makeDiff_Params_List is a list of VCS_makeDiff_Params.
type VCS_makeDiff_Params_List struct{ capnp.List }

// NewVCS_makeDiff_Params creates a new list of VCS_makeDiff_Params.
func NewVCS_makeDiff_Params_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return VCS_makeDiff_Params_List{l}, err
}

func (s VCS_makeDiff_Params_List) At(i int) VCS_makeDiff_Params {
	return VCS_makeDiff_Params{s.List.Struct(i)}
}

func (s VCS_makeDiff_Params_List) Set(i int, v VCS_makeDiff_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Params_List) String() string {
	str, _ := text.MarshalList(0xe2f81b4403ef433b, s.List)
	return str
}

// VCS_makeDiff_Params_Promise is a wrapper for a VCS_makeDiff_Params promised by a client call.
type VCS_makeDiff_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Params_Promise) Struct() (VCS_makeDiff_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Params{s}, err
}

type VCS_makeDiff_Results struct{ capnp.Struct }

// VCS_makeDiff_Results_TypeID is the unique identifier for the type VCS_makeDiff_Results.
const VCS_makeDiff_Results_TypeID = 0xd7ef486de484610d

func NewVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func NewRootVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func ReadRootVCS_makeDiff_Results(msg *capnp.Message) (VCS_makeDiff_Results, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Results{root.Struct()}, err
}

func (s VCS_makeDiff_Results) String() string {
	str, _ := text.Marshal(0xd7ef486de484610d, s.Struct)
	return str
}

func (s VCS_makeDiff_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_makeDiff_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_makeDiff_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_makeDiff_Results_List is a list of VCS_makeDiff_Results.
type VCS_makeDiff_Results_List struct{ capnp.List }

// NewVCS_makeDiff_Results creates a new list of VCS_makeDiff_Results.
func NewVCS_makeDiff_Results_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_makeDiff_Results_List{l}, err
}

func (s VCS_makeDiff_Results_List) At(i int) VCS_makeDiff_Results {
	return VCS_makeDiff_Results{s.List.Struct(i)}
}

func (s VCS_makeDiff_Results_List) Set(i int, v VCS_makeDiff_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Results_List) String() string {
	str, _ := text.MarshalList(0xd7ef486de484610d, s.List)
	return str
}

// VCS_makeDiff_Results_Promise is a wrapper for a VCS_makeDiff_Results promised by a client call.
type VCS_makeDiff_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Results_Promise) Struct() (VCS_makeDiff_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Results{s}, err
}

func (p VCS_makeDiff_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_sync_Params struct{ capnp.Struct }

// VCS_sync_Params_TypeID is the unique identifier for the type VCS_sync_Params.
const VCS_sync_Params_TypeID = 0xb05bd83a34de71b7

func NewVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func NewRootVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func ReadRootVCS_sync_Params(msg *capnp.Message) (VCS_sync_Params, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Params{root.Struct()}, err
}

func (s VCS_sync_Params) String() string {
	str, _ := text.Marshal(0xb05bd83a34de71b7, s.Struct)
	return str
}

func (s VCS_sync_Params) WithWhom() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_sync_Params) HasWithWhom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Params) WithWhomBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_sync_Params) SetWithWhom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_sync_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_sync_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_sync_Params_List is a list of VCS_sync_Params.
type VCS_sync_Params_List struct{ capnp.List }

// NewVCS_sync_Params creates a new list of VCS_sync_Params.
func NewVCS_sync_Params_List(s *capnp.Segment, sz int32) (VCS_sync_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_sync_Params_List{l}, err
}

func (s VCS_sync_Params_List) At(i int) VCS_sync_Params { return VCS_sync_Params{s.List.Struct(i)} }

func (s VCS_sync_Params_List) Set(i int, v VCS_sync_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Params_List) String() string {
	str, _ := text.MarshalList(0xb05bd83a34de71b7, s.List)
	return str
}

// VCS_sync_Params_Promise is a wrapper for a VCS_sync_Params promised by a client call.
type VCS_sync_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Params_Promise) Struct() (VCS_sync_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Params{s}, err
}

type VCS_sync_Results struct{ capnp.Struct }

// VCS_sync_Results_TypeID is the unique identifier for the type VCS_sync_Results.
const VCS_sync_Results_TypeID = 0xfa04b4272d0ffcd9

func NewVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func NewRootVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func ReadRootVCS_sync_Results(msg *capnp.Message) (VCS_sync_Results, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Results{root.Struct()}, err
}

func (s VCS_sync_Results) String() string {
	str, _ := text.Marshal(0xfa04b4272d0ffcd9, s.Struct)
	return str
}

func (s VCS_sync_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_sync_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_sync_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_sync_Results_List is a list of VCS_sync_Results.
type VCS_sync_Results_List struct{ capnp.List }

// NewVCS_sync_Results creates a new list of VCS_sync_Results.
func NewVCS_sync_Results_List(s *capnp.Segment, sz int32) (VCS_sync_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_sync_Results_List{l}, err
}

func (s VCS_sync_Results_List) At(i int) VCS_sync_Results { return VCS_sync_Results{s.List.Struct(i)} }

func (s VCS_sync_Results_List) Set(i int, v VCS_sync_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Results_List) String() string {
	str, _ := text.MarshalList(0xfa04b4272d0ffcd9, s.List)
	return str
}

// VCS_sync_Results_Promise is a wrapper for a VCS_sync_Results promised by a client call.
type VCS_sync_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Results_Promise) Struct() (VCS_sync_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Results{s}, err
}

func (p VCS_sync_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_fetch_Params struct{ capnp.Struct }

// VCS_fetch_Params_TypeID is the unique identifier for the type VCS_fetch_Params.
const VCS_fetch_Params_TypeID = 0xaff62edfdbfe53d0

func NewVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func NewRootVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func ReadRootVCS_fetch_Params(msg *capnp.Message) (VCS_fetch_Params, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Params{root.Struct()}, err
}

func (s VCS_fetch_Params) String() string {
	str, _ := text.Marshal(0xaff62edfdbfe53d0, s.Struct)
	return str
}

func (s VCS_fetch_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_fetch_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_fetch_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_fetch_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_fetch_Params_List is a list of VCS_fetch_Params.
type VCS_fetch_Params_List struct{ capnp.List }

// NewVCS_fetch_Params creates a new list of VCS_fetch_Params.
func NewVCS_fetch_Params_List(s *capnp.Segment, sz int32) (VCS_fetch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_fetch_Params_List{l}, err
}

func (s VCS_fetch_Params_List) At(i int) VCS_fetch_Params { return VCS_fetch_Params{s.List.Struct(i)} }

func (s VCS_fetch_Params_List) Set(i int, v VCS_fetch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Params_List) String() string {
	str, _ := text.MarshalList(0xaff62edfdbfe53d0, s.List)
	return str
}

// VCS_fetch_Params_Promise is a wrapper for a VCS_fetch_Params promised by a client call.
type VCS_fetch_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Params_Promise) Struct() (VCS_fetch_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Params{s}, err
}

type VCS_fetch_Results struct{ capnp.Struct }

// VCS_fetch_Results_TypeID is the unique identifier for the type VCS_fetch_Results.
const VCS_fetch_Results_TypeID = 0xb262e0d6c2474d9c

func NewVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func NewRootVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func ReadRootVCS_fetch_Results(msg *capnp.Message) (VCS_fetch_Results, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Results{root.Struct()}, err
}

func (s VCS_fetch_Results) String() string {
	str, _ := text.Marshal(0xb262e0d6c2474d9c, s.Struct)
	return str
}

// VCS_fetch_Results_List is a list of VCS_fetch_Results.
type VCS_fetch_Results_List struct{ capnp.List }

// NewVCS_fetch_Results creates a new list of VCS_fetch_Results.
func NewVCS_fetch_Results_List(s *capnp.Segment, sz int32) (VCS_fetch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_fetch_Results_List{l}, err
}

func (s VCS_fetch_Results_List) At(i int) VCS_fetch_Results {
	return VCS_fetch_Results{s.List.Struct(i)}
}

func (s VCS_fetch_Results_List) Set(i int, v VCS_fetch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Results_List) String() string {
	str, _ := text.MarshalList(0xb262e0d6c2474d9c, s.List)
	return str
}

// VCS_fetch_Results_Promise is a wrapper for a VCS_fetch_Results promised by a client call.
type VCS_fetch_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Results_Promise) Struct() (VCS_fetch_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Results{s}, err
}

type Meta struct{ Client capnp.Client }

// Meta_TypeID is the unique identifier for the type Meta.
const Meta_TypeID = 0x83e6cb306e77e311

func (c Meta) Quit(ctx context.Context, params func(Meta_quit_Params) error, opts ...capnp.CallOption) Meta_quit_Results_Promise {
	if c.Client == nil {
		return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_quit_Params{Struct: s}) }
	}
	return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Ping(ctx context.Context, params func(Meta_ping_Params) error, opts ...capnp.CallOption) Meta_ping_Results_Promise {
	if c.Client == nil {
		return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_ping_Params{Struct: s}) }
	}
	return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Init(ctx context.Context, params func(Meta_init_Params) error, opts ...capnp.CallOption) Meta_init_Results_Promise {
	if c.Client == nil {
		return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_init_Params{Struct: s}) }
	}
	return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Mount(ctx context.Context, params func(Meta_mount_Params) error, opts ...capnp.CallOption) Meta_mount_Results_Promise {
	if c.Client == nil {
		return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_mount_Params{Struct: s}) }
	}
	return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Unmount(ctx context.Context, params func(Meta_unmount_Params) error, opts ...capnp.CallOption) Meta_unmount_Results_Promise {
	if c.Client == nil {
		return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_unmount_Params{Struct: s}) }
	}
	return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigGet(ctx context.Context, params func(Meta_configGet_Params) error, opts ...capnp.CallOption) Meta_configGet_Results_Promise {
	if c.Client == nil {
		return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configGet_Params{Struct: s}) }
	}
	return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigSet(ctx context.Context, params func(Meta_configSet_Params) error, opts ...capnp.CallOption) Meta_configSet_Results_Promise {
	if c.Client == nil {
		return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configSet_Params{Struct: s}) }
	}
	return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigAll(ctx context.Context, params func(Meta_configAll_Params) error, opts ...capnp.CallOption) Meta_configAll_Results_Promise {
	if c.Client == nil {
		return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configAll_Params{Struct: s}) }
	}
	return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) ConfigDoc(ctx context.Context, params func(Meta_configDoc_Params) error, opts ...capnp.CallOption) Meta_configDoc_Results_Promise {
	if c.Client == nil {
		return Meta_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configDoc_Params{Struct: s}) }
	}
	return Meta_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteAdd(ctx context.Context, params func(Meta_remoteAdd_Params) error, opts ...capnp.CallOption) Meta_remoteAdd_Results_Promise {
	if c.Client == nil {
		return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteAdd_Params{Struct: s}) }
	}
	return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteRm(ctx context.Context, params func(Meta_remoteRm_Params) error, opts ...capnp.CallOption) Meta_remoteRm_Results_Promise {
	if c.Client == nil {
		return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteRm_Params{Struct: s}) }
	}
	return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteLs(ctx context.Context, params func(Meta_remoteLs_Params) error, opts ...capnp.CallOption) Meta_remoteLs_Results_Promise {
	if c.Client == nil {
		return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteLs_Params{Struct: s}) }
	}
	return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteSave(ctx context.Context, params func(Meta_remoteSave_Params) error, opts ...capnp.CallOption) Meta_remoteSave_Results_Promise {
	if c.Client == nil {
		return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteSave_Params{Struct: s}) }
	}
	return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemotePing(ctx context.Context, params func(Meta_remotePing_Params) error, opts ...capnp.CallOption) Meta_remotePing_Results_Promise {
	if c.Client == nil {
		return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remotePing_Params{Struct: s}) }
	}
	return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) RemoteClear(ctx context.Context, params func(Meta_remoteClear_Params) error, opts ...capnp.CallOption) Meta_remoteClear_Results_Promise {
	if c.Client == nil {
		return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteClear_Params{Struct: s}) }
	}
	return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) NetLocate(ctx context.Context, params func(Meta_netLocate_Params) error, opts ...capnp.CallOption) Meta_netLocate_Results_Promise {
	if c.Client == nil {
		return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocate_Params{Struct: s}) }
	}
	return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) NetLocateNext(ctx context.Context, params func(Meta_netLocateNext_Params) error, opts ...capnp.CallOption) Meta_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocateNext_Params{Struct: s}) }
	}
	return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Whoami(ctx context.Context, params func(Meta_whoami_Params) error, opts ...capnp.CallOption) Meta_whoami_Results_Promise {
	if c.Client == nil {
		return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_whoami_Params{Struct: s}) }
	}
	return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Become(ctx context.Context, params func(Meta_become_Params) error, opts ...capnp.CallOption) Meta_become_Results_Promise {
	if c.Client == nil {
		return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_become_Params{Struct: s}) }
	}
	return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Connect(ctx context.Context, params func(Meta_connect_Params) error, opts ...capnp.CallOption) Meta_connect_Results_Promise {
	if c.Client == nil {
		return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_connect_Params{Struct: s}) }
	}
	return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Disconnect(ctx context.Context, params func(Meta_disconnect_Params) error, opts ...capnp.CallOption) Meta_disconnect_Results_Promise {
	if c.Client == nil {
		return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_disconnect_Params{Struct: s}) }
	}
	return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) OnlinePeers(ctx context.Context, params func(Meta_onlinePeers_Params) error, opts ...capnp.CallOption) Meta_onlinePeers_Results_Promise {
	if c.Client == nil {
		return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_onlinePeers_Params{Struct: s}) }
	}
	return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) Version(ctx context.Context, params func(Meta_version_Params) error, opts ...capnp.CallOption) Meta_version_Results_Promise {
	if c.Client == nil {
		return Meta_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      22,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_version_Params{Struct: s}) }
	}
	return Meta_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) FstabAdd(ctx context.Context, params func(Meta_fstabAdd_Params) error, opts ...capnp.CallOption) Meta_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Meta_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      23,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_fstabAdd_Params{Struct: s}) }
	}
	return Meta_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) FstabRemove(ctx context.Context, params func(Meta_fstabRemove_Params) error, opts ...capnp.CallOption) Meta_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Meta_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      24,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_fstabRemove_Params{Struct: s}) }
	}
	return Meta_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) FstabApply(ctx context.Context, params func(Meta_fstabApply_Params) error, opts ...capnp.CallOption) Meta_fstabApply_Results_Promise {
	if c.Client == nil {
		return Meta_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      25,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_fstabApply_Params{Struct: s}) }
	}
	return Meta_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Meta_Server interface {
	Quit(Meta_quit) error

	Ping(Meta_ping) error

	Init(Meta_init) error

	Mount(Meta_mount) error

	Unmount(Meta_unmount) error

	ConfigGet(Meta_configGet) error

	ConfigSet(Meta_configSet) error

	ConfigAll(Meta_configAll) error

	ConfigDoc(Meta_configDoc) error

	RemoteAdd(Meta_remoteAdd) error

	RemoteRm(Meta_remoteRm) error

	RemoteLs(Meta_remoteLs) error

	RemoteSave(Meta_remoteSave) error

	RemotePing(Meta_remotePing) error

	RemoteClear(Meta_remoteClear) error

	NetLocate(Meta_netLocate) error

	NetLocateNext(Meta_netLocateNext) error

	Whoami(Meta_whoami) error

	Become(Meta_become) error

	Connect(Meta_connect) error

	Disconnect(Meta_disconnect) error

	OnlinePeers(Meta_onlinePeers) error

	Version(Meta_version) error

	FstabAdd(Meta_fstabAdd) error

	FstabRemove(Meta_fstabRemove) error

	FstabApply(Meta_fstabApply) error
}

func Meta_ServerToClient(s Meta_Server) Meta {
	c, _ := s.(server.Closer)
	return Meta{Client: server.New(Meta_Methods(nil, s), c)}
}

func Meta_Methods(methods []server.Method, s Meta_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 26)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_quit{c, opts, Meta_quit_Params{Struct: p}, Meta_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_ping{c, opts, Meta_ping_Params{Struct: p}, Meta_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_init{c, opts, Meta_init_Params{Struct: p}, Meta_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_mount{c, opts, Meta_mount_Params{Struct: p}, Meta_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_unmount{c, opts, Meta_unmount_Params{Struct: p}, Meta_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configGet{c, opts, Meta_configGet_Params{Struct: p}, Meta_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configSet{c, opts, Meta_configSet_Params{Struct: p}, Meta_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configAll{c, opts, Meta_configAll_Params{Struct: p}, Meta_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configDoc{c, opts, Meta_configDoc_Params{Struct: p}, Meta_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteAdd{c, opts, Meta_remoteAdd_Params{Struct: p}, Meta_remoteAdd_Results{Struct: r}}
			return s.RemoteAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteRm{c, opts, Meta_remoteRm_Params{Struct: p}, Meta_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteLs{c, opts, Meta_remoteLs_Params{Struct: p}, Meta_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteSave{c, opts, Meta_remoteSave_Params{Struct: p}, Meta_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remotePing{c, opts, Meta_remotePing_Params{Struct: p}, Meta_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteClear{c, opts, Meta_remoteClear_Params{Struct: p}, Meta_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocate{c, opts, Meta_netLocate_Params{Struct: p}, Meta_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocateNext{c, opts, Meta_netLocateNext_Params{Struct: p}, Meta_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_whoami{c, opts, Meta_whoami_Params{Struct: p}, Meta_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_become{c, opts, Meta_become_Params{Struct: p}, Meta_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_connect{c, opts, Meta_connect_Params{Struct: p}, Meta_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_disconnect{c, opts, Meta_disconnect_Params{Struct: p}, Meta_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_onlinePeers{c, opts, Meta_onlinePeers_Params{Struct: p}, Meta_onlinePeers_Results{Struct: r}}
			return s.OnlinePeers(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      22,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_version{c, opts, Meta_version_Params{Struct: p}, Meta_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      23,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_fstabAdd{c, opts, Meta_fstabAdd_Params{Struct: p}, Meta_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      24,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_fstabRemove{c, opts, Meta_fstabRemove_Params{Struct: p}, Meta_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      25,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_fstabApply{c, opts, Meta_fstabApply_Params{Struct: p}, Meta_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Meta_quit holds the arguments for a server call to Meta.quit.
type Meta_quit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_quit_Params
	Results Meta_quit_Results
}

// Meta_ping holds the arguments for a server call to Meta.ping.
type Meta_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_ping_Params
	Results Meta_ping_Results
}

// Meta_init holds the arguments for a server call to Meta.init.
type Meta_init struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_init_Params
	Results Meta_init_Results
}

// Meta_mount holds the arguments for a server call to Meta.mount.
type Meta_mount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_mount_Params
	Results Meta_mount_Results
}

// Meta_unmount holds the arguments for a server call to Meta.unmount.
type Meta_unmount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_unmount_Params
	Results Meta_unmount_Results
}

// Meta_configGet holds the arguments for a server call to Meta.configGet.
type Meta_configGet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configGet_Params
	Results Meta_configGet_Results
}

// Meta_configSet holds the arguments for a server call to Meta.configSet.
type Meta_configSet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configSet_Params
	Results Meta_configSet_Results
}

// Meta_configAll holds the arguments for a server call to Meta.configAll.
type Meta_configAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configAll_Params
	Results Meta_configAll_Results
}

// Meta_configDoc holds the arguments for a server call to Meta.configDoc.
type Meta_configDoc struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_configDoc_Params
	Results Meta_configDoc_Results
}

// Meta_remoteAdd holds the arguments for a server call to Meta.remoteAdd.
type Meta_remoteAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteAdd_Params
	Results Meta_remoteAdd_Results
}

// Meta_remoteRm holds the arguments for a server call to Meta.remoteRm.
type Meta_remoteRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteRm_Params
	Results Meta_remoteRm_Results
}

// Meta_remoteLs holds the arguments for a server call to Meta.remoteLs.
type Meta_remoteLs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteLs_Params
	Results Meta_remoteLs_Results
}

// Meta_remoteSave holds the arguments for a server call to Meta.remoteSave.
type Meta_remoteSave struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteSave_Params
	Results Meta_remoteSave_Results
}

// Meta_remotePing holds the arguments for a server call to Meta.remotePing.
type Meta_remotePing struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remotePing_Params
	Results Meta_remotePing_Results
}

// Meta_remoteClear holds the arguments for a server call to Meta.remoteClear.
type Meta_remoteClear struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_remoteClear_Params
	Results Meta_remoteClear_Results
}

// Meta_netLocate holds the arguments for a server call to Meta.netLocate.
type Meta_netLocate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_netLocate_Params
	Results Meta_netLocate_Results
}

// Meta_netLocateNext holds the arguments for a server call to Meta.netLocateNext.
type Meta_netLocateNext struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_netLocateNext_Params
	Results Meta_netLocateNext_Results
}

// Meta_whoami holds the arguments for a server call to Meta.whoami.
type Meta_whoami struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_whoami_Params
	Results Meta_whoami_Results
}

// Meta_become holds the arguments for a server call to Meta.become.
type Meta_become struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_become_Params
	Results Meta_become_Results
}

// Meta_connect holds the arguments for a server call to Meta.connect.
type Meta_connect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_connect_Params
	Results Meta_connect_Results
}

// Meta_disconnect holds the arguments for a server call to Meta.disconnect.
type Meta_disconnect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_disconnect_Params
	Results Meta_disconnect_Results
}

// Meta_onlinePeers holds the arguments for a server call to Meta.onlinePeers.
type Meta_onlinePeers struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_onlinePeers_Params
	Results Meta_onlinePeers_Results
}

// Meta_version holds the arguments for a server call to Meta.version.
type Meta_version struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_version_Params
	Results Meta_version_Results
}

// Meta_fstabAdd holds the arguments for a server call to Meta.fstabAdd.
type Meta_fstabAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_fstabAdd_Params
	Results Meta_fstabAdd_Results
}

// Meta_fstabRemove holds the arguments for a server call to Meta.fstabRemove.
type Meta_fstabRemove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_fstabRemove_Params
	Results Meta_fstabRemove_Results
}

// Meta_fstabApply holds the arguments for a server call to Meta.fstabApply.
type Meta_fstabApply struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_fstabApply_Params
	Results Meta_fstabApply_Results
}

type Meta_quit_Params struct{ capnp.Struct }

// Meta_quit_Params_TypeID is the unique identifier for the type Meta_quit_Params.
const Meta_quit_Params_TypeID = 0xdf3a2e83d0d533b3

func NewMeta_quit_Params(s *capnp.Segment) (Meta_quit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Params{st}, err
}

func NewRootMeta_quit_Params(s *capnp.Segment) (Meta_quit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Params{st}, err
}

func ReadRootMeta_quit_Params(msg *capnp.Message) (Meta_quit_Params, error) {
	root, err := msg.RootPtr()
	return Meta_quit_Params{root.Struct()}, err
}

func (s Meta_quit_Params) String() string {
	str, _ := text.Marshal(0xdf3a2e83d0d533b3, s.Struct)
	return str
}

// Meta_quit_Params_List is a list of Meta_quit_Params.
type Meta_quit_Params_List struct{ capnp.List }

// NewMeta_quit_Params creates a new list of Meta_quit_Params.
func NewMeta_quit_Params_List(s *capnp.Segment, sz int32) (Meta_quit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_quit_Params_List{l}, err
}

func (s Meta_quit_Params_List) At(i int) Meta_quit_Params { return Meta_quit_Params{s.List.Struct(i)} }

func (s Meta_quit_Params_List) Set(i int, v Meta_quit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_quit_Params_List) String() string {
	str, _ := text.MarshalList(0xdf3a2e83d0d533b3, s.List)
	return str
}

// Meta_quit_Params_Promise is a wrapper for a Meta_quit_Params promised by a client call.
type Meta_quit_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_quit_Params_Promise) Struct() (Meta_quit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_quit_Params{s}, err
}

type Meta_quit_Results struct{ capnp.Struct }

// Meta_quit_Results_TypeID is the unique identifier for the type Meta_quit_Results.
const Meta_quit_Results_TypeID = 0xe1dd2f0c85965fd6

func NewMeta_quit_Results(s *capnp.Segment) (Meta_quit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Results{st}, err
}

func NewRootMeta_quit_Results(s *capnp.Segment) (Meta_quit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_quit_Results{st}, err
}

func ReadRootMeta_quit_Results(msg *capnp.Message) (Meta_quit_Results, error) {
	root, err := msg.RootPtr()
	return Meta_quit_Results{root.Struct()}, err
}

func (s Meta_quit_Results) String() string {
	str, _ := text.Marshal(0xe1dd2f0c85965fd6, s.Struct)
	return str
}

// Meta_quit_Results_List is a list of Meta_quit_Results.
type Meta_quit_Results_List struct{ capnp.List }

// NewMeta_quit_Results creates a new list of Meta_quit_Results.
func NewMeta_quit_Results_List(s *capnp.Segment, sz int32) (Meta_quit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_quit_Results_List{l}, err
}

func (s Meta_quit_Results_List) At(i int) Meta_quit_Results {
	return Meta_quit_Results{s.List.Struct(i)}
}

func (s Meta_quit_Results_List) Set(i int, v Meta_quit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_quit_Results_List) String() string {
	str, _ := text.MarshalList(0xe1dd2f0c85965fd6, s.List)
	return str
}

// Meta_quit_Results_Promise is a wrapper for a Meta_quit_Results promised by a client call.
type Meta_quit_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_quit_Results_Promise) Struct() (Meta_quit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_quit_Results{s}, err
}

type Meta_ping_Params struct{ capnp.Struct }

// Meta_ping_Params_TypeID is the unique identifier for the type Meta_ping_Params.
const Meta_ping_Params_TypeID = 0xc9ac448a01179aec

func NewMeta_ping_Params(s *capnp.Segment) (Meta_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_ping_Params{st}, err
}

func NewRootMeta_ping_Params(s *capnp.Segment) (Meta_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_ping_Params{st}, err
}

func ReadRootMeta_ping_Params(msg *capnp.Message) (Meta_ping_Params, error) {
	root, err := msg.RootPtr()
	return Meta_ping_Params{root.Struct()}, err
}

func (s Meta_ping_Params) String() string {
	str, _ := text.Marshal(0xc9ac448a01179aec, s.Struct)
	return str
}

// Meta_ping_Params_List is a list of Meta_ping_Params.
type Meta_ping_Params_List struct{ capnp.List }

// NewMeta_ping_Params creates a new list of Meta_ping_Params.
func NewMeta_ping_Params_List(s *capnp.Segment, sz int32) (Meta_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_ping_Params_List{l}, err
}

func (s Meta_ping_Params_List) At(i int) Meta_ping_Params { return Meta_ping_Params{s.List.Struct(i)} }

func (s Meta_ping_Params_List) Set(i int, v Meta_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_ping_Params_List) String() string {
	str, _ := text.MarshalList(0xc9ac448a01179aec, s.List)
	return str
}

// Meta_ping_Params_Promise is a wrapper for a Meta_ping_Params promised by a client call.
type Meta_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_ping_Params_Promise) Struct() (Meta_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_ping_Params{s}, err
}

type Meta_ping_Results struct{ capnp.Struct }

// Meta_ping_Results_TypeID is the unique identifier for the type Meta_ping_Results.
const Meta_ping_Results_TypeID = 0xffd34f15ec608676

func NewMeta_ping_Results(s *capnp.Segment) (Meta_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_ping_Results{st}, err
}

func NewRootMeta_ping_Results(s *capnp.Segment) (Meta_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_ping_Results{st}, err
}

func ReadRootMeta_ping_Results(msg *capnp.Message) (Meta_ping_Results, error) {
	root, err := msg.RootPtr()
	return Meta_ping_Results{root.Struct()}, err
}

func (s Meta_ping_Results) String() string {
	str, _ := text.Marshal(0xffd34f15ec608676, s.Struct)
	return str
}

func (s Meta_ping_Results) Reply() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_ping_Results) HasReply() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_ping_Results) ReplyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_ping_Results) SetReply(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_ping_Results_List is a list of Meta_ping_Results.
type Meta_ping_Results_List struct{ capnp.List }

// NewMeta_ping_Results creates a new list of Meta_ping_Results.
func NewMeta_ping_Results_List(s *capnp.Segment, sz int32) (Meta_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_ping_Results_List{l}, err
}

func (s Meta_ping_Results_List) At(i int) Meta_ping_Results {
	return Meta_ping_Results{s.List.Struct(i)}
}

func (s Meta_ping_Results_List) Set(i int, v Meta_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_ping_Results_List) String() string {
	str, _ := text.MarshalList(0xffd34f15ec608676, s.List)
	return str
}

// Meta_ping_Results_Promise is a wrapper for a Meta_ping_Results promised by a client call.
type Meta_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_ping_Results_Promise) Struct() (Meta_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_ping_Results{s}, err
}

type Meta_init_Params struct{ capnp.Struct }

// Meta_init_Params_TypeID is the unique identifier for the type Meta_init_Params.
const Meta_init_Params_TypeID = 0xed03ac5ef50453fb

func NewMeta_init_Params(s *capnp.Segment) (Meta_init_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Meta_init_Params{st}, err
}

func NewRootMeta_init_Params(s *capnp.Segment) (Meta_init_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Meta_init_Params{st}, err
}

func ReadRootMeta_init_Params(msg *capnp.Message) (Meta_init_Params, error) {
	root, err := msg.RootPtr()
	return Meta_init_Params{root.Struct()}, err
}

func (s Meta_init_Params) String() string {
	str, _ := text.Marshal(0xed03ac5ef50453fb, s.Struct)
	return str
}

func (s Meta_init_Params) BasePath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_init_Params) HasBasePath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) BasePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetBasePath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_init_Params) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Meta_init_Params) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Meta_init_Params) Backend() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Meta_init_Params) HasBackend() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) BackendBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetBackend(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Meta_init_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Meta_init_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Meta_init_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Meta_init_Params) SetPassword(v string) error {
	return s.Struct.SetText(3, v)
}

// Meta_init_Params_List is a list of Meta_init_Params.
type Meta_init_Params_List struct{ capnp.List }

// NewMeta_init_Params creates a new list of Meta_init_Params.
func NewMeta_init_Params_List(s *capnp.Segment, sz int32) (Meta_init_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Meta_init_Params_List{l}, err
}

func (s Meta_init_Params_List) At(i int) Meta_init_Params { return Meta_init_Params{s.List.Struct(i)} }

func (s Meta_init_Params_List) Set(i int, v Meta_init_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_init_Params_List) String() string {
	str, _ := text.MarshalList(0xed03ac5ef50453fb, s.List)
	return str
}

// Meta_init_Params_Promise is a wrapper for a Meta_init_Params promised by a client call.
type Meta_init_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_init_Params_Promise) Struct() (Meta_init_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_init_Params{s}, err
}

type Meta_init_Results struct{ capnp.Struct }

// Meta_init_Results_TypeID is the unique identifier for the type Meta_init_Results.
const Meta_init_Results_TypeID = 0xe826e800c318a7c4

func NewMeta_init_Results(s *capnp.Segment) (Meta_init_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_init_Results{st}, err
}

func NewRootMeta_init_Results(s *capnp.Segment) (Meta_init_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_init_Results{st}, err
}

func ReadRootMeta_init_Results(msg *capnp.Message) (Meta_init_Results, error) {
	root, err := msg.RootPtr()
	return Meta_init_Results{root.Struct()}, err
}

func (s Meta_init_Results) String() string {
	str, _ := text.Marshal(0xe826e800c318a7c4, s.Struct)
	return str
}

// Meta_init_Results_List is a list of Meta_init_Results.
type Meta_init_Results_List struct{ capnp.List }

// NewMeta_init_Results creates a new list of Meta_init_Results.
func NewMeta_init_Results_List(s *capnp.Segment, sz int32) (Meta_init_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_init_Results_List{l}, err
}

func (s Meta_init_Results_List) At(i int) Meta_init_Results {
	return Meta_init_Results{s.List.Struct(i)}
}

func (s Meta_init_Results_List) Set(i int, v Meta_init_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_init_Results_List) String() string {
	str, _ := text.MarshalList(0xe826e800c318a7c4, s.List)
	return str
}

// Meta_init_Results_Promise is a wrapper for a Meta_init_Results promised by a client call.
type Meta_init_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_init_Results_Promise) Struct() (Meta_init_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_init_Results{s}, err
}

type Meta_mount_Params struct{ capnp.Struct }

// Meta_mount_Params_TypeID is the unique identifier for the type Meta_mount_Params.
const Meta_mount_Params_TypeID = 0x9f647c7028225a97

func NewMeta_mount_Params(s *capnp.Segment) (Meta_mount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_mount_Params{st}, err
}

func NewRootMeta_mount_Params(s *capnp.Segment) (Meta_mount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_mount_Params{st}, err
}

func ReadRootMeta_mount_Params(msg *capnp.Message) (Meta_mount_Params, error) {
	root, err := msg.RootPtr()
	return Meta_mount_Params{root.Struct()}, err
}

func (s Meta_mount_Params) String() string {
	str, _ := text.Marshal(0x9f647c7028225a97, s.Struct)
	return str
}

func (s Meta_mount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_mount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_mount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_mount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_mount_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(1)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Meta_mount_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_mount_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Meta_mount_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Meta_mount_Params_List is a list of Meta_mount_Params.
type Meta_mount_Params_List struct{ capnp.List }

// NewMeta_mount_Params creates a new list of Meta_mount_Params.
func NewMeta_mount_Params_List(s *capnp.Segment, sz int32) (Meta_mount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Meta_mount_Params_List{l}, err
}

func (s Meta_mount_Params_List) At(i int) Meta_mount_Params {
	return Meta_mount_Params{s.List.Struct(i)}
}

func (s Meta_mount_Params_List) Set(i int, v Meta_mount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_mount_Params_List) String() string {
	str, _ := text.MarshalList(0x9f647c7028225a97, s.List)
	return str
}

// Meta_mount_Params_Promise is a wrapper for a Meta_mount_Params promised by a client call.
type Meta_mount_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_mount_Params_Promise) Struct() (Meta_mount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_mount_Params{s}, err
}

func (p Meta_mount_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Meta_mount_Results struct{ capnp.Struct }

// Meta_mount_Results_TypeID is the unique identifier for the type Meta_mount_Results.
const Meta_mount_Results_TypeID = 0x9ec3cfd8ff4bae06

func NewMeta_mount_Results(s *capnp.Segment) (Meta_mount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_mount_Results{st}, err
}

func NewRootMeta_mount_Results(s *capnp.Segment) (Meta_mount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_mount_Results{st}, err
}

func ReadRootMeta_mount_Results(msg *capnp.Message) (Meta_mount_Results, error) {
	root, err := msg.RootPtr()
	return Meta_mount_Results{root.Struct()}, err
}

func (s Meta_mount_Results) String() string {
	str, _ := text.Marshal(0x9ec3cfd8ff4bae06, s.Struct)
	return str
}

// Meta_mount_Results_List is a list of Meta_mount_Results.
type Meta_mount_Results_List struct{ capnp.List }

// NewMeta_mount_Results creates a new list of Meta_mount_Results.
func NewMeta_mount_Results_List(s *capnp.Segment, sz int32) (Meta_mount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_mount_Results_List{l}, err
}

func (s Meta_mount_Results_List) At(i int) Meta_mount_Results {
	return Meta_mount_Results{s.List.Struct(i)}
}

func (s Meta_mount_Results_List) Set(i int, v Meta_mount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_mount_Results_List) String() string {
	str, _ := text.MarshalList(0x9ec3cfd8ff4bae06, s.List)
	return str
}

// Meta_mount_Results_Promise is a wrapper for a Meta_mount_Results promised by a client call.
type Meta_mount_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_mount_Results_Promise) Struct() (Meta_mount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_mount_Results{s}, err
}

type Meta_unmount_Params struct{ capnp.Struct }

// Meta_unmount_Params_TypeID is the unique identifier for the type Meta_unmount_Params.
const Meta_unmount_Params_TypeID = 0xd0b0c690855bac45

func NewMeta_unmount_Params(s *capnp.Segment) (Meta_unmount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_unmount_Params{st}, err
}

func NewRootMeta_unmount_Params(s *capnp.Segment) (Meta_unmount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_unmount_Params{st}, err
}

func ReadRootMeta_unmount_Params(msg *capnp.Message) (Meta_unmount_Params, error) {
	root, err := msg.RootPtr()
	return Meta_unmount_Params{root.Struct()}, err
}

func (s Meta_unmount_Params) String() string {
	str, _ := text.Marshal(0xd0b0c690855bac45, s.Struct)
	return str
}

func (s Meta_unmount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_unmount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_unmount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_unmount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_unmount_Params_List is a list of Meta_unmount_Params.
type Meta_unmount_Params_List struct{ capnp.List }

// NewMeta_unmount_Params creates a new list of Meta_unmount_Params.
func NewMeta_unmount_Params_List(s *capnp.Segment, sz int32) (Meta_unmount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_unmount_Params_List{l}, err
}

func (s Meta_unmount_Params_List) At(i int) Meta_unmount_Params {
	return Meta_unmount_Params{s.List.Struct(i)}
}

func (s Meta_unmount_Params_List) Set(i int, v Meta_unmount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_unmount_Params_List) String() string {
	str, _ := text.MarshalList(0xd0b0c690855bac45, s.List)
	return str
}

// Meta_unmount_Params_Promise is a wrapper for a Meta_unmount_Params promised by a client call.
type Meta_unmount_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_unmount_Params_Promise) Struct() (Meta_unmount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_unmount_Params{s}, err
}

type Meta_unmount_Results struct{ capnp.Struct }

// Meta_unmount_Results_TypeID is the unique identifier for the type Meta_unmount_Results.
const Meta_unmount_Results_TypeID = 0xe275355b4989aaee

func NewMeta_unmount_Results(s *capnp.Segment) (Meta_unmount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_unmount_Results{st}, err
}

func NewRootMeta_unmount_Results(s *capnp.Segment) (Meta_unmount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_unmount_Results{st}, err
}

func ReadRootMeta_unmount_Results(msg *capnp.Message) (Meta_unmount_Results, error) {
	root, err := msg.RootPtr()
	return Meta_unmount_Results{root.Struct()}, err
}

func (s Meta_unmount_Results) String() string {
	str, _ := text.Marshal(0xe275355b4989aaee, s.Struct)
	return str
}

// Meta_unmount_Results_List is a list of Meta_unmount_Results.
type Meta_unmount_Results_List struct{ capnp.List }

// NewMeta_unmount_Results creates a new list of Meta_unmount_Results.
func NewMeta_unmount_Results_List(s *capnp.Segment, sz int32) (Meta_unmount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_unmount_Results_List{l}, err
}

func (s Meta_unmount_Results_List) At(i int) Meta_unmount_Results {
	return Meta_unmount_Results{s.List.Struct(i)}
}

func (s Meta_unmount_Results_List) Set(i int, v Meta_unmount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_unmount_Results_List) String() string {
	str, _ := text.MarshalList(0xe275355b4989aaee, s.List)
	return str
}

// Meta_unmount_Results_Promise is a wrapper for a Meta_unmount_Results promised by a client call.
type Meta_unmount_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_unmount_Results_Promise) Struct() (Meta_unmount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_unmount_Results{s}, err
}

type Meta_configGet_Params struct{ capnp.Struct }

// Meta_configGet_Params_TypeID is the unique identifier for the type Meta_configGet_Params.
const Meta_configGet_Params_TypeID = 0x8c8ac84e843e98c6

func NewMeta_configGet_Params(s *capnp.Segment) (Meta_configGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Params{st}, err
}

func NewRootMeta_configGet_Params(s *capnp.Segment) (Meta_configGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Params{st}, err
}

func ReadRootMeta_configGet_Params(msg *capnp.Message) (Meta_configGet_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configGet_Params{root.Struct()}, err
}

func (s Meta_configGet_Params) String() string {
	str, _ := text.Marshal(0x8c8ac84e843e98c6, s.Struct)
	return str
}

func (s Meta_configGet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configGet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configGet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configGet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_configGet_Params_List is a list of Meta_configGet_Params.
type Meta_configGet_Params_List struct{ capnp.List }

// NewMeta_configGet_Params creates a new list of Meta_configGet_Params.
func NewMeta_configGet_Params_List(s *capnp.Segment, sz int32) (Meta_configGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configGet_Params_List{l}, err
}

func (s Meta_configGet_Params_List) At(i int) Meta_configGet_Params {
	return Meta_configGet_Params{s.List.Struct(i)}
}

func (s Meta_configGet_Params_List) Set(i int, v Meta_configGet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configGet_Params_List) String() string {
	str, _ := text.MarshalList(0x8c8ac84e843e98c6, s.List)
	return str
}

// Meta_configGet_Params_Promise is a wrapper for a Meta_configGet_Params promised by a client call.
type Meta_configGet_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configGet_Params_Promise) Struct() (Meta_configGet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configGet_Params{s}, err
}

type Meta_configGet_Results struct{ capnp.Struct }

// Meta_configGet_Results_TypeID is the unique identifier for the type Meta_configGet_Results.
const Meta_configGet_Results_TypeID = 0xfd36e047f496768b

func NewMeta_configGet_Results(s *capnp.Segment) (Meta_configGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Results{st}, err
}

func NewRootMeta_configGet_Results(s *capnp.Segment) (Meta_configGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configGet_Results{st}, err
}

func ReadRootMeta_configGet_Results(msg *capnp.Message) (Meta_configGet_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configGet_Results{root.Struct()}, err
}

func (s Meta_configGet_Results) String() string {
	str, _ := text.Marshal(0xfd36e047f496768b, s.Struct)
	return str
}

func (s Meta_configGet_Results) Value() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configGet_Results) HasValue() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configGet_Results) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configGet_Results) SetValue(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_configGet_Results_List is a list of Meta_configGet_Results.
type Meta_configGet_Results_List struct{ capnp.List }

// NewMeta_configGet_Results creates a new list of Meta_configGet_Results.
func NewMeta_configGet_Results_List(s *capnp.Segment, sz int32) (Meta_configGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configGet_Results_List{l}, err
}

func (s Meta_configGet_Results_List) At(i int) Meta_configGet_Results {
	return Meta_configGet_Results{s.List.Struct(i)}
}

func (s Meta_configGet_Results_List) Set(i int, v Meta_configGet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configGet_Results_List) String() string {
	str, _ := text.MarshalList(0xfd36e047f496768b, s.List)
	return str
}

// Meta_configGet_Results_Promise is a wrapper for a Meta_configGet_Results promised by a client call.
type Meta_configGet_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configGet_Results_Promise) Struct() (Meta_configGet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configGet_Results{s}, err
}

type Meta_configSet_Params struct{ capnp.Struct }

// Meta_configSet_Params_TypeID is the unique identifier for the type Meta_configSet_Params.
const Meta_configSet_Params_TypeID = 0x97e9d1c7a00e713e

func NewMeta_configSet_Params(s *capnp.Segment) (Meta_configSet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_configSet_Params{st}, err
}

func NewRootMeta_configSet_Params(s *capnp.Segment) (Meta_configSet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Meta_configSet_Params{st}, err
}

func ReadRootMeta_configSet_Params(msg *capnp.Message) (Meta_configSet_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configSet_Params{root.Struct()}, err
}

func (s Meta_configSet_Params) String() string {
	str, _ := text.Marshal(0x97e9d1c7a00e713e, s.Struct)
	return str
}

func (s Meta_configSet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configSet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configSet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configSet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_configSet_Params) Value() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Meta_configSet_Params) HasValue() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_configSet_Params) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Meta_configSet_Params) SetValue(v string) error {
	return s.Struct.SetText(1, v)
}

// Meta_configSet_Params_List is a list of Meta_configSet_Params.
type Meta_configSet_Params_List struct{ capnp.List }

// NewMeta_configSet_Params creates a new list of Meta_configSet_Params.
func NewMeta_configSet_Params_List(s *capnp.Segment, sz int32) (Meta_configSet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Meta_configSet_Params_List{l}, err
}

func (s Meta_configSet_Params_List) At(i int) Meta_configSet_Params {
	return Meta_configSet_Params{s.List.Struct(i)}
}

func (s Meta_configSet_Params_List) Set(i int, v Meta_configSet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configSet_Params_List) String() string {
	str, _ := text.MarshalList(0x97e9d1c7a00e713e, s.List)
	return str
}

// Meta_configSet_Params_Promise is a wrapper for a Meta_configSet_Params promised by a client call.
type Meta_configSet_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configSet_Params_Promise) Struct() (Meta_configSet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configSet_Params{s}, err
}

type Meta_configSet_Results struct{ capnp.Struct }

// Meta_configSet_Results_TypeID is the unique identifier for the type Meta_configSet_Results.
const Meta_configSet_Results_TypeID = 0xa3b41ad02b8645ed

func NewMeta_configSet_Results(s *capnp.Segment) (Meta_configSet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configSet_Results{st}, err
}

func NewRootMeta_configSet_Results(s *capnp.Segment) (Meta_configSet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configSet_Results{st}, err
}

func ReadRootMeta_configSet_Results(msg *capnp.Message) (Meta_configSet_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configSet_Results{root.Struct()}, err
}

func (s Meta_configSet_Results) String() string {
	str, _ := text.Marshal(0xa3b41ad02b8645ed, s.Struct)
	return str
}

// Meta_configSet_Results_List is a list of Meta_configSet_Results.
type Meta_configSet_Results_List struct{ capnp.List }

// NewMeta_configSet_Results creates a new list of Meta_configSet_Results.
func NewMeta_configSet_Results_List(s *capnp.Segment, sz int32) (Meta_configSet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_configSet_Results_List{l}, err
}

func (s Meta_configSet_Results_List) At(i int) Meta_configSet_Results {
	return Meta_configSet_Results{s.List.Struct(i)}
}

func (s Meta_configSet_Results_List) Set(i int, v Meta_configSet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configSet_Results_List) String() string {
	str, _ := text.MarshalList(0xa3b41ad02b8645ed, s.List)
	return str
}

// Meta_configSet_Results_Promise is a wrapper for a Meta_configSet_Results promised by a client call.
type Meta_configSet_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configSet_Results_Promise) Struct() (Meta_configSet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configSet_Results{s}, err
}

type Meta_configAll_Params struct{ capnp.Struct }

// Meta_configAll_Params_TypeID is the unique identifier for the type Meta_configAll_Params.
const Meta_configAll_Params_TypeID = 0xb4b684abc5f91831

func NewMeta_configAll_Params(s *capnp.Segment) (Meta_configAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configAll_Params{st}, err
}

func NewRootMeta_configAll_Params(s *capnp.Segment) (Meta_configAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_configAll_Params{st}, err
}

func ReadRootMeta_configAll_Params(msg *capnp.Message) (Meta_configAll_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configAll_Params{root.Struct()}, err
}

func (s Meta_configAll_Params) String() string {
	str, _ := text.Marshal(0xb4b684abc5f91831, s.Struct)
	return str
}

// Meta_configAll_Params_List is a list of Meta_configAll_Params.
type Meta_configAll_Params_List struct{ capnp.List }

// NewMeta_configAll_Params creates a new list of Meta_configAll_Params.
func NewMeta_configAll_Params_List(s *capnp.Segment, sz int32) (Meta_configAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_configAll_Params_List{l}, err
}

func (s Meta_configAll_Params_List) At(i int) Meta_configAll_Params {
	return Meta_configAll_Params{s.List.Struct(i)}
}

func (s Meta_configAll_Params_List) Set(i int, v Meta_configAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configAll_Params_List) String() string {
	str, _ := text.MarshalList(0xb4b684abc5f91831, s.List)
	return str
}

// Meta_configAll_Params_Promise is a wrapper for a Meta_configAll_Params promised by a client call.
type Meta_configAll_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configAll_Params_Promise) Struct() (Meta_configAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configAll_Params{s}, err
}

type Meta_configAll_Results struct{ capnp.Struct }

// Meta_configAll_Results_TypeID is the unique identifier for the type Meta_configAll_Results.
const Meta_configAll_Results_TypeID = 0x8cdf119f2d20b743

func NewMeta_configAll_Results(s *capnp.Segment) (Meta_configAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configAll_Results{st}, err
}

func NewRootMeta_configAll_Results(s *capnp.Segment) (Meta_configAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configAll_Results{st}, err
}

func ReadRootMeta_configAll_Results(msg *capnp.Message) (Meta_configAll_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configAll_Results{root.Struct()}, err
}

func (s Meta_configAll_Results) String() string {
	str, _ := text.Marshal(0x8cdf119f2d20b743, s.Struct)
	return str
}

func (s Meta_configAll_Results) All() (ConfigEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry_List{List: p.List()}, err
}

func (s Meta_configAll_Results) HasAll() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configAll_Results) SetAll(v ConfigEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAll sets the all field to a newly
// allocated ConfigEntry_List, preferring placement in s's segment.
func (s Meta_configAll_Results) NewAll(n int32) (ConfigEntry_List, error) {
	l, err := NewConfigEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return ConfigEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_configAll_Results_List is a list of Meta_configAll_Results.
type Meta_configAll_Results_List struct{ capnp.List }

// NewMeta_configAll_Results creates a new list of Meta_configAll_Results.
func NewMeta_configAll_Results_List(s *capnp.Segment, sz int32) (Meta_configAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configAll_Results_List{l}, err
}

func (s Meta_configAll_Results_List) At(i int) Meta_configAll_Results {
	return Meta_configAll_Results{s.List.Struct(i)}
}

func (s Meta_configAll_Results_List) Set(i int, v Meta_configAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configAll_Results_List) String() string {
	str, _ := text.MarshalList(0x8cdf119f2d20b743, s.List)
	return str
}

// Meta_configAll_Results_Promise is a wrapper for a Meta_configAll_Results promised by a client call.
type Meta_configAll_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configAll_Results_Promise) Struct() (Meta_configAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configAll_Results{s}, err
}

type Meta_configDoc_Params struct{ capnp.Struct }

// Meta_configDoc_Params_TypeID is the unique identifier for the type Meta_configDoc_Params.
const Meta_configDoc_Params_TypeID = 0xc3b93ffa6fc9f160

func NewMeta_configDoc_Params(s *capnp.Segment) (Meta_configDoc_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configDoc_Params{st}, err
}

func NewRootMeta_configDoc_Params(s *capnp.Segment) (Meta_configDoc_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configDoc_Params{st}, err
}

func ReadRootMeta_configDoc_Params(msg *capnp.Message) (Meta_configDoc_Params, error) {
	root, err := msg.RootPtr()
	return Meta_configDoc_Params{root.Struct()}, err
}

func (s Meta_configDoc_Params) String() string {
	str, _ := text.Marshal(0xc3b93ffa6fc9f160, s.Struct)
	return str
}

func (s Meta_configDoc_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_configDoc_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configDoc_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_configDoc_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_configDoc_Params_List is a list of Meta_configDoc_Params.
type Meta_configDoc_Params_List struct{ capnp.List }

// NewMeta_configDoc_Params creates a new list of Meta_configDoc_Params.
func NewMeta_configDoc_Params_List(s *capnp.Segment, sz int32) (Meta_configDoc_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configDoc_Params_List{l}, err
}

func (s Meta_configDoc_Params_List) At(i int) Meta_configDoc_Params {
	return Meta_configDoc_Params{s.List.Struct(i)}
}

func (s Meta_configDoc_Params_List) Set(i int, v Meta_configDoc_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configDoc_Params_List) String() string {
	str, _ := text.MarshalList(0xc3b93ffa6fc9f160, s.List)
	return str
}

// Meta_configDoc_Params_Promise is a wrapper for a Meta_configDoc_Params promised by a client call.
type Meta_configDoc_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_configDoc_Params_Promise) Struct() (Meta_configDoc_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configDoc_Params{s}, err
}

type Meta_configDoc_Results struct{ capnp.Struct }

// Meta_configDoc_Results_TypeID is the unique identifier for the type Meta_configDoc_Results.
const Meta_configDoc_Results_TypeID = 0xc920e06b8110e91f

func NewMeta_configDoc_Results(s *capnp.Segment) (Meta_configDoc_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configDoc_Results{st}, err
}

func NewRootMeta_configDoc_Results(s *capnp.Segment) (Meta_configDoc_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_configDoc_Results{st}, err
}

func ReadRootMeta_configDoc_Results(msg *capnp.Message) (Meta_configDoc_Results, error) {
	root, err := msg.RootPtr()
	return Meta_configDoc_Results{root.Struct()}, err
}

func (s Meta_configDoc_Results) String() string {
	str, _ := text.Marshal(0xc920e06b8110e91f, s.Struct)
	return str
}

func (s Meta_configDoc_Results) Desc() (ConfigEntry, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry{Struct: p.Struct()}, err
}

func (s Meta_configDoc_Results) HasDesc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_configDoc_Results) SetDesc(v ConfigEntry) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDesc sets the desc field to a newly
// allocated ConfigEntry struct, preferring placement in s's segment.
func (s Meta_configDoc_Results) NewDesc() (ConfigEntry, error) {
	ss, err := NewConfigEntry(s.Struct.Segment())
	if err != nil {
		return ConfigEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_configDoc_Results_List is a list of Meta_configDoc_Results.
type Meta_configDoc_Results_List struct{ capnp.List }

// NewMeta_configDoc_Results creates a new list of Meta_configDoc_Results.
func NewMeta_configDoc_Results_List(s *capnp.Segment, sz int32) (Meta_configDoc_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_configDoc_Results_List{l}, err
}

func (s Meta_configDoc_Results_List) At(i int) Meta_configDoc_Results {
	return Meta_configDoc_Results{s.List.Struct(i)}
}

func (s Meta_configDoc_Results_List) Set(i int, v Meta_configDoc_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_configDoc_Results_List) String() string {
	str, _ := text.MarshalList(0xc920e06b8110e91f, s.List)
	return str
}

// Meta_configDoc_Results_Promise is a wrapper for a Meta_configDoc_Results promised by a client call.
type Meta_configDoc_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_configDoc_Results_Promise) Struct() (Meta_configDoc_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_configDoc_Results{s}, err
}

func (p Meta_configDoc_Results_Promise) Desc() ConfigEntry_Promise {
	return ConfigEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_remoteAdd_Params struct{ capnp.Struct }

// Meta_remoteAdd_Params_TypeID is the unique identifier for the type Meta_remoteAdd_Params.
const Meta_remoteAdd_Params_TypeID = 0xc53b6f91dec2daaa

func NewMeta_remoteAdd_Params(s *capnp.Segment) (Meta_remoteAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteAdd_Params{st}, err
}

func NewRootMeta_remoteAdd_Params(s *capnp.Segment) (Meta_remoteAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteAdd_Params{st}, err
}

func ReadRootMeta_remoteAdd_Params(msg *capnp.Message) (Meta_remoteAdd_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteAdd_Params{root.Struct()}, err
}

func (s Meta_remoteAdd_Params) String() string {
	str, _ := text.Marshal(0xc53b6f91dec2daaa, s.Struct)
	return str
}

func (s Meta_remoteAdd_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Meta_remoteAdd_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteAdd_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Meta_remoteAdd_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_remoteAdd_Params_List is a list of Meta_remoteAdd_Params.
type Meta_remoteAdd_Params_List struct{ capnp.List }

// NewMeta_remoteAdd_Params creates a new list of Meta_remoteAdd_Params.
func NewMeta_remoteAdd_Params_List(s *capnp.Segment, sz int32) (Meta_remoteAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteAdd_Params_List{l}, err
}

func (s Meta_remoteAdd_Params_List) At(i int) Meta_remoteAdd_Params {
	return Meta_remoteAdd_Params{s.List.Struct(i)}
}

func (s Meta_remoteAdd_Params_List) Set(i int, v Meta_remoteAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xc53b6f91dec2daaa, s.List)
	return str
}

// Meta_remoteAdd_Params_Promise is a wrapper for a Meta_remoteAdd_Params promised by a client call.
type Meta_remoteAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteAdd_Params_Promise) Struct() (Meta_remoteAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteAdd_Params{s}, err
}

func (p Meta_remoteAdd_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_remoteAdd_Results struct{ capnp.Struct }

// Meta_remoteAdd_Results_TypeID is the unique identifier for the type Meta_remoteAdd_Results.
const Meta_remoteAdd_Results_TypeID = 0x956cdf6b89128744

func NewMeta_remoteAdd_Results(s *capnp.Segment) (Meta_remoteAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteAdd_Results{st}, err
}

func NewRootMeta_remoteAdd_Results(s *capnp.Segment) (Meta_remoteAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteAdd_Results{st}, err
}

func ReadRootMeta_remoteAdd_Results(msg *capnp.Message) (Meta_remoteAdd_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteAdd_Results{root.Struct()}, err
}

func (s Meta_remoteAdd_Results) String() string {
	str, _ := text.Marshal(0x956cdf6b89128744, s.Struct)
	return str
}

// Meta_remoteAdd_Results_List is a list of Meta_remoteAdd_Results.
type Meta_remoteAdd_Results_List struct{ capnp.List }

// NewMeta_remoteAdd_Results creates a new list of Meta_remoteAdd_Results.
func NewMeta_remoteAdd_Results_List(s *capnp.Segment, sz int32) (Meta_remoteAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteAdd_Results_List{l}, err
}

func (s Meta_remoteAdd_Results_List) At(i int) Meta_remoteAdd_Results {
	return Meta_remoteAdd_Results{s.List.Struct(i)}
}

func (s Meta_remoteAdd_Results_List) Set(i int, v Meta_remoteAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteAdd_Results_List) String() string {
	str, _ := text.MarshalList(0x956cdf6b89128744, s.List)
	return str
}

// Meta_remoteAdd_Results_Promise is a wrapper for a Meta_remoteAdd_Results promised by a client call.
type Meta_remoteAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteAdd_Results_Promise) Struct() (Meta_remoteAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteAdd_Results{s}, err
}

type Meta_remoteRm_Params struct{ capnp.Struct }

// Meta_remoteRm_Params_TypeID is the unique identifier for the type Meta_remoteRm_Params.
const Meta_remoteRm_Params_TypeID = 0xbb6cabb7ec800819

func NewMeta_remoteRm_Params(s *capnp.Segment) (Meta_remoteRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteRm_Params{st}, err
}

func NewRootMeta_remoteRm_Params(s *capnp.Segment) (Meta_remoteRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteRm_Params{st}, err
}

func ReadRootMeta_remoteRm_Params(msg *capnp.Message) (Meta_remoteRm_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteRm_Params{root.Struct()}, err
}

func (s Meta_remoteRm_Params) String() string {
	str, _ := text.Marshal(0xbb6cabb7ec800819, s.Struct)
	return str
}

func (s Meta_remoteRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_remoteRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_remoteRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_remoteRm_Params_List is a list of Meta_remoteRm_Params.
type Meta_remoteRm_Params_List struct{ capnp.List }

// NewMeta_remoteRm_Params creates a new list of Meta_remoteRm_Params.
func NewMeta_remoteRm_Params_List(s *capnp.Segment, sz int32) (Meta_remoteRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteRm_Params_List{l}, err
}

func (s Meta_remoteRm_Params_List) At(i int) Meta_remoteRm_Params {
	return Meta_remoteRm_Params{s.List.Struct(i)}
}

func (s Meta_remoteRm_Params_List) Set(i int, v Meta_remoteRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteRm_Params_List) String() string {
	str, _ := text.MarshalList(0xbb6cabb7ec800819, s.List)
	return str
}

// Meta_remoteRm_Params_Promise is a wrapper for a Meta_remoteRm_Params promised by a client call.
type Meta_remoteRm_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteRm_Params_Promise) Struct() (Meta_remoteRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteRm_Params{s}, err
}

type Meta_remoteRm_Results struct{ capnp.Struct }

// Meta_remoteRm_Results_TypeID is the unique identifier for the type Meta_remoteRm_Results.
const Meta_remoteRm_Results_TypeID = 0xe21b4052865cf7c4

func NewMeta_remoteRm_Results(s *capnp.Segment) (Meta_remoteRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteRm_Results{st}, err
}

func NewRootMeta_remoteRm_Results(s *capnp.Segment) (Meta_remoteRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteRm_Results{st}, err
}

func ReadRootMeta_remoteRm_Results(msg *capnp.Message) (Meta_remoteRm_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteRm_Results{root.Struct()}, err
}

func (s Meta_remoteRm_Results) String() string {
	str, _ := text.Marshal(0xe21b4052865cf7c4, s.Struct)
	return str
}

// Meta_remoteRm_Results_List is a list of Meta_remoteRm_Results.
type Meta_remoteRm_Results_List struct{ capnp.List }

// NewMeta_remoteRm_Results creates a new list of Meta_remoteRm_Results.
func NewMeta_remoteRm_Results_List(s *capnp.Segment, sz int32) (Meta_remoteRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteRm_Results_List{l}, err
}

func (s Meta_remoteRm_Results_List) At(i int) Meta_remoteRm_Results {
	return Meta_remoteRm_Results{s.List.Struct(i)}
}

func (s Meta_remoteRm_Results_List) Set(i int, v Meta_remoteRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteRm_Results_List) String() string {
	str, _ := text.MarshalList(0xe21b4052865cf7c4, s.List)
	return str
}

// Meta_remoteRm_Results_Promise is a wrapper for a Meta_remoteRm_Results promised by a client call.
type Meta_remoteRm_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteRm_Results_Promise) Struct() (Meta_remoteRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteRm_Results{s}, err
}

type Meta_remoteLs_Params struct{ capnp.Struct }

// Meta_remoteLs_Params_TypeID is the unique identifier for the type Meta_remoteLs_Params.
const Meta_remoteLs_Params_TypeID = 0x94ee8cc65b181abe

func NewMeta_remoteLs_Params(s *capnp.Segment) (Meta_remoteLs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteLs_Params{st}, err
}

func NewRootMeta_remoteLs_Params(s *capnp.Segment) (Meta_remoteLs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteLs_Params{st}, err
}

func ReadRootMeta_remoteLs_Params(msg *capnp.Message) (Meta_remoteLs_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteLs_Params{root.Struct()}, err
}

func (s Meta_remoteLs_Params) String() string {
	str, _ := text.Marshal(0x94ee8cc65b181abe, s.Struct)
	return str
}

// Meta_remoteLs_Params_List is a list of Meta_remoteLs_Params.
type Meta_remoteLs_Params_List struct{ capnp.List }

// NewMeta_remoteLs_Params creates a new list of Meta_remoteLs_Params.
func NewMeta_remoteLs_Params_List(s *capnp.Segment, sz int32) (Meta_remoteLs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteLs_Params_List{l}, err
}

func (s Meta_remoteLs_Params_List) At(i int) Meta_remoteLs_Params {
	return Meta_remoteLs_Params{s.List.Struct(i)}
}

func (s Meta_remoteLs_Params_List) Set(i int, v Meta_remoteLs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteLs_Params_List) String() string {
	str, _ := text.MarshalList(0x94ee8cc65b181abe, s.List)
	return str
}

// Meta_remoteLs_Params_Promise is a wrapper for a Meta_remoteLs_Params promised by a client call.
type Meta_remoteLs_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteLs_Params_Promise) Struct() (Meta_remoteLs_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteLs_Params{s}, err
}

type Meta_remoteLs_Results struct{ capnp.Struct }

// Meta_remoteLs_Results_TypeID is the unique identifier for the type Meta_remoteLs_Results.
const Meta_remoteLs_Results_TypeID = 0xb05ff814dad43968

func NewMeta_remoteLs_Results(s *capnp.Segment) (Meta_remoteLs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteLs_Results{st}, err
}

func NewRootMeta_remoteLs_Results(s *capnp.Segment) (Meta_remoteLs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteLs_Results{st}, err
}

func ReadRootMeta_remoteLs_Results(msg *capnp.Message) (Meta_remoteLs_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteLs_Results{root.Struct()}, err
}

func (s Meta_remoteLs_Results) String() string {
	str, _ := text.Marshal(0xb05ff814dad43968, s.Struct)
	return str
}

func (s Meta_remoteLs_Results) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Meta_remoteLs_Results) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteLs_Results) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Meta_remoteLs_Results) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_remoteLs_Results_List is a list of Meta_remoteLs_Results.
type Meta_remoteLs_Results_List struct{ capnp.List }

// NewMeta_remoteLs_Results creates a new list of Meta_remoteLs_Results.
func NewMeta_remoteLs_Results_List(s *capnp.Segment, sz int32) (Meta_remoteLs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteLs_Results_List{l}, err
}

func (s Meta_remoteLs_Results_List) At(i int) Meta_remoteLs_Results {
	return Meta_remoteLs_Results{s.List.Struct(i)}
}

func (s Meta_remoteLs_Results_List) Set(i int, v Meta_remoteLs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteLs_Results_List) String() string {
	str, _ := text.MarshalList(0xb05ff814dad43968, s.List)
	return str
}

// Meta_remoteLs_Results_Promise is a wrapper for a Meta_remoteLs_Results promised by a client call.
type Meta_remoteLs_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteLs_Results_Promise) Struct() (Meta_remoteLs_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteLs_Results{s}, err
}

type Meta_remoteSave_Params struct{ capnp.Struct }

// Meta_remoteSave_Params_TypeID is the unique identifier for the type Meta_remoteSave_Params.
const Meta_remoteSave_Params_TypeID = 0x81b6b14efe0127c4

func NewMeta_remoteSave_Params(s *capnp.Segment) (Meta_remoteSave_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteSave_Params{st}, err
}

func NewRootMeta_remoteSave_Params(s *capnp.Segment) (Meta_remoteSave_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remoteSave_Params{st}, err
}

func ReadRootMeta_remoteSave_Params(msg *capnp.Message) (Meta_remoteSave_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteSave_Params{root.Struct()}, err
}

func (s Meta_remoteSave_Params) String() string {
	str, _ := text.Marshal(0x81b6b14efe0127c4, s.Struct)
	return str
}

func (s Meta_remoteSave_Params) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Meta_remoteSave_Params) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remoteSave_Params) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Meta_remoteSave_Params) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_remoteSave_Params_List is a list of Meta_remoteSave_Params.
type Meta_remoteSave_Params_List struct{ capnp.List }

// NewMeta_remoteSave_Params creates a new list of Meta_remoteSave_Params.
func NewMeta_remoteSave_Params_List(s *capnp.Segment, sz int32) (Meta_remoteSave_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remoteSave_Params_List{l}, err
}

func (s Meta_remoteSave_Params_List) At(i int) Meta_remoteSave_Params {
	return Meta_remoteSave_Params{s.List.Struct(i)}
}

func (s Meta_remoteSave_Params_List) Set(i int, v Meta_remoteSave_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteSave_Params_List) String() string {
	str, _ := text.MarshalList(0x81b6b14efe0127c4, s.List)
	return str
}

// Meta_remoteSave_Params_Promise is a wrapper for a Meta_remoteSave_Params promised by a client call.
type Meta_remoteSave_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteSave_Params_Promise) Struct() (Meta_remoteSave_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteSave_Params{s}, err
}

type Meta_remoteSave_Results struct{ capnp.Struct }

// Meta_remoteSave_Results_TypeID is the unique identifier for the type Meta_remoteSave_Results.
const Meta_remoteSave_Results_TypeID = 0xf9b3f22591273e08

func NewMeta_remoteSave_Results(s *capnp.Segment) (Meta_remoteSave_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteSave_Results{st}, err
}

func NewRootMeta_remoteSave_Results(s *capnp.Segment) (Meta_remoteSave_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteSave_Results{st}, err
}

func ReadRootMeta_remoteSave_Results(msg *capnp.Message) (Meta_remoteSave_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteSave_Results{root.Struct()}, err
}

func (s Meta_remoteSave_Results) String() string {
	str, _ := text.Marshal(0xf9b3f22591273e08, s.Struct)
	return str
}

// Meta_remoteSave_Results_List is a list of Meta_remoteSave_Results.
type Meta_remoteSave_Results_List struct{ capnp.List }

// NewMeta_remoteSave_Results creates a new list of Meta_remoteSave_Results.
func NewMeta_remoteSave_Results_List(s *capnp.Segment, sz int32) (Meta_remoteSave_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteSave_Results_List{l}, err
}

func (s Meta_remoteSave_Results_List) At(i int) Meta_remoteSave_Results {
	return Meta_remoteSave_Results{s.List.Struct(i)}
}

func (s Meta_remoteSave_Results_List) Set(i int, v Meta_remoteSave_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteSave_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b3f22591273e08, s.List)
	return str
}

// Meta_remoteSave_Results_Promise is a wrapper for a Meta_remoteSave_Results promised by a client call.
type Meta_remoteSave_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteSave_Results_Promise) Struct() (Meta_remoteSave_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteSave_Results{s}, err
}

type Meta_remotePing_Params struct{ capnp.Struct }

// Meta_remotePing_Params_TypeID is the unique identifier for the type Meta_remotePing_Params.
const Meta_remotePing_Params_TypeID = 0xbea1cb452f61974f

func NewMeta_remotePing_Params(s *capnp.Segment) (Meta_remotePing_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remotePing_Params{st}, err
}

func NewRootMeta_remotePing_Params(s *capnp.Segment) (Meta_remotePing_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_remotePing_Params{st}, err
}

func ReadRootMeta_remotePing_Params(msg *capnp.Message) (Meta_remotePing_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remotePing_Params{root.Struct()}, err
}

func (s Meta_remotePing_Params) String() string {
	str, _ := text.Marshal(0xbea1cb452f61974f, s.Struct)
	return str
}

func (s Meta_remotePing_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_remotePing_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_remotePing_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_remotePing_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_remotePing_Params_List is a list of Meta_remotePing_Params.
type Meta_remotePing_Params_List struct{ capnp.List }

// NewMeta_remotePing_Params creates a new list of Meta_remotePing_Params.
func NewMeta_remotePing_Params_List(s *capnp.Segment, sz int32) (Meta_remotePing_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_remotePing_Params_List{l}, err
}

func (s Meta_remotePing_Params_List) At(i int) Meta_remotePing_Params {
	return Meta_remotePing_Params{s.List.Struct(i)}
}

func (s Meta_remotePing_Params_List) Set(i int, v Meta_remotePing_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remotePing_Params_List) String() string {
	str, _ := text.MarshalList(0xbea1cb452f61974f, s.List)
	return str
}

// Meta_remotePing_Params_Promise is a wrapper for a Meta_remotePing_Params promised by a client call.
type Meta_remotePing_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remotePing_Params_Promise) Struct() (Meta_remotePing_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remotePing_Params{s}, err
}

type Meta_remotePing_Results struct{ capnp.Struct }

// Meta_remotePing_Results_TypeID is the unique identifier for the type Meta_remotePing_Results.
const Meta_remotePing_Results_TypeID = 0xf0f86c25885c5fe0

func NewMeta_remotePing_Results(s *capnp.Segment) (Meta_remotePing_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_remotePing_Results{st}, err
}

func NewRootMeta_remotePing_Results(s *capnp.Segment) (Meta_remotePing_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_remotePing_Results{st}, err
}

func ReadRootMeta_remotePing_Results(msg *capnp.Message) (Meta_remotePing_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remotePing_Results{root.Struct()}, err
}

func (s Meta_remotePing_Results) String() string {
	str, _ := text.Marshal(0xf0f86c25885c5fe0, s.Struct)
	return str
}

func (s Meta_remotePing_Results) Roundtrip() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Meta_remotePing_Results) SetRoundtrip(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Meta_remotePing_Results_List is a list of Meta_remotePing_Results.
type Meta_remotePing_Results_List struct{ capnp.List }

// NewMeta_remotePing_Results creates a new list of Meta_remotePing_Results.
func NewMeta_remotePing_Results_List(s *capnp.Segment, sz int32) (Meta_remotePing_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Meta_remotePing_Results_List{l}, err
}

func (s Meta_remotePing_Results_List) At(i int) Meta_remotePing_Results {
	return Meta_remotePing_Results{s.List.Struct(i)}
}

func (s Meta_remotePing_Results_List) Set(i int, v Meta_remotePing_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remotePing_Results_List) String() string {
	str, _ := text.MarshalList(0xf0f86c25885c5fe0, s.List)
	return str
}

// Meta_remotePing_Results_Promise is a wrapper for a Meta_remotePing_Results promised by a client call.
type Meta_remotePing_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remotePing_Results_Promise) Struct() (Meta_remotePing_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remotePing_Results{s}, err
}

type Meta_remoteClear_Params struct{ capnp.Struct }

// Meta_remoteClear_Params_TypeID is the unique identifier for the type Meta_remoteClear_Params.
const Meta_remoteClear_Params_TypeID = 0xd4353ecb879426a0

func NewMeta_remoteClear_Params(s *capnp.Segment) (Meta_remoteClear_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Params{st}, err
}

func NewRootMeta_remoteClear_Params(s *capnp.Segment) (Meta_remoteClear_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Params{st}, err
}

func ReadRootMeta_remoteClear_Params(msg *capnp.Message) (Meta_remoteClear_Params, error) {
	root, err := msg.RootPtr()
	return Meta_remoteClear_Params{root.Struct()}, err
}

func (s Meta_remoteClear_Params) String() string {
	str, _ := text.Marshal(0xd4353ecb879426a0, s.Struct)
	return str
}

// Meta_remoteClear_Params_List is a list of Meta_remoteClear_Params.
type Meta_remoteClear_Params_List struct{ capnp.List }

// NewMeta_remoteClear_Params creates a new list of Meta_remoteClear_Params.
func NewMeta_remoteClear_Params_List(s *capnp.Segment, sz int32) (Meta_remoteClear_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteClear_Params_List{l}, err
}

func (s Meta_remoteClear_Params_List) At(i int) Meta_remoteClear_Params {
	return Meta_remoteClear_Params{s.List.Struct(i)}
}

func (s Meta_remoteClear_Params_List) Set(i int, v Meta_remoteClear_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteClear_Params_List) String() string {
	str, _ := text.MarshalList(0xd4353ecb879426a0, s.List)
	return str
}

// Meta_remoteClear_Params_Promise is a wrapper for a Meta_remoteClear_Params promised by a client call.
type Meta_remoteClear_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteClear_Params_Promise) Struct() (Meta_remoteClear_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteClear_Params{s}, err
}

type Meta_remoteClear_Results struct{ capnp.Struct }

// Meta_remoteClear_Results_TypeID is the unique identifier for the type Meta_remoteClear_Results.
const Meta_remoteClear_Results_TypeID = 0xc538e655744911c7

func NewMeta_remoteClear_Results(s *capnp.Segment) (Meta_remoteClear_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Results{st}, err
}

func NewRootMeta_remoteClear_Results(s *capnp.Segment) (Meta_remoteClear_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_remoteClear_Results{st}, err
}

func ReadRootMeta_remoteClear_Results(msg *capnp.Message) (Meta_remoteClear_Results, error) {
	root, err := msg.RootPtr()
	return Meta_remoteClear_Results{root.Struct()}, err
}

func (s Meta_remoteClear_Results) String() string {
	str, _ := text.Marshal(0xc538e655744911c7, s.Struct)
	return str
}

// Meta_remoteClear_Results_List is a list of Meta_remoteClear_Results.
type Meta_remoteClear_Results_List struct{ capnp.List }

// NewMeta_remoteClear_Results creates a new list of Meta_remoteClear_Results.
func NewMeta_remoteClear_Results_List(s *capnp.Segment, sz int32) (Meta_remoteClear_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_remoteClear_Results_List{l}, err
}

func (s Meta_remoteClear_Results_List) At(i int) Meta_remoteClear_Results {
	return Meta_remoteClear_Results{s.List.Struct(i)}
}

func (s Meta_remoteClear_Results_List) Set(i int, v Meta_remoteClear_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_remoteClear_Results_List) String() string {
	str, _ := text.MarshalList(0xc538e655744911c7, s.List)
	return str
}

// Meta_remoteClear_Results_Promise is a wrapper for a Meta_remoteClear_Results promised by a client call.
type Meta_remoteClear_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_remoteClear_Results_Promise) Struct() (Meta_remoteClear_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_remoteClear_Results{s}, err
}

type Meta_netLocate_Params struct{ capnp.Struct }

// Meta_netLocate_Params_TypeID is the unique identifier for the type Meta_netLocate_Params.
const Meta_netLocate_Params_TypeID = 0x943e5e6dc1abe7b8

func NewMeta_netLocate_Params(s *capnp.Segment) (Meta_netLocate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Meta_netLocate_Params{st}, err
}

func NewRootMeta_netLocate_Params(s *capnp.Segment) (Meta_netLocate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Meta_netLocate_Params{st}, err
}

func ReadRootMeta_netLocate_Params(msg *capnp.Message) (Meta_netLocate_Params, error) {
	root, err := msg.RootPtr()
	return Meta_netLocate_Params{root.Struct()}, err
}

func (s Meta_netLocate_Params) String() string {
	str, _ := text.Marshal(0x943e5e6dc1abe7b8, s.Struct)
	return str
}

func (s Meta_netLocate_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_netLocate_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_netLocate_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_netLocate_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_netLocate_Params) TimeoutSec() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Meta_netLocate_Params) SetTimeoutSec(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Meta_netLocate_Params) LocateMask() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Meta_netLocate_Params) HasLocateMask() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_netLocate_Params) LocateMaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Meta_netLocate_Params) SetLocateMask(v string) error {
	return s.Struct.SetText(1, v)
}

// Meta_netLocate_Params_List is a list of Meta_netLocate_Params.
type Meta_netLocate_Params_List struct{ capnp.List }

// NewMeta_netLocate_Params creates a new list of Meta_netLocate_Params.
func NewMeta_netLocate_Params_List(s *capnp.Segment, sz int32) (Meta_netLocate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Meta_netLocate_Params_List{l}, err
}

func (s Meta_netLocate_Params_List) At(i int) Meta_netLocate_Params {
	return Meta_netLocate_Params{s.List.Struct(i)}
}

func (s Meta_netLocate_Params_List) Set(i int, v Meta_netLocate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocate_Params_List) String() string {
	str, _ := text.MarshalList(0x943e5e6dc1abe7b8, s.List)
	return str
}

// Meta_netLocate_Params_Promise is a wrapper for a Meta_netLocate_Params promised by a client call.
type Meta_netLocate_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocate_Params_Promise) Struct() (Meta_netLocate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocate_Params{s}, err
}

type Meta_netLocate_Results struct{ capnp.Struct }

// Meta_netLocate_Results_TypeID is the unique identifier for the type Meta_netLocate_Results.
const Meta_netLocate_Results_TypeID = 0xad2dd70d5d17decb

func NewMeta_netLocate_Results(s *capnp.Segment) (Meta_netLocate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocate_Results{st}, err
}

func NewRootMeta_netLocate_Results(s *capnp.Segment) (Meta_netLocate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocate_Results{st}, err
}

func ReadRootMeta_netLocate_Results(msg *capnp.Message) (Meta_netLocate_Results, error) {
	root, err := msg.RootPtr()
	return Meta_netLocate_Results{root.Struct()}, err
}

func (s Meta_netLocate_Results) String() string {
	str, _ := text.Marshal(0xad2dd70d5d17decb, s.Struct)
	return str
}

func (s Meta_netLocate_Results) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Meta_netLocate_Results) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Meta_netLocate_Results_List is a list of Meta_netLocate_Results.
type Meta_netLocate_Results_List struct{ capnp.List }

// NewMeta_netLocate_Results creates a new list of Meta_netLocate_Results.
func NewMeta_netLocate_Results_List(s *capnp.Segment, sz int32) (Meta_netLocate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Meta_netLocate_Results_List{l}, err
}

func (s Meta_netLocate_Results_List) At(i int) Meta_netLocate_Results {
	return Meta_netLocate_Results{s.List.Struct(i)}
}

func (s Meta_netLocate_Results_List) Set(i int, v Meta_netLocate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocate_Results_List) String() string {
	str, _ := text.MarshalList(0xad2dd70d5d17decb, s.List)
	return str
}

// Meta_netLocate_Results_Promise is a wrapper for a Meta_netLocate_Results promised by a client call.
type Meta_netLocate_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocate_Results_Promise) Struct() (Meta_netLocate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocate_Results{s}, err
}

type Meta_netLocateNext_Params struct{ capnp.Struct }

// Meta_netLocateNext_Params_TypeID is the unique identifier for the type Meta_netLocateNext_Params.
const Meta_netLocateNext_Params_TypeID = 0xd289114a83107db7

func NewMeta_netLocateNext_Params(s *capnp.Segment) (Meta_netLocateNext_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocateNext_Params{st}, err
}

func NewRootMeta_netLocateNext_Params(s *capnp.Segment) (Meta_netLocateNext_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Meta_netLocateNext_Params{st}, err
}

func ReadRootMeta_netLocateNext_Params(msg *capnp.Message) (Meta_netLocateNext_Params, error) {
	root, err := msg.RootPtr()
	return Meta_netLocateNext_Params{root.Struct()}, err
}

func (s Meta_netLocateNext_Params) String() string {
	str, _ := text.Marshal(0xd289114a83107db7, s.Struct)
	return str
}

func (s Meta_netLocateNext_Params) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Meta_netLocateNext_Params) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Meta_netLocateNext_Params_List is a list of Meta_netLocateNext_Params.
type Meta_netLocateNext_Params_List struct{ capnp.List }

// NewMeta_netLocateNext_Params creates a new list of Meta_netLocateNext_Params.
func NewMeta_netLocateNext_Params_List(s *capnp.Segment, sz int32) (Meta_netLocateNext_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Meta_netLocateNext_Params_List{l}, err
}

func (s Meta_netLocateNext_Params_List) At(i int) Meta_netLocateNext_Params {
	return Meta_netLocateNext_Params{s.List.Struct(i)}
}

func (s Meta_netLocateNext_Params_List) Set(i int, v Meta_netLocateNext_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocateNext_Params_List) String() string {
	str, _ := text.MarshalList(0xd289114a83107db7, s.List)
	return str
}

// Meta_netLocateNext_Params_Promise is a wrapper for a Meta_netLocateNext_Params promised by a client call.
type Meta_netLocateNext_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocateNext_Params_Promise) Struct() (Meta_netLocateNext_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocateNext_Params{s}, err
}

type Meta_netLocateNext_Results struct{ capnp.Struct }

// Meta_netLocateNext_Results_TypeID is the unique identifier for the type Meta_netLocateNext_Results.
const Meta_netLocateNext_Results_TypeID = 0x9eadc3c7605bd657

func NewMeta_netLocateNext_Results(s *capnp.Segment) (Meta_netLocateNext_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_netLocateNext_Results{st}, err
}

func NewRootMeta_netLocateNext_Results(s *capnp.Segment) (Meta_netLocateNext_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_netLocateNext_Results{st}, err
}

func ReadRootMeta_netLocateNext_Results(msg *capnp.Message) (Meta_netLocateNext_Results, error) {
	root, err := msg.RootPtr()
	return Meta_netLocateNext_Results{root.Struct()}, err
}

func (s Meta_netLocateNext_Results) String() string {
	str, _ := text.Marshal(0x9eadc3c7605bd657, s.Struct)
	return str
}

func (s Meta_netLocateNext_Results) Result() (LocateResult, error) {
	p, err := s.Struct.Ptr(0)
	return LocateResult{Struct: p.Struct()}, err
}

func (s Meta_netLocateNext_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_netLocateNext_Results) SetResult(v LocateResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated LocateResult struct, preferring placement in s's segment.
func (s Meta_netLocateNext_Results) NewResult() (LocateResult, error) {
	ss, err := NewLocateResult(s.Struct.Segment())
	if err != nil {
		return LocateResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_netLocateNext_Results_List is a list of Meta_netLocateNext_Results.
type Meta_netLocateNext_Results_List struct{ capnp.List }

// NewMeta_netLocateNext_Results creates a new list of Meta_netLocateNext_Results.
func NewMeta_netLocateNext_Results_List(s *capnp.Segment, sz int32) (Meta_netLocateNext_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_netLocateNext_Results_List{l}, err
}

func (s Meta_netLocateNext_Results_List) At(i int) Meta_netLocateNext_Results {
	return Meta_netLocateNext_Results{s.List.Struct(i)}
}

func (s Meta_netLocateNext_Results_List) Set(i int, v Meta_netLocateNext_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_netLocateNext_Results_List) String() string {
	str, _ := text.MarshalList(0x9eadc3c7605bd657, s.List)
	return str
}

// Meta_netLocateNext_Results_Promise is a wrapper for a Meta_netLocateNext_Results promised by a client call.
type Meta_netLocateNext_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_netLocateNext_Results_Promise) Struct() (Meta_netLocateNext_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_netLocateNext_Results{s}, err
}

func (p Meta_netLocateNext_Results_Promise) Result() LocateResult_Promise {
	return LocateResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_whoami_Params struct{ capnp.Struct }

// Meta_whoami_Params_TypeID is the unique identifier for the type Meta_whoami_Params.
const Meta_whoami_Params_TypeID = 0x90027b0333e503ee

func NewMeta_whoami_Params(s *capnp.Segment) (Meta_whoami_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_whoami_Params{st}, err
}

func NewRootMeta_whoami_Params(s *capnp.Segment) (Meta_whoami_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_whoami_Params{st}, err
}

func ReadRootMeta_whoami_Params(msg *capnp.Message) (Meta_whoami_Params, error) {
	root, err := msg.RootPtr()
	return Meta_whoami_Params{root.Struct()}, err
}

func (s Meta_whoami_Params) String() string {
	str, _ := text.Marshal(0x90027b0333e503ee, s.Struct)
	return str
}

// Meta_whoami_Params_List is a list of Meta_whoami_Params.
type Meta_whoami_Params_List struct{ capnp.List }

// NewMeta_whoami_Params creates a new list of Meta_whoami_Params.
func NewMeta_whoami_Params_List(s *capnp.Segment, sz int32) (Meta_whoami_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_whoami_Params_List{l}, err
}

func (s Meta_whoami_Params_List) At(i int) Meta_whoami_Params {
	return Meta_whoami_Params{s.List.Struct(i)}
}

func (s Meta_whoami_Params_List) Set(i int, v Meta_whoami_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_whoami_Params_List) String() string {
	str, _ := text.MarshalList(0x90027b0333e503ee, s.List)
	return str
}

// Meta_whoami_Params_Promise is a wrapper for a Meta_whoami_Params promised by a client call.
type Meta_whoami_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_whoami_Params_Promise) Struct() (Meta_whoami_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_whoami_Params{s}, err
}

type Meta_whoami_Results struct{ capnp.Struct }

// Meta_whoami_Results_TypeID is the unique identifier for the type Meta_whoami_Results.
const Meta_whoami_Results_TypeID = 0xf135f1bd71a1071f

func NewMeta_whoami_Results(s *capnp.Segment) (Meta_whoami_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_whoami_Results{st}, err
}

func NewRootMeta_whoami_Results(s *capnp.Segment) (Meta_whoami_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_whoami_Results{st}, err
}

func ReadRootMeta_whoami_Results(msg *capnp.Message) (Meta_whoami_Results, error) {
	root, err := msg.RootPtr()
	return Meta_whoami_Results{root.Struct()}, err
}

func (s Meta_whoami_Results) String() string {
	str, _ := text.Marshal(0xf135f1bd71a1071f, s.Struct)
	return str
}

func (s Meta_whoami_Results) Whoami() (Identity, error) {
	p, err := s.Struct.Ptr(0)
	return Identity{Struct: p.Struct()}, err
}

func (s Meta_whoami_Results) HasWhoami() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_whoami_Results) SetWhoami(v Identity) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWhoami sets the whoami field to a newly
// allocated Identity struct, preferring placement in s's segment.
func (s Meta_whoami_Results) NewWhoami() (Identity, error) {
	ss, err := NewIdentity(s.Struct.Segment())
	if err != nil {
		return Identity{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_whoami_Results_List is a list of Meta_whoami_Results.
type Meta_whoami_Results_List struct{ capnp.List }

// NewMeta_whoami_Results creates a new list of Meta_whoami_Results.
func NewMeta_whoami_Results_List(s *capnp.Segment, sz int32) (Meta_whoami_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_whoami_Results_List{l}, err
}

func (s Meta_whoami_Results_List) At(i int) Meta_whoami_Results {
	return Meta_whoami_Results{s.List.Struct(i)}
}

func (s Meta_whoami_Results_List) Set(i int, v Meta_whoami_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_whoami_Results_List) String() string {
	str, _ := text.MarshalList(0xf135f1bd71a1071f, s.List)
	return str
}

// Meta_whoami_Results_Promise is a wrapper for a Meta_whoami_Results promised by a client call.
type Meta_whoami_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_whoami_Results_Promise) Struct() (Meta_whoami_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_whoami_Results{s}, err
}

func (p Meta_whoami_Results_Promise) Whoami() Identity_Promise {
	return Identity_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_become_Params struct{ capnp.Struct }

// Meta_become_Params_TypeID is the unique identifier for the type Meta_become_Params.
const Meta_become_Params_TypeID = 0xe478c8af63857432

func NewMeta_become_Params(s *capnp.Segment) (Meta_become_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_become_Params{st}, err
}

func NewRootMeta_become_Params(s *capnp.Segment) (Meta_become_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_become_Params{st}, err
}

func ReadRootMeta_become_Params(msg *capnp.Message) (Meta_become_Params, error) {
	root, err := msg.RootPtr()
	return Meta_become_Params{root.Struct()}, err
}

func (s Meta_become_Params) String() string {
	str, _ := text.Marshal(0xe478c8af63857432, s.Struct)
	return str
}

func (s Meta_become_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_become_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_become_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_become_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_become_Params_List is a list of Meta_become_Params.
type Meta_become_Params_List struct{ capnp.List }

// NewMeta_become_Params creates a new list of Meta_become_Params.
func NewMeta_become_Params_List(s *capnp.Segment, sz int32) (Meta_become_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_become_Params_List{l}, err
}

func (s Meta_become_Params_List) At(i int) Meta_become_Params {
	return Meta_become_Params{s.List.Struct(i)}
}

func (s Meta_become_Params_List) Set(i int, v Meta_become_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_become_Params_List) String() string {
	str, _ := text.MarshalList(0xe478c8af63857432, s.List)
	return str
}

// Meta_become_Params_Promise is a wrapper for a Meta_become_Params promised by a client call.
type Meta_become_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_become_Params_Promise) Struct() (Meta_become_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_become_Params{s}, err
}

type Meta_become_Results struct{ capnp.Struct }

// Meta_become_Results_TypeID is the unique identifier for the type Meta_become_Results.
const Meta_become_Results_TypeID = 0xf580568dec00ba9f

func NewMeta_become_Results(s *capnp.Segment) (Meta_become_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_become_Results{st}, err
}

func NewRootMeta_become_Results(s *capnp.Segment) (Meta_become_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_become_Results{st}, err
}

func ReadRootMeta_become_Results(msg *capnp.Message) (Meta_become_Results, error) {
	root, err := msg.RootPtr()
	return Meta_become_Results{root.Struct()}, err
}

func (s Meta_become_Results) String() string {
	str, _ := text.Marshal(0xf580568dec00ba9f, s.Struct)
	return str
}

// Meta_become_Results_List is a list of Meta_become_Results.
type Meta_become_Results_List struct{ capnp.List }

// NewMeta_become_Results creates a new list of Meta_become_Results.
func NewMeta_become_Results_List(s *capnp.Segment, sz int32) (Meta_become_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_become_Results_List{l}, err
}

func (s Meta_become_Results_List) At(i int) Meta_become_Results {
	return Meta_become_Results{s.List.Struct(i)}
}

func (s Meta_become_Results_List) Set(i int, v Meta_become_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_become_Results_List) String() string {
	str, _ := text.MarshalList(0xf580568dec00ba9f, s.List)
	return str
}

// Meta_become_Results_Promise is a wrapper for a Meta_become_Results promised by a client call.
type Meta_become_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_become_Results_Promise) Struct() (Meta_become_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_become_Results{s}, err
}

type Meta_connect_Params struct{ capnp.Struct }

// Meta_connect_Params_TypeID is the unique identifier for the type Meta_connect_Params.
const Meta_connect_Params_TypeID = 0xb81842457ebf1a07

func NewMeta_connect_Params(s *capnp.Segment) (Meta_connect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Params{st}, err
}

func NewRootMeta_connect_Params(s *capnp.Segment) (Meta_connect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Params{st}, err
}

func ReadRootMeta_connect_Params(msg *capnp.Message) (Meta_connect_Params, error) {
	root, err := msg.RootPtr()
	return Meta_connect_Params{root.Struct()}, err
}

func (s Meta_connect_Params) String() string {
	str, _ := text.Marshal(0xb81842457ebf1a07, s.Struct)
	return str
}

// Meta_connect_Params_List is a list of Meta_connect_Params.
type Meta_connect_Params_List struct{ capnp.List }

// NewMeta_connect_Params creates a new list of Meta_connect_Params.
func NewMeta_connect_Params_List(s *capnp.Segment, sz int32) (Meta_connect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_connect_Params_List{l}, err
}

func (s Meta_connect_Params_List) At(i int) Meta_connect_Params {
	return Meta_connect_Params{s.List.Struct(i)}
}

func (s Meta_connect_Params_List) Set(i int, v Meta_connect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_connect_Params_List) String() string {
	str, _ := text.MarshalList(0xb81842457ebf1a07, s.List)
	return str
}

// Meta_connect_Params_Promise is a wrapper for a Meta_connect_Params promised by a client call.
type Meta_connect_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_connect_Params_Promise) Struct() (Meta_connect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_connect_Params{s}, err
}

type Meta_connect_Results struct{ capnp.Struct }

// Meta_connect_Results_TypeID is the unique identifier for the type Meta_connect_Results.
const Meta_connect_Results_TypeID = 0xd5616267acef42a7

func NewMeta_connect_Results(s *capnp.Segment) (Meta_connect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Results{st}, err
}

func NewRootMeta_connect_Results(s *capnp.Segment) (Meta_connect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_connect_Results{st}, err
}

func ReadRootMeta_connect_Results(msg *capnp.Message) (Meta_connect_Results, error) {
	root, err := msg.RootPtr()
	return Meta_connect_Results{root.Struct()}, err
}

func (s Meta_connect_Results) String() string {
	str, _ := text.Marshal(0xd5616267acef42a7, s.Struct)
	return str
}

// Meta_connect_Results_List is a list of Meta_connect_Results.
type Meta_connect_Results_List struct{ capnp.List }

// NewMeta_connect_Results creates a new list of Meta_connect_Results.
func NewMeta_connect_Results_List(s *capnp.Segment, sz int32) (Meta_connect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_connect_Results_List{l}, err
}

func (s Meta_connect_Results_List) At(i int) Meta_connect_Results {
	return Meta_connect_Results{s.List.Struct(i)}
}

func (s Meta_connect_Results_List) Set(i int, v Meta_connect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_connect_Results_List) String() string {
	str, _ := text.MarshalList(0xd5616267acef42a7, s.List)
	return str
}

// Meta_connect_Results_Promise is a wrapper for a Meta_connect_Results promised by a client call.
type Meta_connect_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_connect_Results_Promise) Struct() (Meta_connect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_connect_Results{s}, err
}

type Meta_disconnect_Params struct{ capnp.Struct }

// Meta_disconnect_Params_TypeID is the unique identifier for the type Meta_disconnect_Params.
const Meta_disconnect_Params_TypeID = 0xa596c7cd35022b4b

func NewMeta_disconnect_Params(s *capnp.Segment) (Meta_disconnect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Params{st}, err
}

func NewRootMeta_disconnect_Params(s *capnp.Segment) (Meta_disconnect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Params{st}, err
}

func ReadRootMeta_disconnect_Params(msg *capnp.Message) (Meta_disconnect_Params, error) {
	root, err := msg.RootPtr()
	return Meta_disconnect_Params{root.Struct()}, err
}

func (s Meta_disconnect_Params) String() string {
	str, _ := text.Marshal(0xa596c7cd35022b4b, s.Struct)
	return str
}

// Meta_disconnect_Params_List is a list of Meta_disconnect_Params.
type Meta_disconnect_Params_List struct{ capnp.List }

// NewMeta_disconnect_Params creates a new list of Meta_disconnect_Params.
func NewMeta_disconnect_Params_List(s *capnp.Segment, sz int32) (Meta_disconnect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_disconnect_Params_List{l}, err
}

func (s Meta_disconnect_Params_List) At(i int) Meta_disconnect_Params {
	return Meta_disconnect_Params{s.List.Struct(i)}
}

func (s Meta_disconnect_Params_List) Set(i int, v Meta_disconnect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_disconnect_Params_List) String() string {
	str, _ := text.MarshalList(0xa596c7cd35022b4b, s.List)
	return str
}

// Meta_disconnect_Params_Promise is a wrapper for a Meta_disconnect_Params promised by a client call.
type Meta_disconnect_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_disconnect_Params_Promise) Struct() (Meta_disconnect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_disconnect_Params{s}, err
}

type Meta_disconnect_Results struct{ capnp.Struct }

// Meta_disconnect_Results_TypeID is the unique identifier for the type Meta_disconnect_Results.
const Meta_disconnect_Results_TypeID = 0xf9be86640a05f28e

func NewMeta_disconnect_Results(s *capnp.Segment) (Meta_disconnect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Results{st}, err
}

func NewRootMeta_disconnect_Results(s *capnp.Segment) (Meta_disconnect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_disconnect_Results{st}, err
}

func ReadRootMeta_disconnect_Results(msg *capnp.Message) (Meta_disconnect_Results, error) {
	root, err := msg.RootPtr()
	return Meta_disconnect_Results{root.Struct()}, err
}

func (s Meta_disconnect_Results) String() string {
	str, _ := text.Marshal(0xf9be86640a05f28e, s.Struct)
	return str
}

// Meta_disconnect_Results_List is a list of Meta_disconnect_Results.
type Meta_disconnect_Results_List struct{ capnp.List }

// NewMeta_disconnect_Results creates a new list of Meta_disconnect_Results.
func NewMeta_disconnect_Results_List(s *capnp.Segment, sz int32) (Meta_disconnect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_disconnect_Results_List{l}, err
}

func (s Meta_disconnect_Results_List) At(i int) Meta_disconnect_Results {
	return Meta_disconnect_Results{s.List.Struct(i)}
}

func (s Meta_disconnect_Results_List) Set(i int, v Meta_disconnect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_disconnect_Results_List) String() string {
	str, _ := text.MarshalList(0xf9be86640a05f28e, s.List)
	return str
}

// Meta_disconnect_Results_Promise is a wrapper for a Meta_disconnect_Results promised by a client call.
type Meta_disconnect_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_disconnect_Results_Promise) Struct() (Meta_disconnect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_disconnect_Results{s}, err
}

type Meta_onlinePeers_Params struct{ capnp.Struct }

// Meta_onlinePeers_Params_TypeID is the unique identifier for the type Meta_onlinePeers_Params.
const Meta_onlinePeers_Params_TypeID = 0xb6e947604cd03fdd

func NewMeta_onlinePeers_Params(s *capnp.Segment) (Meta_onlinePeers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_onlinePeers_Params{st}, err
}

func NewRootMeta_onlinePeers_Params(s *capnp.Segment) (Meta_onlinePeers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_onlinePeers_Params{st}, err
}

func ReadRootMeta_onlinePeers_Params(msg *capnp.Message) (Meta_onlinePeers_Params, error) {
	root, err := msg.RootPtr()
	return Meta_onlinePeers_Params{root.Struct()}, err
}

func (s Meta_onlinePeers_Params) String() string {
	str, _ := text.Marshal(0xb6e947604cd03fdd, s.Struct)
	return str
}

// Meta_onlinePeers_Params_List is a list of Meta_onlinePeers_Params.
type Meta_onlinePeers_Params_List struct{ capnp.List }

// NewMeta_onlinePeers_Params creates a new list of Meta_onlinePeers_Params.
func NewMeta_onlinePeers_Params_List(s *capnp.Segment, sz int32) (Meta_onlinePeers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_onlinePeers_Params_List{l}, err
}

func (s Meta_onlinePeers_Params_List) At(i int) Meta_onlinePeers_Params {
	return Meta_onlinePeers_Params{s.List.Struct(i)}
}

func (s Meta_onlinePeers_Params_List) Set(i int, v Meta_onlinePeers_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_onlinePeers_Params_List) String() string {
	str, _ := text.MarshalList(0xb6e947604cd03fdd, s.List)
	return str
}

// Meta_onlinePeers_Params_Promise is a wrapper for a Meta_onlinePeers_Params promised by a client call.
type Meta_onlinePeers_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_onlinePeers_Params_Promise) Struct() (Meta_onlinePeers_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_onlinePeers_Params{s}, err
}

type Meta_onlinePeers_Results struct{ capnp.Struct }

// Meta_onlinePeers_Results_TypeID is the unique identifier for the type Meta_onlinePeers_Results.
const Meta_onlinePeers_Results_TypeID = 0xa40fb26fec6a8554

func NewMeta_onlinePeers_Results(s *capnp.Segment) (Meta_onlinePeers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_onlinePeers_Results{st}, err
}

func NewRootMeta_onlinePeers_Results(s *capnp.Segment) (Meta_onlinePeers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_onlinePeers_Results{st}, err
}

func ReadRootMeta_onlinePeers_Results(msg *capnp.Message) (Meta_onlinePeers_Results, error) {
	root, err := msg.RootPtr()
	return Meta_onlinePeers_Results{root.Struct()}, err
}

func (s Meta_onlinePeers_Results) String() string {
	str, _ := text.Marshal(0xa40fb26fec6a8554, s.Struct)
	return str
}

func (s Meta_onlinePeers_Results) Infos() (PeerStatus_List, error) {
	p, err := s.Struct.Ptr(0)
	return PeerStatus_List{List: p.List()}, err
}

func (s Meta_onlinePeers_Results) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_onlinePeers_Results) SetInfos(v PeerStatus_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated PeerStatus_List, preferring placement in s's segment.
func (s Meta_onlinePeers_Results) NewInfos(n int32) (PeerStatus_List, error) {
	l, err := NewPeerStatus_List(s.Struct.Segment(), n)
	if err != nil {
		return PeerStatus_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Meta_onlinePeers_Results_List is a list of Meta_onlinePeers_Results.
type Meta_onlinePeers_Results_List struct{ capnp.List }

// NewMeta_onlinePeers_Results creates a new list of Meta_onlinePeers_Results.
func NewMeta_onlinePeers_Results_List(s *capnp.Segment, sz int32) (Meta_onlinePeers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_onlinePeers_Results_List{l}, err
}

func (s Meta_onlinePeers_Results_List) At(i int) Meta_onlinePeers_Results {
	return Meta_onlinePeers_Results{s.List.Struct(i)}
}

func (s Meta_onlinePeers_Results_List) Set(i int, v Meta_onlinePeers_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_onlinePeers_Results_List) String() string {
	str, _ := text.MarshalList(0xa40fb26fec6a8554, s.List)
	return str
}

// Meta_onlinePeers_Results_Promise is a wrapper for a Meta_onlinePeers_Results promised by a client call.
type Meta_onlinePeers_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_onlinePeers_Results_Promise) Struct() (Meta_onlinePeers_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_onlinePeers_Results{s}, err
}

type Meta_version_Params struct{ capnp.Struct }

// Meta_version_Params_TypeID is the unique identifier for the type Meta_version_Params.
const Meta_version_Params_TypeID = 0x995f6a1f026506d7

func NewMeta_version_Params(s *capnp.Segment) (Meta_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_version_Params{st}, err
}

func NewRootMeta_version_Params(s *capnp.Segment) (Meta_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_version_Params{st}, err
}

func ReadRootMeta_version_Params(msg *capnp.Message) (Meta_version_Params, error) {
	root, err := msg.RootPtr()
	return Meta_version_Params{root.Struct()}, err
}

func (s Meta_version_Params) String() string {
	str, _ := text.Marshal(0x995f6a1f026506d7, s.Struct)
	return str
}

// Meta_version_Params_List is a list of Meta_version_Params.
type Meta_version_Params_List struct{ capnp.List }

// NewMeta_version_Params creates a new list of Meta_version_Params.
func NewMeta_version_Params_List(s *capnp.Segment, sz int32) (Meta_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_version_Params_List{l}, err
}

func (s Meta_version_Params_List) At(i int) Meta_version_Params {
	return Meta_version_Params{s.List.Struct(i)}
}

func (s Meta_version_Params_List) Set(i int, v Meta_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_version_Params_List) String() string {
	str, _ := text.MarshalList(0x995f6a1f026506d7, s.List)
	return str
}

// Meta_version_Params_Promise is a wrapper for a Meta_version_Params promised by a client call.
type Meta_version_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_version_Params_Promise) Struct() (Meta_version_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_version_Params{s}, err
}

type Meta_version_Results struct{ capnp.Struct }

// Meta_version_Results_TypeID is the unique identifier for the type Meta_version_Results.
const Meta_version_Results_TypeID = 0xca65371f4071f39b

func NewMeta_version_Results(s *capnp.Segment) (Meta_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_version_Results{st}, err
}

func NewRootMeta_version_Results(s *capnp.Segment) (Meta_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_version_Results{st}, err
}

func ReadRootMeta_version_Results(msg *capnp.Message) (Meta_version_Results, error) {
	root, err := msg.RootPtr()
	return Meta_version_Results{root.Struct()}, err
}

func (s Meta_version_Results) String() string {
	str, _ := text.Marshal(0xca65371f4071f39b, s.Struct)
	return str
}

func (s Meta_version_Results) Version() (Version, error) {
	p, err := s.Struct.Ptr(0)
	return Version{Struct: p.Struct()}, err
}

func (s Meta_version_Results) HasVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_version_Results) SetVersion(v Version) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVersion sets the version field to a newly
// allocated Version struct, preferring placement in s's segment.
func (s Meta_version_Results) NewVersion() (Version, error) {
	ss, err := NewVersion(s.Struct.Segment())
	if err != nil {
		return Version{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Meta_version_Results_List is a list of Meta_version_Results.
type Meta_version_Results_List struct{ capnp.List }

// NewMeta_version_Results creates a new list of Meta_version_Results.
func NewMeta_version_Results_List(s *capnp.Segment, sz int32) (Meta_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_version_Results_List{l}, err
}

func (s Meta_version_Results_List) At(i int) Meta_version_Results {
	return Meta_version_Results{s.List.Struct(i)}
}

func (s Meta_version_Results_List) Set(i int, v Meta_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_version_Results_List) String() string {
	str, _ := text.MarshalList(0xca65371f4071f39b, s.List)
	return str
}

// Meta_version_Results_Promise is a wrapper for a Meta_version_Results promised by a client call.
type Meta_version_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_version_Results_Promise) Struct() (Meta_version_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_version_Results{s}, err
}

func (p Meta_version_Results_Promise) Version() Version_Promise {
	return Version_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Meta_fstabAdd_Params struct{ capnp.Struct }

// Meta_fstabAdd_Params_TypeID is the unique identifier for the type Meta_fstabAdd_Params.
const Meta_fstabAdd_Params_TypeID = 0xe5d744f10b0b65b6

func NewMeta_fstabAdd_Params(s *capnp.Segment) (Meta_fstabAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Meta_fstabAdd_Params{st}, err
}

func NewRootMeta_fstabAdd_Params(s *capnp.Segment) (Meta_fstabAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Meta_fstabAdd_Params{st}, err
}

func ReadRootMeta_fstabAdd_Params(msg *capnp.Message) (Meta_fstabAdd_Params, error) {
	root, err := msg.RootPtr()
	return Meta_fstabAdd_Params{root.Struct()}, err
}

func (s Meta_fstabAdd_Params) String() string {
	str, _ := text.Marshal(0xe5d744f10b0b65b6, s.Struct)
	return str
}

func (s Meta_fstabAdd_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_fstabAdd_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_fstabAdd_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_fstabAdd_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Meta_fstabAdd_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Meta_fstabAdd_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Meta_fstabAdd_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Meta_fstabAdd_Params) SetMountPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Meta_fstabAdd_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(2)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Meta_fstabAdd_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Meta_fstabAdd_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Meta_fstabAdd_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// Meta_fstabAdd_Params_List is a list of Meta_fstabAdd_Params.
type Meta_fstabAdd_Params_List struct{ capnp.List }

// NewMeta_fstabAdd_Params creates a new list of Meta_fstabAdd_Params.
func NewMeta_fstabAdd_Params_List(s *capnp.Segment, sz int32) (Meta_fstabAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Meta_fstabAdd_Params_List{l}, err
}

func (s Meta_fstabAdd_Params_List) At(i int) Meta_fstabAdd_Params {
	return Meta_fstabAdd_Params{s.List.Struct(i)}
}

func (s Meta_fstabAdd_Params_List) Set(i int, v Meta_fstabAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_fstabAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xe5d744f10b0b65b6, s.List)
	return str
}

// Meta_fstabAdd_Params_Promise is a wrapper for a Meta_fstabAdd_Params promised by a client call.
type Meta_fstabAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_fstabAdd_Params_Promise) Struct() (Meta_fstabAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_fstabAdd_Params{s}, err
}

func (p Meta_fstabAdd_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

type Meta_fstabAdd_Results struct{ capnp.Struct }

// Meta_fstabAdd_Results_TypeID is the unique identifier for the type Meta_fstabAdd_Results.
const Meta_fstabAdd_Results_TypeID = 0xd702c8c0844a9a80

func NewMeta_fstabAdd_Results(s *capnp.Segment) (Meta_fstabAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabAdd_Results{st}, err
}

func NewRootMeta_fstabAdd_Results(s *capnp.Segment) (Meta_fstabAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabAdd_Results{st}, err
}

func ReadRootMeta_fstabAdd_Results(msg *capnp.Message) (Meta_fstabAdd_Results, error) {
	root, err := msg.RootPtr()
	return Meta_fstabAdd_Results{root.Struct()}, err
}

func (s Meta_fstabAdd_Results) String() string {
	str, _ := text.Marshal(0xd702c8c0844a9a80, s.Struct)
	return str
}

// Meta_fstabAdd_Results_List is a list of Meta_fstabAdd_Results.
type Meta_fstabAdd_Results_List struct{ capnp.List }

// NewMeta_fstabAdd_Results creates a new list of Meta_fstabAdd_Results.
func NewMeta_fstabAdd_Results_List(s *capnp.Segment, sz int32) (Meta_fstabAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_fstabAdd_Results_List{l}, err
}

func (s Meta_fstabAdd_Results_List) At(i int) Meta_fstabAdd_Results {
	return Meta_fstabAdd_Results{s.List.Struct(i)}
}

func (s Meta_fstabAdd_Results_List) Set(i int, v Meta_fstabAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_fstabAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xd702c8c0844a9a80, s.List)
	return str
}

// Meta_fstabAdd_Results_Promise is a wrapper for a Meta_fstabAdd_Results promised by a client call.
type Meta_fstabAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_fstabAdd_Results_Promise) Struct() (Meta_fstabAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_fstabAdd_Results{s}, err
}

type Meta_fstabRemove_Params struct{ capnp.Struct }

// Meta_fstabRemove_Params_TypeID is the unique identifier for the type Meta_fstabRemove_Params.
const Meta_fstabRemove_Params_TypeID = 0x9431ce5850882fb2

func NewMeta_fstabRemove_Params(s *capnp.Segment) (Meta_fstabRemove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_fstabRemove_Params{st}, err
}

func NewRootMeta_fstabRemove_Params(s *capnp.Segment) (Meta_fstabRemove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_fstabRemove_Params{st}, err
}

func ReadRootMeta_fstabRemove_Params(msg *capnp.Message) (Meta_fstabRemove_Params, error) {
	root, err := msg.RootPtr()
	return Meta_fstabRemove_Params{root.Struct()}, err
}

func (s Meta_fstabRemove_Params) String() string {
	str, _ := text.Marshal(0x9431ce5850882fb2, s.Struct)
	return str
}

func (s Meta_fstabRemove_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_fstabRemove_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_fstabRemove_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_fstabRemove_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_fstabRemove_Params_List is a list of Meta_fstabRemove_Params.
type Meta_fstabRemove_Params_List struct{ capnp.List }

// NewMeta_fstabRemove_Params creates a new list of Meta_fstabRemove_Params.
func NewMeta_fstabRemove_Params_List(s *capnp.Segment, sz int32) (Meta_fstabRemove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_fstabRemove_Params_List{l}, err
}

func (s Meta_fstabRemove_Params_List) At(i int) Meta_fstabRemove_Params {
	return Meta_fstabRemove_Params{s.List.Struct(i)}
}

func (s Meta_fstabRemove_Params_List) Set(i int, v Meta_fstabRemove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_fstabRemove_Params_List) String() string {
	str, _ := text.MarshalList(0x9431ce5850882fb2, s.List)
	return str
}

// Meta_fstabRemove_Params_Promise is a wrapper for a Meta_fstabRemove_Params promised by a client call.
type Meta_fstabRemove_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_fstabRemove_Params_Promise) Struct() (Meta_fstabRemove_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_fstabRemove_Params{s}, err
}

type Meta_fstabRemove_Results struct{ capnp.Struct }

// Meta_fstabRemove_Results_TypeID is the unique identifier for the type Meta_fstabRemove_Results.
const Meta_fstabRemove_Results_TypeID = 0xeadeeb3132f58b99

func NewMeta_fstabRemove_Results(s *capnp.Segment) (Meta_fstabRemove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabRemove_Results{st}, err
}

func NewRootMeta_fstabRemove_Results(s *capnp.Segment) (Meta_fstabRemove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabRemove_Results{st}, err
}

func ReadRootMeta_fstabRemove_Results(msg *capnp.Message) (Meta_fstabRemove_Results, error) {
	root, err := msg.RootPtr()
	return Meta_fstabRemove_Results{root.Struct()}, err
}

func (s Meta_fstabRemove_Results) String() string {
	str, _ := text.Marshal(0xeadeeb3132f58b99, s.Struct)
	return str
}

// Meta_fstabRemove_Results_List is a list of Meta_fstabRemove_Results.
type Meta_fstabRemove_Results_List struct{ capnp.List }

// NewMeta_fstabRemove_Results creates a new list of Meta_fstabRemove_Results.
func NewMeta_fstabRemove_Results_List(s *capnp.Segment, sz int32) (Meta_fstabRemove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_fstabRemove_Results_List{l}, err
}

func (s Meta_fstabRemove_Results_List) At(i int) Meta_fstabRemove_Results {
	return Meta_fstabRemove_Results{s.List.Struct(i)}
}

func (s Meta_fstabRemove_Results_List) Set(i int, v Meta_fstabRemove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_fstabRemove_Results_List) String() string {
	str, _ := text.MarshalList(0xeadeeb3132f58b99, s.List)
	return str
}

// Meta_fstabRemove_Results_Promise is a wrapper for a Meta_fstabRemove_Results promised by a client call.
type Meta_fstabRemove_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_fstabRemove_Results_Promise) Struct() (Meta_fstabRemove_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_fstabRemove_Results{s}, err
}

type Meta_fstabApply_Params struct{ capnp.Struct }

// Meta_fstabApply_Params_TypeID is the unique identifier for the type Meta_fstabApply_Params.
const Meta_fstabApply_Params_TypeID = 0xdccb15f94f0d1d24

func NewMeta_fstabApply_Params(s *capnp.Segment) (Meta_fstabApply_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabApply_Params{st}, err
}

func NewRootMeta_fstabApply_Params(s *capnp.Segment) (Meta_fstabApply_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabApply_Params{st}, err
}

func ReadRootMeta_fstabApply_Params(msg *capnp.Message) (Meta_fstabApply_Params, error) {
	root, err := msg.RootPtr()
	return Meta_fstabApply_Params{root.Struct()}, err
}

func (s Meta_fstabApply_Params) String() string {
	str, _ := text.Marshal(0xdccb15f94f0d1d24, s.Struct)
	return str
}

// Meta_fstabApply_Params_List is a list of Meta_fstabApply_Params.
type Meta_fstabApply_Params_List struct{ capnp.List }

// NewMeta_fstabApply_Params creates a new list of Meta_fstabApply_Params.
func NewMeta_fstabApply_Params_List(s *capnp.Segment, sz int32) (Meta_fstabApply_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_fstabApply_Params_List{l}, err
}

func (s Meta_fstabApply_Params_List) At(i int) Meta_fstabApply_Params {
	return Meta_fstabApply_Params{s.List.Struct(i)}
}

func (s Meta_fstabApply_Params_List) Set(i int, v Meta_fstabApply_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_fstabApply_Params_List) String() string {
	str, _ := text.MarshalList(0xdccb15f94f0d1d24, s.List)
	return str
}

// Meta_fstabApply_Params_Promise is a wrapper for a Meta_fstabApply_Params promised by a client call.
type Meta_fstabApply_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_fstabApply_Params_Promise) Struct() (Meta_fstabApply_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_fstabApply_Params{s}, err
}

type Meta_fstabApply_Results struct{ capnp.Struct }

// Meta_fstabApply_Results_TypeID is the unique identifier for the type Meta_fstabApply_Results.
const Meta_fstabApply_Results_TypeID = 0xfed377ce13579230

func NewMeta_fstabApply_Results(s *capnp.Segment) (Meta_fstabApply_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabApply_Results{st}, err
}

func NewRootMeta_fstabApply_Results(s *capnp.Segment) (Meta_fstabApply_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_fstabApply_Results{st}, err
}

func ReadRootMeta_fstabApply_Results(msg *capnp.Message) (Meta_fstabApply_Results, error) {
	root, err := msg.RootPtr()
	return Meta_fstabApply_Results{root.Struct()}, err
}

func (s Meta_fstabApply_Results) String() string {
	str, _ := text.Marshal(0xfed377ce13579230, s.Struct)
	return str
}

// Meta_fstabApply_Results_List is a list of Meta_fstabApply_Results.
type Meta_fstabApply_Results_List struct{ capnp.List }

// NewMeta_fstabApply_Results creates a new list of Meta_fstabApply_Results.
func NewMeta_fstabApply_Results_List(s *capnp.Segment, sz int32) (Meta_fstabApply_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_fstabApply_Results_List{l}, err
}

func (s Meta_fstabApply_Results_List) At(i int) Meta_fstabApply_Results {
	return Meta_fstabApply_Results{s.List.Struct(i)}
}

func (s Meta_fstabApply_Results_List) Set(i int, v Meta_fstabApply_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_fstabApply_Results_List) String() string {
	str, _ := text.MarshalList(0xfed377ce13579230, s.List)
	return str
}

// Meta_fstabApply_Results_Promise is a wrapper for a Meta_fstabApply_Results promised by a client call.
type Meta_fstabApply_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_fstabApply_Results_Promise) Struct() (Meta_fstabApply_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_fstabApply_Results{s}, err
}

type API struct{ Client capnp.Client }

// API_TypeID is the unique identifier for the type API.
const API_TypeID = 0xfc487818328b97ef

func (c API) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ListExplicitPins(ctx context.Context, params func(FS_listExplicitPins_Params) error, opts ...capnp.CallOption) FS_listExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_listExplicitPins_Params{Struct: s}) }
	}
	return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ClearExplicitPins(ctx context.Context, params func(FS_clearExplicitPins_Params) error, opts ...capnp.CallOption) FS_clearExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_clearExplicitPins_Params{Struct: s}) }
	}
	return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) SetExplicitPins(ctx context.Context, params func(FS_setExplicitPins_Params) error, opts ...capnp.CallOption) FS_setExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_setExplicitPins_Params{Struct: s}) }
	}
	return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Quit(ctx context.Context, params func(Meta_quit_Params) error, opts ...capnp.CallOption) Meta_quit_Results_Promise {
	if c.Client == nil {
		return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_quit_Params{Struct: s}) }
	}
	return Meta_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Ping(ctx context.Context, params func(Meta_ping_Params) error, opts ...capnp.CallOption) Meta_ping_Results_Promise {
	if c.Client == nil {
		return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_ping_Params{Struct: s}) }
	}
	return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Init(ctx context.Context, params func(Meta_init_Params) error, opts ...capnp.CallOption) Meta_init_Results_Promise {
	if c.Client == nil {
		return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_init_Params{Struct: s}) }
	}
	return Meta_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mount(ctx context.Context, params func(Meta_mount_Params) error, opts ...capnp.CallOption) Meta_mount_Results_Promise {
	if c.Client == nil {
		return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_mount_Params{Struct: s}) }
	}
	return Meta_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unmount(ctx context.Context, params func(Meta_unmount_Params) error, opts ...capnp.CallOption) Meta_unmount_Results_Promise {
	if c.Client == nil {
		return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_unmount_Params{Struct: s}) }
	}
	return Meta_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigGet(ctx context.Context, params func(Meta_configGet_Params) error, opts ...capnp.CallOption) Meta_configGet_Results_Promise {
	if c.Client == nil {
		return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configGet_Params{Struct: s}) }
	}
	return Meta_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigSet(ctx context.Context, params func(Meta_configSet_Params) error, opts ...capnp.CallOption) Meta_configSet_Results_Promise {
	if c.Client == nil {
		return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configSet_Params{Struct: s}) }
	}
	return Meta_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigAll(ctx context.Context, params func(Meta_configAll_Params) error, opts ...capnp.CallOption) Meta_configAll_Results_Promise {
	if c.Client == nil {
		return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configAll_Params{Struct: s}) }
	}
	return Meta_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigDoc(ctx context.Context, params func(Meta_configDoc_Params) error, opts ...capnp.CallOption) Meta_configDoc_Results_Promise {
	if c.Client == nil {
		return Meta_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_configDoc_Params{Struct: s}) }
	}
	return Meta_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteAdd(ctx context.Context, params func(Meta_remoteAdd_Params) error, opts ...capnp.CallOption) Meta_remoteAdd_Results_Promise {
	if c.Client == nil {
		return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteAdd_Params{Struct: s}) }
	}
	return Meta_remoteAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteRm(ctx context.Context, params func(Meta_remoteRm_Params) error, opts ...capnp.CallOption) Meta_remoteRm_Results_Promise {
	if c.Client == nil {
		return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteRm_Params{Struct: s}) }
	}
	return Meta_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteLs(ctx context.Context, params func(Meta_remoteLs_Params) error, opts ...capnp.CallOption) Meta_remoteLs_Results_Promise {
	if c.Client == nil {
		return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteLs_Params{Struct: s}) }
	}
	return Meta_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteSave(ctx context.Context, params func(Meta_remoteSave_Params) error, opts ...capnp.CallOption) Meta_remoteSave_Results_Promise {
	if c.Client == nil {
		return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteSave_Params{Struct: s}) }
	}
	return Meta_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemotePing(ctx context.Context, params func(Meta_remotePing_Params) error, opts ...capnp.CallOption) Meta_remotePing_Results_Promise {
	if c.Client == nil {
		return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remotePing_Params{Struct: s}) }
	}
	return Meta_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteClear(ctx context.Context, params func(Meta_remoteClear_Params) error, opts ...capnp.CallOption) Meta_remoteClear_Results_Promise {
	if c.Client == nil {
		return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_remoteClear_Params{Struct: s}) }
	}
	return Meta_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocate(ctx context.Context, params func(Meta_netLocate_Params) error, opts ...capnp.CallOption) Meta_netLocate_Results_Promise {
	if c.Client == nil {
		return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocate_Params{Struct: s}) }
	}
	return Meta_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocateNext(ctx context.Context, params func(Meta_netLocateNext_Params) error, opts ...capnp.CallOption) Meta_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_netLocateNext_Params{Struct: s}) }
	}
	return Meta_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Whoami(ctx context.Context, params func(Meta_whoami_Params) error, opts ...capnp.CallOption) Meta_whoami_Results_Promise {
	if c.Client == nil {
		return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_whoami_Params{Struct: s}) }
	}
	return Meta_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Become(ctx context.Context, params func(Meta_become_Params) error, opts ...capnp.CallOption) Meta_become_Results_Promise {
	if c.Client == nil {
		return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_become_Params{Struct: s}) }
	}
	return Meta_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Connect(ctx context.Context, params func(Meta_connect_Params) error, opts ...capnp.CallOption) Meta_connect_Results_Promise {
	if c.Client == nil {
		return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_connect_Params{Struct: s}) }
	}
	return Meta_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Disconnect(ctx context.Context, params func(Meta_disconnect_Params) error, opts ...capnp.CallOption) Meta_disconnect_Results_Promise {
	if c.Client == nil {
		return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_disconnect_Params{Struct: s}) }
	}
	return Meta_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) OnlinePeers(ctx context.Context, params func(Meta_onlinePeers_Params) error, opts ...capnp.CallOption) Meta_onlinePeers_Results_Promise {
	if c.Client == nil {
		return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_onlinePeers_Params{Struct: s}) }
	}
	return Meta_onlinePeers_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Version(ctx context.Context, params func(Meta_version_Params) error, opts ...capnp.CallOption) Meta_version_Results_Promise {
	if c.Client == nil {
		return Meta_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      22,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_version_Params{Struct: s}) }
	}
	return Meta_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabAdd(ctx context.Context, params func(Meta_fstabAdd_Params) error, opts ...capnp.CallOption) Meta_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Meta_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      23,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_fstabAdd_Params{Struct: s}) }
	}
	return Meta_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabRemove(ctx context.Context, params func(Meta_fstabRemove_Params) error, opts ...capnp.CallOption) Meta_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Meta_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      24,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_fstabRemove_Params{Struct: s}) }
	}
	return Meta_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabApply(ctx context.Context, params func(Meta_fstabApply_Params) error, opts ...capnp.CallOption) Meta_fstabApply_Results_Promise {
	if c.Client == nil {
		return Meta_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      25,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_fstabApply_Params{Struct: s}) }
	}
	return Meta_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type API_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	ListExplicitPins(FS_listExplicitPins) error

	ClearExplicitPins(FS_clearExplicitPins) error

	SetExplicitPins(FS_setExplicitPins) error

	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	Quit(Meta_quit) error

	Ping(Meta_ping) error

	Init(Meta_init) error

	Mount(Meta_mount) error

	Unmount(Meta_unmount) error

	ConfigGet(Meta_configGet) error

	ConfigSet(Meta_configSet) error

	ConfigAll(Meta_configAll) error

	ConfigDoc(Meta_configDoc) error

	RemoteAdd(Meta_remoteAdd) error

	RemoteRm(Meta_remoteRm) error

	RemoteLs(Meta_remoteLs) error

	RemoteSave(Meta_remoteSave) error

	RemotePing(Meta_remotePing) error

	RemoteClear(Meta_remoteClear) error

	NetLocate(Meta_netLocate) error

	NetLocateNext(Meta_netLocateNext) error

	Whoami(Meta_whoami) error

	Become(Meta_become) error

	Connect(Meta_connect) error

	Disconnect(Meta_disconnect) error

	OnlinePeers(Meta_onlinePeers) error

	Version(Meta_version) error

	FstabAdd(Meta_fstabAdd) error

	FstabRemove(Meta_fstabRemove) error

	FstabApply(Meta_fstabApply) error
}

func API_ServerToClient(s API_Server) API {
	c, _ := s.(server.Closer)
	return API{Client: server.New(API_Methods(nil, s), c)}
}

func API_Methods(methods []server.Method, s API_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 51)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_listExplicitPins{c, opts, FS_listExplicitPins_Params{Struct: p}, FS_listExplicitPins_Results{Struct: r}}
			return s.ListExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_clearExplicitPins{c, opts, FS_clearExplicitPins_Params{Struct: p}, FS_clearExplicitPins_Results{Struct: r}}
			return s.ClearExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_setExplicitPins{c, opts, FS_setExplicitPins_Params{Struct: p}, FS_setExplicitPins_Results{Struct: r}}
			return s.SetExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_quit{c, opts, Meta_quit_Params{Struct: p}, Meta_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_ping{c, opts, Meta_ping_Params{Struct: p}, Meta_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_init{c, opts, Meta_init_Params{Struct: p}, Meta_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_mount{c, opts, Meta_mount_Params{Struct: p}, Meta_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_unmount{c, opts, Meta_unmount_Params{Struct: p}, Meta_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configGet{c, opts, Meta_configGet_Params{Struct: p}, Meta_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configSet{c, opts, Meta_configSet_Params{Struct: p}, Meta_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configAll{c, opts, Meta_configAll_Params{Struct: p}, Meta_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_configDoc{c, opts, Meta_configDoc_Params{Struct: p}, Meta_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteAdd{c, opts, Meta_remoteAdd_Params{Struct: p}, Meta_remoteAdd_Results{Struct: r}}
			return s.RemoteAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteRm{c, opts, Meta_remoteRm_Params{Struct: p}, Meta_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteLs{c, opts, Meta_remoteLs_Params{Struct: p}, Meta_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteSave{c, opts, Meta_remoteSave_Params{Struct: p}, Meta_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remotePing{c, opts, Meta_remotePing_Params{Struct: p}, Meta_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_remoteClear{c, opts, Meta_remoteClear_Params{Struct: p}, Meta_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocate{c, opts, Meta_netLocate_Params{Struct: p}, Meta_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_netLocateNext{c, opts, Meta_netLocateNext_Params{Struct: p}, Meta_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_whoami{c, opts, Meta_whoami_Params{Struct: p}, Meta_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_become{c, opts, Meta_become_Params{Struct: p}, Meta_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_connect{c, opts, Meta_connect_Params{Struct: p}, Meta_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_disconnect{c, opts, Meta_disconnect_Params{Struct: p}, Meta_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "onlinePeers",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_onlinePeers{c, opts, Meta_onlinePeers_Params{Struct: p}, Meta_onlinePeers_Results{Struct: r}}
			return s.OnlinePeers(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      22,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_version{c, opts, Meta_version_Params{Struct: p}, Meta_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      23,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_fstabAdd{c, opts, Meta_fstabAdd_Params{Struct: p}, Meta_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      24,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_fstabRemove{c, opts, Meta_fstabRemove_Params{Struct: p}, Meta_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x83e6cb306e77e311,
			MethodID:      25,
			InterfaceName: "server/capnp/local_api.capnp:Meta",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_fstabApply{c, opts, Meta_fstabApply_Params{Struct: p}, Meta_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

const schema_ea883e7d5248d81b = "x\xda\xbc|{|\x14E\xb6\x7f\x9d\xee\x84\xe6\x1d\x86" +
	"\x0e\x02\xf2\x98!&@\x02\xc4<p%<\x92Ix" +
	"\x08\xc8#\x9d\x01D|\xd1\x99\xa9$-3\xd3Cw" +
	"'!.,\xa0\"D\xc5\x9f\xf8\x03\x11\x14Q\xaf\xac" +
	"\xa2p\xf1\x8d\xe8\xe2\xaeJT\xd6u\x17]QqE" +
	"\xc5\x95U\xbc\xa0\x8b\xaf\x05_s?U=\xdd]3" +
	"\x99$\x13\xd7\xbb\x7f%]}\xba\xea\xd4\xa9S\xe7|" +
	"\xcf\xa9SS\xf0m\xa6\x97+L\xbfd\x14B\xbe3" +
	"\x90\xde%\xea\xfa\xf5\xc0\xf7\xf49\xdbV!\x97\x07\x10" +
	"J\x07\x01\xa1\xe2\x0d\xfd\xfe\x08\x08\xc4\x1d\xfd\xca\x10D" +
	"\x07_\xa6\xbc\xf2\xc3g\xb5\xab\x914\x04 :\xe8\x9d" +
	"\xe9U+J\xd7}\x86\xd2\xd3\x08\xe5\xe1~\x15 \x1e" +
	"\xef'\x88\xc7\xfb\xb9\x8b{\x9d\xe3\x06\x04\xd1\x03#\xe0" +
	"\xa79\x8f>\xb5\x1a\xb9\xb2\xec\x1es\xfb\xdfGz," +
	"\xe9Ozt\xfd\xbd1\\\xf0\xea?\xaeC\xae!\xbc" +
	"\xd3!\x82b\xa5\x7f_\x10\x9b\xfa\x93\x0f\xea\xfb\xaf\xed" +
	"\"\x1e\x1c$ \x14=s\x0e\x1e]p\xf7\x81\xb5&" +
	"\x87t\xd8G\x07i\x80\xd2\xa2\xeb\xd6\xdf4G\x19W" +
	"\xb1\x8ey\xb3\xcd|\xf3\xd2\x1d\xa5\xd7\xcfy\xe5\xc6\x9b" +
	"Y\x1e\x9a\x07m%<l\x19Dx\x98\xbc\xd73f" +
	"\xbb\xeb\x838\x82}\x83(\x93\x07)\x81\xe7\xe5\xad\xbf" +
	":!\x1d\xba\x05\xb9\x86\xb0\xb3\xa6\x84g\x07U\x81\xd8" +
	"k\xb0 \xf6\x1a\xec\x16\xcb\x07\x13\xf2\xcf\xf9\xe3\xc5\xfc" +
	"\xaf\xb9[\xcd\xfe(+\xf2\xe0k\x09+\x8f\x9d\xbf\xae" +
	"r\xe1\x9f\x0b7\xb2#\xcd\x1e\xfc\x10\x19\xe9\x0a\xfa\xe9" +
	"\xd3\x9f<\xfc|\xe8\xca\xd2\x8dH\xca\x02B\xc1\x11\x8a" +
	"\xd5\x83)\xb3\x1b\x06\xefA\x10=\xb4pz\xcd\x1e\xbf" +
	"\xb21\xb6F<!(\x1c\xf2\x0c!(\x1fB\x08\x9e" +
	";w\xc0e/\xdd\xfc\xf9Ff\xf4#Cn#\xa3" +
	"OY\xdb\xb7y\xc9\x07\xc1M\xcc\x9b\x83C\xee#o" +
	"\x9e\xbdy\xce\xa4\xc7\x7f{\xcb&\xb6\xd3}C^\xa0" +
	"\x12\xa0\x9dj\xc37\x9ez}\xef\x83\x9b\x90\xe4\x01{" +
	"NC)\xc1\xd2\xa1\x84\xf1\x8b*N\xfd\xe5\x8ck\xd6" +
	"\xe6\xa4\x9a\xb1a\xe8L\x10w\x0c\x15\xc4\x1dC\xdd\xc5" +
	"\x87\x87R\xcd(]\xda\xfb\x9e\x97_?\xb19&\x0a" +
	":\xd1\x13n:\xd1\xb3\xeeF\x04\xd1\xb7\xbb`\xce}" +
	"\xf5U[\x18n\xe7{n$\xdc\xde\xc5u\xdf<\xe0" +
	"\xc1\x07\xee\x8cqK?\x9d\xea\xb9\x9a|*y\xc8\xa7" +
	"\xfd\xa5\xb9\xef\xf7v?~\x17\xcb\xed\x93\x9e\xc7\x08A" +
	"\x8b\x87p{\xc9[\x97-~\xf9\xc5\xddw\xb3\xebp" +
	"\xc2C\xa7s\x96\x12t\xf9\xef\x8b\xa3\xef\xfc\xe5\xc5\xbb" +
	"\x99\xc1\x07\x0e\xa3K\xf8\xed9\xff\xe4\xa6l\xfe\xe1n" +
	"v\x8f\xa4\x0f[D>u\x0d#\x9fn^\x9452" +
	"\xb2<\xb0\x9d\x9dX\xe1\xb0k\x08\xc1\xa4a\x84\xbbq" +
	"\xd7\xbcp\xdbko|\xba\x9d\xe5n\xdb\xb0jB\xb0" +
	"\x93\xf6\xf0\xca\x9c\xfe/x\x82+\xeeeW\xe3\xe00" +
	"\xba\x0d\x8f\x0e#\xabq\xfd\xd8E\xf7\xe5_Up\x1f" +
	"\x116\xb3k\xd2\xbb\xd0\xdd\x92U\x04\xe2\x9a,A\\" +
	"\x93\xe5.\xde\x97\xf5\x00\x87 zj\xea\x0d\xa3\x0e\x9d" +
	"\xfb\xc4\x7f1\xd3Y\x9dCW~\xde\x9a\xabO\xaa\x8f" +
	"e\xdc\xcfJbi\x0e\x15\xd5\xea\x1c\xc2\xcc\x9aQ+" +
	"Z|\x7f\xfd\xe2~\xe4\x1af\xef\xb8\x9cj\xf2\xe93" +
	"o\xf4\xfd\xe3\xc8I\xf5;\xe2\xe6\x91C'\xba\x93~" +
	"z\xf1(\xee\x82\xd7^\xbe}\x07\xabo\xe6\xa8Y\x0d" +
	"\xd7\xeeycZ\xf3\x03\xec\xa7\xfbr\xde \x9f\xbeF" +
	"?\x1d\xbb`ht\xd6e\xddv\xb2R>\x95C\xa5" +
	"|\x96\x12\x84\xde\xfc$\xdc\xadv\xc5N\x93-S\xca" +
	"\x03\x87S!\xe6\x0c'R\xe6\xfb\xf6t\xe5W\xdf\x15" +
	"\xd7\xc3\xea\xe1\x1a!X?\x9c\xf4\xb0G\x99u\xcb\xf1" +
	"\xe9C\x1ff\x09v\x0f\xa7Z\xb4\x8f\x12\xe4\xa9_\xde" +
	"\xf9\xc3K\xcd\x0f3\x16\xe5\x08y\x9f\x16}\xf5\xfd\xfe" +
	"W\xf4z{\xcc\xee\xd8.\xa5\xafZ\x86S\x83q\x98" +
	"~z\xc8\xf7\xd3\xdf>\xc8\xffvO\x8c;\xda\xf77" +
	"\xe6\xe00\x82\x10\xc8\xbd'\xbc:\xe0\x87\x82Gb\x02" +
	"0)\x86\x8d\xa0\xa3\x8f\x19A\xf8\xdf\xbb\xf4\xfd\xb1\xe3" +
	"\xdf\xb9\xec\x11$\x0ds(\xd6\x9b\x14[(E]\xc9" +
	"\x9b\xeff\x9e\xb9\xea\x11v\xe9~\x1cAwP\xaf\x91" +
	"d\x90\xbbf_\xf4\xc2[\x1fV?\xc6,\xdd\xa4\x91" +
	"\xd7\x90\x09\xcc\xdf6\xf2\xbc\x87\x16.\x7f\"\xc1\xa0Q" +
	"\x92\xdc\x91Y \x96\x8c\x14\xc4\x92\x91nQ\x1e\xf9\x09" +
	"\x82h\xe1\x80\xb3-\x0f_\xff\xd4\x13\xccBN\xcd\xdd" +
	"J::Zvh\xd6\xe2\x8bN<\xc5\xbc\xb9 \xf7" +
	"!\xf2\xe6\xf4\x8f_\xbf\xf7\xfc$u/\xbbIsr" +
	"\xe9\x02\x15\xe6\x12\xf6K\xea\x7f3m\xc9\xd1C{\x19" +
	"\xee\xd6\xe7\xd2-&\x9c\xfb\xfb\xdfL\xad\x18\xf04\xd3" +
	"iS.\xdd\xf9{F\xcc:\xef\xd6\x8f{=\xc3|" +
	"\xa3\xe4\xd2\x19=\xfe\xee\x8f\x93\xee\xd9y\xe5\xb3\xecj" +
	"\xce\xcf\xa5f\x11\xe7\x12a\x0c\xec\xba\xea\xe4\xde\x87\x83" +
	"\xcf\xb2\xd2\xda\x94{\x1b\xf5m\x94\xe0\x8e\x03+*\x0a" +
	"/\x9f\xfd\xbbD\x0bF)[r\xab@<\x92+ " +
	"$\x1e\xa6\xdc_\xbc=sy\xe3\x8c\x9d\xfb\x19NJ" +
	"\xf2\xa8r\xf8&\x14\xdc~\xb2\xe9\xa9\xfd,'9y" +
	"t\xdd\x0a\xf3\xc8@[}o\xf6\xfe\xf5\xb3K\x9fK" +
	"\x10>\xdd\xe6R^\x16\x88r\x9e \xcaynqC" +
	"\x1e\xd9\xecs7\xcb\xe7O}\xf5\xde\xe7X\xc6'\x8d" +
	"\xa2\xca6{\x145\xbd'\xe6\xfd\xe3\xad\xaf\x06\xff\x9e" +
	"\xd1\xd3\xd0(\xea\xf9\xce\xe4\x1fy\xf7\xfd\x9a\xa3\x7f`" +
	"\xd7\xe0\xd2Qt\x0d\xf0(2\x8b\xc5\xa7\x0f\xaa\xdf\x95" +
	"\xed{\x91\xed\xfb\xf9QT\x85^\xa7}\xbf\xec\x9aa" +
	"\xcc\xff\xc7\xb8\x16f)N\x8fz\x8c\xf4\xfd\xd0\xbb/" +
	"\xbc\xbfA\x9d\xd0\xc2~z\xcc\xfc\xf44\xfd\xd4}\xa2" +
	"\xcf\xea%\x1fz\x0e\xb2\x04\xae\xd1\x94\xefa\xa3\x09\xc1" +
	"\x95\xa7\x1f\x19\xbe\xeb\x96\xf9\x07YA\x95\x8f\xa6\x82\x9a" +
	"M\x09j\xee\xb9z\xeb+C\x17\x1fL\x10\x94@g" +
	"8\xba/\x88+F\x0b\xe2\x8a\xd1\xee\xe2\x9d\xa3\xff\x1f" +
	"q)'\xb7\xf6\x87\x1b\xa7\xec:\xc80\xbb#\x9f\x0a" +
	"\xe2m_]\xd9\xf0\x07\x1f?\xc8\x88hC>\xd5\x9b" +
	";\xbfZ\xeau_\x88\xff\xc8r\xb9\"\x9f\xaa\xc5\xfa" +
	"|\xc2\xc4\xb7\xa7\xa4\xe6\x9b\xbf\xfc\xfaO\xcc\xa7\xbb\xf3" +
	"\xe9B_\xfd\xf9\xda\xcf~\x12\xcf9\x94\xc0\x1e5\xc2" +
	"[\xf2\xb3@\xdc\x99/\x88;\xf3\xdd\xc5\x87\xf3/!" +
	"\xecM\xddu\xd9\x9a[_z\xe4\x10;TN\xc1\x8d" +
	"d\xa8\x0b\x0a\xc8P{W\xf4\xb9n\xa6\xab\xf9\x0d\xd6" +
	"\xac\\Z@uX\xa1\x04\xf7\x0c\xdf\xb8\xf6\xd5\xd2\x0b" +
	"\xded&\xd8\\@w[\xc5\xe4E\xdfGr\xb6\xbe" +
	"\x99\xa8\xbcT\xa9\x9a\x0a\x8a@l.\x10\xc4\xe6\x02\xb7" +
	"\xb8\xaf\x80\xec\xe8\x07*\xbe\xd8U[-\x1ffz\xda" +
	"RHA\xc2\xaa\xad3\xaf\xff\xc3+\xdc\xdb\xec\x18\x85" +
	"t\xaf\xb7\xb4\x1c\xfe\xfe\xdb\xec\xb5o\xb3\xeb\xd5TH" +
	"\xb5iM!a\xaf\x97|\xfd\xc7\xa1\xe9_\xbc\xcdZ" +
	"\xbd\x1d\x85T\x96OR\x82\xdb\xd7\x17\xcb\xe7m\x9fz" +
	"\x84%8\\H=\xc61J\xa0l}\xf0\xcc\xb7\xfa" +
	"\xbc#\xc9\xec\x12\x14U\x81\xd8\xaf\x88lAW\x11\x99" +
	"\xc3?\xdfX\xb5c\xf2G#\xfe\xc6\xf2s\xa2\x88\x1a" +
	"\xd9o\x8aHo_\xbf\xb8kj\xda\xdf\x1f\xfc\x1b\xb3" +
	"t\xfd\x8a\xa9\xeb:\xfe\xf2\x9d\x9b7\xd7\xac}/a" +
	"\x1c\xbaA\xa0x&\x88\xfd\x8a\xe98\xc5d\x93d\x0f" +
	"\xe95\xf7l\xbfW\xdfc$\x12*\xa6n\xec\xf1\xe2" +
	"\xc3\x87\xae\xcb\x1f\xff\x01\xf3\xe6\x8ab\xaap\x8fi\xa3" +
	"\x0f<\xbd\xed\xeb\x0f\xd9\x99\xce(\xa6k}i1\xe1" +
	"\xed\x85\xaf.\xce\\\xfb\xf1\xbcc,As\xf1\xb5\x84" +
	"`\x13%\xd8-\x1cX\x99\x9d\xf5\xe4\xb1d\xa2x\xb2" +
	"8\x0f\xc4\x16\xca\xe2\xf3\xc5D\x14o]u\xfb\x9a\x9e" +
	"\xe7\x1f=\xc6j\xfeX\xaa\xdf\x07\xfeu\xf9\x0dU\xde" +
	"A\x1f1o6\x8c\xa5\xcb\xf9\xf9C\xcd3.\xbb\xa0" +
	"\x9e}\xb3z,U\x81\xb3o.\x7f\xe2\x8a\x85\x8f\x7f" +
	"\xd4\x0a\x93/\x1d\xcb\x81\xb8b,]\xf8\xb1B\x9a\xe8" +
	"\xba\x90`\xf2\x09\x93\xbf\xe0\xa7\x0c:\xf3\x91\xe5\xa9h" +
	"Wg\x7fE&[\xdc\xedB\x0a\xf6\x8a\x8c5\xfe=" +
	"\xaf,\xfb\x98U\xfd1\xe3\xe8lK\xc6\x91\xd9>\x85" +
	"{\xf48=\xe5\xed\xe31\x02\xaa\xb6\x97\x8e\xa3\xaa\xa3" +
	"\x8c#V\xf0\xc7\x97\xba\xfc\xee\x9d\xc5\xfd>\xb1\x06\xa1" +
	"K\xd5\xad\x84\xaev\xbf\x92=\x08\xbe8\xf0\xc0\x80\x17" +
	"?\x1d\xfe\xa93\x9b\xdd%T\x02\x0bF\xfe\xc9\xf3\xfb" +
	"\x0brO\xb0j\xb2\xa5\x84\x9a\x99\x1d%d\xec-7" +
	"}ST\xf8?\xef\x7f\xc6\x08\xe2p\x09\xb5q-o" +
	"}\xf8\xfd\xda\x8cGO&\xb3\xd4-%3A<R" +
	"\"\x88GJ\xdcb\xb7\xf1\x84\xc7\xef}i\xdf\\\xb9" +
	"\x8b?\x15\x9b\x04\xed\xe9\xde\xf1\x94\xc5\xdd\xe3\xc92}" +
	"x\xd5\xe5\xebr\x82g\xfe\xc9n\xf0\xe6\x09\x14\xfeo" +
	"\x99@m\xa6p\xef\xd2\xfd\xa7/8\xcd\xcai\xff\x04" +
	"\xaa6\xafQ\x82\xaf6r\x0b\x17\x14e\x7f\xc5\xa8\xf4" +
	"\xa9\x09T\xe3.\x1e\xbfG|t\xcc\x9b_\xb3\x0au" +
	"d\x02\x1d\xfc8\xf9\xf4\xfb\xed\xcf\x9c\\\xbf`\xd57" +
	"\xce$\xd3'R\x9f\xfa\xedy\x8b\x16\x96t\xcb\xf9W" +
	"\x1cV\x99@\xe5\x03\x13\xc9\x98U\xc7*\x9e\xbd\xce=" +
	"\xffL\xb2\xcdR8\xb1\x08\xc4\xf2\x89\x82X>\xd1-" +
	"\x86&\x92\xed\xd2\xb5t\xc4\x86\x9c/\x1f?\xcb\xa2\xbe" +
	"\x89\xd4H\xed,=R\xb6F\xdb{\x96\xf1\x99\xfb&" +
	"\xd25\xba\xe5\xcb\xf4\xee\x81\x1b\x9ec\xbf\xd9a~s" +
	"\xe4\x87\x8c1#\x9eH\xfb\x8e\xe5n\xd3D:\xad{" +
	")w\xd9\xd3\x0e\xf4\xfdb\xd5o\xbfk\xa5\xac\xcfO" +
	"\xec\x0e\xe2\xeb\x13\xc9\x07\xafM\xbc\x88\x13KJ\x89\xb2" +
	"~\xb1\xf9\xa6\xa2\x01\xcb\xa6\xff\xd0\x8a|Xiw\x10" +
	"\x0b\x09\x8d8\xa6T\x10\xc7\x94^\x88P\xf4\xa6\x86\xdb" +
	"\xbf\xbe\xe8\xc3_\xfd\x18\xa7\xb7\xa5\xd4\x87M*%\xa3" +
	"_\xc8m:<\xa4\xf1\x86\x1f\xe3p\xdc\x15\xa5\xd4(" +
	"*\xa5D\x1c\x05\xb7]\"\xfe\xb9\xf1\xaf?\xb1\xe2(" +
	"\xa5Sk\xb8a\xf1\xc9~s\xff\x1a\x8d\x0b;K\xa9" +
	"5l)-C\xe3\xa2:\xd6\x1a\xb0v\xbe\xbf\x8b\x1c" +
	"\x09G\xce\x0f\xaa~9x\x95\x1cQ\xf2\xfd\xe4y\xfc" +
	"4_~P\xd1\x8d\xa9\xcb\"A\xc5\xaf\x18\x95JX" +
	"\xcf\xae\xc2z}\xd0\xd0\x11\x92\xd2\xf84\x84\xd2\x00!" +
	"W\xaf<\x84\xa4\xae<H\xd9\x1cdD\x94\xb0\x0e\xbd" +
	"\x11T\xf2\x00}\x1c3\x88\x804\xda\x03\xa6%\x1d\xb0" +
	"\x12c\xcdg\xc8F\xbd\x8e*\x01\xa44\xe0\xa2W\xfe" +
	"\xff\xed\xd2\xfe\xb7nlAR\x1a\x07\xe5\x03\x00z\"" +
	"\xe4\x82\x87\xa2alxtC6\xa0^\xf7\xa85\x1e" +
	"\xd9\x93\x11\xc1XCH\xca\xb4\xd9ZA\xd8Z\xc6\x83" +
	"t=\x07.\x80L\">\xd7\xeaj\x84\xa4U<H" +
	"7s\xe0\xe2\xb8L\xe0\x10r5\xcfDHZ\xc7\x83" +
	"\xb4\x91\x03\xe03\x81G\xc8\xb5\x81\x10\xde\xca\x83t\x17" +
	"\x07\xae4>\x13\xd2\x10rm)BH\xda\xc8\x83t" +
	"\x0f\x07\x19a9\x84\xa1'\xe2\xa0'A\x12J\xb8\x16" +
	"k\x11\x0d\x09J\xd8\xb0[\x83\xb2n\xf80\x0e#\x84" +
	"\xec6M\xad\x0f\x07\x0cMABd\xb6\x0ei\x88\x83" +
	"4\x04n\xaci\xaaf\xd3XbJO*\xa6\xd9\xd8" +
	"\x90\xf35\x1cR\x0d\xec\x93\x1bpv\xa5\xac\x09rH" +
	"gW\xa4\xc2Y\x91\x95&%\xb3(6<LX\x14" +
	"\xbe\xad\xd1@&\xcbQ\xc7\xa7#d{$\xb0<\x82" +
	"X\xc8\xe7!N\xcc\xe1\x05p\x00\x12X\xaa'\x0e\xa4" +
	"o{\xf1\x02p\xb6\xf9\x02bI\xd1\xa7\xc3?\x15\x81" +
	"\xbe\xfd\x86\x13\x80\xb7\xc3Z\xb0Bc\xf1\x04W\x848" +
	"\xf1('@\x9a\x8dm\xc0\xf2*\xe2\xeb\\\x05\xe2\xc4" +
	"\x16N\x80t;\x03\x03\xd6~\x12\xf7qU\x88\x13\x1f" +
	"\xe5\x04\xe8bg\x02\xc0\x8aR\xc5\x1d\xf4\xed6N\x00" +
	"\xc1\x8e=\xc0\xca\xd2\x88\x1b\xe8\xdbfN\x80\xae6\x80" +
	"\x05\x0bm\x8a+\xe8\xdbzN\x80n6F\x05+\xf3" +
	"!*\xf4\xad\xcc\x09\xd0\xdd\x8e\x08\xc0\xf2\x91\xe2|n" +
	"&\xe2\xc4\xd9\x9c\x00=\xec4\x0aXa\x96XN\xdf" +
	"\x96p\x02\xf4\xb4\xf3Z`Y;q\x0c\xb7\x88\xc8\x99" +
	"\x13\xa0\x97\x0d\xd9\xc12\xf8\xe2@\xfa\xd6\xc5\x09\xd0\xdb" +
	"Fq`\x81k1\x9d\xabF\x9c\xf8#\x08\x90ag" +
	"\x80\xc0\x0a2\xc5\xd3@x>\x01\x02\xf4\xb1!\"X" +
	"\x19\x0c\xf1(h\x88\x13\x0f\x83\x00.;\xf1\x04\x96\x1f" +
	"\x11\x0f\xc2x\xc4\x89\xfbA\x80\xbe\xb6\x13\x86\xed\xcf " +
	"\xea\x0a\xc4G\xe9\xdb\x1d \x80h\x07]`ACq" +
	"\x0b\x90\x15\\\x0f\x02d\xda\xa1<X\x96Z\\\x0dd" +
	"FM @?;\x0a\x04+\x9b \x86\x80\xcc\x08\x83" +
	"\x00\xe7\xd8\x89\x1c\xb0\xb0\xb6x)\xedy6\x08\xd0\xdf" +
	"\xf6\xfc`\x01O\xb1\x1c\xa8\x9cA\x80\x01v\xc2\x0c," +
	"'-\x8e\xa1=\xe7\x80\x00\x03md\x06\x96\x91\x15\x07" +
	"R\xae\\ d,\xadW\x0c/5x\xb5^\xc8P" +
	"\xc2\xe4\xc9\x1dR\xeb\xc3\x86\x17V\xd6\x87c\xffE\xfd" +
	"j\xb8F\xa9\xbd\x08#p\x9e|qO\xe5A\x04A" +
	"\xfbi\x8a\x8a\xc0\xef\x85\xa8\xb9m\xcb\x03\x08\x02\xf6S" +
	"U\x08!d?\xcd\xd2\xd9'\x9f\x8c\xf8\x06l?V" +
	"*\x88'\x8c\xc5\x1e'\x07\x91\x80e\xcd\x0b\xc4r\xce" +
	"R\xfd\xb2\x81\x00\xb3On<\x07/3\xbcP\xd6X" +
	"\xa7\xca!\xc5\x0be\xd5\xd8\xaf\x86\xb0\x17V\xfa\xd5p" +
	"\x18\xfb\x09\xbf\x01E\xa7\x0f\x88\xa7\x8fj8\xa8\x84q" +
	"%F\x02\xd6t/\xacl\xc0\x9a\xae\xa8a/Dk" +
	"tC\xae.\x0f\x04L\x06\xe9S\x15\x0e!A\xa5\x1c" +
	"\x9ao#\x11\xc4\x07\x9b\xbcP\x09\x1d\xf9\x85i\xbe\xfc" +
	"\xfapD\x09gWa7u?\x1d\xd3\xeb\x86\\\x8b" +
	"[\xd3\xb7cP\xadu2\x88=\x95\xf9x{\x9a\x15" +
	"\xb3\xa7\x99\x1c\x08KpSg\x0c\xb5\xb5\xc6A\xea;" +
	"\x85\xa0\x91\xb4\xe3l\x0e\x049\x18t\x8c\xb4\x9d\xeeL" +
	"\xc9sV\xd1E\x9e\xa6\x06\x03\x18\xb4\xe4\xbe3\x9b\xfa" +
	"\xceB\xa8\x86h\xb9\xa7\x86Pji\x1e\xa3N6<" +
	"\xb2\xc7\xd4\x11\x8f\xa2{\xe4`Pm\xc4\x01\x8f\xa1z" +
	"d\xbf_\xc0z\x82\xab\x1f\xef\x08\xa2\xcc\xec\xa4\x95," +
	"z\xb4-\x0bS\xb7\xa8\x80C:\xb2>h\x9b\xdeR" +
	"\x1c\x95z\xb9\x0c-\xc1\xcbU!$\xf5\xe4A\x1a\xc0" +
	"A\x94n\xb79r\x08\x01\xee\xcc\xeaX\xfa\x8f\xedU" +
	"\xefi\xf7?\x95,\x8e\x97\x07i\x16\x07\x16~\x98\xb1" +
	"\x08!i:\x0f\xd2<\x82\x1f\xc0\xc4\x0f\x12i\xac\xe4" +
	"A\xba\x9c\x03\xa1\xb1N\xb5\x190\x94\x10V\xeb\x0d\x1f" +
	"\xe2\xb1\x1fz \x0ez\x10P@\xc7\x9b-#^_" +
	"\x92\"\xabD\xa1q<\x10+3\x85\xc8\xb2;\xdea" +
	"\xd7\xc6;3\x08\x08\x9a\xc2\x83T\xc9\xe0\x9d\xd9\xe7:" +
	"\x93(\x8bh\xb8FYf1\x92Q\xa3\xa9!\xeb\x81" +
	"7\xd4\xceC\x92Y\xba\xb9\xbe\xa0\xa7\xfeMy `" +
	"\xef\x8e\x9f\x01Jc\xfa\xf4\x1f\x97E\x97T\x17\xcbB" +
	"\xcd\xac\xf2\x169;\xc9\xed'\xcaka\xc1\x0e\xb6\xfa" +
	"djO\xa6\x86\x0d\xad\x09\xb5\x01\x93=\xb1\xad\x9eG" +
	"\xb6\xbai\x7fx\x0f&_xF*a\x7f\xb0>\xa0" +
	"\x84k=!l\xc8\x1e%#\\\xa3\xe6\xc6\xe3\xe6\xac" +
	"d\xb8\x994.\xe7AZ\xc7\xc8nM\x16\x03\xa6\xf9" +
	"\x18pn&\xd8\xf3z\x1e\xa4[9\x804\x137\xaf" +
	"\xbf\x1a!\xe9f\x1e\xa4;\xe2\xed\xa7\xd0 \x07\xed\xff" +
	"\x03\xaa\xdf\xfa\x7fe\x00\xd7\xc8\xf5A\x07H\x871\x0e" +
	"\xe8UXG\x19\x86\xac\x19\x00\x88\x03\xe8\x8c\xf9\xf51" +
	"f\xbd\xab=\xd3\\\xc2\x7f6\x0fR\x013\xd31d" +
	"aF\xf2 \x8d\x8d\xe7\xd5\xdd \x07\xeb;e[b" +
	"\xee\xd0RO\x94\xaa\xd7\xb2,\x1d\xc3h\x95\xc3\x93\xcd" +
	"h!\x89Z\x0ax\x90&r\xa6Q\x09V\x12\xaf^" +
	"\xe7D\x1a8\xa2V\xcaF\x1d\x1b}thgje" +
	"\xadZ\xae\xc5\x93\xd5`\x10\xfb\x8d\xecJ\xb7\x9chu" +
	"\x171VW\xae\xad\xd5\xb0\xae+\x04z\xb4Z\x95." +
	")\x98]\x02:\x92n\x0f\xd6\xd1h\xf4=\xf4q\xb2" +
	"w\x08\xa0\x0f3R\xf7\xb6G\xa2~\xc1\x1e\xa1]\x97" +
	"3\xcd\x97O@F\x12\xf7\x9f\xe70\x93\x11\x91\x8d\xba" +
	"V\xe2L\xeb\x88\x01\xcb\\w\xb4\xa6d\xf3\x8c\xe6A" +
	"\x1ag\xb9\xb4\xf85]\xa9F\x0cE\x0d\xeb\xd0\xc79" +
	"MH\x90E\x9b\xca\xe5\x97\x8d\xa4\x10$nr\xaa\xd6" +
	"\xda\x0e\xb5i\xe6\xfcA,k\xc9,\xf1\x7f\xde\x14'" +
	"\x8f]}\x86\xec6f\x84k\xd4\xf6!\xd1\xb5\x10\xf5" +
	"\x192%L\xa7 \x88\xa6\x16\xc6\x04\x95%\xd8\x13\xc0" +
	"\xba_S\xa8\xd4i\xa2!\xdc\xe4\x09\xab\x01\x8c\xe8\xde" +
	"\x8b\xcdQ,\x87<\x84|\x13\x81\x07\xdftp\xa6)" +
	"N\x85\x99\x08\xf9\xa6\x90\xf6J\xe0\x00\xcc\x89\x8a\xb3)" +
	"\xf9t\xd2<\x8f\x90\xf3@M\xa7(A\x11B\xbeY" +
	"\xa4}!iO[E\xcd\xa78\x9f\xb6W\x92\xf6\xcb" +
	"I{zz&\xa4#$^J\xdb\xe7\x91\xf6\xc5\xa4" +
	"\xbd\x0b\x97\x09]\x10\x12\xaf\x80\x0a\x84|\x0bI{\x80" +
	"\xb4\x0b\xab3A@H\x94);\x8bI{\x90\xb4w" +
	"\xbd6\x13\xba\"$*\xb0\x08!_\x1di7H{" +
	"7>\x13\xba!$.\x85j\x84|\x11\xd2\xbe\x9c\xb4" +
	"wO\xcb\x84\xee\x08\x89M\x94\x7f\x83\xb4\xaf\"\xed=" +
	"\xd23\xa1\x07B\xe2\x0aJ\xbf\x9c\xb4\xaf\x83\xc4\xadb" +
	"h\x18O\x97uj\x8dz!\x0ez!\xc8\xd0\x95k" +
	"0tC\x1ctC\xe0V\x88\\\x9d'}\x8a\xa2Y" +
	"&\xc5\x1d\xc0\x11\xa3\xceR\xcc\x95!50Oa\x92" +
	"/\x8a^\xa9\x84\xc3\x98D\x1b\xb6\x11RtS1\x11" +
	"\xaf8\xfe\xc2\xaf\x86\x0d\x1c6\xa6#A\xd6\xebl." +
	"\xeau\x06\xc5V\xcb\xfe%8\x1c\x88'\xe9\x9c\xa3i" +
	"\x85d\xda\xf9\xca\x0a\xa1\xb0\xa6\xdb\xd1J2\x94\x90\xcd" +
	"\x11\x01\xd5\xa8L\x1a\xc7.\x95I)BX0\xd9\x97" +
	"\x1fTk\xaddQ\xc7\xe6\x02/StC\xcf\xae*" +
	"\xc3\xad\x98bm\xb3I\xd6\x19\x8fl\x05\x91~\xa3\x15" +
	"3\x9d\xb04\xa6E\x07\xfd\x97\x80T1\xe3\xf8\xcb\x19" +
	"~\"lC\xb6\x85\xdd!\xe4\xa8` \x87\x86\x1bl" +
	"ko\xc8\xb5s\xd8,c\x87\xd3\xd0b\xb1Rk\xaf" +
	"\xfd3g2\xcd\x97o\xa8\xf5\xfe\xbad\xe1\xd7\xcf\xef" +
	"\x922Y\x85\xf5\x8cT\x83s'LK\xe6\xc1X}" +
	"4\x14\xff\x12lXf$\x85u\xaa\xc1\x06\x99^k" +
	"\x89\xb11?\x1b\xd4u<\xbb%\x01EK\x86\xe2\xf2" +
	"\x9c\xb5\xb7\x97^s\x1c~\xbc\x10\xfd\x1a\x96\x0d\\)" +
	"#\xb7\x86\xc3IvX\xdb3\xd2\x9b\xc2\xfed\xc3\xcf" +
	"t\xb4\xcc\xc6\x1bU\x0c\x86lT\x8c\xbaK\xea\xd4\x10" +
	"\x8b\x17\x09\xf0\x9e\x86\x0d?\xc1 \x9d\xd8\xe3v(H" +
	"\xb7)o\xfc\xfb\xc9\xe9\x8e\x16\xd0\xb2S\x1d \x82\xc9" +
	"jH\x08)F\xfb\xc7\x0b7F}J\xb86\x88=" +
	"APk\xcd\xc0\x09\x81\xd4\xc7\x9e\x81L\x16\xf2r\x1e" +
	"\xa4:f\x13c\xa2/\x8by\x90\x82\x0c\xa4Q\x08e" +
	"\x80\x07i\x15\x13!\xb1\x07\x13\x19u\x8c\x9b\x11Bz" +
	"\xad\x8dx\x0c\xb9\xd6\x16\x0bi\xeb\x8d # \x1b\xf8" +
	"\xe7\xe5\x9eb\xb6\xad\xb3.)\xa6E)\xee\xe8$\xe6" +
	"\xae\xa2\x03s\xb7R\xd7\xfc\x95\x8c\xda\xaf\x0c\xe8Fe" +
	"2[\xd2\xa3\xcd\xf5\xf7\xab\xa1\x90\x92\"\xc4\xb7\xa4b" +
	"y\x9fT\xe222F}\x98\x98\xf3V:\x96j\x14" +
	"\x95\xcc\x89\xb2\x9e\xbdF\xc38\xe0\xec\x01\xfbT8a" +
	"\x0ft\xb8\xe1\xaaBV\xee\xa5-;\x1dN\xdd\x9d\xcc" +
	"&\x1et.E\xbe\xa0\x93\x0d\xd3\x81)a\xc3Q\x0d" +
	"\xcb\x81\xb9\xe1`\x13\x8b\xc84U5\xda\x0aG\xdbw" +
	"\xa3\xad<E{\x01\xb4a\x93\xb7%\x03\x82\xa3\xa0\x8f" +
	"S\xe3\x98\x10@\xf1meX\x05\xd5\xc0\xed'\\\x8a" +
	" J\x82\x08\x8f\xec\xd1x3\xa5\x1a\xc1X\xf34b" +
	"OH\xa9\xad3<\xc42\xbb=\xc4\xce\xc6\x87Hy" +
	"\xc9B\xa4j6\xd3\x18\xb3'\x12\xd9:\xb3L\xcb\x93" +
	"\xc2\x01\xe4J3E\xcb\x98W\xbb\xd0\xb8\xb3\xaaU\xa9" +
	"\x84k\x93\x9d4\xfel/i\xc2\x8a\xd43\xfa~5" +
	"\xd2\xf4\x7fja:\xb4\xa3ST\xff/|6`\x9d" +
	"\xcd`Y\xeb\xd4Y\x85\x935M\xc2O|\xe6\x84\x10" +
	"&\xb8\xd5>\x9d\x9dtGY\x03\x12#'\x1cY\xa4" +
	"\x94\x910\x0fu~\x0e\xb2L\xbeG\xa7(5P\x93" +
	"|\x87\x0e\x8e\xb9\xf6\xef\xa2S\x94\x9a\x1a\xac\xe10\xe7" +
	"\xc7\x9ejl4b\x1c\xf6\x18\x8d\xaa\xc7_F\xfd\x88" +
	"\x8e\x904\xd8\xe6\xe4Ib\xa5\x1f\xe1A\xfa\x13\xa3]" +
	"\x07\x89v\x1d\xe0A\xfa\x90\xd9\x99GI\xe3;<H" +
	"_3\x9e\xfe4i<\xc9\x83\xaf+\x0d\xe7\xcdl\xa8" +
	"\x98N\xc2\xf6*\x12%\x0ff\xa3\xf9\x810\x1e!_" +
	"&i/\xa0\xd1|\x173\x9a\x1fC\xa3\xf6\xd1Vr" +
	"\xc1-\x07\x02\xac\xb3`\xcdXod\"\xaa\x86\xf6\x08" +
	"\x94\xda\xb0\xaa\xb5G\x10Rt]\x09\xd7\xb6I\xe0N" +
	"\x18\xc0.\xdf1_\x97\x85\xb0V\xdb\xce{z\xce\x19" +
	"T\xfc\x06q\x04m\x12\xa5\x90Y\x8bP\x93d\x02\xf7" +
	"\x94C\xa3\x14}x\\\x027Y\xacY\xe1\xa8\xa8u" +
	"\xee\x09}\x9c\x9a\xba\x94\x93r\xc4\xaa\xb5\xf2om`" +
	"\xd7:Y\x08\xd7\xe2\xf6\x15\xfc\xb3\xe8\xdc0\xf6LW" +
	"t\x83S\xb5\xa6X\xd6\xbfF\xd5<\xb2'\xa3F\x09" +
	"b\x84\xa4\x01\xf6,\xb6\xe49\xf5,\xb6zo#\x06" +
	"\xe4\x0e\x1e\xa4\xfb\x19\xf5\xbe\x97P\xde\xc5\x83\xf4 \xa3" +
	"\xde;H\xe3=<H\xbb\x1c\xedv\xed$\x92\xb9\x9f" +
	"\x07\xe9\x11G\xb7]\xbb\xafEH\xda\xc5\x83\xf4t\xc2" +
	"\x8e.\xf3\xd7\xc9\xe1Z\xdb\x8de\xd4a9\x00}\x9c" +
	"\xf2qS\x8e\x19a\xbc\xcch\xdd\xbc\x92*\xe2<\xc7" +
	"\xe94\xcaz\xa5\x86\x1b\x14P\xeb\xf5`S\xb9\x81:" +
	"c\x8ccG\xf6N\x0e\xb3\xbd\x93\xc6\x84T{gB" +
	"X\x9a\xf2\xb6\xf2\xc1\x9d\x8bbSt%\x89\xa8=\xb9" +
	":\xcd\x08`w\xd8P\x8c\xa6\xf61M_\x0b\xd3T" +
	"\xab|\xbd\xe1Q\xeb5\x8f\xbf^#1\xa9\xa7^\xc7" +
	"\x9aY\x85E\xd4\x8a\x89\x8f\xaa\x99P\xc8R+\xa5(" +
	"\x16\x0aE\x18\xb5\x0a\x11\xca \x0f\xd22\xa7\xf2\xaa\x9e" +
	"\x00I\xc3\x8c\x99\xa2\xb1\xa1\xe6#\x81I\xd2\xb9\xd5\xc6" +
	"0\x93\xb2K^{\xa5\xe8si \xc3B\xd0\xd4\xbc" +
	"\x1e\x0d\x0e\xac=\x9f\xca7V\xb5\x83\x1d\xed\xa6\x08T" +
	"\x93\xc0\xa9\x0e=_z\x9bH9$/\xc1\xc4\xb9%" +
	"5Wq\xeeZ\xa9\xa9\x81>N\xf1{J\xb6\x8a\x89" +
	"\xb4\x92\xe8.\x8b\x81\x98 \xb6\x83>\xcd\xfd@\xd9\x05" +
	"\x1a\x92w\x14b\xe7\xb5\x17bG\x18\xcb\xc4\xeaU\x1c" +
	"N\xce\x90\x03\x01[s2B2s\x04\x9f\\\x8dR" +
	"\xcd\x93\xfe\xa2)7\xb3\xd6%!\x8b\x9c\x9c\x9aI\x8a" +
	"\x9a\xc7\xc1\xc9\xf3M\x0e4\x1e\xef@\xe3\x04KLW" +
	"\xb73&\xcd\xaa\xe3\x096\xa5\x98V\xa6_-\xadW" +
	"\x8cVn\xbbm\xb5\xaeStC\xd5\x9a\x92W\x9e\xb2" +
	"\xa9\xa4\x18\xa1\x03)\xec\xeb\x13)\xc5:\xecXVA" +
	"\xc1\xbf\x0fI\x17`-\x83`\x83\x04\xed\xd6\x92\x19H" +
	"\xe2d\xeax\x90\x0cF\xbb\x97^\x83\x90\x14\xe1AZ" +
	"\xcehw\xd3\"'\x81\x14\x1b\x7f\x01Fn\x13\x84\xc4" +
	"\xf3U\x85\x114$\x1en,@e8\x9e8\xf6\xa2" +
	"\x0a\xf1N\xf69\xe5\xb5\xec\x0c\xa4\xb2\xf3\x14\xadLe" +
	"\x0a\x9e\xb9\x95M\xe6\xdb\xd8@t#xi\xbd\xaau" +
	"\x95\x13\xac\xeb\xbb\xe2i(B\x9cx\x1c\x04p\xaa\xab" +
	"\xc1\xaa\xe1\x17\x8f@\x1e\xe2\xc4\xd7@\x00\xce\xbe#\x08" +
	"\xd6\x85J\xf1y\xc8B\x9c\xf8$\x08\xc0\xdb7\xec\xc0" +
	"*\x99\x17w\xd2\x9e\xb7\x81\x00i\xf6\xed@\xb0n\x06" +
	"\x89\x1bh-\xe4\x1a\x10 \xdd\xbe\xbb\x06\xd6\x15@z" +
	"\xa6\xc6\x89!\x10\xa0\x8b}\xab\x0a\xac\xabA\xa2L\xdf" +
	"\xce\x07\x01\x04\xfb~(X\xb7O\xc4\x19\x94\xabI " +
	"@W\xfb\xce\x13X\x17\x99\xc5B\xcaU\x0e\x08\xd0\xcd" +
	"\xbea\x03\xd6\x1d2q \xed\xb9\x17\x08\xd0\xdd\xbe\xd5" +
	"\x0a\xd6]7\x11\xe0\x1a\xc4\xb9\xce\x0a\xd0\xc3\xbe\xcd\x08" +
	"\xd6m0\xd7\xa9\"\xc4\xb9\x8e\x09\xd0\xd3\xbe(\x03\xd6" +
	"\x8dM\xd7\xe1\xf1\x88s\x1d\x14\xa0\x97}\xf3\x17\xac\xbb" +
	"\xdf\xae\xfd7\"\xce\xb5O\x80\xde\xf6=T\xb0\xaek" +
	"\xbav\xdf\x868\xd7N\x012\xeck\xc8`\xdd\x0cv" +
	"m\xbb\x16q\xaeM\x82\x9bVIx!#\xa8\xe8\x86" +
	"\x17\x04\xbfL\x0b/\x97\x04\x14\xcdkF\xbc\x0d\xe4m" +
	"\xec\x0f\x01\xd8^\x10\"J\xd8\x0bn\x1apz!\x83" +
	"x_/D\xad,\x1d*3\xf3t^p\xd3\xac\x84" +
	"\xd7:\xd6\xf2B\xd4*6\x02\xeb\xe4\x89V4Z\xe7" +
	"Q`\xd9^ \xb4V\xd9\x0fX\xa4\xf1\xc5\x8d)\xb8" +
	"n\x1b{2\xe58\x8b\x98\xca\x1b\xcbV\xac\xa9v\x8a" +
	"ll[\xb1~\xa6Sec\xdb\x8aMU\x0e\xc4\xb7" +
	"\xcaq\xb6U9`\xde\xac\x1c\x99\xdb\x18F<\x03\xa9" +
	"\xccm:\xb7\x11\x09,\xd0\xa2\xa4U\xb8!\xae\x9c\xdd" +
	"\xdc\xd0qf\xe6g\x1e\x1a\x98\x05\xa7\xc9\x8coGI" +
	"\xa6T\xb0\x99\x95\x18e\xd2nUL\x11\x82%\xd9\xd9" +
	"U\xb1\x0c\xdbBF\xb2\xf3+\x9c\x02\xbf\xa4\x95\x86\xbf" +
	"d\xa9\x06Q\x08\x0d\xeb\xd8)\xbe\xe9(S\x98\xe5\xcc" +
	"\x03\xacZ\x8a\"'{\x18\xe7\xaf\xd8\xf3Ew\x8d\xaa" +
	"\xf9q\x8a'KT\x9aJ8\x99\xbdOk\xafR/" +
	"i:\x96\xf5\xdb$DU\xd8#\xa0\x84tC\xca\xab" +
	"\x1c+\x14M1\xa5x\x91\xb9\xf9g\x188\xd4Q\x1d" +
	"]\x05D\xcb=:=\x12J\xf3(\x06\x0e\x99u\xb3" +
	"\x8d\xb2\xeeY\xa2\x04\x838\xe0\xa9n\xf2\x18u\xd8S" +
	"\xebG)$v+\x92\xd5\xbe\xb4\xb5^+c5\x0b" +
	"\xd6\x19QB\xec\x93\xea\x9aY\xaa\xc4`\x90\x99)\x07" +
	"i\x15\x0c0\xb1\xec\xca\xd2\x99\x0e0\x89V\xcb:N" +
	"H\xed\xc7\xf3\xb92\x060l\xbe#\xb2\xae7\xaaZ" +
	" \xf5\xda\xb4\xc4\\t2\xb5b\xc3t\xfb\x9e\x0dD" +
	"\xec\xd2\xdb\x14F\x88\x95('E\x9bl\x84n\xd2A" +
	"\x1f\xe7bl\xaa)\x1f\xf3x8E-u\x0e\x9f\x92" +
	"\x04\x18l\x0e\xaa\xadR\x81\x8e\xed\xad=\xd5\x14+H" +
	":\xbd\x9f\xd9\xacM\xefT\x92\xb8\xee\x9aJY\xd1\xda" +
	"\xcfs}\x19\xad\xc2\x11b&\xc3\x9cA\xf3\xb7\x01\x9a" +
	"\xd7U\xc2\xb5\x1ew\x8d\x12\xc4:\xe5\xa8\xfd\xb2\x8b," +
	"\xa6\xecB\xd7\xfc\xad\xcf\x84\x84\x80n\xb4sR\x94\xda" +
	"\xf5\xac\x14O\xaf\x1c\xb3\xdf\x19<\xcd\x14\xd3tb\x1c" +
	"Z!\x90\xac\xdc\xa8\x13i\x02\xbe\xad\xdeMk\x9aM" +
	"\xd1\xb7\xf5\xdb\x1e`\xdd\x01\x15]\x14\xab\xa6S\xf4m" +
	"\xdd\xd6\x06\xeb\x97\x1a\\g\x09l<E\xb0\xb7\xf5\xf3" +
	"\x1b`\xfd\x0e\x82\xebX\x16\xe2\\\x87\x09\xf2\xb6n\xa2" +
	"\x82\xf5k\x0d\xae\x83\x04\x8a\xee'\xb8\xdb\xba\xc6\x0b\xd6" +
	"]P\xd7\xa3\xe4\xdd\x0e\x82\xba\xad+\xd1`]\x9ev" +
	"m\xa9@\x9ck=\xc1\xdc\xd6\x1dc\xb0\xee\x98\xbbV" +
	"\xcfD\x9c\xab\x89 n\xeb\x972\xc0\xba+\xea\x0a\xe5" +
	"!\xce%\x13\xbcm\xfd\x10\x07X\xbf\x85\xe1\x9aO\xc6" +
	"\x9b!\x08A\xb5\xd6kE\xd5^\x10\x0c\xb9\x96\"P" +
	"\xf3/]i\xaf\x1d\xb4z!ja@ze&\x83" +
	"\xac\x90\x17\xdc\xb4\xb6!\x1eE&\x97{y\xe5\x0c*" +
	"\xf7J>]\xea\x09\xe0\xdc\xb0F\xc8\xb9\xc0\x8a\x90\xf3" +
	"kH\xccvO\xe9RL\xb23 \xb6\xde*yu" +
	"t\xfb\xc8 \xc9i^\xb2\x12\x99\x99L\x89\x8c\xa6\xaa" +
	"N\x8a\"$/\x9b\x82#\xa6\xdbI\xac\xf4J-m" +
	"\x91\xe2\x9eq\x8e\x1b\xda;\xc9'b\xd0p$h\x1f" +
	"\x01\xfeo\x00\x00\x00\xff\xff,U\x95p"

func init() {
	schemas.Register(schema_ea883e7d5248d81b,
		0x809d4e73dc197b11,
		0x8167eafcc8695b1c,
		0x81b6b14efe0127c4,
		0x83e6cb306e77e311,
		0x87c49e302c6516f8,
		0x884238694e8b8d88,
		0x8c8ac84e843e98c6,
		0x8cdf119f2d20b743,
		0x8ed051e9369ac720,
		0x90027b0333e503ee,
		0x9431ce5850882fb2,
		0x943e5e6dc1abe7b8,
		0x946963af664858d0,
		0x94ee8cc65b181abe,
		0x956cdf6b89128744,
		0x958ea6b33d4e8cbb,
		0x95a8b7d1ed942672,
		0x974c11f8cfed4247,
		0x97e9d1c7a00e713e,
		0x995f6a1f026506d7,
		0x9ba7a818970a029c,
		0x9cb31f0ede4f5117,
		0x9eadc3c7605bd657,
		0x9ec3cfd8ff4bae06,
		0x9efc974402f016f6,
		0x9f647c7028225a97,
		0x9fe8d2cd92c27a38,
		0xa17d6c20c2174ec8,
		0xa2305f2ea25a3484,
		0xa3b41ad02b8645ed,
		0xa40fb26fec6a8554,
		0xa4efd353c57d2b85,
		0xa5753d28ca12d2ba,
		0xa596c7cd35022b4b,
		0xa78946d2af827622,
		0xa9095b4cff1e5634,
		0xa97d67096ee7d46d,
		0xa99c622e110c1203,
		0xab1e48e58e4c69af,
		0xab89c6fc9bf26f2a,
		0xad2dd70d5d17decb,
		0xaff62edfdbfe53d0,
		0xb030fc18cb3b0e61,
		0xb05bd83a34de71b7,
		0xb05ff814dad43968,
		0xb262e0d6c2474d9c,
		0xb47c58aa23289d55,
		0xb4b684abc5f91831,
		0xb6e947604cd03fdd,
		0xb76f3dc1dcf4fdf1,
		0xb7d0dd6b467e7539,
		0xb81842457ebf1a07,
		0xba0de490234c27af,
		0xbb5ea9a03dfddab3,
		0xbb6cabb7ec800819,
		0xbc4d5c31427dc498,
		0xbda949777c149f4b,
		0xbdb679ec96303b53,
		0xbe71bb7b0ed4539a,
		0xbea1cb452f61974f,
		0xbf1cf3d6e654e947,
		0xc0dd66dedad92ef8,
		0xc3b93ffa6fc9f160,
		0xc538e655744911c7,
		0xc53b6f91dec2daaa,
		0xc920e06b8110e91f,
		0xc9558eac26b0f15e,
		0xc9601ec89a6aa066,
		0xc9ac448a01179aec,
		0xc9b3a8263f6853d7,
		0xca65371f4071f39b,
		0xccf4f28c8951edf6,
		0xd01613feea87ee6a,
		0xd0b0c690855bac45,
		0xd289114a83107db7,
		0xd4353ecb879426a0,
		0xd49a2570fb5a4342,
		0xd5616267acef42a7,
		0xd702c8c0844a9a80,
		0xd78724f6fbd5c5c5,
		0xd7ef486de484610d,
		0xd9459f2361338d96,
		0xd95473f6f8a89a69,
		0xdb27e243a580d2f0,
		0xdba8e30445acc3f4,
		0xdc876697979bc7e5,
		0xdccb15f94f0d1d24,
		0xdf3a2e83d0d533b3,
		0xe0f49db8c42c72b2,
		0xe154e487144bf3c2,
		0xe1b522247fc407ad,
		0xe1dd2f0c85965fd6,
		0xe21b4052865cf7c4,
		0xe275355b4989aaee,
		0xe2b3585db47cd4f9,
		0xe2f81b4403ef433b,
		0xe478c8af63857432,
		0xe5d744f10b0b65b6,
		0xe71560d8bc06c6fd,
		0xe826e800c318a7c4,
		0xe92935bf20cc2856,
		0xeadeeb3132f58b99,
		0xecb10f87fbe0d6c5,
		0xed03ac5ef50453fb,
		0xf0f86c25885c5fe0,
		0xf135f1bd71a1071f,
		0xf3243256580294f3,
		0xf4d42db113af3a4b,
		0xf580568dec00ba9f,
		0xf7250939585a23f6,
		0xf8551f83bb42e152,
		0xf9b3f22591273e08,
		0xf9b772853fd93ea9,
		0xf9be86640a05f28e,
		0xfa04b4272d0ffcd9,
		0xfaa680ef12c44624,
		0xfc487818328b97ef,
		0xfd36e047f496768b,
		0xfd86771dd5950237,
		0xfed377ce13579230,
		0xffd34f15ec608676)
}
