// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	capnp2 "github.com/sahib/brig/gateway/db/capnp"
	context "golang.org/x/net/context"
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

// StatInfo is a stat-like description of any node
type StatInfo struct{ capnp.Struct }

// StatInfo_TypeID is the unique identifier for the type StatInfo.
const StatInfo_TypeID = 0xa2305f2ea25a3484

func NewStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6})
	return StatInfo{st}, err
}

func NewRootStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6})
	return StatInfo{st}, err
}

func ReadRootStatInfo(msg *capnp.Message) (StatInfo, error) {
	root, err := msg.RootPtr()
	return StatInfo{root.Struct()}, err
}

func (s StatInfo) String() string {
	str, _ := text.Marshal(0xa2305f2ea25a3484, s.Struct)
	return str
}

func (s StatInfo) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s StatInfo) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s StatInfo) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s StatInfo) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s StatInfo) TreeHash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s StatInfo) HasTreeHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetTreeHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s StatInfo) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s StatInfo) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s StatInfo) Inode() uint64 {
	return s.Struct.Uint64(8)
}

func (s StatInfo) SetInode(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s StatInfo) IsDir() bool {
	return s.Struct.Bit(128)
}

func (s StatInfo) SetIsDir(v bool) {
	s.Struct.SetBit(128, v)
}

func (s StatInfo) Depth() int32 {
	return int32(s.Struct.Uint32(20))
}

func (s StatInfo) SetDepth(v int32) {
	s.Struct.SetUint32(20, uint32(v))
}

func (s StatInfo) ModTime() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s StatInfo) HasModTime() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s StatInfo) ModTimeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s StatInfo) SetModTime(v string) error {
	return s.Struct.SetText(2, v)
}

func (s StatInfo) IsPinned() bool {
	return s.Struct.Bit(129)
}

func (s StatInfo) SetIsPinned(v bool) {
	s.Struct.SetBit(129, v)
}

func (s StatInfo) IsExplicit() bool {
	return s.Struct.Bit(130)
}

func (s StatInfo) SetIsExplicit(v bool) {
	s.Struct.SetBit(130, v)
}

func (s StatInfo) ContentHash() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s StatInfo) HasContentHash() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetContentHash(v []byte) error {
	return s.Struct.SetData(3, v)
}

func (s StatInfo) User() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s StatInfo) HasUser() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s StatInfo) UserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s StatInfo) SetUser(v string) error {
	return s.Struct.SetText(4, v)
}

func (s StatInfo) BackendHash() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return []byte(p.Data()), err
}

func (s StatInfo) HasBackendHash() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetBackendHash(v []byte) error {
	return s.Struct.SetData(5, v)
}

// StatInfo_List is a list of StatInfo.
type StatInfo_List struct{ capnp.List }

// NewStatInfo creates a new list of StatInfo.
func NewStatInfo_List(s *capnp.Segment, sz int32) (StatInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6}, sz)
	return StatInfo_List{l}, err
}

func (s StatInfo_List) At(i int) StatInfo { return StatInfo{s.List.Struct(i)} }

func (s StatInfo_List) Set(i int, v StatInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s StatInfo_List) String() string {
	str, _ := text.MarshalList(0xa2305f2ea25a3484, s.List)
	return str
}

// StatInfo_Promise is a wrapper for a StatInfo promised by a client call.
type StatInfo_Promise struct{ *capnp.Pipeline }

func (p StatInfo_Promise) Struct() (StatInfo, error) {
	s, err := p.Pipeline.Struct()
	return StatInfo{s}, err
}

// Single log entry
type Commit struct{ capnp.Struct }

// Commit_TypeID is the unique identifier for the type Commit.
const Commit_TypeID = 0xb47c58aa23289d55

func NewCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func NewRootCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func ReadRootCommit(msg *capnp.Message) (Commit, error) {
	root, err := msg.RootPtr()
	return Commit{root.Struct()}, err
}

func (s Commit) String() string {
	str, _ := text.Marshal(0xb47c58aa23289d55, s.Struct)
	return str
}

func (s Commit) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Commit) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Commit) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Commit) Msg() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Commit) HasMsg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Commit) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Commit) SetMsg(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Commit) Tags() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Commit) HasTags() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Commit) SetTags(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewTags sets the tags field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Commit) NewTags(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Commit) Date() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Commit) HasDate() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Commit) DateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Commit) SetDate(v string) error {
	return s.Struct.SetText(3, v)
}

// Commit_List is a list of Commit.
type Commit_List struct{ capnp.List }

// NewCommit creates a new list of Commit.
func NewCommit_List(s *capnp.Segment, sz int32) (Commit_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Commit_List{l}, err
}

func (s Commit_List) At(i int) Commit { return Commit{s.List.Struct(i)} }

func (s Commit_List) Set(i int, v Commit) error { return s.List.SetStruct(i, v.Struct) }

func (s Commit_List) String() string {
	str, _ := text.MarshalList(0xb47c58aa23289d55, s.List)
	return str
}

// Commit_Promise is a wrapper for a Commit promised by a client call.
type Commit_Promise struct{ *capnp.Pipeline }

func (p Commit_Promise) Struct() (Commit, error) {
	s, err := p.Pipeline.Struct()
	return Commit{s}, err
}

// A config entry (including meta info)
type ConfigEntry struct{ capnp.Struct }

// ConfigEntry_TypeID is the unique identifier for the type ConfigEntry.
const ConfigEntry_TypeID = 0x974c11f8cfed4247

func NewConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func NewRootConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func ReadRootConfigEntry(msg *capnp.Message) (ConfigEntry, error) {
	root, err := msg.RootPtr()
	return ConfigEntry{root.Struct()}, err
}

func (s ConfigEntry) String() string {
	str, _ := text.Marshal(0x974c11f8cfed4247, s.Struct)
	return str
}

func (s ConfigEntry) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ConfigEntry) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ConfigEntry) Val() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ConfigEntry) HasVal() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) ValBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetVal(v string) error {
	return s.Struct.SetText(1, v)
}

func (s ConfigEntry) Doc() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s ConfigEntry) HasDoc() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DocBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDoc(v string) error {
	return s.Struct.SetText(2, v)
}

func (s ConfigEntry) Default() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s ConfigEntry) HasDefault() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DefaultBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDefault(v string) error {
	return s.Struct.SetText(3, v)
}

func (s ConfigEntry) NeedsRestart() bool {
	return s.Struct.Bit(0)
}

func (s ConfigEntry) SetNeedsRestart(v bool) {
	s.Struct.SetBit(0, v)
}

// ConfigEntry_List is a list of ConfigEntry.
type ConfigEntry_List struct{ capnp.List }

// NewConfigEntry creates a new list of ConfigEntry.
func NewConfigEntry_List(s *capnp.Segment, sz int32) (ConfigEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return ConfigEntry_List{l}, err
}

func (s ConfigEntry_List) At(i int) ConfigEntry { return ConfigEntry{s.List.Struct(i)} }

func (s ConfigEntry_List) Set(i int, v ConfigEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s ConfigEntry_List) String() string {
	str, _ := text.MarshalList(0x974c11f8cfed4247, s.List)
	return str
}

// ConfigEntry_Promise is a wrapper for a ConfigEntry promised by a client call.
type ConfigEntry_Promise struct{ *capnp.Pipeline }

func (p ConfigEntry_Promise) Struct() (ConfigEntry, error) {
	s, err := p.Pipeline.Struct()
	return ConfigEntry{s}, err
}

// One history entry for a file
type Change struct{ capnp.Struct }

// Change_TypeID is the unique identifier for the type Change.
const Change_TypeID = 0xd01613feea87ee6a

func NewChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return Change{st}, err
}

func NewRootChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return Change{st}, err
}

func ReadRootChange(msg *capnp.Message) (Change, error) {
	root, err := msg.RootPtr()
	return Change{root.Struct()}, err
}

func (s Change) String() string {
	str, _ := text.Marshal(0xd01613feea87ee6a, s.Struct)
	return str
}

func (s Change) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Change) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Change) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Change) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Change) Change() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Change) HasChange() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Change) ChangeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Change) SetChange(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Change) Head() (Commit, error) {
	p, err := s.Struct.Ptr(2)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasHead() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Change) SetHead(v Commit) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewHead sets the head field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewHead() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) Next() (Commit, error) {
	p, err := s.Struct.Ptr(3)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasNext() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Change) SetNext(v Commit) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewNext sets the next field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewNext() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) MovedTo() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Change) HasMovedTo() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Change) MovedToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Change) SetMovedTo(v string) error {
	return s.Struct.SetText(4, v)
}

func (s Change) WasPreviouslyAt() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s Change) HasWasPreviouslyAt() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Change) WasPreviouslyAtBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s Change) SetWasPreviouslyAt(v string) error {
	return s.Struct.SetText(5, v)
}

func (s Change) IsPinned() bool {
	return s.Struct.Bit(0)
}

func (s Change) SetIsPinned(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Change) IsExplicit() bool {
	return s.Struct.Bit(1)
}

func (s Change) SetIsExplicit(v bool) {
	s.Struct.SetBit(1, v)
}

// Change_List is a list of Change.
type Change_List struct{ capnp.List }

// NewChange creates a new list of Change.
func NewChange_List(s *capnp.Segment, sz int32) (Change_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return Change_List{l}, err
}

func (s Change_List) At(i int) Change { return Change{s.List.Struct(i)} }

func (s Change_List) Set(i int, v Change) error { return s.List.SetStruct(i, v.Struct) }

func (s Change_List) String() string {
	str, _ := text.MarshalList(0xd01613feea87ee6a, s.List)
	return str
}

// Change_Promise is a wrapper for a Change promised by a client call.
type Change_Promise struct{ *capnp.Pipeline }

func (p Change_Promise) Struct() (Change, error) {
	s, err := p.Pipeline.Struct()
	return Change{s}, err
}

func (p Change_Promise) Head() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

func (p Change_Promise) Next() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(3)}
}

// Represent two differing files
type DiffPair struct{ capnp.Struct }

// DiffPair_TypeID is the unique identifier for the type DiffPair.
const DiffPair_TypeID = 0xf8551f83bb42e152

func NewDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func NewRootDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func ReadRootDiffPair(msg *capnp.Message) (DiffPair, error) {
	root, err := msg.RootPtr()
	return DiffPair{root.Struct()}, err
}

func (s DiffPair) String() string {
	str, _ := text.Marshal(0xf8551f83bb42e152, s.Struct)
	return str
}

func (s DiffPair) Src() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasSrc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetSrc(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSrc sets the src field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewSrc() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s DiffPair) Dst() (StatInfo, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasDst() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetDst(v StatInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDst sets the dst field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewDst() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// DiffPair_List is a list of DiffPair.
type DiffPair_List struct{ capnp.List }

// NewDiffPair creates a new list of DiffPair.
func NewDiffPair_List(s *capnp.Segment, sz int32) (DiffPair_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DiffPair_List{l}, err
}

func (s DiffPair_List) At(i int) DiffPair { return DiffPair{s.List.Struct(i)} }

func (s DiffPair_List) Set(i int, v DiffPair) error { return s.List.SetStruct(i, v.Struct) }

func (s DiffPair_List) String() string {
	str, _ := text.MarshalList(0xf8551f83bb42e152, s.List)
	return str
}

// DiffPair_Promise is a wrapper for a DiffPair promised by a client call.
type DiffPair_Promise struct{ *capnp.Pipeline }

func (p DiffPair_Promise) Struct() (DiffPair, error) {
	s, err := p.Pipeline.Struct()
	return DiffPair{s}, err
}

func (p DiffPair_Promise) Src() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p DiffPair_Promise) Dst() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

// Difference between two commits
type Diff struct{ capnp.Struct }

// Diff_TypeID is the unique identifier for the type Diff.
const Diff_TypeID = 0xc9601ec89a6aa066

func NewDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func NewRootDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func ReadRootDiff(msg *capnp.Message) (Diff, error) {
	root, err := msg.RootPtr()
	return Diff{root.Struct()}, err
}

func (s Diff) String() string {
	str, _ := text.Marshal(0xc9601ec89a6aa066, s.Struct)
	return str
}

func (s Diff) Added() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasAdded() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Diff) SetAdded(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAdded sets the added field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewAdded(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Diff) Removed() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasRemoved() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Diff) SetRemoved(v StatInfo_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemoved sets the removed field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewRemoved(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Diff) Ignored() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(2)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasIgnored() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Diff) SetIgnored(v StatInfo_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewIgnored sets the ignored field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewIgnored(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Diff) Missing() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(3)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasMissing() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Diff) SetMissing(v StatInfo_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMissing sets the missing field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewMissing(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s Diff) Moved() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(4)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMoved() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Diff) SetMoved(v DiffPair_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMoved sets the moved field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMoved(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s Diff) Merged() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(5)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMerged() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Diff) SetMerged(v DiffPair_List) error {
	return s.Struct.SetPtr(5, v.List.ToPtr())
}

// NewMerged sets the merged field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMerged(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(5, l.List.ToPtr())
	return l, err
}

func (s Diff) Conflict() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(6)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasConflict() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s Diff) SetConflict(v DiffPair_List) error {
	return s.Struct.SetPtr(6, v.List.ToPtr())
}

// NewConflict sets the conflict field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewConflict(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(6, l.List.ToPtr())
	return l, err
}

// Diff_List is a list of Diff.
type Diff_List struct{ capnp.List }

// NewDiff creates a new list of Diff.
func NewDiff_List(s *capnp.Segment, sz int32) (Diff_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7}, sz)
	return Diff_List{l}, err
}

func (s Diff_List) At(i int) Diff { return Diff{s.List.Struct(i)} }

func (s Diff_List) Set(i int, v Diff) error { return s.List.SetStruct(i, v.Struct) }

func (s Diff_List) String() string {
	str, _ := text.MarshalList(0xc9601ec89a6aa066, s.List)
	return str
}

// Diff_Promise is a wrapper for a Diff promised by a client call.
type Diff_Promise struct{ *capnp.Pipeline }

func (p Diff_Promise) Struct() (Diff, error) {
	s, err := p.Pipeline.Struct()
	return Diff{s}, err
}

// A folder that a remote is allowed to access
type RemoteFolder struct{ capnp.Struct }

// RemoteFolder_TypeID is the unique identifier for the type RemoteFolder.
const RemoteFolder_TypeID = 0x8ed051e9369ac720

func NewRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RemoteFolder{st}, err
}

func NewRootRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RemoteFolder{st}, err
}

func ReadRootRemoteFolder(msg *capnp.Message) (RemoteFolder, error) {
	root, err := msg.RootPtr()
	return RemoteFolder{root.Struct()}, err
}

func (s RemoteFolder) String() string {
	str, _ := text.Marshal(0x8ed051e9369ac720, s.Struct)
	return str
}

func (s RemoteFolder) Folder() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RemoteFolder) HasFolder() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) FolderBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetFolder(v string) error {
	return s.Struct.SetText(0, v)
}

// RemoteFolder_List is a list of RemoteFolder.
type RemoteFolder_List struct{ capnp.List }

// NewRemoteFolder creates a new list of RemoteFolder.
func NewRemoteFolder_List(s *capnp.Segment, sz int32) (RemoteFolder_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RemoteFolder_List{l}, err
}

func (s RemoteFolder_List) At(i int) RemoteFolder { return RemoteFolder{s.List.Struct(i)} }

func (s RemoteFolder_List) Set(i int, v RemoteFolder) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteFolder_List) String() string {
	str, _ := text.MarshalList(0x8ed051e9369ac720, s.List)
	return str
}

// RemoteFolder_Promise is a wrapper for a RemoteFolder promised by a client call.
type RemoteFolder_Promise struct{ *capnp.Pipeline }

func (p RemoteFolder_Promise) Struct() (RemoteFolder, error) {
	s, err := p.Pipeline.Struct()
	return RemoteFolder{s}, err
}

type LocateResult struct{ capnp.Struct }

// LocateResult_TypeID is the unique identifier for the type LocateResult.
const LocateResult_TypeID = 0xd95473f6f8a89a69

func NewLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func NewRootLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func ReadRootLocateResult(msg *capnp.Message) (LocateResult, error) {
	root, err := msg.RootPtr()
	return LocateResult{root.Struct()}, err
}

func (s LocateResult) String() string {
	str, _ := text.Marshal(0xd95473f6f8a89a69, s.Struct)
	return str
}

func (s LocateResult) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s LocateResult) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s LocateResult) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s LocateResult) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s LocateResult) Addr() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s LocateResult) HasAddr() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s LocateResult) AddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s LocateResult) SetAddr(v string) error {
	return s.Struct.SetText(1, v)
}

func (s LocateResult) Mask() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s LocateResult) HasMask() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s LocateResult) MaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s LocateResult) SetMask(v string) error {
	return s.Struct.SetText(2, v)
}

func (s LocateResult) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s LocateResult) HasFingerprint() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s LocateResult) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s LocateResult) SetFingerprint(v string) error {
	return s.Struct.SetText(3, v)
}

// LocateResult_List is a list of LocateResult.
type LocateResult_List struct{ capnp.List }

// NewLocateResult creates a new list of LocateResult.
func NewLocateResult_List(s *capnp.Segment, sz int32) (LocateResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return LocateResult_List{l}, err
}

func (s LocateResult_List) At(i int) LocateResult { return LocateResult{s.List.Struct(i)} }

func (s LocateResult_List) Set(i int, v LocateResult) error { return s.List.SetStruct(i, v.Struct) }

func (s LocateResult_List) String() string {
	str, _ := text.MarshalList(0xd95473f6f8a89a69, s.List)
	return str
}

// LocateResult_Promise is a wrapper for a LocateResult promised by a client call.
type LocateResult_Promise struct{ *capnp.Pipeline }

func (p LocateResult_Promise) Struct() (LocateResult, error) {
	s, err := p.Pipeline.Struct()
	return LocateResult{s}, err
}

// Info about our current user state
type Identity struct{ capnp.Struct }

// Identity_TypeID is the unique identifier for the type Identity.
const Identity_TypeID = 0xd49a2570fb5a4342

func NewIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func NewRootIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func ReadRootIdentity(msg *capnp.Message) (Identity, error) {
	root, err := msg.RootPtr()
	return Identity{root.Struct()}, err
}

func (s Identity) String() string {
	str, _ := text.Marshal(0xd49a2570fb5a4342, s.Struct)
	return str
}

func (s Identity) CurrentUser() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Identity) HasCurrentUser() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Identity) CurrentUserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Identity) SetCurrentUser(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Identity) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Identity) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Identity) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Identity) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Identity) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Identity) HasFingerprint() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Identity) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Identity) SetFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Identity) IsOnline() bool {
	return s.Struct.Bit(0)
}

func (s Identity) SetIsOnline(v bool) {
	s.Struct.SetBit(0, v)
}

// Identity_List is a list of Identity.
type Identity_List struct{ capnp.List }

// NewIdentity creates a new list of Identity.
func NewIdentity_List(s *capnp.Segment, sz int32) (Identity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Identity_List{l}, err
}

func (s Identity_List) At(i int) Identity { return Identity{s.List.Struct(i)} }

func (s Identity_List) Set(i int, v Identity) error { return s.List.SetStruct(i, v.Struct) }

func (s Identity_List) String() string {
	str, _ := text.MarshalList(0xd49a2570fb5a4342, s.List)
	return str
}

// Identity_Promise is a wrapper for a Identity promised by a client call.
type Identity_Promise struct{ *capnp.Pipeline }

func (p Identity_Promise) Struct() (Identity, error) {
	s, err := p.Pipeline.Struct()
	return Identity{s}, err
}

type MountOptions struct{ capnp.Struct }

// MountOptions_TypeID is the unique identifier for the type MountOptions.
const MountOptions_TypeID = 0xbc4d5c31427dc498

func NewMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func NewRootMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func ReadRootMountOptions(msg *capnp.Message) (MountOptions, error) {
	root, err := msg.RootPtr()
	return MountOptions{root.Struct()}, err
}

func (s MountOptions) String() string {
	str, _ := text.Marshal(0xbc4d5c31427dc498, s.Struct)
	return str
}

func (s MountOptions) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s MountOptions) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s MountOptions) RootPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s MountOptions) HasRootPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s MountOptions) RootPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s MountOptions) SetRootPath(v string) error {
	return s.Struct.SetText(0, v)
}

// MountOptions_List is a list of MountOptions.
type MountOptions_List struct{ capnp.List }

// NewMountOptions creates a new list of MountOptions.
func NewMountOptions_List(s *capnp.Segment, sz int32) (MountOptions_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return MountOptions_List{l}, err
}

func (s MountOptions_List) At(i int) MountOptions { return MountOptions{s.List.Struct(i)} }

func (s MountOptions_List) Set(i int, v MountOptions) error { return s.List.SetStruct(i, v.Struct) }

func (s MountOptions_List) String() string {
	str, _ := text.MarshalList(0xbc4d5c31427dc498, s.List)
	return str
}

// MountOptions_Promise is a wrapper for a MountOptions promised by a client call.
type MountOptions_Promise struct{ *capnp.Pipeline }

func (p MountOptions_Promise) Struct() (MountOptions, error) {
	s, err := p.Pipeline.Struct()
	return MountOptions{s}, err
}

// Info a remote peer we might sync with
type Remote struct{ capnp.Struct }

// Remote_TypeID is the unique identifier for the type Remote.
const Remote_TypeID = 0xbe71bb7b0ed4539a

func NewRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Remote{st}, err
}

func NewRootRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Remote{st}, err
}

func ReadRootRemote(msg *capnp.Message) (Remote, error) {
	root, err := msg.RootPtr()
	return Remote{root.Struct()}, err
}

func (s Remote) String() string {
	str, _ := text.Marshal(0xbe71bb7b0ed4539a, s.Struct)
	return str
}

func (s Remote) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Remote) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Remote) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Remote) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Remote) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Remote) HasFingerprint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Remote) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Remote) SetFingerprint(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Remote) Folders() (RemoteFolder_List, error) {
	p, err := s.Struct.Ptr(2)
	return RemoteFolder_List{List: p.List()}, err
}

func (s Remote) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Remote) SetFolders(v RemoteFolder_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated RemoteFolder_List, preferring placement in s's segment.
func (s Remote) NewFolders(n int32) (RemoteFolder_List, error) {
	l, err := NewRemoteFolder_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteFolder_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Remote) AcceptAutoUpdates() bool {
	return s.Struct.Bit(0)
}

func (s Remote) SetAcceptAutoUpdates(v bool) {
	s.Struct.SetBit(0, v)
}

// Remote_List is a list of Remote.
type Remote_List struct{ capnp.List }

// NewRemote creates a new list of Remote.
func NewRemote_List(s *capnp.Segment, sz int32) (Remote_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Remote_List{l}, err
}

func (s Remote_List) At(i int) Remote { return Remote{s.List.Struct(i)} }

func (s Remote_List) Set(i int, v Remote) error { return s.List.SetStruct(i, v.Struct) }

func (s Remote_List) String() string {
	str, _ := text.MarshalList(0xbe71bb7b0ed4539a, s.List)
	return str
}

// Remote_Promise is a wrapper for a Remote promised by a client call.
type Remote_Promise struct{ *capnp.Pipeline }

func (p Remote_Promise) Struct() (Remote, error) {
	s, err := p.Pipeline.Struct()
	return Remote{s}, err
}

// net status of a remote
type RemoteStatus struct{ capnp.Struct }

// RemoteStatus_TypeID is the unique identifier for the type RemoteStatus.
const RemoteStatus_TypeID = 0xa9e401c52756826a

func NewRemoteStatus(s *capnp.Segment) (RemoteStatus, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return RemoteStatus{st}, err
}

func NewRootRemoteStatus(s *capnp.Segment) (RemoteStatus, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return RemoteStatus{st}, err
}

func ReadRootRemoteStatus(msg *capnp.Message) (RemoteStatus, error) {
	root, err := msg.RootPtr()
	return RemoteStatus{root.Struct()}, err
}

func (s RemoteStatus) String() string {
	str, _ := text.Marshal(0xa9e401c52756826a, s.Struct)
	return str
}

func (s RemoteStatus) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s RemoteStatus) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s RemoteStatus) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RemoteStatus) LastSeen() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RemoteStatus) HasLastSeen() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) LastSeenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RemoteStatus) SetLastSeen(v string) error {
	return s.Struct.SetText(1, v)
}

func (s RemoteStatus) RoundtripMs() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s RemoteStatus) SetRoundtripMs(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s RemoteStatus) Error() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s RemoteStatus) HasError() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) ErrorBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s RemoteStatus) SetError(v string) error {
	return s.Struct.SetText(2, v)
}

func (s RemoteStatus) Authenticated() bool {
	return s.Struct.Bit(32)
}

func (s RemoteStatus) SetAuthenticated(v bool) {
	s.Struct.SetBit(32, v)
}

// RemoteStatus_List is a list of RemoteStatus.
type RemoteStatus_List struct{ capnp.List }

// NewRemoteStatus creates a new list of RemoteStatus.
func NewRemoteStatus_List(s *capnp.Segment, sz int32) (RemoteStatus_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return RemoteStatus_List{l}, err
}

func (s RemoteStatus_List) At(i int) RemoteStatus { return RemoteStatus{s.List.Struct(i)} }

func (s RemoteStatus_List) Set(i int, v RemoteStatus) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteStatus_List) String() string {
	str, _ := text.MarshalList(0xa9e401c52756826a, s.List)
	return str
}

// RemoteStatus_Promise is a wrapper for a RemoteStatus promised by a client call.
type RemoteStatus_Promise struct{ *capnp.Pipeline }

func (p RemoteStatus_Promise) Struct() (RemoteStatus, error) {
	s, err := p.Pipeline.Struct()
	return RemoteStatus{s}, err
}

func (p RemoteStatus_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

// A single item that was killed by the gc
type GarbageItem struct{ capnp.Struct }

// GarbageItem_TypeID is the unique identifier for the type GarbageItem.
const GarbageItem_TypeID = 0xecb10f87fbe0d6c5

func NewGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func NewRootGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func ReadRootGarbageItem(msg *capnp.Message) (GarbageItem, error) {
	root, err := msg.RootPtr()
	return GarbageItem{root.Struct()}, err
}

func (s GarbageItem) String() string {
	str, _ := text.Marshal(0xecb10f87fbe0d6c5, s.Struct)
	return str
}

func (s GarbageItem) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GarbageItem) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GarbageItem) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GarbageItem) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GarbageItem) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s GarbageItem) HasContent() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GarbageItem) SetContent(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s GarbageItem) Owner() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GarbageItem) HasOwner() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GarbageItem) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GarbageItem) SetOwner(v string) error {
	return s.Struct.SetText(2, v)
}

// GarbageItem_List is a list of GarbageItem.
type GarbageItem_List struct{ capnp.List }

// NewGarbageItem creates a new list of GarbageItem.
func NewGarbageItem_List(s *capnp.Segment, sz int32) (GarbageItem_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GarbageItem_List{l}, err
}

func (s GarbageItem_List) At(i int) GarbageItem { return GarbageItem{s.List.Struct(i)} }

func (s GarbageItem_List) Set(i int, v GarbageItem) error { return s.List.SetStruct(i, v.Struct) }

func (s GarbageItem_List) String() string {
	str, _ := text.MarshalList(0xecb10f87fbe0d6c5, s.List)
	return str
}

// GarbageItem_Promise is a wrapper for a GarbageItem promised by a client call.
type GarbageItem_Promise struct{ *capnp.Pipeline }

func (p GarbageItem_Promise) Struct() (GarbageItem, error) {
	s, err := p.Pipeline.Struct()
	return GarbageItem{s}, err
}

type Version struct{ capnp.Struct }

// Version_TypeID is the unique identifier for the type Version.
const Version_TypeID = 0xe1b522247fc407ad

func NewVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func NewRootVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func ReadRootVersion(msg *capnp.Message) (Version, error) {
	root, err := msg.RootPtr()
	return Version{root.Struct()}, err
}

func (s Version) String() string {
	str, _ := text.Marshal(0xe1b522247fc407ad, s.Struct)
	return str
}

func (s Version) ServerVersion() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Version) HasServerVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Version) ServerVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Version) SetServerVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Version) ServerRev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Version) HasServerRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Version) ServerRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Version) SetServerRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Version) BackendVersion() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Version) HasBackendVersion() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Version) BackendVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Version) SetBackendVersion(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Version) BackendRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Version) HasBackendRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Version) BackendRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Version) SetBackendRev(v string) error {
	return s.Struct.SetText(3, v)
}

// Version_List is a list of Version.
type Version_List struct{ capnp.List }

// NewVersion creates a new list of Version.
func NewVersion_List(s *capnp.Segment, sz int32) (Version_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Version_List{l}, err
}

func (s Version_List) At(i int) Version { return Version{s.List.Struct(i)} }

func (s Version_List) Set(i int, v Version) error { return s.List.SetStruct(i, v.Struct) }

func (s Version_List) String() string {
	str, _ := text.MarshalList(0xe1b522247fc407ad, s.List)
	return str
}

// Version_Promise is a wrapper for a Version promised by a client call.
type Version_Promise struct{ *capnp.Pipeline }

func (p Version_Promise) Struct() (Version, error) {
	s, err := p.Pipeline.Struct()
	return Version{s}, err
}

type ExplicitPin struct{ capnp.Struct }

// ExplicitPin_TypeID is the unique identifier for the type ExplicitPin.
const ExplicitPin_TypeID = 0xdc876697979bc7e5

func NewExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func NewRootExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func ReadRootExplicitPin(msg *capnp.Message) (ExplicitPin, error) {
	root, err := msg.RootPtr()
	return ExplicitPin{root.Struct()}, err
}

func (s ExplicitPin) String() string {
	str, _ := text.Marshal(0xdc876697979bc7e5, s.Struct)
	return str
}

func (s ExplicitPin) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ExplicitPin) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ExplicitPin) Commit() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ExplicitPin) HasCommit() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetCommit(v string) error {
	return s.Struct.SetText(1, v)
}

// ExplicitPin_List is a list of ExplicitPin.
type ExplicitPin_List struct{ capnp.List }

// NewExplicitPin creates a new list of ExplicitPin.
func NewExplicitPin_List(s *capnp.Segment, sz int32) (ExplicitPin_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ExplicitPin_List{l}, err
}

func (s ExplicitPin_List) At(i int) ExplicitPin { return ExplicitPin{s.List.Struct(i)} }

func (s ExplicitPin_List) Set(i int, v ExplicitPin) error { return s.List.SetStruct(i, v.Struct) }

func (s ExplicitPin_List) String() string {
	str, _ := text.MarshalList(0xdc876697979bc7e5, s.List)
	return str
}

// ExplicitPin_Promise is a wrapper for a ExplicitPin promised by a client call.
type ExplicitPin_Promise struct{ *capnp.Pipeline }

func (p ExplicitPin_Promise) Struct() (ExplicitPin, error) {
	s, err := p.Pipeline.Struct()
	return ExplicitPin{s}, err
}

type FsTabEntry struct{ capnp.Struct }

// FsTabEntry_TypeID is the unique identifier for the type FsTabEntry.
const FsTabEntry_TypeID = 0xf7da25d3ead6c0d3

func NewFsTabEntry(s *capnp.Segment) (FsTabEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return FsTabEntry{st}, err
}

func NewRootFsTabEntry(s *capnp.Segment) (FsTabEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return FsTabEntry{st}, err
}

func ReadRootFsTabEntry(msg *capnp.Message) (FsTabEntry, error) {
	root, err := msg.RootPtr()
	return FsTabEntry{root.Struct()}, err
}

func (s FsTabEntry) String() string {
	str, _ := text.Marshal(0xf7da25d3ead6c0d3, s.Struct)
	return str
}

func (s FsTabEntry) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FsTabEntry) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FsTabEntry) Path() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FsTabEntry) HasPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FsTabEntry) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s FsTabEntry) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s FsTabEntry) Root() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FsTabEntry) HasRoot() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetRoot(v string) error {
	return s.Struct.SetText(2, v)
}

func (s FsTabEntry) Active() bool {
	return s.Struct.Bit(1)
}

func (s FsTabEntry) SetActive(v bool) {
	s.Struct.SetBit(1, v)
}

// FsTabEntry_List is a list of FsTabEntry.
type FsTabEntry_List struct{ capnp.List }

// NewFsTabEntry creates a new list of FsTabEntry.
func NewFsTabEntry_List(s *capnp.Segment, sz int32) (FsTabEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return FsTabEntry_List{l}, err
}

func (s FsTabEntry_List) At(i int) FsTabEntry { return FsTabEntry{s.List.Struct(i)} }

func (s FsTabEntry_List) Set(i int, v FsTabEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s FsTabEntry_List) String() string {
	str, _ := text.MarshalList(0xf7da25d3ead6c0d3, s.List)
	return str
}

// FsTabEntry_Promise is a wrapper for a FsTabEntry promised by a client call.
type FsTabEntry_Promise struct{ *capnp.Pipeline }

func (p FsTabEntry_Promise) Struct() (FsTabEntry, error) {
	s, err := p.Pipeline.Struct()
	return FsTabEntry{s}, err
}

type FS struct{ Client capnp.Client }

// FS_TypeID is the unique identifier for the type FS.
const FS_TypeID = 0xe2b3585db47cd4f9

func (c FS) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Tar(ctx context.Context, params func(FS_tar_Params) error, opts ...capnp.CallOption) FS_tar_Results_Promise {
	if c.Client == nil {
		return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_tar_Params{Struct: s}) }
	}
	return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) DeletedNodes(ctx context.Context, params func(FS_deletedNodes_Params) error, opts ...capnp.CallOption) FS_deletedNodes_Results_Promise {
	if c.Client == nil {
		return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_deletedNodes_Params{Struct: s}) }
	}
	return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Undelete(ctx context.Context, params func(FS_undelete_Params) error, opts ...capnp.CallOption) FS_undelete_Results_Promise {
	if c.Client == nil {
		return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_undelete_Params{Struct: s}) }
	}
	return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Repin(ctx context.Context, params func(FS_repin_Params) error, opts ...capnp.CallOption) FS_repin_Results_Promise {
	if c.Client == nil {
		return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_repin_Params{Struct: s}) }
	}
	return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type FS_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	Tar(FS_tar) error

	DeletedNodes(FS_deletedNodes) error

	Undelete(FS_undelete) error

	Repin(FS_repin) error
}

func FS_ServerToClient(s FS_Server) FS {
	c, _ := s.(server.Closer)
	return FS{Client: server.New(FS_Methods(nil, s), c)}
}

func FS_Methods(methods []server.Method, s FS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 17)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_tar{c, opts, FS_tar_Params{Struct: p}, FS_tar_Results{Struct: r}}
			return s.Tar(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_deletedNodes{c, opts, FS_deletedNodes_Params{Struct: p}, FS_deletedNodes_Results{Struct: r}}
			return s.DeletedNodes(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_undelete{c, opts, FS_undelete_Params{Struct: p}, FS_undelete_Results{Struct: r}}
			return s.Undelete(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_repin{c, opts, FS_repin_Params{Struct: p}, FS_repin_Results{Struct: r}}
			return s.Repin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// FS_stage holds the arguments for a server call to FS.stage.
type FS_stage struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stage_Params
	Results FS_stage_Results
}

// FS_list holds the arguments for a server call to FS.list.
type FS_list struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_list_Params
	Results FS_list_Results
}

// FS_cat holds the arguments for a server call to FS.cat.
type FS_cat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_cat_Params
	Results FS_cat_Results
}

// FS_mkdir holds the arguments for a server call to FS.mkdir.
type FS_mkdir struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_mkdir_Params
	Results FS_mkdir_Results
}

// FS_remove holds the arguments for a server call to FS.remove.
type FS_remove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_remove_Params
	Results FS_remove_Results
}

// FS_move holds the arguments for a server call to FS.move.
type FS_move struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_move_Params
	Results FS_move_Results
}

// FS_copy holds the arguments for a server call to FS.copy.
type FS_copy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_copy_Params
	Results FS_copy_Results
}

// FS_pin holds the arguments for a server call to FS.pin.
type FS_pin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_pin_Params
	Results FS_pin_Results
}

// FS_unpin holds the arguments for a server call to FS.unpin.
type FS_unpin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_unpin_Params
	Results FS_unpin_Results
}

// FS_stat holds the arguments for a server call to FS.stat.
type FS_stat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stat_Params
	Results FS_stat_Results
}

// FS_garbageCollect holds the arguments for a server call to FS.garbageCollect.
type FS_garbageCollect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_garbageCollect_Params
	Results FS_garbageCollect_Results
}

// FS_touch holds the arguments for a server call to FS.touch.
type FS_touch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_touch_Params
	Results FS_touch_Results
}

// FS_exists holds the arguments for a server call to FS.exists.
type FS_exists struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_exists_Params
	Results FS_exists_Results
}

// FS_tar holds the arguments for a server call to FS.tar.
type FS_tar struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_tar_Params
	Results FS_tar_Results
}

// FS_deletedNodes holds the arguments for a server call to FS.deletedNodes.
type FS_deletedNodes struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_deletedNodes_Params
	Results FS_deletedNodes_Results
}

// FS_undelete holds the arguments for a server call to FS.undelete.
type FS_undelete struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_undelete_Params
	Results FS_undelete_Results
}

// FS_repin holds the arguments for a server call to FS.repin.
type FS_repin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_repin_Params
	Results FS_repin_Results
}

type FS_stage_Params struct{ capnp.Struct }

// FS_stage_Params_TypeID is the unique identifier for the type FS_stage_Params.
const FS_stage_Params_TypeID = 0x9ba7a818970a029c

func NewFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func NewRootFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func ReadRootFS_stage_Params(msg *capnp.Message) (FS_stage_Params, error) {
	root, err := msg.RootPtr()
	return FS_stage_Params{root.Struct()}, err
}

func (s FS_stage_Params) String() string {
	str, _ := text.Marshal(0x9ba7a818970a029c, s.Struct)
	return str
}

func (s FS_stage_Params) LocalPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stage_Params) HasLocalPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) LocalPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetLocalPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_stage_Params) RepoPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_stage_Params) HasRepoPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) RepoPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetRepoPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_stage_Params_List is a list of FS_stage_Params.
type FS_stage_Params_List struct{ capnp.List }

// NewFS_stage_Params creates a new list of FS_stage_Params.
func NewFS_stage_Params_List(s *capnp.Segment, sz int32) (FS_stage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_stage_Params_List{l}, err
}

func (s FS_stage_Params_List) At(i int) FS_stage_Params { return FS_stage_Params{s.List.Struct(i)} }

func (s FS_stage_Params_List) Set(i int, v FS_stage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Params_List) String() string {
	str, _ := text.MarshalList(0x9ba7a818970a029c, s.List)
	return str
}

// FS_stage_Params_Promise is a wrapper for a FS_stage_Params promised by a client call.
type FS_stage_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Params_Promise) Struct() (FS_stage_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Params{s}, err
}

type FS_stage_Results struct{ capnp.Struct }

// FS_stage_Results_TypeID is the unique identifier for the type FS_stage_Results.
const FS_stage_Results_TypeID = 0x884238694e8b8d88

func NewFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func NewRootFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func ReadRootFS_stage_Results(msg *capnp.Message) (FS_stage_Results, error) {
	root, err := msg.RootPtr()
	return FS_stage_Results{root.Struct()}, err
}

func (s FS_stage_Results) String() string {
	str, _ := text.Marshal(0x884238694e8b8d88, s.Struct)
	return str
}

// FS_stage_Results_List is a list of FS_stage_Results.
type FS_stage_Results_List struct{ capnp.List }

// NewFS_stage_Results creates a new list of FS_stage_Results.
func NewFS_stage_Results_List(s *capnp.Segment, sz int32) (FS_stage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_stage_Results_List{l}, err
}

func (s FS_stage_Results_List) At(i int) FS_stage_Results { return FS_stage_Results{s.List.Struct(i)} }

func (s FS_stage_Results_List) Set(i int, v FS_stage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Results_List) String() string {
	str, _ := text.MarshalList(0x884238694e8b8d88, s.List)
	return str
}

// FS_stage_Results_Promise is a wrapper for a FS_stage_Results promised by a client call.
type FS_stage_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Results_Promise) Struct() (FS_stage_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Results{s}, err
}

type FS_list_Params struct{ capnp.Struct }

// FS_list_Params_TypeID is the unique identifier for the type FS_list_Params.
const FS_list_Params_TypeID = 0xfd86771dd5950237

func NewFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func NewRootFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func ReadRootFS_list_Params(msg *capnp.Message) (FS_list_Params, error) {
	root, err := msg.RootPtr()
	return FS_list_Params{root.Struct()}, err
}

func (s FS_list_Params) String() string {
	str, _ := text.Marshal(0xfd86771dd5950237, s.Struct)
	return str
}

func (s FS_list_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_list_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_list_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_list_Params) MaxDepth() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_list_Params) SetMaxDepth(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_list_Params_List is a list of FS_list_Params.
type FS_list_Params_List struct{ capnp.List }

// NewFS_list_Params creates a new list of FS_list_Params.
func NewFS_list_Params_List(s *capnp.Segment, sz int32) (FS_list_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_list_Params_List{l}, err
}

func (s FS_list_Params_List) At(i int) FS_list_Params { return FS_list_Params{s.List.Struct(i)} }

func (s FS_list_Params_List) Set(i int, v FS_list_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_list_Params_List) String() string {
	str, _ := text.MarshalList(0xfd86771dd5950237, s.List)
	return str
}

// FS_list_Params_Promise is a wrapper for a FS_list_Params promised by a client call.
type FS_list_Params_Promise struct{ *capnp.Pipeline }

func (p FS_list_Params_Promise) Struct() (FS_list_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Params{s}, err
}

type FS_list_Results struct{ capnp.Struct }

// FS_list_Results_TypeID is the unique identifier for the type FS_list_Results.
const FS_list_Results_TypeID = 0xe92935bf20cc2856

func NewFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func NewRootFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func ReadRootFS_list_Results(msg *capnp.Message) (FS_list_Results, error) {
	root, err := msg.RootPtr()
	return FS_list_Results{root.Struct()}, err
}

func (s FS_list_Results) String() string {
	str, _ := text.Marshal(0xe92935bf20cc2856, s.Struct)
	return str
}

func (s FS_list_Results) Entries() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_list_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Results) SetEntries(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_list_Results) NewEntries(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_list_Results_List is a list of FS_list_Results.
type FS_list_Results_List struct{ capnp.List }

// NewFS_list_Results creates a new list of FS_list_Results.
func NewFS_list_Results_List(s *capnp.Segment, sz int32) (FS_list_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_list_Results_List{l}, err
}

func (s FS_list_Results_List) At(i int) FS_list_Results { return FS_list_Results{s.List.Struct(i)} }

func (s FS_list_Results_List) Set(i int, v FS_list_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_list_Results_List) String() string {
	str, _ := text.MarshalList(0xe92935bf20cc2856, s.List)
	return str
}

// FS_list_Results_Promise is a wrapper for a FS_list_Results promised by a client call.
type FS_list_Results_Promise struct{ *capnp.Pipeline }

func (p FS_list_Results_Promise) Struct() (FS_list_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Results{s}, err
}

type FS_cat_Params struct{ capnp.Struct }

// FS_cat_Params_TypeID is the unique identifier for the type FS_cat_Params.
const FS_cat_Params_TypeID = 0xa9095b4cff1e5634

func NewFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func NewRootFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func ReadRootFS_cat_Params(msg *capnp.Message) (FS_cat_Params, error) {
	root, err := msg.RootPtr()
	return FS_cat_Params{root.Struct()}, err
}

func (s FS_cat_Params) String() string {
	str, _ := text.Marshal(0xa9095b4cff1e5634, s.Struct)
	return str
}

func (s FS_cat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_cat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_cat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_cat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_cat_Params_List is a list of FS_cat_Params.
type FS_cat_Params_List struct{ capnp.List }

// NewFS_cat_Params creates a new list of FS_cat_Params.
func NewFS_cat_Params_List(s *capnp.Segment, sz int32) (FS_cat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_cat_Params_List{l}, err
}

func (s FS_cat_Params_List) At(i int) FS_cat_Params { return FS_cat_Params{s.List.Struct(i)} }

func (s FS_cat_Params_List) Set(i int, v FS_cat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Params_List) String() string {
	str, _ := text.MarshalList(0xa9095b4cff1e5634, s.List)
	return str
}

// FS_cat_Params_Promise is a wrapper for a FS_cat_Params promised by a client call.
type FS_cat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Params_Promise) Struct() (FS_cat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Params{s}, err
}

type FS_cat_Results struct{ capnp.Struct }

// FS_cat_Results_TypeID is the unique identifier for the type FS_cat_Results.
const FS_cat_Results_TypeID = 0x9fe8d2cd92c27a38

func NewFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func NewRootFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func ReadRootFS_cat_Results(msg *capnp.Message) (FS_cat_Results, error) {
	root, err := msg.RootPtr()
	return FS_cat_Results{root.Struct()}, err
}

func (s FS_cat_Results) String() string {
	str, _ := text.Marshal(0x9fe8d2cd92c27a38, s.Struct)
	return str
}

func (s FS_cat_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_cat_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_cat_Results_List is a list of FS_cat_Results.
type FS_cat_Results_List struct{ capnp.List }

// NewFS_cat_Results creates a new list of FS_cat_Results.
func NewFS_cat_Results_List(s *capnp.Segment, sz int32) (FS_cat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_cat_Results_List{l}, err
}

func (s FS_cat_Results_List) At(i int) FS_cat_Results { return FS_cat_Results{s.List.Struct(i)} }

func (s FS_cat_Results_List) Set(i int, v FS_cat_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Results_List) String() string {
	str, _ := text.MarshalList(0x9fe8d2cd92c27a38, s.List)
	return str
}

// FS_cat_Results_Promise is a wrapper for a FS_cat_Results promised by a client call.
type FS_cat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Results_Promise) Struct() (FS_cat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Results{s}, err
}

type FS_mkdir_Params struct{ capnp.Struct }

// FS_mkdir_Params_TypeID is the unique identifier for the type FS_mkdir_Params.
const FS_mkdir_Params_TypeID = 0xb030fc18cb3b0e61

func NewFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func NewRootFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func ReadRootFS_mkdir_Params(msg *capnp.Message) (FS_mkdir_Params, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Params{root.Struct()}, err
}

func (s FS_mkdir_Params) String() string {
	str, _ := text.Marshal(0xb030fc18cb3b0e61, s.Struct)
	return str
}

func (s FS_mkdir_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_mkdir_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_mkdir_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_mkdir_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_mkdir_Params) CreateParents() bool {
	return s.Struct.Bit(0)
}

func (s FS_mkdir_Params) SetCreateParents(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_mkdir_Params_List is a list of FS_mkdir_Params.
type FS_mkdir_Params_List struct{ capnp.List }

// NewFS_mkdir_Params creates a new list of FS_mkdir_Params.
func NewFS_mkdir_Params_List(s *capnp.Segment, sz int32) (FS_mkdir_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_mkdir_Params_List{l}, err
}

func (s FS_mkdir_Params_List) At(i int) FS_mkdir_Params { return FS_mkdir_Params{s.List.Struct(i)} }

func (s FS_mkdir_Params_List) Set(i int, v FS_mkdir_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Params_List) String() string {
	str, _ := text.MarshalList(0xb030fc18cb3b0e61, s.List)
	return str
}

// FS_mkdir_Params_Promise is a wrapper for a FS_mkdir_Params promised by a client call.
type FS_mkdir_Params_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Params_Promise) Struct() (FS_mkdir_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Params{s}, err
}

type FS_mkdir_Results struct{ capnp.Struct }

// FS_mkdir_Results_TypeID is the unique identifier for the type FS_mkdir_Results.
const FS_mkdir_Results_TypeID = 0xf3243256580294f3

func NewFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func NewRootFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func ReadRootFS_mkdir_Results(msg *capnp.Message) (FS_mkdir_Results, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Results{root.Struct()}, err
}

func (s FS_mkdir_Results) String() string {
	str, _ := text.Marshal(0xf3243256580294f3, s.Struct)
	return str
}

// FS_mkdir_Results_List is a list of FS_mkdir_Results.
type FS_mkdir_Results_List struct{ capnp.List }

// NewFS_mkdir_Results creates a new list of FS_mkdir_Results.
func NewFS_mkdir_Results_List(s *capnp.Segment, sz int32) (FS_mkdir_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_mkdir_Results_List{l}, err
}

func (s FS_mkdir_Results_List) At(i int) FS_mkdir_Results { return FS_mkdir_Results{s.List.Struct(i)} }

func (s FS_mkdir_Results_List) Set(i int, v FS_mkdir_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Results_List) String() string {
	str, _ := text.MarshalList(0xf3243256580294f3, s.List)
	return str
}

// FS_mkdir_Results_Promise is a wrapper for a FS_mkdir_Results promised by a client call.
type FS_mkdir_Results_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Results_Promise) Struct() (FS_mkdir_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Results{s}, err
}

type FS_remove_Params struct{ capnp.Struct }

// FS_remove_Params_TypeID is the unique identifier for the type FS_remove_Params.
const FS_remove_Params_TypeID = 0xa99c622e110c1203

func NewFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func NewRootFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func ReadRootFS_remove_Params(msg *capnp.Message) (FS_remove_Params, error) {
	root, err := msg.RootPtr()
	return FS_remove_Params{root.Struct()}, err
}

func (s FS_remove_Params) String() string {
	str, _ := text.Marshal(0xa99c622e110c1203, s.Struct)
	return str
}

func (s FS_remove_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_remove_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_remove_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_remove_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_remove_Params_List is a list of FS_remove_Params.
type FS_remove_Params_List struct{ capnp.List }

// NewFS_remove_Params creates a new list of FS_remove_Params.
func NewFS_remove_Params_List(s *capnp.Segment, sz int32) (FS_remove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_remove_Params_List{l}, err
}

func (s FS_remove_Params_List) At(i int) FS_remove_Params { return FS_remove_Params{s.List.Struct(i)} }

func (s FS_remove_Params_List) Set(i int, v FS_remove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Params_List) String() string {
	str, _ := text.MarshalList(0xa99c622e110c1203, s.List)
	return str
}

// FS_remove_Params_Promise is a wrapper for a FS_remove_Params promised by a client call.
type FS_remove_Params_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Params_Promise) Struct() (FS_remove_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Params{s}, err
}

type FS_remove_Results struct{ capnp.Struct }

// FS_remove_Results_TypeID is the unique identifier for the type FS_remove_Results.
const FS_remove_Results_TypeID = 0xc9b3a8263f6853d7

func NewFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func NewRootFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func ReadRootFS_remove_Results(msg *capnp.Message) (FS_remove_Results, error) {
	root, err := msg.RootPtr()
	return FS_remove_Results{root.Struct()}, err
}

func (s FS_remove_Results) String() string {
	str, _ := text.Marshal(0xc9b3a8263f6853d7, s.Struct)
	return str
}

// FS_remove_Results_List is a list of FS_remove_Results.
type FS_remove_Results_List struct{ capnp.List }

// NewFS_remove_Results creates a new list of FS_remove_Results.
func NewFS_remove_Results_List(s *capnp.Segment, sz int32) (FS_remove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_remove_Results_List{l}, err
}

func (s FS_remove_Results_List) At(i int) FS_remove_Results {
	return FS_remove_Results{s.List.Struct(i)}
}

func (s FS_remove_Results_List) Set(i int, v FS_remove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Results_List) String() string {
	str, _ := text.MarshalList(0xc9b3a8263f6853d7, s.List)
	return str
}

// FS_remove_Results_Promise is a wrapper for a FS_remove_Results promised by a client call.
type FS_remove_Results_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Results_Promise) Struct() (FS_remove_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Results{s}, err
}

type FS_move_Params struct{ capnp.Struct }

// FS_move_Params_TypeID is the unique identifier for the type FS_move_Params.
const FS_move_Params_TypeID = 0xb76f3dc1dcf4fdf1

func NewFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func NewRootFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func ReadRootFS_move_Params(msg *capnp.Message) (FS_move_Params, error) {
	root, err := msg.RootPtr()
	return FS_move_Params{root.Struct()}, err
}

func (s FS_move_Params) String() string {
	str, _ := text.Marshal(0xb76f3dc1dcf4fdf1, s.Struct)
	return str
}

func (s FS_move_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_move_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_move_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_move_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_move_Params_List is a list of FS_move_Params.
type FS_move_Params_List struct{ capnp.List }

// NewFS_move_Params creates a new list of FS_move_Params.
func NewFS_move_Params_List(s *capnp.Segment, sz int32) (FS_move_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_move_Params_List{l}, err
}

func (s FS_move_Params_List) At(i int) FS_move_Params { return FS_move_Params{s.List.Struct(i)} }

func (s FS_move_Params_List) Set(i int, v FS_move_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_move_Params_List) String() string {
	str, _ := text.MarshalList(0xb76f3dc1dcf4fdf1, s.List)
	return str
}

// FS_move_Params_Promise is a wrapper for a FS_move_Params promised by a client call.
type FS_move_Params_Promise struct{ *capnp.Pipeline }

func (p FS_move_Params_Promise) Struct() (FS_move_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Params{s}, err
}

type FS_move_Results struct{ capnp.Struct }

// FS_move_Results_TypeID is the unique identifier for the type FS_move_Results.
const FS_move_Results_TypeID = 0xab89c6fc9bf26f2a

func NewFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func NewRootFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func ReadRootFS_move_Results(msg *capnp.Message) (FS_move_Results, error) {
	root, err := msg.RootPtr()
	return FS_move_Results{root.Struct()}, err
}

func (s FS_move_Results) String() string {
	str, _ := text.Marshal(0xab89c6fc9bf26f2a, s.Struct)
	return str
}

// FS_move_Results_List is a list of FS_move_Results.
type FS_move_Results_List struct{ capnp.List }

// NewFS_move_Results creates a new list of FS_move_Results.
func NewFS_move_Results_List(s *capnp.Segment, sz int32) (FS_move_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_move_Results_List{l}, err
}

func (s FS_move_Results_List) At(i int) FS_move_Results { return FS_move_Results{s.List.Struct(i)} }

func (s FS_move_Results_List) Set(i int, v FS_move_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_move_Results_List) String() string {
	str, _ := text.MarshalList(0xab89c6fc9bf26f2a, s.List)
	return str
}

// FS_move_Results_Promise is a wrapper for a FS_move_Results promised by a client call.
type FS_move_Results_Promise struct{ *capnp.Pipeline }

func (p FS_move_Results_Promise) Struct() (FS_move_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Results{s}, err
}

type FS_copy_Params struct{ capnp.Struct }

// FS_copy_Params_TypeID is the unique identifier for the type FS_copy_Params.
const FS_copy_Params_TypeID = 0xc0dd66dedad92ef8

func NewFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func NewRootFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func ReadRootFS_copy_Params(msg *capnp.Message) (FS_copy_Params, error) {
	root, err := msg.RootPtr()
	return FS_copy_Params{root.Struct()}, err
}

func (s FS_copy_Params) String() string {
	str, _ := text.Marshal(0xc0dd66dedad92ef8, s.Struct)
	return str
}

func (s FS_copy_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_copy_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_copy_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_copy_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_copy_Params_List is a list of FS_copy_Params.
type FS_copy_Params_List struct{ capnp.List }

// NewFS_copy_Params creates a new list of FS_copy_Params.
func NewFS_copy_Params_List(s *capnp.Segment, sz int32) (FS_copy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_copy_Params_List{l}, err
}

func (s FS_copy_Params_List) At(i int) FS_copy_Params { return FS_copy_Params{s.List.Struct(i)} }

func (s FS_copy_Params_List) Set(i int, v FS_copy_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_copy_Params_List) String() string {
	str, _ := text.MarshalList(0xc0dd66dedad92ef8, s.List)
	return str
}

// FS_copy_Params_Promise is a wrapper for a FS_copy_Params promised by a client call.
type FS_copy_Params_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Params_Promise) Struct() (FS_copy_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Params{s}, err
}

type FS_copy_Results struct{ capnp.Struct }

// FS_copy_Results_TypeID is the unique identifier for the type FS_copy_Results.
const FS_copy_Results_TypeID = 0xccf4f28c8951edf6

func NewFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func NewRootFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func ReadRootFS_copy_Results(msg *capnp.Message) (FS_copy_Results, error) {
	root, err := msg.RootPtr()
	return FS_copy_Results{root.Struct()}, err
}

func (s FS_copy_Results) String() string {
	str, _ := text.Marshal(0xccf4f28c8951edf6, s.Struct)
	return str
}

// FS_copy_Results_List is a list of FS_copy_Results.
type FS_copy_Results_List struct{ capnp.List }

// NewFS_copy_Results creates a new list of FS_copy_Results.
func NewFS_copy_Results_List(s *capnp.Segment, sz int32) (FS_copy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_copy_Results_List{l}, err
}

func (s FS_copy_Results_List) At(i int) FS_copy_Results { return FS_copy_Results{s.List.Struct(i)} }

func (s FS_copy_Results_List) Set(i int, v FS_copy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_copy_Results_List) String() string {
	str, _ := text.MarshalList(0xccf4f28c8951edf6, s.List)
	return str
}

// FS_copy_Results_Promise is a wrapper for a FS_copy_Results promised by a client call.
type FS_copy_Results_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Results_Promise) Struct() (FS_copy_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Results{s}, err
}

type FS_pin_Params struct{ capnp.Struct }

// FS_pin_Params_TypeID is the unique identifier for the type FS_pin_Params.
const FS_pin_Params_TypeID = 0x9efc974402f016f6

func NewFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func NewRootFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func ReadRootFS_pin_Params(msg *capnp.Message) (FS_pin_Params, error) {
	root, err := msg.RootPtr()
	return FS_pin_Params{root.Struct()}, err
}

func (s FS_pin_Params) String() string {
	str, _ := text.Marshal(0x9efc974402f016f6, s.Struct)
	return str
}

func (s FS_pin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_pin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_pin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_pin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_pin_Params_List is a list of FS_pin_Params.
type FS_pin_Params_List struct{ capnp.List }

// NewFS_pin_Params creates a new list of FS_pin_Params.
func NewFS_pin_Params_List(s *capnp.Segment, sz int32) (FS_pin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_pin_Params_List{l}, err
}

func (s FS_pin_Params_List) At(i int) FS_pin_Params { return FS_pin_Params{s.List.Struct(i)} }

func (s FS_pin_Params_List) Set(i int, v FS_pin_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Params_List) String() string {
	str, _ := text.MarshalList(0x9efc974402f016f6, s.List)
	return str
}

// FS_pin_Params_Promise is a wrapper for a FS_pin_Params promised by a client call.
type FS_pin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Params_Promise) Struct() (FS_pin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Params{s}, err
}

type FS_pin_Results struct{ capnp.Struct }

// FS_pin_Results_TypeID is the unique identifier for the type FS_pin_Results.
const FS_pin_Results_TypeID = 0xdba8e30445acc3f4

func NewFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func NewRootFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func ReadRootFS_pin_Results(msg *capnp.Message) (FS_pin_Results, error) {
	root, err := msg.RootPtr()
	return FS_pin_Results{root.Struct()}, err
}

func (s FS_pin_Results) String() string {
	str, _ := text.Marshal(0xdba8e30445acc3f4, s.Struct)
	return str
}

// FS_pin_Results_List is a list of FS_pin_Results.
type FS_pin_Results_List struct{ capnp.List }

// NewFS_pin_Results creates a new list of FS_pin_Results.
func NewFS_pin_Results_List(s *capnp.Segment, sz int32) (FS_pin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_pin_Results_List{l}, err
}

func (s FS_pin_Results_List) At(i int) FS_pin_Results { return FS_pin_Results{s.List.Struct(i)} }

func (s FS_pin_Results_List) Set(i int, v FS_pin_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Results_List) String() string {
	str, _ := text.MarshalList(0xdba8e30445acc3f4, s.List)
	return str
}

// FS_pin_Results_Promise is a wrapper for a FS_pin_Results promised by a client call.
type FS_pin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Results_Promise) Struct() (FS_pin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Results{s}, err
}

type FS_unpin_Params struct{ capnp.Struct }

// FS_unpin_Params_TypeID is the unique identifier for the type FS_unpin_Params.
const FS_unpin_Params_TypeID = 0xc9558eac26b0f15e

func NewFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func NewRootFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func ReadRootFS_unpin_Params(msg *capnp.Message) (FS_unpin_Params, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Params{root.Struct()}, err
}

func (s FS_unpin_Params) String() string {
	str, _ := text.Marshal(0xc9558eac26b0f15e, s.Struct)
	return str
}

func (s FS_unpin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_unpin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_unpin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_unpin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_unpin_Params_List is a list of FS_unpin_Params.
type FS_unpin_Params_List struct{ capnp.List }

// NewFS_unpin_Params creates a new list of FS_unpin_Params.
func NewFS_unpin_Params_List(s *capnp.Segment, sz int32) (FS_unpin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_unpin_Params_List{l}, err
}

func (s FS_unpin_Params_List) At(i int) FS_unpin_Params { return FS_unpin_Params{s.List.Struct(i)} }

func (s FS_unpin_Params_List) Set(i int, v FS_unpin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Params_List) String() string {
	str, _ := text.MarshalList(0xc9558eac26b0f15e, s.List)
	return str
}

// FS_unpin_Params_Promise is a wrapper for a FS_unpin_Params promised by a client call.
type FS_unpin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Params_Promise) Struct() (FS_unpin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Params{s}, err
}

type FS_unpin_Results struct{ capnp.Struct }

// FS_unpin_Results_TypeID is the unique identifier for the type FS_unpin_Results.
const FS_unpin_Results_TypeID = 0x87c49e302c6516f8

func NewFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func NewRootFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func ReadRootFS_unpin_Results(msg *capnp.Message) (FS_unpin_Results, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Results{root.Struct()}, err
}

func (s FS_unpin_Results) String() string {
	str, _ := text.Marshal(0x87c49e302c6516f8, s.Struct)
	return str
}

// FS_unpin_Results_List is a list of FS_unpin_Results.
type FS_unpin_Results_List struct{ capnp.List }

// NewFS_unpin_Results creates a new list of FS_unpin_Results.
func NewFS_unpin_Results_List(s *capnp.Segment, sz int32) (FS_unpin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_unpin_Results_List{l}, err
}

func (s FS_unpin_Results_List) At(i int) FS_unpin_Results { return FS_unpin_Results{s.List.Struct(i)} }

func (s FS_unpin_Results_List) Set(i int, v FS_unpin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Results_List) String() string {
	str, _ := text.MarshalList(0x87c49e302c6516f8, s.List)
	return str
}

// FS_unpin_Results_Promise is a wrapper for a FS_unpin_Results promised by a client call.
type FS_unpin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Results_Promise) Struct() (FS_unpin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Results{s}, err
}

type FS_stat_Params struct{ capnp.Struct }

// FS_stat_Params_TypeID is the unique identifier for the type FS_stat_Params.
const FS_stat_Params_TypeID = 0xd78724f6fbd5c5c5

func NewFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func NewRootFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func ReadRootFS_stat_Params(msg *capnp.Message) (FS_stat_Params, error) {
	root, err := msg.RootPtr()
	return FS_stat_Params{root.Struct()}, err
}

func (s FS_stat_Params) String() string {
	str, _ := text.Marshal(0xd78724f6fbd5c5c5, s.Struct)
	return str
}

func (s FS_stat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_stat_Params_List is a list of FS_stat_Params.
type FS_stat_Params_List struct{ capnp.List }

// NewFS_stat_Params creates a new list of FS_stat_Params.
func NewFS_stat_Params_List(s *capnp.Segment, sz int32) (FS_stat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Params_List{l}, err
}

func (s FS_stat_Params_List) At(i int) FS_stat_Params { return FS_stat_Params{s.List.Struct(i)} }

func (s FS_stat_Params_List) Set(i int, v FS_stat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_stat_Params_List) String() string {
	str, _ := text.MarshalList(0xd78724f6fbd5c5c5, s.List)
	return str
}

// FS_stat_Params_Promise is a wrapper for a FS_stat_Params promised by a client call.
type FS_stat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Params_Promise) Struct() (FS_stat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Params{s}, err
}

type FS_stat_Results struct{ capnp.Struct }

// FS_stat_Results_TypeID is the unique identifier for the type FS_stat_Results.
const FS_stat_Results_TypeID = 0xbdb679ec96303b53

func NewFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func NewRootFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func ReadRootFS_stat_Results(msg *capnp.Message) (FS_stat_Results, error) {
	root, err := msg.RootPtr()
	return FS_stat_Results{root.Struct()}, err
}

func (s FS_stat_Results) String() string {
	str, _ := text.Marshal(0xbdb679ec96303b53, s.Struct)
	return str
}

func (s FS_stat_Results) Info() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s FS_stat_Results) HasInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Results) SetInfo(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s FS_stat_Results) NewInfo() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FS_stat_Results_List is a list of FS_stat_Results.
type FS_stat_Results_List struct{ capnp.List }

// NewFS_stat_Results creates a new list of FS_stat_Results.
func NewFS_stat_Results_List(s *capnp.Segment, sz int32) (FS_stat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Results_List{l}, err
}

func (s FS_stat_Results_List) At(i int) FS_stat_Results { return FS_stat_Results{s.List.Struct(i)} }

func (s FS_stat_Results_List) Set(i int, v FS_stat_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stat_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb679ec96303b53, s.List)
	return str
}

// FS_stat_Results_Promise is a wrapper for a FS_stat_Results promised by a client call.
type FS_stat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Results_Promise) Struct() (FS_stat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Results{s}, err
}

func (p FS_stat_Results_Promise) Info() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type FS_garbageCollect_Params struct{ capnp.Struct }

// FS_garbageCollect_Params_TypeID is the unique identifier for the type FS_garbageCollect_Params.
const FS_garbageCollect_Params_TypeID = 0x9cb31f0ede4f5117

func NewFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func NewRootFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func ReadRootFS_garbageCollect_Params(msg *capnp.Message) (FS_garbageCollect_Params, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Params{root.Struct()}, err
}

func (s FS_garbageCollect_Params) String() string {
	str, _ := text.Marshal(0x9cb31f0ede4f5117, s.Struct)
	return str
}

func (s FS_garbageCollect_Params) Aggressive() bool {
	return s.Struct.Bit(0)
}

func (s FS_garbageCollect_Params) SetAggressive(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_garbageCollect_Params_List is a list of FS_garbageCollect_Params.
type FS_garbageCollect_Params_List struct{ capnp.List }

// NewFS_garbageCollect_Params creates a new list of FS_garbageCollect_Params.
func NewFS_garbageCollect_Params_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_garbageCollect_Params_List{l}, err
}

func (s FS_garbageCollect_Params_List) At(i int) FS_garbageCollect_Params {
	return FS_garbageCollect_Params{s.List.Struct(i)}
}

func (s FS_garbageCollect_Params_List) Set(i int, v FS_garbageCollect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Params_List) String() string {
	str, _ := text.MarshalList(0x9cb31f0ede4f5117, s.List)
	return str
}

// FS_garbageCollect_Params_Promise is a wrapper for a FS_garbageCollect_Params promised by a client call.
type FS_garbageCollect_Params_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Params_Promise) Struct() (FS_garbageCollect_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Params{s}, err
}

type FS_garbageCollect_Results struct{ capnp.Struct }

// FS_garbageCollect_Results_TypeID is the unique identifier for the type FS_garbageCollect_Results.
const FS_garbageCollect_Results_TypeID = 0xbb5ea9a03dfddab3

func NewFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func NewRootFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func ReadRootFS_garbageCollect_Results(msg *capnp.Message) (FS_garbageCollect_Results, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Results{root.Struct()}, err
}

func (s FS_garbageCollect_Results) String() string {
	str, _ := text.Marshal(0xbb5ea9a03dfddab3, s.Struct)
	return str
}

func (s FS_garbageCollect_Results) Freed() (GarbageItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return GarbageItem_List{List: p.List()}, err
}

func (s FS_garbageCollect_Results) HasFreed() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_garbageCollect_Results) SetFreed(v GarbageItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFreed sets the freed field to a newly
// allocated GarbageItem_List, preferring placement in s's segment.
func (s FS_garbageCollect_Results) NewFreed(n int32) (GarbageItem_List, error) {
	l, err := NewGarbageItem_List(s.Struct.Segment(), n)
	if err != nil {
		return GarbageItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_garbageCollect_Results_List is a list of FS_garbageCollect_Results.
type FS_garbageCollect_Results_List struct{ capnp.List }

// NewFS_garbageCollect_Results creates a new list of FS_garbageCollect_Results.
func NewFS_garbageCollect_Results_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_garbageCollect_Results_List{l}, err
}

func (s FS_garbageCollect_Results_List) At(i int) FS_garbageCollect_Results {
	return FS_garbageCollect_Results{s.List.Struct(i)}
}

func (s FS_garbageCollect_Results_List) Set(i int, v FS_garbageCollect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Results_List) String() string {
	str, _ := text.MarshalList(0xbb5ea9a03dfddab3, s.List)
	return str
}

// FS_garbageCollect_Results_Promise is a wrapper for a FS_garbageCollect_Results promised by a client call.
type FS_garbageCollect_Results_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Results_Promise) Struct() (FS_garbageCollect_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Results{s}, err
}

type FS_touch_Params struct{ capnp.Struct }

// FS_touch_Params_TypeID is the unique identifier for the type FS_touch_Params.
const FS_touch_Params_TypeID = 0xab1e48e58e4c69af

func NewFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func NewRootFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func ReadRootFS_touch_Params(msg *capnp.Message) (FS_touch_Params, error) {
	root, err := msg.RootPtr()
	return FS_touch_Params{root.Struct()}, err
}

func (s FS_touch_Params) String() string {
	str, _ := text.Marshal(0xab1e48e58e4c69af, s.Struct)
	return str
}

func (s FS_touch_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_touch_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_touch_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_touch_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_touch_Params_List is a list of FS_touch_Params.
type FS_touch_Params_List struct{ capnp.List }

// NewFS_touch_Params creates a new list of FS_touch_Params.
func NewFS_touch_Params_List(s *capnp.Segment, sz int32) (FS_touch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_touch_Params_List{l}, err
}

func (s FS_touch_Params_List) At(i int) FS_touch_Params { return FS_touch_Params{s.List.Struct(i)} }

func (s FS_touch_Params_List) Set(i int, v FS_touch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Params_List) String() string {
	str, _ := text.MarshalList(0xab1e48e58e4c69af, s.List)
	return str
}

// FS_touch_Params_Promise is a wrapper for a FS_touch_Params promised by a client call.
type FS_touch_Params_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Params_Promise) Struct() (FS_touch_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Params{s}, err
}

type FS_touch_Results struct{ capnp.Struct }

// FS_touch_Results_TypeID is the unique identifier for the type FS_touch_Results.
const FS_touch_Results_TypeID = 0xbf1cf3d6e654e947

func NewFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func NewRootFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func ReadRootFS_touch_Results(msg *capnp.Message) (FS_touch_Results, error) {
	root, err := msg.RootPtr()
	return FS_touch_Results{root.Struct()}, err
}

func (s FS_touch_Results) String() string {
	str, _ := text.Marshal(0xbf1cf3d6e654e947, s.Struct)
	return str
}

// FS_touch_Results_List is a list of FS_touch_Results.
type FS_touch_Results_List struct{ capnp.List }

// NewFS_touch_Results creates a new list of FS_touch_Results.
func NewFS_touch_Results_List(s *capnp.Segment, sz int32) (FS_touch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_touch_Results_List{l}, err
}

func (s FS_touch_Results_List) At(i int) FS_touch_Results { return FS_touch_Results{s.List.Struct(i)} }

func (s FS_touch_Results_List) Set(i int, v FS_touch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Results_List) String() string {
	str, _ := text.MarshalList(0xbf1cf3d6e654e947, s.List)
	return str
}

// FS_touch_Results_Promise is a wrapper for a FS_touch_Results promised by a client call.
type FS_touch_Results_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Results_Promise) Struct() (FS_touch_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Results{s}, err
}

type FS_exists_Params struct{ capnp.Struct }

// FS_exists_Params_TypeID is the unique identifier for the type FS_exists_Params.
const FS_exists_Params_TypeID = 0xdb27e243a580d2f0

func NewFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func NewRootFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func ReadRootFS_exists_Params(msg *capnp.Message) (FS_exists_Params, error) {
	root, err := msg.RootPtr()
	return FS_exists_Params{root.Struct()}, err
}

func (s FS_exists_Params) String() string {
	str, _ := text.Marshal(0xdb27e243a580d2f0, s.Struct)
	return str
}

func (s FS_exists_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_exists_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_exists_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_exists_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_exists_Params_List is a list of FS_exists_Params.
type FS_exists_Params_List struct{ capnp.List }

// NewFS_exists_Params creates a new list of FS_exists_Params.
func NewFS_exists_Params_List(s *capnp.Segment, sz int32) (FS_exists_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_exists_Params_List{l}, err
}

func (s FS_exists_Params_List) At(i int) FS_exists_Params { return FS_exists_Params{s.List.Struct(i)} }

func (s FS_exists_Params_List) Set(i int, v FS_exists_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Params_List) String() string {
	str, _ := text.MarshalList(0xdb27e243a580d2f0, s.List)
	return str
}

// FS_exists_Params_Promise is a wrapper for a FS_exists_Params promised by a client call.
type FS_exists_Params_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Params_Promise) Struct() (FS_exists_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Params{s}, err
}

type FS_exists_Results struct{ capnp.Struct }

// FS_exists_Results_TypeID is the unique identifier for the type FS_exists_Results.
const FS_exists_Results_TypeID = 0xa5753d28ca12d2ba

func NewFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func NewRootFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func ReadRootFS_exists_Results(msg *capnp.Message) (FS_exists_Results, error) {
	root, err := msg.RootPtr()
	return FS_exists_Results{root.Struct()}, err
}

func (s FS_exists_Results) String() string {
	str, _ := text.Marshal(0xa5753d28ca12d2ba, s.Struct)
	return str
}

func (s FS_exists_Results) Exists() bool {
	return s.Struct.Bit(0)
}

func (s FS_exists_Results) SetExists(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_exists_Results_List is a list of FS_exists_Results.
type FS_exists_Results_List struct{ capnp.List }

// NewFS_exists_Results creates a new list of FS_exists_Results.
func NewFS_exists_Results_List(s *capnp.Segment, sz int32) (FS_exists_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_exists_Results_List{l}, err
}

func (s FS_exists_Results_List) At(i int) FS_exists_Results {
	return FS_exists_Results{s.List.Struct(i)}
}

func (s FS_exists_Results_List) Set(i int, v FS_exists_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Results_List) String() string {
	str, _ := text.MarshalList(0xa5753d28ca12d2ba, s.List)
	return str
}

// FS_exists_Results_Promise is a wrapper for a FS_exists_Results promised by a client call.
type FS_exists_Results_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Results_Promise) Struct() (FS_exists_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Results{s}, err
}

type FS_tar_Params struct{ capnp.Struct }

// FS_tar_Params_TypeID is the unique identifier for the type FS_tar_Params.
const FS_tar_Params_TypeID = 0x958ea6b33d4e8cbb

func NewFS_tar_Params(s *capnp.Segment) (FS_tar_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_tar_Params{st}, err
}

func NewRootFS_tar_Params(s *capnp.Segment) (FS_tar_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_tar_Params{st}, err
}

func ReadRootFS_tar_Params(msg *capnp.Message) (FS_tar_Params, error) {
	root, err := msg.RootPtr()
	return FS_tar_Params{root.Struct()}, err
}

func (s FS_tar_Params) String() string {
	str, _ := text.Marshal(0x958ea6b33d4e8cbb, s.Struct)
	return str
}

func (s FS_tar_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_tar_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_tar_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_tar_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_tar_Params_List is a list of FS_tar_Params.
type FS_tar_Params_List struct{ capnp.List }

// NewFS_tar_Params creates a new list of FS_tar_Params.
func NewFS_tar_Params_List(s *capnp.Segment, sz int32) (FS_tar_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_tar_Params_List{l}, err
}

func (s FS_tar_Params_List) At(i int) FS_tar_Params { return FS_tar_Params{s.List.Struct(i)} }

func (s FS_tar_Params_List) Set(i int, v FS_tar_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_tar_Params_List) String() string {
	str, _ := text.MarshalList(0x958ea6b33d4e8cbb, s.List)
	return str
}

// FS_tar_Params_Promise is a wrapper for a FS_tar_Params promised by a client call.
type FS_tar_Params_Promise struct{ *capnp.Pipeline }

func (p FS_tar_Params_Promise) Struct() (FS_tar_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_tar_Params{s}, err
}

type FS_tar_Results struct{ capnp.Struct }

// FS_tar_Results_TypeID is the unique identifier for the type FS_tar_Results.
const FS_tar_Results_TypeID = 0x809d4e73dc197b11

func NewFS_tar_Results(s *capnp.Segment) (FS_tar_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_tar_Results{st}, err
}

func NewRootFS_tar_Results(s *capnp.Segment) (FS_tar_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_tar_Results{st}, err
}

func ReadRootFS_tar_Results(msg *capnp.Message) (FS_tar_Results, error) {
	root, err := msg.RootPtr()
	return FS_tar_Results{root.Struct()}, err
}

func (s FS_tar_Results) String() string {
	str, _ := text.Marshal(0x809d4e73dc197b11, s.Struct)
	return str
}

func (s FS_tar_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_tar_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_tar_Results_List is a list of FS_tar_Results.
type FS_tar_Results_List struct{ capnp.List }

// NewFS_tar_Results creates a new list of FS_tar_Results.
func NewFS_tar_Results_List(s *capnp.Segment, sz int32) (FS_tar_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_tar_Results_List{l}, err
}

func (s FS_tar_Results_List) At(i int) FS_tar_Results { return FS_tar_Results{s.List.Struct(i)} }

func (s FS_tar_Results_List) Set(i int, v FS_tar_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_tar_Results_List) String() string {
	str, _ := text.MarshalList(0x809d4e73dc197b11, s.List)
	return str
}

// FS_tar_Results_Promise is a wrapper for a FS_tar_Results promised by a client call.
type FS_tar_Results_Promise struct{ *capnp.Pipeline }

func (p FS_tar_Results_Promise) Struct() (FS_tar_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_tar_Results{s}, err
}

type FS_deletedNodes_Params struct{ capnp.Struct }

// FS_deletedNodes_Params_TypeID is the unique identifier for the type FS_deletedNodes_Params.
const FS_deletedNodes_Params_TypeID = 0xa17d6c20c2174ec8

func NewFS_deletedNodes_Params(s *capnp.Segment) (FS_deletedNodes_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Params{st}, err
}

func NewRootFS_deletedNodes_Params(s *capnp.Segment) (FS_deletedNodes_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Params{st}, err
}

func ReadRootFS_deletedNodes_Params(msg *capnp.Message) (FS_deletedNodes_Params, error) {
	root, err := msg.RootPtr()
	return FS_deletedNodes_Params{root.Struct()}, err
}

func (s FS_deletedNodes_Params) String() string {
	str, _ := text.Marshal(0xa17d6c20c2174ec8, s.Struct)
	return str
}

func (s FS_deletedNodes_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_deletedNodes_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_deletedNodes_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_deletedNodes_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_deletedNodes_Params_List is a list of FS_deletedNodes_Params.
type FS_deletedNodes_Params_List struct{ capnp.List }

// NewFS_deletedNodes_Params creates a new list of FS_deletedNodes_Params.
func NewFS_deletedNodes_Params_List(s *capnp.Segment, sz int32) (FS_deletedNodes_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_deletedNodes_Params_List{l}, err
}

func (s FS_deletedNodes_Params_List) At(i int) FS_deletedNodes_Params {
	return FS_deletedNodes_Params{s.List.Struct(i)}
}

func (s FS_deletedNodes_Params_List) Set(i int, v FS_deletedNodes_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_deletedNodes_Params_List) String() string {
	str, _ := text.MarshalList(0xa17d6c20c2174ec8, s.List)
	return str
}

// FS_deletedNodes_Params_Promise is a wrapper for a FS_deletedNodes_Params promised by a client call.
type FS_deletedNodes_Params_Promise struct{ *capnp.Pipeline }

func (p FS_deletedNodes_Params_Promise) Struct() (FS_deletedNodes_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_deletedNodes_Params{s}, err
}

type FS_deletedNodes_Results struct{ capnp.Struct }

// FS_deletedNodes_Results_TypeID is the unique identifier for the type FS_deletedNodes_Results.
const FS_deletedNodes_Results_TypeID = 0xa78946d2af827622

func NewFS_deletedNodes_Results(s *capnp.Segment) (FS_deletedNodes_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Results{st}, err
}

func NewRootFS_deletedNodes_Results(s *capnp.Segment) (FS_deletedNodes_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Results{st}, err
}

func ReadRootFS_deletedNodes_Results(msg *capnp.Message) (FS_deletedNodes_Results, error) {
	root, err := msg.RootPtr()
	return FS_deletedNodes_Results{root.Struct()}, err
}

func (s FS_deletedNodes_Results) String() string {
	str, _ := text.Marshal(0xa78946d2af827622, s.Struct)
	return str
}

func (s FS_deletedNodes_Results) Nodes() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_deletedNodes_Results) HasNodes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_deletedNodes_Results) SetNodes(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewNodes sets the nodes field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_deletedNodes_Results) NewNodes(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_deletedNodes_Results_List is a list of FS_deletedNodes_Results.
type FS_deletedNodes_Results_List struct{ capnp.List }

// NewFS_deletedNodes_Results creates a new list of FS_deletedNodes_Results.
func NewFS_deletedNodes_Results_List(s *capnp.Segment, sz int32) (FS_deletedNodes_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_deletedNodes_Results_List{l}, err
}

func (s FS_deletedNodes_Results_List) At(i int) FS_deletedNodes_Results {
	return FS_deletedNodes_Results{s.List.Struct(i)}
}

func (s FS_deletedNodes_Results_List) Set(i int, v FS_deletedNodes_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_deletedNodes_Results_List) String() string {
	str, _ := text.MarshalList(0xa78946d2af827622, s.List)
	return str
}

// FS_deletedNodes_Results_Promise is a wrapper for a FS_deletedNodes_Results promised by a client call.
type FS_deletedNodes_Results_Promise struct{ *capnp.Pipeline }

func (p FS_deletedNodes_Results_Promise) Struct() (FS_deletedNodes_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_deletedNodes_Results{s}, err
}

type FS_undelete_Params struct{ capnp.Struct }

// FS_undelete_Params_TypeID is the unique identifier for the type FS_undelete_Params.
const FS_undelete_Params_TypeID = 0x946963af664858d0

func NewFS_undelete_Params(s *capnp.Segment) (FS_undelete_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_undelete_Params{st}, err
}

func NewRootFS_undelete_Params(s *capnp.Segment) (FS_undelete_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_undelete_Params{st}, err
}

func ReadRootFS_undelete_Params(msg *capnp.Message) (FS_undelete_Params, error) {
	root, err := msg.RootPtr()
	return FS_undelete_Params{root.Struct()}, err
}

func (s FS_undelete_Params) String() string {
	str, _ := text.Marshal(0x946963af664858d0, s.Struct)
	return str
}

func (s FS_undelete_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_undelete_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_undelete_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_undelete_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_undelete_Params_List is a list of FS_undelete_Params.
type FS_undelete_Params_List struct{ capnp.List }

// NewFS_undelete_Params creates a new list of FS_undelete_Params.
func NewFS_undelete_Params_List(s *capnp.Segment, sz int32) (FS_undelete_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_undelete_Params_List{l}, err
}

func (s FS_undelete_Params_List) At(i int) FS_undelete_Params {
	return FS_undelete_Params{s.List.Struct(i)}
}

func (s FS_undelete_Params_List) Set(i int, v FS_undelete_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_undelete_Params_List) String() string {
	str, _ := text.MarshalList(0x946963af664858d0, s.List)
	return str
}

// FS_undelete_Params_Promise is a wrapper for a FS_undelete_Params promised by a client call.
type FS_undelete_Params_Promise struct{ *capnp.Pipeline }

func (p FS_undelete_Params_Promise) Struct() (FS_undelete_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_undelete_Params{s}, err
}

type FS_undelete_Results struct{ capnp.Struct }

// FS_undelete_Results_TypeID is the unique identifier for the type FS_undelete_Results.
const FS_undelete_Results_TypeID = 0x95a8b7d1ed942672

func NewFS_undelete_Results(s *capnp.Segment) (FS_undelete_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_undelete_Results{st}, err
}

func NewRootFS_undelete_Results(s *capnp.Segment) (FS_undelete_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_undelete_Results{st}, err
}

func ReadRootFS_undelete_Results(msg *capnp.Message) (FS_undelete_Results, error) {
	root, err := msg.RootPtr()
	return FS_undelete_Results{root.Struct()}, err
}

func (s FS_undelete_Results) String() string {
	str, _ := text.Marshal(0x95a8b7d1ed942672, s.Struct)
	return str
}

// FS_undelete_Results_List is a list of FS_undelete_Results.
type FS_undelete_Results_List struct{ capnp.List }

// NewFS_undelete_Results creates a new list of FS_undelete_Results.
func NewFS_undelete_Results_List(s *capnp.Segment, sz int32) (FS_undelete_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_undelete_Results_List{l}, err
}

func (s FS_undelete_Results_List) At(i int) FS_undelete_Results {
	return FS_undelete_Results{s.List.Struct(i)}
}

func (s FS_undelete_Results_List) Set(i int, v FS_undelete_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_undelete_Results_List) String() string {
	str, _ := text.MarshalList(0x95a8b7d1ed942672, s.List)
	return str
}

// FS_undelete_Results_Promise is a wrapper for a FS_undelete_Results promised by a client call.
type FS_undelete_Results_Promise struct{ *capnp.Pipeline }

func (p FS_undelete_Results_Promise) Struct() (FS_undelete_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_undelete_Results{s}, err
}

type FS_repin_Params struct{ capnp.Struct }

// FS_repin_Params_TypeID is the unique identifier for the type FS_repin_Params.
const FS_repin_Params_TypeID = 0xf0c07855b6fcd215

func NewFS_repin_Params(s *capnp.Segment) (FS_repin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_repin_Params{st}, err
}

func NewRootFS_repin_Params(s *capnp.Segment) (FS_repin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_repin_Params{st}, err
}

func ReadRootFS_repin_Params(msg *capnp.Message) (FS_repin_Params, error) {
	root, err := msg.RootPtr()
	return FS_repin_Params{root.Struct()}, err
}

func (s FS_repin_Params) String() string {
	str, _ := text.Marshal(0xf0c07855b6fcd215, s.Struct)
	return str
}

func (s FS_repin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_repin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_repin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_repin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_repin_Params_List is a list of FS_repin_Params.
type FS_repin_Params_List struct{ capnp.List }

// NewFS_repin_Params creates a new list of FS_repin_Params.
func NewFS_repin_Params_List(s *capnp.Segment, sz int32) (FS_repin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_repin_Params_List{l}, err
}

func (s FS_repin_Params_List) At(i int) FS_repin_Params { return FS_repin_Params{s.List.Struct(i)} }

func (s FS_repin_Params_List) Set(i int, v FS_repin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_repin_Params_List) String() string {
	str, _ := text.MarshalList(0xf0c07855b6fcd215, s.List)
	return str
}

// FS_repin_Params_Promise is a wrapper for a FS_repin_Params promised by a client call.
type FS_repin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_repin_Params_Promise) Struct() (FS_repin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_repin_Params{s}, err
}

type FS_repin_Results struct{ capnp.Struct }

// FS_repin_Results_TypeID is the unique identifier for the type FS_repin_Results.
const FS_repin_Results_TypeID = 0x90690022482a2dd4

func NewFS_repin_Results(s *capnp.Segment) (FS_repin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_repin_Results{st}, err
}

func NewRootFS_repin_Results(s *capnp.Segment) (FS_repin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_repin_Results{st}, err
}

func ReadRootFS_repin_Results(msg *capnp.Message) (FS_repin_Results, error) {
	root, err := msg.RootPtr()
	return FS_repin_Results{root.Struct()}, err
}

func (s FS_repin_Results) String() string {
	str, _ := text.Marshal(0x90690022482a2dd4, s.Struct)
	return str
}

// FS_repin_Results_List is a list of FS_repin_Results.
type FS_repin_Results_List struct{ capnp.List }

// NewFS_repin_Results creates a new list of FS_repin_Results.
func NewFS_repin_Results_List(s *capnp.Segment, sz int32) (FS_repin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_repin_Results_List{l}, err
}

func (s FS_repin_Results_List) At(i int) FS_repin_Results { return FS_repin_Results{s.List.Struct(i)} }

func (s FS_repin_Results_List) Set(i int, v FS_repin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_repin_Results_List) String() string {
	str, _ := text.MarshalList(0x90690022482a2dd4, s.List)
	return str
}

// FS_repin_Results_Promise is a wrapper for a FS_repin_Results promised by a client call.
type FS_repin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_repin_Results_Promise) Struct() (FS_repin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_repin_Results{s}, err
}

type VCS struct{ Client capnp.Client }

// VCS_TypeID is the unique identifier for the type VCS.
const VCS_TypeID = 0xfaa680ef12c44624

func (c VCS) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) CommitInfo(ctx context.Context, params func(VCS_commitInfo_Params) error, opts ...capnp.CallOption) VCS_commitInfo_Results_Promise {
	if c.Client == nil {
		return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commitInfo_Params{Struct: s}) }
	}
	return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type VCS_Server interface {
	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	CommitInfo(VCS_commitInfo) error
}

func VCS_ServerToClient(s VCS_Server) VCS {
	c, _ := s.(server.Closer)
	return VCS{Client: server.New(VCS_Methods(nil, s), c)}
}

func VCS_Methods(methods []server.Method, s VCS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 10)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commitInfo{c, opts, VCS_commitInfo_Params{Struct: p}, VCS_commitInfo_Results{Struct: r}}
			return s.CommitInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 1},
	})

	return methods
}

// VCS_log holds the arguments for a server call to VCS.log.
type VCS_log struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_log_Params
	Results VCS_log_Results
}

// VCS_commit holds the arguments for a server call to VCS.commit.
type VCS_commit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commit_Params
	Results VCS_commit_Results
}

// VCS_tag holds the arguments for a server call to VCS.tag.
type VCS_tag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_tag_Params
	Results VCS_tag_Results
}

// VCS_untag holds the arguments for a server call to VCS.untag.
type VCS_untag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_untag_Params
	Results VCS_untag_Results
}

// VCS_reset holds the arguments for a server call to VCS.reset.
type VCS_reset struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_reset_Params
	Results VCS_reset_Results
}

// VCS_history holds the arguments for a server call to VCS.history.
type VCS_history struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_history_Params
	Results VCS_history_Results
}

// VCS_makeDiff holds the arguments for a server call to VCS.makeDiff.
type VCS_makeDiff struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_makeDiff_Params
	Results VCS_makeDiff_Results
}

// VCS_sync holds the arguments for a server call to VCS.sync.
type VCS_sync struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_sync_Params
	Results VCS_sync_Results
}

// VCS_fetch holds the arguments for a server call to VCS.fetch.
type VCS_fetch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_fetch_Params
	Results VCS_fetch_Results
}

// VCS_commitInfo holds the arguments for a server call to VCS.commitInfo.
type VCS_commitInfo struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commitInfo_Params
	Results VCS_commitInfo_Results
}

type VCS_log_Params struct{ capnp.Struct }

// VCS_log_Params_TypeID is the unique identifier for the type VCS_log_Params.
const VCS_log_Params_TypeID = 0xa4efd353c57d2b85

func NewVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func NewRootVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func ReadRootVCS_log_Params(msg *capnp.Message) (VCS_log_Params, error) {
	root, err := msg.RootPtr()
	return VCS_log_Params{root.Struct()}, err
}

func (s VCS_log_Params) String() string {
	str, _ := text.Marshal(0xa4efd353c57d2b85, s.Struct)
	return str
}

// VCS_log_Params_List is a list of VCS_log_Params.
type VCS_log_Params_List struct{ capnp.List }

// NewVCS_log_Params creates a new list of VCS_log_Params.
func NewVCS_log_Params_List(s *capnp.Segment, sz int32) (VCS_log_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_log_Params_List{l}, err
}

func (s VCS_log_Params_List) At(i int) VCS_log_Params { return VCS_log_Params{s.List.Struct(i)} }

func (s VCS_log_Params_List) Set(i int, v VCS_log_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_log_Params_List) String() string {
	str, _ := text.MarshalList(0xa4efd353c57d2b85, s.List)
	return str
}

// VCS_log_Params_Promise is a wrapper for a VCS_log_Params promised by a client call.
type VCS_log_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Params_Promise) Struct() (VCS_log_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Params{s}, err
}

type VCS_log_Results struct{ capnp.Struct }

// VCS_log_Results_TypeID is the unique identifier for the type VCS_log_Results.
const VCS_log_Results_TypeID = 0xf7250939585a23f6

func NewVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func NewRootVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func ReadRootVCS_log_Results(msg *capnp.Message) (VCS_log_Results, error) {
	root, err := msg.RootPtr()
	return VCS_log_Results{root.Struct()}, err
}

func (s VCS_log_Results) String() string {
	str, _ := text.Marshal(0xf7250939585a23f6, s.Struct)
	return str
}

func (s VCS_log_Results) Entries() (Commit_List, error) {
	p, err := s.Struct.Ptr(0)
	return Commit_List{List: p.List()}, err
}

func (s VCS_log_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_log_Results) SetEntries(v Commit_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated Commit_List, preferring placement in s's segment.
func (s VCS_log_Results) NewEntries(n int32) (Commit_List, error) {
	l, err := NewCommit_List(s.Struct.Segment(), n)
	if err != nil {
		return Commit_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_log_Results_List is a list of VCS_log_Results.
type VCS_log_Results_List struct{ capnp.List }

// NewVCS_log_Results creates a new list of VCS_log_Results.
func NewVCS_log_Results_List(s *capnp.Segment, sz int32) (VCS_log_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_log_Results_List{l}, err
}

func (s VCS_log_Results_List) At(i int) VCS_log_Results { return VCS_log_Results{s.List.Struct(i)} }

func (s VCS_log_Results_List) Set(i int, v VCS_log_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_log_Results_List) String() string {
	str, _ := text.MarshalList(0xf7250939585a23f6, s.List)
	return str
}

// VCS_log_Results_Promise is a wrapper for a VCS_log_Results promised by a client call.
type VCS_log_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Results_Promise) Struct() (VCS_log_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Results{s}, err
}

type VCS_commit_Params struct{ capnp.Struct }

// VCS_commit_Params_TypeID is the unique identifier for the type VCS_commit_Params.
const VCS_commit_Params_TypeID = 0xd9459f2361338d96

func NewVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func NewRootVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func ReadRootVCS_commit_Params(msg *capnp.Message) (VCS_commit_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Params{root.Struct()}, err
}

func (s VCS_commit_Params) String() string {
	str, _ := text.Marshal(0xd9459f2361338d96, s.Struct)
	return str
}

func (s VCS_commit_Params) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commit_Params) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commit_Params) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commit_Params) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commit_Params_List is a list of VCS_commit_Params.
type VCS_commit_Params_List struct{ capnp.List }

// NewVCS_commit_Params creates a new list of VCS_commit_Params.
func NewVCS_commit_Params_List(s *capnp.Segment, sz int32) (VCS_commit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commit_Params_List{l}, err
}

func (s VCS_commit_Params_List) At(i int) VCS_commit_Params {
	return VCS_commit_Params{s.List.Struct(i)}
}

func (s VCS_commit_Params_List) Set(i int, v VCS_commit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Params_List) String() string {
	str, _ := text.MarshalList(0xd9459f2361338d96, s.List)
	return str
}

// VCS_commit_Params_Promise is a wrapper for a VCS_commit_Params promised by a client call.
type VCS_commit_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Params_Promise) Struct() (VCS_commit_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Params{s}, err
}

type VCS_commit_Results struct{ capnp.Struct }

// VCS_commit_Results_TypeID is the unique identifier for the type VCS_commit_Results.
const VCS_commit_Results_TypeID = 0xb7d0dd6b467e7539

func NewVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func NewRootVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func ReadRootVCS_commit_Results(msg *capnp.Message) (VCS_commit_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Results{root.Struct()}, err
}

func (s VCS_commit_Results) String() string {
	str, _ := text.Marshal(0xb7d0dd6b467e7539, s.Struct)
	return str
}

// VCS_commit_Results_List is a list of VCS_commit_Results.
type VCS_commit_Results_List struct{ capnp.List }

// NewVCS_commit_Results creates a new list of VCS_commit_Results.
func NewVCS_commit_Results_List(s *capnp.Segment, sz int32) (VCS_commit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_commit_Results_List{l}, err
}

func (s VCS_commit_Results_List) At(i int) VCS_commit_Results {
	return VCS_commit_Results{s.List.Struct(i)}
}

func (s VCS_commit_Results_List) Set(i int, v VCS_commit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Results_List) String() string {
	str, _ := text.MarshalList(0xb7d0dd6b467e7539, s.List)
	return str
}

// VCS_commit_Results_Promise is a wrapper for a VCS_commit_Results promised by a client call.
type VCS_commit_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Results_Promise) Struct() (VCS_commit_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Results{s}, err
}

type VCS_tag_Params struct{ capnp.Struct }

// VCS_tag_Params_TypeID is the unique identifier for the type VCS_tag_Params.
const VCS_tag_Params_TypeID = 0xa97d67096ee7d46d

func NewVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func NewRootVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func ReadRootVCS_tag_Params(msg *capnp.Message) (VCS_tag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Params{root.Struct()}, err
}

func (s VCS_tag_Params) String() string {
	str, _ := text.Marshal(0xa97d67096ee7d46d, s.Struct)
	return str
}

func (s VCS_tag_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_tag_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_tag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_tag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetTagName(v string) error {
	return s.Struct.SetText(1, v)
}

// VCS_tag_Params_List is a list of VCS_tag_Params.
type VCS_tag_Params_List struct{ capnp.List }

// NewVCS_tag_Params creates a new list of VCS_tag_Params.
func NewVCS_tag_Params_List(s *capnp.Segment, sz int32) (VCS_tag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return VCS_tag_Params_List{l}, err
}

func (s VCS_tag_Params_List) At(i int) VCS_tag_Params { return VCS_tag_Params{s.List.Struct(i)} }

func (s VCS_tag_Params_List) Set(i int, v VCS_tag_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_tag_Params_List) String() string {
	str, _ := text.MarshalList(0xa97d67096ee7d46d, s.List)
	return str
}

// VCS_tag_Params_Promise is a wrapper for a VCS_tag_Params promised by a client call.
type VCS_tag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Params_Promise) Struct() (VCS_tag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Params{s}, err
}

type VCS_tag_Results struct{ capnp.Struct }

// VCS_tag_Results_TypeID is the unique identifier for the type VCS_tag_Results.
const VCS_tag_Results_TypeID = 0xbda949777c149f4b

func NewVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func NewRootVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func ReadRootVCS_tag_Results(msg *capnp.Message) (VCS_tag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Results{root.Struct()}, err
}

func (s VCS_tag_Results) String() string {
	str, _ := text.Marshal(0xbda949777c149f4b, s.Struct)
	return str
}

// VCS_tag_Results_List is a list of VCS_tag_Results.
type VCS_tag_Results_List struct{ capnp.List }

// NewVCS_tag_Results creates a new list of VCS_tag_Results.
func NewVCS_tag_Results_List(s *capnp.Segment, sz int32) (VCS_tag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_tag_Results_List{l}, err
}

func (s VCS_tag_Results_List) At(i int) VCS_tag_Results { return VCS_tag_Results{s.List.Struct(i)} }

func (s VCS_tag_Results_List) Set(i int, v VCS_tag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_tag_Results_List) String() string {
	str, _ := text.MarshalList(0xbda949777c149f4b, s.List)
	return str
}

// VCS_tag_Results_Promise is a wrapper for a VCS_tag_Results promised by a client call.
type VCS_tag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Results_Promise) Struct() (VCS_tag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Results{s}, err
}

type VCS_untag_Params struct{ capnp.Struct }

// VCS_untag_Params_TypeID is the unique identifier for the type VCS_untag_Params.
const VCS_untag_Params_TypeID = 0xf4d42db113af3a4b

func NewVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func NewRootVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func ReadRootVCS_untag_Params(msg *capnp.Message) (VCS_untag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Params{root.Struct()}, err
}

func (s VCS_untag_Params) String() string {
	str, _ := text.Marshal(0xf4d42db113af3a4b, s.Struct)
	return str
}

func (s VCS_untag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_untag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_untag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_untag_Params) SetTagName(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_untag_Params_List is a list of VCS_untag_Params.
type VCS_untag_Params_List struct{ capnp.List }

// NewVCS_untag_Params creates a new list of VCS_untag_Params.
func NewVCS_untag_Params_List(s *capnp.Segment, sz int32) (VCS_untag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_untag_Params_List{l}, err
}

func (s VCS_untag_Params_List) At(i int) VCS_untag_Params { return VCS_untag_Params{s.List.Struct(i)} }

func (s VCS_untag_Params_List) Set(i int, v VCS_untag_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Params_List) String() string {
	str, _ := text.MarshalList(0xf4d42db113af3a4b, s.List)
	return str
}

// VCS_untag_Params_Promise is a wrapper for a VCS_untag_Params promised by a client call.
type VCS_untag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Params_Promise) Struct() (VCS_untag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Params{s}, err
}

type VCS_untag_Results struct{ capnp.Struct }

// VCS_untag_Results_TypeID is the unique identifier for the type VCS_untag_Results.
const VCS_untag_Results_TypeID = 0xba0de490234c27af

func NewVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func NewRootVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func ReadRootVCS_untag_Results(msg *capnp.Message) (VCS_untag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Results{root.Struct()}, err
}

func (s VCS_untag_Results) String() string {
	str, _ := text.Marshal(0xba0de490234c27af, s.Struct)
	return str
}

// VCS_untag_Results_List is a list of VCS_untag_Results.
type VCS_untag_Results_List struct{ capnp.List }

// NewVCS_untag_Results creates a new list of VCS_untag_Results.
func NewVCS_untag_Results_List(s *capnp.Segment, sz int32) (VCS_untag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_untag_Results_List{l}, err
}

func (s VCS_untag_Results_List) At(i int) VCS_untag_Results {
	return VCS_untag_Results{s.List.Struct(i)}
}

func (s VCS_untag_Results_List) Set(i int, v VCS_untag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Results_List) String() string {
	str, _ := text.MarshalList(0xba0de490234c27af, s.List)
	return str
}

// VCS_untag_Results_Promise is a wrapper for a VCS_untag_Results promised by a client call.
type VCS_untag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Results_Promise) Struct() (VCS_untag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Results{s}, err
}

type VCS_reset_Params struct{ capnp.Struct }

// VCS_reset_Params_TypeID is the unique identifier for the type VCS_reset_Params.
const VCS_reset_Params_TypeID = 0xe71560d8bc06c6fd

func NewVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func NewRootVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func ReadRootVCS_reset_Params(msg *capnp.Message) (VCS_reset_Params, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Params{root.Struct()}, err
}

func (s VCS_reset_Params) String() string {
	str, _ := text.Marshal(0xe71560d8bc06c6fd, s.Struct)
	return str
}

func (s VCS_reset_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_reset_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_reset_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_reset_Params) HasRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_reset_Params) Force() bool {
	return s.Struct.Bit(0)
}

func (s VCS_reset_Params) SetForce(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_reset_Params_List is a list of VCS_reset_Params.
type VCS_reset_Params_List struct{ capnp.List }

// NewVCS_reset_Params creates a new list of VCS_reset_Params.
func NewVCS_reset_Params_List(s *capnp.Segment, sz int32) (VCS_reset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return VCS_reset_Params_List{l}, err
}

func (s VCS_reset_Params_List) At(i int) VCS_reset_Params { return VCS_reset_Params{s.List.Struct(i)} }

func (s VCS_reset_Params_List) Set(i int, v VCS_reset_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Params_List) String() string {
	str, _ := text.MarshalList(0xe71560d8bc06c6fd, s.List)
	return str
}

// VCS_reset_Params_Promise is a wrapper for a VCS_reset_Params promised by a client call.
type VCS_reset_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Params_Promise) Struct() (VCS_reset_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Params{s}, err
}

type VCS_reset_Results struct{ capnp.Struct }

// VCS_reset_Results_TypeID is the unique identifier for the type VCS_reset_Results.
const VCS_reset_Results_TypeID = 0xf9b772853fd93ea9

func NewVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func NewRootVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func ReadRootVCS_reset_Results(msg *capnp.Message) (VCS_reset_Results, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Results{root.Struct()}, err
}

func (s VCS_reset_Results) String() string {
	str, _ := text.Marshal(0xf9b772853fd93ea9, s.Struct)
	return str
}

// VCS_reset_Results_List is a list of VCS_reset_Results.
type VCS_reset_Results_List struct{ capnp.List }

// NewVCS_reset_Results creates a new list of VCS_reset_Results.
func NewVCS_reset_Results_List(s *capnp.Segment, sz int32) (VCS_reset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_reset_Results_List{l}, err
}

func (s VCS_reset_Results_List) At(i int) VCS_reset_Results {
	return VCS_reset_Results{s.List.Struct(i)}
}

func (s VCS_reset_Results_List) Set(i int, v VCS_reset_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b772853fd93ea9, s.List)
	return str
}

// VCS_reset_Results_Promise is a wrapper for a VCS_reset_Results promised by a client call.
type VCS_reset_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Results_Promise) Struct() (VCS_reset_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Results{s}, err
}

type VCS_history_Params struct{ capnp.Struct }

// VCS_history_Params_TypeID is the unique identifier for the type VCS_history_Params.
const VCS_history_Params_TypeID = 0xe154e487144bf3c2

func NewVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func NewRootVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func ReadRootVCS_history_Params(msg *capnp.Message) (VCS_history_Params, error) {
	root, err := msg.RootPtr()
	return VCS_history_Params{root.Struct()}, err
}

func (s VCS_history_Params) String() string {
	str, _ := text.Marshal(0xe154e487144bf3c2, s.Struct)
	return str
}

func (s VCS_history_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_history_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_history_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_history_Params_List is a list of VCS_history_Params.
type VCS_history_Params_List struct{ capnp.List }

// NewVCS_history_Params creates a new list of VCS_history_Params.
func NewVCS_history_Params_List(s *capnp.Segment, sz int32) (VCS_history_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Params_List{l}, err
}

func (s VCS_history_Params_List) At(i int) VCS_history_Params {
	return VCS_history_Params{s.List.Struct(i)}
}

func (s VCS_history_Params_List) Set(i int, v VCS_history_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Params_List) String() string {
	str, _ := text.MarshalList(0xe154e487144bf3c2, s.List)
	return str
}

// VCS_history_Params_Promise is a wrapper for a VCS_history_Params promised by a client call.
type VCS_history_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Params_Promise) Struct() (VCS_history_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Params{s}, err
}

type VCS_history_Results struct{ capnp.Struct }

// VCS_history_Results_TypeID is the unique identifier for the type VCS_history_Results.
const VCS_history_Results_TypeID = 0xe0f49db8c42c72b2

func NewVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func NewRootVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func ReadRootVCS_history_Results(msg *capnp.Message) (VCS_history_Results, error) {
	root, err := msg.RootPtr()
	return VCS_history_Results{root.Struct()}, err
}

func (s VCS_history_Results) String() string {
	str, _ := text.Marshal(0xe0f49db8c42c72b2, s.Struct)
	return str
}

func (s VCS_history_Results) History() (Change_List, error) {
	p, err := s.Struct.Ptr(0)
	return Change_List{List: p.List()}, err
}

func (s VCS_history_Results) HasHistory() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Results) SetHistory(v Change_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHistory sets the history field to a newly
// allocated Change_List, preferring placement in s's segment.
func (s VCS_history_Results) NewHistory(n int32) (Change_List, error) {
	l, err := NewChange_List(s.Struct.Segment(), n)
	if err != nil {
		return Change_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_history_Results_List is a list of VCS_history_Results.
type VCS_history_Results_List struct{ capnp.List }

// NewVCS_history_Results creates a new list of VCS_history_Results.
func NewVCS_history_Results_List(s *capnp.Segment, sz int32) (VCS_history_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Results_List{l}, err
}

func (s VCS_history_Results_List) At(i int) VCS_history_Results {
	return VCS_history_Results{s.List.Struct(i)}
}

func (s VCS_history_Results_List) Set(i int, v VCS_history_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f49db8c42c72b2, s.List)
	return str
}

// VCS_history_Results_Promise is a wrapper for a VCS_history_Results promised by a client call.
type VCS_history_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Results_Promise) Struct() (VCS_history_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Results{s}, err
}

type VCS_makeDiff_Params struct{ capnp.Struct }

// VCS_makeDiff_Params_TypeID is the unique identifier for the type VCS_makeDiff_Params.
const VCS_makeDiff_Params_TypeID = 0xe2f81b4403ef433b

func NewVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func NewRootVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func ReadRootVCS_makeDiff_Params(msg *capnp.Message) (VCS_makeDiff_Params, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Params{root.Struct()}, err
}

func (s VCS_makeDiff_Params) String() string {
	str, _ := text.Marshal(0xe2f81b4403ef433b, s.Struct)
	return str
}

func (s VCS_makeDiff_Params) LocalOwner() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalOwner() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalOwner(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_makeDiff_Params) RemoteOwner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_makeDiff_Params) LocalRev() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalRev() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalRev(v string) error {
	return s.Struct.SetText(2, v)
}

func (s VCS_makeDiff_Params) RemoteRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteRev(v string) error {
	return s.Struct.SetText(3, v)
}

func (s VCS_makeDiff_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_makeDiff_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_makeDiff_Params_List is a list of VCS_makeDiff_Params.
type VCS_makeDiff_Params_List struct{ capnp.List }

// NewVCS_makeDiff_Params creates a new list of VCS_makeDiff_Params.
func NewVCS_makeDiff_Params_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return VCS_makeDiff_Params_List{l}, err
}

func (s VCS_makeDiff_Params_List) At(i int) VCS_makeDiff_Params {
	return VCS_makeDiff_Params{s.List.Struct(i)}
}

func (s VCS_makeDiff_Params_List) Set(i int, v VCS_makeDiff_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Params_List) String() string {
	str, _ := text.MarshalList(0xe2f81b4403ef433b, s.List)
	return str
}

// VCS_makeDiff_Params_Promise is a wrapper for a VCS_makeDiff_Params promised by a client call.
type VCS_makeDiff_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Params_Promise) Struct() (VCS_makeDiff_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Params{s}, err
}

type VCS_makeDiff_Results struct{ capnp.Struct }

// VCS_makeDiff_Results_TypeID is the unique identifier for the type VCS_makeDiff_Results.
const VCS_makeDiff_Results_TypeID = 0xd7ef486de484610d

func NewVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func NewRootVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func ReadRootVCS_makeDiff_Results(msg *capnp.Message) (VCS_makeDiff_Results, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Results{root.Struct()}, err
}

func (s VCS_makeDiff_Results) String() string {
	str, _ := text.Marshal(0xd7ef486de484610d, s.Struct)
	return str
}

func (s VCS_makeDiff_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_makeDiff_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_makeDiff_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_makeDiff_Results_List is a list of VCS_makeDiff_Results.
type VCS_makeDiff_Results_List struct{ capnp.List }

// NewVCS_makeDiff_Results creates a new list of VCS_makeDiff_Results.
func NewVCS_makeDiff_Results_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_makeDiff_Results_List{l}, err
}

func (s VCS_makeDiff_Results_List) At(i int) VCS_makeDiff_Results {
	return VCS_makeDiff_Results{s.List.Struct(i)}
}

func (s VCS_makeDiff_Results_List) Set(i int, v VCS_makeDiff_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Results_List) String() string {
	str, _ := text.MarshalList(0xd7ef486de484610d, s.List)
	return str
}

// VCS_makeDiff_Results_Promise is a wrapper for a VCS_makeDiff_Results promised by a client call.
type VCS_makeDiff_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Results_Promise) Struct() (VCS_makeDiff_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Results{s}, err
}

func (p VCS_makeDiff_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_sync_Params struct{ capnp.Struct }

// VCS_sync_Params_TypeID is the unique identifier for the type VCS_sync_Params.
const VCS_sync_Params_TypeID = 0xb05bd83a34de71b7

func NewVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func NewRootVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func ReadRootVCS_sync_Params(msg *capnp.Message) (VCS_sync_Params, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Params{root.Struct()}, err
}

func (s VCS_sync_Params) String() string {
	str, _ := text.Marshal(0xb05bd83a34de71b7, s.Struct)
	return str
}

func (s VCS_sync_Params) WithWhom() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_sync_Params) HasWithWhom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Params) WithWhomBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_sync_Params) SetWithWhom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_sync_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_sync_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_sync_Params_List is a list of VCS_sync_Params.
type VCS_sync_Params_List struct{ capnp.List }

// NewVCS_sync_Params creates a new list of VCS_sync_Params.
func NewVCS_sync_Params_List(s *capnp.Segment, sz int32) (VCS_sync_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_sync_Params_List{l}, err
}

func (s VCS_sync_Params_List) At(i int) VCS_sync_Params { return VCS_sync_Params{s.List.Struct(i)} }

func (s VCS_sync_Params_List) Set(i int, v VCS_sync_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Params_List) String() string {
	str, _ := text.MarshalList(0xb05bd83a34de71b7, s.List)
	return str
}

// VCS_sync_Params_Promise is a wrapper for a VCS_sync_Params promised by a client call.
type VCS_sync_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Params_Promise) Struct() (VCS_sync_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Params{s}, err
}

type VCS_sync_Results struct{ capnp.Struct }

// VCS_sync_Results_TypeID is the unique identifier for the type VCS_sync_Results.
const VCS_sync_Results_TypeID = 0xfa04b4272d0ffcd9

func NewVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func NewRootVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func ReadRootVCS_sync_Results(msg *capnp.Message) (VCS_sync_Results, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Results{root.Struct()}, err
}

func (s VCS_sync_Results) String() string {
	str, _ := text.Marshal(0xfa04b4272d0ffcd9, s.Struct)
	return str
}

func (s VCS_sync_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_sync_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_sync_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_sync_Results_List is a list of VCS_sync_Results.
type VCS_sync_Results_List struct{ capnp.List }

// NewVCS_sync_Results creates a new list of VCS_sync_Results.
func NewVCS_sync_Results_List(s *capnp.Segment, sz int32) (VCS_sync_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_sync_Results_List{l}, err
}

func (s VCS_sync_Results_List) At(i int) VCS_sync_Results { return VCS_sync_Results{s.List.Struct(i)} }

func (s VCS_sync_Results_List) Set(i int, v VCS_sync_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Results_List) String() string {
	str, _ := text.MarshalList(0xfa04b4272d0ffcd9, s.List)
	return str
}

// VCS_sync_Results_Promise is a wrapper for a VCS_sync_Results promised by a client call.
type VCS_sync_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Results_Promise) Struct() (VCS_sync_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Results{s}, err
}

func (p VCS_sync_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_fetch_Params struct{ capnp.Struct }

// VCS_fetch_Params_TypeID is the unique identifier for the type VCS_fetch_Params.
const VCS_fetch_Params_TypeID = 0xaff62edfdbfe53d0

func NewVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func NewRootVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func ReadRootVCS_fetch_Params(msg *capnp.Message) (VCS_fetch_Params, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Params{root.Struct()}, err
}

func (s VCS_fetch_Params) String() string {
	str, _ := text.Marshal(0xaff62edfdbfe53d0, s.Struct)
	return str
}

func (s VCS_fetch_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_fetch_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_fetch_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_fetch_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_fetch_Params_List is a list of VCS_fetch_Params.
type VCS_fetch_Params_List struct{ capnp.List }

// NewVCS_fetch_Params creates a new list of VCS_fetch_Params.
func NewVCS_fetch_Params_List(s *capnp.Segment, sz int32) (VCS_fetch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_fetch_Params_List{l}, err
}

func (s VCS_fetch_Params_List) At(i int) VCS_fetch_Params { return VCS_fetch_Params{s.List.Struct(i)} }

func (s VCS_fetch_Params_List) Set(i int, v VCS_fetch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Params_List) String() string {
	str, _ := text.MarshalList(0xaff62edfdbfe53d0, s.List)
	return str
}

// VCS_fetch_Params_Promise is a wrapper for a VCS_fetch_Params promised by a client call.
type VCS_fetch_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Params_Promise) Struct() (VCS_fetch_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Params{s}, err
}

type VCS_fetch_Results struct{ capnp.Struct }

// VCS_fetch_Results_TypeID is the unique identifier for the type VCS_fetch_Results.
const VCS_fetch_Results_TypeID = 0xb262e0d6c2474d9c

func NewVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func NewRootVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func ReadRootVCS_fetch_Results(msg *capnp.Message) (VCS_fetch_Results, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Results{root.Struct()}, err
}

func (s VCS_fetch_Results) String() string {
	str, _ := text.Marshal(0xb262e0d6c2474d9c, s.Struct)
	return str
}

// VCS_fetch_Results_List is a list of VCS_fetch_Results.
type VCS_fetch_Results_List struct{ capnp.List }

// NewVCS_fetch_Results creates a new list of VCS_fetch_Results.
func NewVCS_fetch_Results_List(s *capnp.Segment, sz int32) (VCS_fetch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_fetch_Results_List{l}, err
}

func (s VCS_fetch_Results_List) At(i int) VCS_fetch_Results {
	return VCS_fetch_Results{s.List.Struct(i)}
}

func (s VCS_fetch_Results_List) Set(i int, v VCS_fetch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Results_List) String() string {
	str, _ := text.MarshalList(0xb262e0d6c2474d9c, s.List)
	return str
}

// VCS_fetch_Results_Promise is a wrapper for a VCS_fetch_Results promised by a client call.
type VCS_fetch_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Results_Promise) Struct() (VCS_fetch_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Results{s}, err
}

type VCS_commitInfo_Params struct{ capnp.Struct }

// VCS_commitInfo_Params_TypeID is the unique identifier for the type VCS_commitInfo_Params.
const VCS_commitInfo_Params_TypeID = 0xa630576401b1a5b7

func NewVCS_commitInfo_Params(s *capnp.Segment) (VCS_commitInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commitInfo_Params{st}, err
}

func NewRootVCS_commitInfo_Params(s *capnp.Segment) (VCS_commitInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commitInfo_Params{st}, err
}

func ReadRootVCS_commitInfo_Params(msg *capnp.Message) (VCS_commitInfo_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commitInfo_Params{root.Struct()}, err
}

func (s VCS_commitInfo_Params) String() string {
	str, _ := text.Marshal(0xa630576401b1a5b7, s.Struct)
	return str
}

func (s VCS_commitInfo_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commitInfo_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commitInfo_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commitInfo_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commitInfo_Params_List is a list of VCS_commitInfo_Params.
type VCS_commitInfo_Params_List struct{ capnp.List }

// NewVCS_commitInfo_Params creates a new list of VCS_commitInfo_Params.
func NewVCS_commitInfo_Params_List(s *capnp.Segment, sz int32) (VCS_commitInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commitInfo_Params_List{l}, err
}

func (s VCS_commitInfo_Params_List) At(i int) VCS_commitInfo_Params {
	return VCS_commitInfo_Params{s.List.Struct(i)}
}

func (s VCS_commitInfo_Params_List) Set(i int, v VCS_commitInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commitInfo_Params_List) String() string {
	str, _ := text.MarshalList(0xa630576401b1a5b7, s.List)
	return str
}

// VCS_commitInfo_Params_Promise is a wrapper for a VCS_commitInfo_Params promised by a client call.
type VCS_commitInfo_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commitInfo_Params_Promise) Struct() (VCS_commitInfo_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commitInfo_Params{s}, err
}

type VCS_commitInfo_Results struct{ capnp.Struct }

// VCS_commitInfo_Results_TypeID is the unique identifier for the type VCS_commitInfo_Results.
const VCS_commitInfo_Results_TypeID = 0xa1a9e5ab638eed79

func NewVCS_commitInfo_Results(s *capnp.Segment) (VCS_commitInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_commitInfo_Results{st}, err
}

func NewRootVCS_commitInfo_Results(s *capnp.Segment) (VCS_commitInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_commitInfo_Results{st}, err
}

func ReadRootVCS_commitInfo_Results(msg *capnp.Message) (VCS_commitInfo_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commitInfo_Results{root.Struct()}, err
}

func (s VCS_commitInfo_Results) String() string {
	str, _ := text.Marshal(0xa1a9e5ab638eed79, s.Struct)
	return str
}

func (s VCS_commitInfo_Results) IsValidRef() bool {
	return s.Struct.Bit(0)
}

func (s VCS_commitInfo_Results) SetIsValidRef(v bool) {
	s.Struct.SetBit(0, v)
}

func (s VCS_commitInfo_Results) Commit() (Commit, error) {
	p, err := s.Struct.Ptr(0)
	return Commit{Struct: p.Struct()}, err
}

func (s VCS_commitInfo_Results) HasCommit() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commitInfo_Results) SetCommit(v Commit) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewCommit sets the commit field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s VCS_commitInfo_Results) NewCommit() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_commitInfo_Results_List is a list of VCS_commitInfo_Results.
type VCS_commitInfo_Results_List struct{ capnp.List }

// NewVCS_commitInfo_Results creates a new list of VCS_commitInfo_Results.
func NewVCS_commitInfo_Results_List(s *capnp.Segment, sz int32) (VCS_commitInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_commitInfo_Results_List{l}, err
}

func (s VCS_commitInfo_Results_List) At(i int) VCS_commitInfo_Results {
	return VCS_commitInfo_Results{s.List.Struct(i)}
}

func (s VCS_commitInfo_Results_List) Set(i int, v VCS_commitInfo_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commitInfo_Results_List) String() string {
	str, _ := text.MarshalList(0xa1a9e5ab638eed79, s.List)
	return str
}

// VCS_commitInfo_Results_Promise is a wrapper for a VCS_commitInfo_Results promised by a client call.
type VCS_commitInfo_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commitInfo_Results_Promise) Struct() (VCS_commitInfo_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commitInfo_Results{s}, err
}

func (p VCS_commitInfo_Results_Promise) Commit() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo struct{ Client capnp.Client }

// Repo_TypeID is the unique identifier for the type Repo.
const Repo_TypeID = 0xa862cd929f7af191

func (c Repo) Quit(ctx context.Context, params func(Repo_quit_Params) error, opts ...capnp.CallOption) Repo_quit_Results_Promise {
	if c.Client == nil {
		return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_quit_Params{Struct: s}) }
	}
	return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Ping(ctx context.Context, params func(Repo_ping_Params) error, opts ...capnp.CallOption) Repo_ping_Results_Promise {
	if c.Client == nil {
		return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_ping_Params{Struct: s}) }
	}
	return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Init(ctx context.Context, params func(Repo_init_Params) error, opts ...capnp.CallOption) Repo_init_Results_Promise {
	if c.Client == nil {
		return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_init_Params{Struct: s}) }
	}
	return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Mount(ctx context.Context, params func(Repo_mount_Params) error, opts ...capnp.CallOption) Repo_mount_Results_Promise {
	if c.Client == nil {
		return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_mount_Params{Struct: s}) }
	}
	return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Unmount(ctx context.Context, params func(Repo_unmount_Params) error, opts ...capnp.CallOption) Repo_unmount_Results_Promise {
	if c.Client == nil {
		return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_unmount_Params{Struct: s}) }
	}
	return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigGet(ctx context.Context, params func(Repo_configGet_Params) error, opts ...capnp.CallOption) Repo_configGet_Results_Promise {
	if c.Client == nil {
		return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configGet_Params{Struct: s}) }
	}
	return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigSet(ctx context.Context, params func(Repo_configSet_Params) error, opts ...capnp.CallOption) Repo_configSet_Results_Promise {
	if c.Client == nil {
		return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configSet_Params{Struct: s}) }
	}
	return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigAll(ctx context.Context, params func(Repo_configAll_Params) error, opts ...capnp.CallOption) Repo_configAll_Results_Promise {
	if c.Client == nil {
		return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configAll_Params{Struct: s}) }
	}
	return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigDoc(ctx context.Context, params func(Repo_configDoc_Params) error, opts ...capnp.CallOption) Repo_configDoc_Results_Promise {
	if c.Client == nil {
		return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configDoc_Params{Struct: s}) }
	}
	return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Become(ctx context.Context, params func(Repo_become_Params) error, opts ...capnp.CallOption) Repo_become_Results_Promise {
	if c.Client == nil {
		return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_become_Params{Struct: s}) }
	}
	return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabAdd(ctx context.Context, params func(Repo_fstabAdd_Params) error, opts ...capnp.CallOption) Repo_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabAdd_Params{Struct: s}) }
	}
	return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabRemove(ctx context.Context, params func(Repo_fstabRemove_Params) error, opts ...capnp.CallOption) Repo_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabRemove_Params{Struct: s}) }
	}
	return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabApply(ctx context.Context, params func(Repo_fstabApply_Params) error, opts ...capnp.CallOption) Repo_fstabApply_Results_Promise {
	if c.Client == nil {
		return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabApply_Params{Struct: s}) }
	}
	return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabList(ctx context.Context, params func(Repo_fstabList_Params) error, opts ...capnp.CallOption) Repo_fstabList_Results_Promise {
	if c.Client == nil {
		return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabList_Params{Struct: s}) }
	}
	return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabUnmountAll(ctx context.Context, params func(Repo_fstabUnmountAll_Params) error, opts ...capnp.CallOption) Repo_fstabUnmountAll_Results_Promise {
	if c.Client == nil {
		return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabUnmountAll_Params{Struct: s}) }
	}
	return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Version(ctx context.Context, params func(Repo_version_Params) error, opts ...capnp.CallOption) Repo_version_Results_Promise {
	if c.Client == nil {
		return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_version_Params{Struct: s}) }
	}
	return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) WaitForInit(ctx context.Context, params func(Repo_waitForInit_Params) error, opts ...capnp.CallOption) Repo_waitForInit_Results_Promise {
	if c.Client == nil {
		return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_waitForInit_Params{Struct: s}) }
	}
	return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserAdd(ctx context.Context, params func(Repo_gatewayUserAdd_Params) error, opts ...capnp.CallOption) Repo_gatewayUserAdd_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserAdd_Params{Struct: s}) }
	}
	return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserRm(ctx context.Context, params func(Repo_gatewayUserRm_Params) error, opts ...capnp.CallOption) Repo_gatewayUserRm_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserRm_Params{Struct: s}) }
	}
	return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserList(ctx context.Context, params func(Repo_gatewayUserList_Params) error, opts ...capnp.CallOption) Repo_gatewayUserList_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserList_Params{Struct: s}) }
	}
	return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Repo_Server interface {
	Quit(Repo_quit) error

	Ping(Repo_ping) error

	Init(Repo_init) error

	Mount(Repo_mount) error

	Unmount(Repo_unmount) error

	ConfigGet(Repo_configGet) error

	ConfigSet(Repo_configSet) error

	ConfigAll(Repo_configAll) error

	ConfigDoc(Repo_configDoc) error

	Become(Repo_become) error

	FstabAdd(Repo_fstabAdd) error

	FstabRemove(Repo_fstabRemove) error

	FstabApply(Repo_fstabApply) error

	FstabList(Repo_fstabList) error

	FstabUnmountAll(Repo_fstabUnmountAll) error

	Version(Repo_version) error

	WaitForInit(Repo_waitForInit) error

	GatewayUserAdd(Repo_gatewayUserAdd) error

	GatewayUserRm(Repo_gatewayUserRm) error

	GatewayUserList(Repo_gatewayUserList) error
}

func Repo_ServerToClient(s Repo_Server) Repo {
	c, _ := s.(server.Closer)
	return Repo{Client: server.New(Repo_Methods(nil, s), c)}
}

func Repo_Methods(methods []server.Method, s Repo_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 20)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_quit{c, opts, Repo_quit_Params{Struct: p}, Repo_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_ping{c, opts, Repo_ping_Params{Struct: p}, Repo_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_init{c, opts, Repo_init_Params{Struct: p}, Repo_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_mount{c, opts, Repo_mount_Params{Struct: p}, Repo_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_unmount{c, opts, Repo_unmount_Params{Struct: p}, Repo_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configGet{c, opts, Repo_configGet_Params{Struct: p}, Repo_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configSet{c, opts, Repo_configSet_Params{Struct: p}, Repo_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configAll{c, opts, Repo_configAll_Params{Struct: p}, Repo_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configDoc{c, opts, Repo_configDoc_Params{Struct: p}, Repo_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_become{c, opts, Repo_become_Params{Struct: p}, Repo_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabAdd{c, opts, Repo_fstabAdd_Params{Struct: p}, Repo_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabRemove{c, opts, Repo_fstabRemove_Params{Struct: p}, Repo_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabApply{c, opts, Repo_fstabApply_Params{Struct: p}, Repo_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabList{c, opts, Repo_fstabList_Params{Struct: p}, Repo_fstabList_Results{Struct: r}}
			return s.FstabList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabUnmountAll{c, opts, Repo_fstabUnmountAll_Params{Struct: p}, Repo_fstabUnmountAll_Results{Struct: r}}
			return s.FstabUnmountAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_version{c, opts, Repo_version_Params{Struct: p}, Repo_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_waitForInit{c, opts, Repo_waitForInit_Params{Struct: p}, Repo_waitForInit_Results{Struct: r}}
			return s.WaitForInit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserAdd{c, opts, Repo_gatewayUserAdd_Params{Struct: p}, Repo_gatewayUserAdd_Results{Struct: r}}
			return s.GatewayUserAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserRm{c, opts, Repo_gatewayUserRm_Params{Struct: p}, Repo_gatewayUserRm_Results{Struct: r}}
			return s.GatewayUserRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserList{c, opts, Repo_gatewayUserList_Params{Struct: p}, Repo_gatewayUserList_Results{Struct: r}}
			return s.GatewayUserList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Repo_quit holds the arguments for a server call to Repo.quit.
type Repo_quit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_quit_Params
	Results Repo_quit_Results
}

// Repo_ping holds the arguments for a server call to Repo.ping.
type Repo_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_ping_Params
	Results Repo_ping_Results
}

// Repo_init holds the arguments for a server call to Repo.init.
type Repo_init struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_init_Params
	Results Repo_init_Results
}

// Repo_mount holds the arguments for a server call to Repo.mount.
type Repo_mount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_mount_Params
	Results Repo_mount_Results
}

// Repo_unmount holds the arguments for a server call to Repo.unmount.
type Repo_unmount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_unmount_Params
	Results Repo_unmount_Results
}

// Repo_configGet holds the arguments for a server call to Repo.configGet.
type Repo_configGet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configGet_Params
	Results Repo_configGet_Results
}

// Repo_configSet holds the arguments for a server call to Repo.configSet.
type Repo_configSet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configSet_Params
	Results Repo_configSet_Results
}

// Repo_configAll holds the arguments for a server call to Repo.configAll.
type Repo_configAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configAll_Params
	Results Repo_configAll_Results
}

// Repo_configDoc holds the arguments for a server call to Repo.configDoc.
type Repo_configDoc struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configDoc_Params
	Results Repo_configDoc_Results
}

// Repo_become holds the arguments for a server call to Repo.become.
type Repo_become struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_become_Params
	Results Repo_become_Results
}

// Repo_fstabAdd holds the arguments for a server call to Repo.fstabAdd.
type Repo_fstabAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabAdd_Params
	Results Repo_fstabAdd_Results
}

// Repo_fstabRemove holds the arguments for a server call to Repo.fstabRemove.
type Repo_fstabRemove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabRemove_Params
	Results Repo_fstabRemove_Results
}

// Repo_fstabApply holds the arguments for a server call to Repo.fstabApply.
type Repo_fstabApply struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabApply_Params
	Results Repo_fstabApply_Results
}

// Repo_fstabList holds the arguments for a server call to Repo.fstabList.
type Repo_fstabList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabList_Params
	Results Repo_fstabList_Results
}

// Repo_fstabUnmountAll holds the arguments for a server call to Repo.fstabUnmountAll.
type Repo_fstabUnmountAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabUnmountAll_Params
	Results Repo_fstabUnmountAll_Results
}

// Repo_version holds the arguments for a server call to Repo.version.
type Repo_version struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_version_Params
	Results Repo_version_Results
}

// Repo_waitForInit holds the arguments for a server call to Repo.waitForInit.
type Repo_waitForInit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_waitForInit_Params
	Results Repo_waitForInit_Results
}

// Repo_gatewayUserAdd holds the arguments for a server call to Repo.gatewayUserAdd.
type Repo_gatewayUserAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserAdd_Params
	Results Repo_gatewayUserAdd_Results
}

// Repo_gatewayUserRm holds the arguments for a server call to Repo.gatewayUserRm.
type Repo_gatewayUserRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserRm_Params
	Results Repo_gatewayUserRm_Results
}

// Repo_gatewayUserList holds the arguments for a server call to Repo.gatewayUserList.
type Repo_gatewayUserList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserList_Params
	Results Repo_gatewayUserList_Results
}

type Repo_quit_Params struct{ capnp.Struct }

// Repo_quit_Params_TypeID is the unique identifier for the type Repo_quit_Params.
const Repo_quit_Params_TypeID = 0xaa98a78425cdd321

func NewRepo_quit_Params(s *capnp.Segment) (Repo_quit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Params{st}, err
}

func NewRootRepo_quit_Params(s *capnp.Segment) (Repo_quit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Params{st}, err
}

func ReadRootRepo_quit_Params(msg *capnp.Message) (Repo_quit_Params, error) {
	root, err := msg.RootPtr()
	return Repo_quit_Params{root.Struct()}, err
}

func (s Repo_quit_Params) String() string {
	str, _ := text.Marshal(0xaa98a78425cdd321, s.Struct)
	return str
}

// Repo_quit_Params_List is a list of Repo_quit_Params.
type Repo_quit_Params_List struct{ capnp.List }

// NewRepo_quit_Params creates a new list of Repo_quit_Params.
func NewRepo_quit_Params_List(s *capnp.Segment, sz int32) (Repo_quit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_quit_Params_List{l}, err
}

func (s Repo_quit_Params_List) At(i int) Repo_quit_Params { return Repo_quit_Params{s.List.Struct(i)} }

func (s Repo_quit_Params_List) Set(i int, v Repo_quit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_quit_Params_List) String() string {
	str, _ := text.MarshalList(0xaa98a78425cdd321, s.List)
	return str
}

// Repo_quit_Params_Promise is a wrapper for a Repo_quit_Params promised by a client call.
type Repo_quit_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_quit_Params_Promise) Struct() (Repo_quit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_quit_Params{s}, err
}

type Repo_quit_Results struct{ capnp.Struct }

// Repo_quit_Results_TypeID is the unique identifier for the type Repo_quit_Results.
const Repo_quit_Results_TypeID = 0x860c3dd5698349f5

func NewRepo_quit_Results(s *capnp.Segment) (Repo_quit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Results{st}, err
}

func NewRootRepo_quit_Results(s *capnp.Segment) (Repo_quit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Results{st}, err
}

func ReadRootRepo_quit_Results(msg *capnp.Message) (Repo_quit_Results, error) {
	root, err := msg.RootPtr()
	return Repo_quit_Results{root.Struct()}, err
}

func (s Repo_quit_Results) String() string {
	str, _ := text.Marshal(0x860c3dd5698349f5, s.Struct)
	return str
}

// Repo_quit_Results_List is a list of Repo_quit_Results.
type Repo_quit_Results_List struct{ capnp.List }

// NewRepo_quit_Results creates a new list of Repo_quit_Results.
func NewRepo_quit_Results_List(s *capnp.Segment, sz int32) (Repo_quit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_quit_Results_List{l}, err
}

func (s Repo_quit_Results_List) At(i int) Repo_quit_Results {
	return Repo_quit_Results{s.List.Struct(i)}
}

func (s Repo_quit_Results_List) Set(i int, v Repo_quit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_quit_Results_List) String() string {
	str, _ := text.MarshalList(0x860c3dd5698349f5, s.List)
	return str
}

// Repo_quit_Results_Promise is a wrapper for a Repo_quit_Results promised by a client call.
type Repo_quit_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_quit_Results_Promise) Struct() (Repo_quit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_quit_Results{s}, err
}

type Repo_ping_Params struct{ capnp.Struct }

// Repo_ping_Params_TypeID is the unique identifier for the type Repo_ping_Params.
const Repo_ping_Params_TypeID = 0x978c524c1a35015c

func NewRepo_ping_Params(s *capnp.Segment) (Repo_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_ping_Params{st}, err
}

func NewRootRepo_ping_Params(s *capnp.Segment) (Repo_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_ping_Params{st}, err
}

func ReadRootRepo_ping_Params(msg *capnp.Message) (Repo_ping_Params, error) {
	root, err := msg.RootPtr()
	return Repo_ping_Params{root.Struct()}, err
}

func (s Repo_ping_Params) String() string {
	str, _ := text.Marshal(0x978c524c1a35015c, s.Struct)
	return str
}

// Repo_ping_Params_List is a list of Repo_ping_Params.
type Repo_ping_Params_List struct{ capnp.List }

// NewRepo_ping_Params creates a new list of Repo_ping_Params.
func NewRepo_ping_Params_List(s *capnp.Segment, sz int32) (Repo_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_ping_Params_List{l}, err
}

func (s Repo_ping_Params_List) At(i int) Repo_ping_Params { return Repo_ping_Params{s.List.Struct(i)} }

func (s Repo_ping_Params_List) Set(i int, v Repo_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_ping_Params_List) String() string {
	str, _ := text.MarshalList(0x978c524c1a35015c, s.List)
	return str
}

// Repo_ping_Params_Promise is a wrapper for a Repo_ping_Params promised by a client call.
type Repo_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_ping_Params_Promise) Struct() (Repo_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_ping_Params{s}, err
}

type Repo_ping_Results struct{ capnp.Struct }

// Repo_ping_Results_TypeID is the unique identifier for the type Repo_ping_Results.
const Repo_ping_Results_TypeID = 0x9d64fa17798952ff

func NewRepo_ping_Results(s *capnp.Segment) (Repo_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_ping_Results{st}, err
}

func NewRootRepo_ping_Results(s *capnp.Segment) (Repo_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_ping_Results{st}, err
}

func ReadRootRepo_ping_Results(msg *capnp.Message) (Repo_ping_Results, error) {
	root, err := msg.RootPtr()
	return Repo_ping_Results{root.Struct()}, err
}

func (s Repo_ping_Results) String() string {
	str, _ := text.Marshal(0x9d64fa17798952ff, s.Struct)
	return str
}

func (s Repo_ping_Results) Reply() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_ping_Results) HasReply() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_ping_Results) ReplyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_ping_Results) SetReply(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_ping_Results_List is a list of Repo_ping_Results.
type Repo_ping_Results_List struct{ capnp.List }

// NewRepo_ping_Results creates a new list of Repo_ping_Results.
func NewRepo_ping_Results_List(s *capnp.Segment, sz int32) (Repo_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_ping_Results_List{l}, err
}

func (s Repo_ping_Results_List) At(i int) Repo_ping_Results {
	return Repo_ping_Results{s.List.Struct(i)}
}

func (s Repo_ping_Results_List) Set(i int, v Repo_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_ping_Results_List) String() string {
	str, _ := text.MarshalList(0x9d64fa17798952ff, s.List)
	return str
}

// Repo_ping_Results_Promise is a wrapper for a Repo_ping_Results promised by a client call.
type Repo_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_ping_Results_Promise) Struct() (Repo_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_ping_Results{s}, err
}

type Repo_init_Params struct{ capnp.Struct }

// Repo_init_Params_TypeID is the unique identifier for the type Repo_init_Params.
const Repo_init_Params_TypeID = 0x9c19777f493f1110

func NewRepo_init_Params(s *capnp.Segment) (Repo_init_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_init_Params{st}, err
}

func NewRootRepo_init_Params(s *capnp.Segment) (Repo_init_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_init_Params{st}, err
}

func ReadRootRepo_init_Params(msg *capnp.Message) (Repo_init_Params, error) {
	root, err := msg.RootPtr()
	return Repo_init_Params{root.Struct()}, err
}

func (s Repo_init_Params) String() string {
	str, _ := text.Marshal(0x9c19777f493f1110, s.Struct)
	return str
}

func (s Repo_init_Params) BasePath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_init_Params) HasBasePath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) BasePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetBasePath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_init_Params) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_init_Params) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_init_Params) Backend() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Repo_init_Params) HasBackend() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) BackendBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetBackend(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Repo_init_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Repo_init_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetPassword(v string) error {
	return s.Struct.SetText(3, v)
}

// Repo_init_Params_List is a list of Repo_init_Params.
type Repo_init_Params_List struct{ capnp.List }

// NewRepo_init_Params creates a new list of Repo_init_Params.
func NewRepo_init_Params_List(s *capnp.Segment, sz int32) (Repo_init_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Repo_init_Params_List{l}, err
}

func (s Repo_init_Params_List) At(i int) Repo_init_Params { return Repo_init_Params{s.List.Struct(i)} }

func (s Repo_init_Params_List) Set(i int, v Repo_init_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_init_Params_List) String() string {
	str, _ := text.MarshalList(0x9c19777f493f1110, s.List)
	return str
}

// Repo_init_Params_Promise is a wrapper for a Repo_init_Params promised by a client call.
type Repo_init_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_init_Params_Promise) Struct() (Repo_init_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_init_Params{s}, err
}

type Repo_init_Results struct{ capnp.Struct }

// Repo_init_Results_TypeID is the unique identifier for the type Repo_init_Results.
const Repo_init_Results_TypeID = 0xfc6b4417fdef895a

func NewRepo_init_Results(s *capnp.Segment) (Repo_init_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_init_Results{st}, err
}

func NewRootRepo_init_Results(s *capnp.Segment) (Repo_init_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_init_Results{st}, err
}

func ReadRootRepo_init_Results(msg *capnp.Message) (Repo_init_Results, error) {
	root, err := msg.RootPtr()
	return Repo_init_Results{root.Struct()}, err
}

func (s Repo_init_Results) String() string {
	str, _ := text.Marshal(0xfc6b4417fdef895a, s.Struct)
	return str
}

// Repo_init_Results_List is a list of Repo_init_Results.
type Repo_init_Results_List struct{ capnp.List }

// NewRepo_init_Results creates a new list of Repo_init_Results.
func NewRepo_init_Results_List(s *capnp.Segment, sz int32) (Repo_init_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_init_Results_List{l}, err
}

func (s Repo_init_Results_List) At(i int) Repo_init_Results {
	return Repo_init_Results{s.List.Struct(i)}
}

func (s Repo_init_Results_List) Set(i int, v Repo_init_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_init_Results_List) String() string {
	str, _ := text.MarshalList(0xfc6b4417fdef895a, s.List)
	return str
}

// Repo_init_Results_Promise is a wrapper for a Repo_init_Results promised by a client call.
type Repo_init_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_init_Results_Promise) Struct() (Repo_init_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_init_Results{s}, err
}

type Repo_mount_Params struct{ capnp.Struct }

// Repo_mount_Params_TypeID is the unique identifier for the type Repo_mount_Params.
const Repo_mount_Params_TypeID = 0x98300b93ef71cc57

func NewRepo_mount_Params(s *capnp.Segment) (Repo_mount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_mount_Params{st}, err
}

func NewRootRepo_mount_Params(s *capnp.Segment) (Repo_mount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_mount_Params{st}, err
}

func ReadRootRepo_mount_Params(msg *capnp.Message) (Repo_mount_Params, error) {
	root, err := msg.RootPtr()
	return Repo_mount_Params{root.Struct()}, err
}

func (s Repo_mount_Params) String() string {
	str, _ := text.Marshal(0x98300b93ef71cc57, s.Struct)
	return str
}

func (s Repo_mount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_mount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_mount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_mount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_mount_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(1)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Repo_mount_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_mount_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Repo_mount_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Repo_mount_Params_List is a list of Repo_mount_Params.
type Repo_mount_Params_List struct{ capnp.List }

// NewRepo_mount_Params creates a new list of Repo_mount_Params.
func NewRepo_mount_Params_List(s *capnp.Segment, sz int32) (Repo_mount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_mount_Params_List{l}, err
}

func (s Repo_mount_Params_List) At(i int) Repo_mount_Params {
	return Repo_mount_Params{s.List.Struct(i)}
}

func (s Repo_mount_Params_List) Set(i int, v Repo_mount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_mount_Params_List) String() string {
	str, _ := text.MarshalList(0x98300b93ef71cc57, s.List)
	return str
}

// Repo_mount_Params_Promise is a wrapper for a Repo_mount_Params promised by a client call.
type Repo_mount_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_mount_Params_Promise) Struct() (Repo_mount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_mount_Params{s}, err
}

func (p Repo_mount_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Repo_mount_Results struct{ capnp.Struct }

// Repo_mount_Results_TypeID is the unique identifier for the type Repo_mount_Results.
const Repo_mount_Results_TypeID = 0xfa4486fa9522275e

func NewRepo_mount_Results(s *capnp.Segment) (Repo_mount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_mount_Results{st}, err
}

func NewRootRepo_mount_Results(s *capnp.Segment) (Repo_mount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_mount_Results{st}, err
}

func ReadRootRepo_mount_Results(msg *capnp.Message) (Repo_mount_Results, error) {
	root, err := msg.RootPtr()
	return Repo_mount_Results{root.Struct()}, err
}

func (s Repo_mount_Results) String() string {
	str, _ := text.Marshal(0xfa4486fa9522275e, s.Struct)
	return str
}

// Repo_mount_Results_List is a list of Repo_mount_Results.
type Repo_mount_Results_List struct{ capnp.List }

// NewRepo_mount_Results creates a new list of Repo_mount_Results.
func NewRepo_mount_Results_List(s *capnp.Segment, sz int32) (Repo_mount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_mount_Results_List{l}, err
}

func (s Repo_mount_Results_List) At(i int) Repo_mount_Results {
	return Repo_mount_Results{s.List.Struct(i)}
}

func (s Repo_mount_Results_List) Set(i int, v Repo_mount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_mount_Results_List) String() string {
	str, _ := text.MarshalList(0xfa4486fa9522275e, s.List)
	return str
}

// Repo_mount_Results_Promise is a wrapper for a Repo_mount_Results promised by a client call.
type Repo_mount_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_mount_Results_Promise) Struct() (Repo_mount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_mount_Results{s}, err
}

type Repo_unmount_Params struct{ capnp.Struct }

// Repo_unmount_Params_TypeID is the unique identifier for the type Repo_unmount_Params.
const Repo_unmount_Params_TypeID = 0xd7a7f00d5a96fc43

func NewRepo_unmount_Params(s *capnp.Segment) (Repo_unmount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_unmount_Params{st}, err
}

func NewRootRepo_unmount_Params(s *capnp.Segment) (Repo_unmount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_unmount_Params{st}, err
}

func ReadRootRepo_unmount_Params(msg *capnp.Message) (Repo_unmount_Params, error) {
	root, err := msg.RootPtr()
	return Repo_unmount_Params{root.Struct()}, err
}

func (s Repo_unmount_Params) String() string {
	str, _ := text.Marshal(0xd7a7f00d5a96fc43, s.Struct)
	return str
}

func (s Repo_unmount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_unmount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_unmount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_unmount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_unmount_Params_List is a list of Repo_unmount_Params.
type Repo_unmount_Params_List struct{ capnp.List }

// NewRepo_unmount_Params creates a new list of Repo_unmount_Params.
func NewRepo_unmount_Params_List(s *capnp.Segment, sz int32) (Repo_unmount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_unmount_Params_List{l}, err
}

func (s Repo_unmount_Params_List) At(i int) Repo_unmount_Params {
	return Repo_unmount_Params{s.List.Struct(i)}
}

func (s Repo_unmount_Params_List) Set(i int, v Repo_unmount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_unmount_Params_List) String() string {
	str, _ := text.MarshalList(0xd7a7f00d5a96fc43, s.List)
	return str
}

// Repo_unmount_Params_Promise is a wrapper for a Repo_unmount_Params promised by a client call.
type Repo_unmount_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_unmount_Params_Promise) Struct() (Repo_unmount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_unmount_Params{s}, err
}

type Repo_unmount_Results struct{ capnp.Struct }

// Repo_unmount_Results_TypeID is the unique identifier for the type Repo_unmount_Results.
const Repo_unmount_Results_TypeID = 0xd70c154f9521b73d

func NewRepo_unmount_Results(s *capnp.Segment) (Repo_unmount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_unmount_Results{st}, err
}

func NewRootRepo_unmount_Results(s *capnp.Segment) (Repo_unmount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_unmount_Results{st}, err
}

func ReadRootRepo_unmount_Results(msg *capnp.Message) (Repo_unmount_Results, error) {
	root, err := msg.RootPtr()
	return Repo_unmount_Results{root.Struct()}, err
}

func (s Repo_unmount_Results) String() string {
	str, _ := text.Marshal(0xd70c154f9521b73d, s.Struct)
	return str
}

// Repo_unmount_Results_List is a list of Repo_unmount_Results.
type Repo_unmount_Results_List struct{ capnp.List }

// NewRepo_unmount_Results creates a new list of Repo_unmount_Results.
func NewRepo_unmount_Results_List(s *capnp.Segment, sz int32) (Repo_unmount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_unmount_Results_List{l}, err
}

func (s Repo_unmount_Results_List) At(i int) Repo_unmount_Results {
	return Repo_unmount_Results{s.List.Struct(i)}
}

func (s Repo_unmount_Results_List) Set(i int, v Repo_unmount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_unmount_Results_List) String() string {
	str, _ := text.MarshalList(0xd70c154f9521b73d, s.List)
	return str
}

// Repo_unmount_Results_Promise is a wrapper for a Repo_unmount_Results promised by a client call.
type Repo_unmount_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_unmount_Results_Promise) Struct() (Repo_unmount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_unmount_Results{s}, err
}

type Repo_configGet_Params struct{ capnp.Struct }

// Repo_configGet_Params_TypeID is the unique identifier for the type Repo_configGet_Params.
const Repo_configGet_Params_TypeID = 0xe0b1a560d0e4d51a

func NewRepo_configGet_Params(s *capnp.Segment) (Repo_configGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Params{st}, err
}

func NewRootRepo_configGet_Params(s *capnp.Segment) (Repo_configGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Params{st}, err
}

func ReadRootRepo_configGet_Params(msg *capnp.Message) (Repo_configGet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configGet_Params{root.Struct()}, err
}

func (s Repo_configGet_Params) String() string {
	str, _ := text.Marshal(0xe0b1a560d0e4d51a, s.Struct)
	return str
}

func (s Repo_configGet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configGet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configGet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configGet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configGet_Params_List is a list of Repo_configGet_Params.
type Repo_configGet_Params_List struct{ capnp.List }

// NewRepo_configGet_Params creates a new list of Repo_configGet_Params.
func NewRepo_configGet_Params_List(s *capnp.Segment, sz int32) (Repo_configGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configGet_Params_List{l}, err
}

func (s Repo_configGet_Params_List) At(i int) Repo_configGet_Params {
	return Repo_configGet_Params{s.List.Struct(i)}
}

func (s Repo_configGet_Params_List) Set(i int, v Repo_configGet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configGet_Params_List) String() string {
	str, _ := text.MarshalList(0xe0b1a560d0e4d51a, s.List)
	return str
}

// Repo_configGet_Params_Promise is a wrapper for a Repo_configGet_Params promised by a client call.
type Repo_configGet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configGet_Params_Promise) Struct() (Repo_configGet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configGet_Params{s}, err
}

type Repo_configGet_Results struct{ capnp.Struct }

// Repo_configGet_Results_TypeID is the unique identifier for the type Repo_configGet_Results.
const Repo_configGet_Results_TypeID = 0xabc3ec90b96a6d71

func NewRepo_configGet_Results(s *capnp.Segment) (Repo_configGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Results{st}, err
}

func NewRootRepo_configGet_Results(s *capnp.Segment) (Repo_configGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Results{st}, err
}

func ReadRootRepo_configGet_Results(msg *capnp.Message) (Repo_configGet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configGet_Results{root.Struct()}, err
}

func (s Repo_configGet_Results) String() string {
	str, _ := text.Marshal(0xabc3ec90b96a6d71, s.Struct)
	return str
}

func (s Repo_configGet_Results) Value() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configGet_Results) HasValue() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configGet_Results) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configGet_Results) SetValue(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configGet_Results_List is a list of Repo_configGet_Results.
type Repo_configGet_Results_List struct{ capnp.List }

// NewRepo_configGet_Results creates a new list of Repo_configGet_Results.
func NewRepo_configGet_Results_List(s *capnp.Segment, sz int32) (Repo_configGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configGet_Results_List{l}, err
}

func (s Repo_configGet_Results_List) At(i int) Repo_configGet_Results {
	return Repo_configGet_Results{s.List.Struct(i)}
}

func (s Repo_configGet_Results_List) Set(i int, v Repo_configGet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configGet_Results_List) String() string {
	str, _ := text.MarshalList(0xabc3ec90b96a6d71, s.List)
	return str
}

// Repo_configGet_Results_Promise is a wrapper for a Repo_configGet_Results promised by a client call.
type Repo_configGet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configGet_Results_Promise) Struct() (Repo_configGet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configGet_Results{s}, err
}

type Repo_configSet_Params struct{ capnp.Struct }

// Repo_configSet_Params_TypeID is the unique identifier for the type Repo_configSet_Params.
const Repo_configSet_Params_TypeID = 0xc0ad53271497ab77

func NewRepo_configSet_Params(s *capnp.Segment) (Repo_configSet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_configSet_Params{st}, err
}

func NewRootRepo_configSet_Params(s *capnp.Segment) (Repo_configSet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_configSet_Params{st}, err
}

func ReadRootRepo_configSet_Params(msg *capnp.Message) (Repo_configSet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configSet_Params{root.Struct()}, err
}

func (s Repo_configSet_Params) String() string {
	str, _ := text.Marshal(0xc0ad53271497ab77, s.Struct)
	return str
}

func (s Repo_configSet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configSet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configSet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configSet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_configSet_Params) Value() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_configSet_Params) HasValue() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_configSet_Params) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_configSet_Params) SetValue(v string) error {
	return s.Struct.SetText(1, v)
}

// Repo_configSet_Params_List is a list of Repo_configSet_Params.
type Repo_configSet_Params_List struct{ capnp.List }

// NewRepo_configSet_Params creates a new list of Repo_configSet_Params.
func NewRepo_configSet_Params_List(s *capnp.Segment, sz int32) (Repo_configSet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_configSet_Params_List{l}, err
}

func (s Repo_configSet_Params_List) At(i int) Repo_configSet_Params {
	return Repo_configSet_Params{s.List.Struct(i)}
}

func (s Repo_configSet_Params_List) Set(i int, v Repo_configSet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configSet_Params_List) String() string {
	str, _ := text.MarshalList(0xc0ad53271497ab77, s.List)
	return str
}

// Repo_configSet_Params_Promise is a wrapper for a Repo_configSet_Params promised by a client call.
type Repo_configSet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configSet_Params_Promise) Struct() (Repo_configSet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configSet_Params{s}, err
}

type Repo_configSet_Results struct{ capnp.Struct }

// Repo_configSet_Results_TypeID is the unique identifier for the type Repo_configSet_Results.
const Repo_configSet_Results_TypeID = 0xa89254a0db970716

func NewRepo_configSet_Results(s *capnp.Segment) (Repo_configSet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configSet_Results{st}, err
}

func NewRootRepo_configSet_Results(s *capnp.Segment) (Repo_configSet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configSet_Results{st}, err
}

func ReadRootRepo_configSet_Results(msg *capnp.Message) (Repo_configSet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configSet_Results{root.Struct()}, err
}

func (s Repo_configSet_Results) String() string {
	str, _ := text.Marshal(0xa89254a0db970716, s.Struct)
	return str
}

// Repo_configSet_Results_List is a list of Repo_configSet_Results.
type Repo_configSet_Results_List struct{ capnp.List }

// NewRepo_configSet_Results creates a new list of Repo_configSet_Results.
func NewRepo_configSet_Results_List(s *capnp.Segment, sz int32) (Repo_configSet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_configSet_Results_List{l}, err
}

func (s Repo_configSet_Results_List) At(i int) Repo_configSet_Results {
	return Repo_configSet_Results{s.List.Struct(i)}
}

func (s Repo_configSet_Results_List) Set(i int, v Repo_configSet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configSet_Results_List) String() string {
	str, _ := text.MarshalList(0xa89254a0db970716, s.List)
	return str
}

// Repo_configSet_Results_Promise is a wrapper for a Repo_configSet_Results promised by a client call.
type Repo_configSet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configSet_Results_Promise) Struct() (Repo_configSet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configSet_Results{s}, err
}

type Repo_configAll_Params struct{ capnp.Struct }

// Repo_configAll_Params_TypeID is the unique identifier for the type Repo_configAll_Params.
const Repo_configAll_Params_TypeID = 0xbebae5caecad3c49

func NewRepo_configAll_Params(s *capnp.Segment) (Repo_configAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configAll_Params{st}, err
}

func NewRootRepo_configAll_Params(s *capnp.Segment) (Repo_configAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configAll_Params{st}, err
}

func ReadRootRepo_configAll_Params(msg *capnp.Message) (Repo_configAll_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configAll_Params{root.Struct()}, err
}

func (s Repo_configAll_Params) String() string {
	str, _ := text.Marshal(0xbebae5caecad3c49, s.Struct)
	return str
}

// Repo_configAll_Params_List is a list of Repo_configAll_Params.
type Repo_configAll_Params_List struct{ capnp.List }

// NewRepo_configAll_Params creates a new list of Repo_configAll_Params.
func NewRepo_configAll_Params_List(s *capnp.Segment, sz int32) (Repo_configAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_configAll_Params_List{l}, err
}

func (s Repo_configAll_Params_List) At(i int) Repo_configAll_Params {
	return Repo_configAll_Params{s.List.Struct(i)}
}

func (s Repo_configAll_Params_List) Set(i int, v Repo_configAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configAll_Params_List) String() string {
	str, _ := text.MarshalList(0xbebae5caecad3c49, s.List)
	return str
}

// Repo_configAll_Params_Promise is a wrapper for a Repo_configAll_Params promised by a client call.
type Repo_configAll_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configAll_Params_Promise) Struct() (Repo_configAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configAll_Params{s}, err
}

type Repo_configAll_Results struct{ capnp.Struct }

// Repo_configAll_Results_TypeID is the unique identifier for the type Repo_configAll_Results.
const Repo_configAll_Results_TypeID = 0xacf50d40a9d3436a

func NewRepo_configAll_Results(s *capnp.Segment) (Repo_configAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configAll_Results{st}, err
}

func NewRootRepo_configAll_Results(s *capnp.Segment) (Repo_configAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configAll_Results{st}, err
}

func ReadRootRepo_configAll_Results(msg *capnp.Message) (Repo_configAll_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configAll_Results{root.Struct()}, err
}

func (s Repo_configAll_Results) String() string {
	str, _ := text.Marshal(0xacf50d40a9d3436a, s.Struct)
	return str
}

func (s Repo_configAll_Results) All() (ConfigEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry_List{List: p.List()}, err
}

func (s Repo_configAll_Results) HasAll() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configAll_Results) SetAll(v ConfigEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAll sets the all field to a newly
// allocated ConfigEntry_List, preferring placement in s's segment.
func (s Repo_configAll_Results) NewAll(n int32) (ConfigEntry_List, error) {
	l, err := NewConfigEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return ConfigEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_configAll_Results_List is a list of Repo_configAll_Results.
type Repo_configAll_Results_List struct{ capnp.List }

// NewRepo_configAll_Results creates a new list of Repo_configAll_Results.
func NewRepo_configAll_Results_List(s *capnp.Segment, sz int32) (Repo_configAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configAll_Results_List{l}, err
}

func (s Repo_configAll_Results_List) At(i int) Repo_configAll_Results {
	return Repo_configAll_Results{s.List.Struct(i)}
}

func (s Repo_configAll_Results_List) Set(i int, v Repo_configAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configAll_Results_List) String() string {
	str, _ := text.MarshalList(0xacf50d40a9d3436a, s.List)
	return str
}

// Repo_configAll_Results_Promise is a wrapper for a Repo_configAll_Results promised by a client call.
type Repo_configAll_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configAll_Results_Promise) Struct() (Repo_configAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configAll_Results{s}, err
}

type Repo_configDoc_Params struct{ capnp.Struct }

// Repo_configDoc_Params_TypeID is the unique identifier for the type Repo_configDoc_Params.
const Repo_configDoc_Params_TypeID = 0x9b96e8c9be077989

func NewRepo_configDoc_Params(s *capnp.Segment) (Repo_configDoc_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Params{st}, err
}

func NewRootRepo_configDoc_Params(s *capnp.Segment) (Repo_configDoc_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Params{st}, err
}

func ReadRootRepo_configDoc_Params(msg *capnp.Message) (Repo_configDoc_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configDoc_Params{root.Struct()}, err
}

func (s Repo_configDoc_Params) String() string {
	str, _ := text.Marshal(0x9b96e8c9be077989, s.Struct)
	return str
}

func (s Repo_configDoc_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configDoc_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configDoc_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configDoc_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configDoc_Params_List is a list of Repo_configDoc_Params.
type Repo_configDoc_Params_List struct{ capnp.List }

// NewRepo_configDoc_Params creates a new list of Repo_configDoc_Params.
func NewRepo_configDoc_Params_List(s *capnp.Segment, sz int32) (Repo_configDoc_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configDoc_Params_List{l}, err
}

func (s Repo_configDoc_Params_List) At(i int) Repo_configDoc_Params {
	return Repo_configDoc_Params{s.List.Struct(i)}
}

func (s Repo_configDoc_Params_List) Set(i int, v Repo_configDoc_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configDoc_Params_List) String() string {
	str, _ := text.MarshalList(0x9b96e8c9be077989, s.List)
	return str
}

// Repo_configDoc_Params_Promise is a wrapper for a Repo_configDoc_Params promised by a client call.
type Repo_configDoc_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configDoc_Params_Promise) Struct() (Repo_configDoc_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configDoc_Params{s}, err
}

type Repo_configDoc_Results struct{ capnp.Struct }

// Repo_configDoc_Results_TypeID is the unique identifier for the type Repo_configDoc_Results.
const Repo_configDoc_Results_TypeID = 0xa34213f24153536b

func NewRepo_configDoc_Results(s *capnp.Segment) (Repo_configDoc_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Results{st}, err
}

func NewRootRepo_configDoc_Results(s *capnp.Segment) (Repo_configDoc_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Results{st}, err
}

func ReadRootRepo_configDoc_Results(msg *capnp.Message) (Repo_configDoc_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configDoc_Results{root.Struct()}, err
}

func (s Repo_configDoc_Results) String() string {
	str, _ := text.Marshal(0xa34213f24153536b, s.Struct)
	return str
}

func (s Repo_configDoc_Results) Desc() (ConfigEntry, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry{Struct: p.Struct()}, err
}

func (s Repo_configDoc_Results) HasDesc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configDoc_Results) SetDesc(v ConfigEntry) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDesc sets the desc field to a newly
// allocated ConfigEntry struct, preferring placement in s's segment.
func (s Repo_configDoc_Results) NewDesc() (ConfigEntry, error) {
	ss, err := NewConfigEntry(s.Struct.Segment())
	if err != nil {
		return ConfigEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Repo_configDoc_Results_List is a list of Repo_configDoc_Results.
type Repo_configDoc_Results_List struct{ capnp.List }

// NewRepo_configDoc_Results creates a new list of Repo_configDoc_Results.
func NewRepo_configDoc_Results_List(s *capnp.Segment, sz int32) (Repo_configDoc_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configDoc_Results_List{l}, err
}

func (s Repo_configDoc_Results_List) At(i int) Repo_configDoc_Results {
	return Repo_configDoc_Results{s.List.Struct(i)}
}

func (s Repo_configDoc_Results_List) Set(i int, v Repo_configDoc_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configDoc_Results_List) String() string {
	str, _ := text.MarshalList(0xa34213f24153536b, s.List)
	return str
}

// Repo_configDoc_Results_Promise is a wrapper for a Repo_configDoc_Results promised by a client call.
type Repo_configDoc_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configDoc_Results_Promise) Struct() (Repo_configDoc_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configDoc_Results{s}, err
}

func (p Repo_configDoc_Results_Promise) Desc() ConfigEntry_Promise {
	return ConfigEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo_become_Params struct{ capnp.Struct }

// Repo_become_Params_TypeID is the unique identifier for the type Repo_become_Params.
const Repo_become_Params_TypeID = 0xe75c9c74c2bacb82

func NewRepo_become_Params(s *capnp.Segment) (Repo_become_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_become_Params{st}, err
}

func NewRootRepo_become_Params(s *capnp.Segment) (Repo_become_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_become_Params{st}, err
}

func ReadRootRepo_become_Params(msg *capnp.Message) (Repo_become_Params, error) {
	root, err := msg.RootPtr()
	return Repo_become_Params{root.Struct()}, err
}

func (s Repo_become_Params) String() string {
	str, _ := text.Marshal(0xe75c9c74c2bacb82, s.Struct)
	return str
}

func (s Repo_become_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_become_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_become_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_become_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_become_Params_List is a list of Repo_become_Params.
type Repo_become_Params_List struct{ capnp.List }

// NewRepo_become_Params creates a new list of Repo_become_Params.
func NewRepo_become_Params_List(s *capnp.Segment, sz int32) (Repo_become_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_become_Params_List{l}, err
}

func (s Repo_become_Params_List) At(i int) Repo_become_Params {
	return Repo_become_Params{s.List.Struct(i)}
}

func (s Repo_become_Params_List) Set(i int, v Repo_become_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_become_Params_List) String() string {
	str, _ := text.MarshalList(0xe75c9c74c2bacb82, s.List)
	return str
}

// Repo_become_Params_Promise is a wrapper for a Repo_become_Params promised by a client call.
type Repo_become_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_become_Params_Promise) Struct() (Repo_become_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_become_Params{s}, err
}

type Repo_become_Results struct{ capnp.Struct }

// Repo_become_Results_TypeID is the unique identifier for the type Repo_become_Results.
const Repo_become_Results_TypeID = 0xeadaf2b11fded490

func NewRepo_become_Results(s *capnp.Segment) (Repo_become_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_become_Results{st}, err
}

func NewRootRepo_become_Results(s *capnp.Segment) (Repo_become_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_become_Results{st}, err
}

func ReadRootRepo_become_Results(msg *capnp.Message) (Repo_become_Results, error) {
	root, err := msg.RootPtr()
	return Repo_become_Results{root.Struct()}, err
}

func (s Repo_become_Results) String() string {
	str, _ := text.Marshal(0xeadaf2b11fded490, s.Struct)
	return str
}

// Repo_become_Results_List is a list of Repo_become_Results.
type Repo_become_Results_List struct{ capnp.List }

// NewRepo_become_Results creates a new list of Repo_become_Results.
func NewRepo_become_Results_List(s *capnp.Segment, sz int32) (Repo_become_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_become_Results_List{l}, err
}

func (s Repo_become_Results_List) At(i int) Repo_become_Results {
	return Repo_become_Results{s.List.Struct(i)}
}

func (s Repo_become_Results_List) Set(i int, v Repo_become_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_become_Results_List) String() string {
	str, _ := text.MarshalList(0xeadaf2b11fded490, s.List)
	return str
}

// Repo_become_Results_Promise is a wrapper for a Repo_become_Results promised by a client call.
type Repo_become_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_become_Results_Promise) Struct() (Repo_become_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_become_Results{s}, err
}

type Repo_fstabAdd_Params struct{ capnp.Struct }

// Repo_fstabAdd_Params_TypeID is the unique identifier for the type Repo_fstabAdd_Params.
const Repo_fstabAdd_Params_TypeID = 0xd1afceb8146949d4

func NewRepo_fstabAdd_Params(s *capnp.Segment) (Repo_fstabAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Repo_fstabAdd_Params{st}, err
}

func NewRootRepo_fstabAdd_Params(s *capnp.Segment) (Repo_fstabAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Repo_fstabAdd_Params{st}, err
}

func ReadRootRepo_fstabAdd_Params(msg *capnp.Message) (Repo_fstabAdd_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabAdd_Params{root.Struct()}, err
}

func (s Repo_fstabAdd_Params) String() string {
	str, _ := text.Marshal(0xd1afceb8146949d4, s.Struct)
	return str
}

func (s Repo_fstabAdd_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_fstabAdd_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_fstabAdd_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_fstabAdd_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_fstabAdd_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_fstabAdd_Params) SetMountPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_fstabAdd_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(2)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Repo_fstabAdd_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Repo_fstabAdd_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// Repo_fstabAdd_Params_List is a list of Repo_fstabAdd_Params.
type Repo_fstabAdd_Params_List struct{ capnp.List }

// NewRepo_fstabAdd_Params creates a new list of Repo_fstabAdd_Params.
func NewRepo_fstabAdd_Params_List(s *capnp.Segment, sz int32) (Repo_fstabAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Repo_fstabAdd_Params_List{l}, err
}

func (s Repo_fstabAdd_Params_List) At(i int) Repo_fstabAdd_Params {
	return Repo_fstabAdd_Params{s.List.Struct(i)}
}

func (s Repo_fstabAdd_Params_List) Set(i int, v Repo_fstabAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xd1afceb8146949d4, s.List)
	return str
}

// Repo_fstabAdd_Params_Promise is a wrapper for a Repo_fstabAdd_Params promised by a client call.
type Repo_fstabAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabAdd_Params_Promise) Struct() (Repo_fstabAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabAdd_Params{s}, err
}

func (p Repo_fstabAdd_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

type Repo_fstabAdd_Results struct{ capnp.Struct }

// Repo_fstabAdd_Results_TypeID is the unique identifier for the type Repo_fstabAdd_Results.
const Repo_fstabAdd_Results_TypeID = 0xbb83332a93ffdcad

func NewRepo_fstabAdd_Results(s *capnp.Segment) (Repo_fstabAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabAdd_Results{st}, err
}

func NewRootRepo_fstabAdd_Results(s *capnp.Segment) (Repo_fstabAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabAdd_Results{st}, err
}

func ReadRootRepo_fstabAdd_Results(msg *capnp.Message) (Repo_fstabAdd_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabAdd_Results{root.Struct()}, err
}

func (s Repo_fstabAdd_Results) String() string {
	str, _ := text.Marshal(0xbb83332a93ffdcad, s.Struct)
	return str
}

// Repo_fstabAdd_Results_List is a list of Repo_fstabAdd_Results.
type Repo_fstabAdd_Results_List struct{ capnp.List }

// NewRepo_fstabAdd_Results creates a new list of Repo_fstabAdd_Results.
func NewRepo_fstabAdd_Results_List(s *capnp.Segment, sz int32) (Repo_fstabAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabAdd_Results_List{l}, err
}

func (s Repo_fstabAdd_Results_List) At(i int) Repo_fstabAdd_Results {
	return Repo_fstabAdd_Results{s.List.Struct(i)}
}

func (s Repo_fstabAdd_Results_List) Set(i int, v Repo_fstabAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xbb83332a93ffdcad, s.List)
	return str
}

// Repo_fstabAdd_Results_Promise is a wrapper for a Repo_fstabAdd_Results promised by a client call.
type Repo_fstabAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabAdd_Results_Promise) Struct() (Repo_fstabAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabAdd_Results{s}, err
}

type Repo_fstabRemove_Params struct{ capnp.Struct }

// Repo_fstabRemove_Params_TypeID is the unique identifier for the type Repo_fstabRemove_Params.
const Repo_fstabRemove_Params_TypeID = 0x86d95afae10f0893

func NewRepo_fstabRemove_Params(s *capnp.Segment) (Repo_fstabRemove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabRemove_Params{st}, err
}

func NewRootRepo_fstabRemove_Params(s *capnp.Segment) (Repo_fstabRemove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabRemove_Params{st}, err
}

func ReadRootRepo_fstabRemove_Params(msg *capnp.Message) (Repo_fstabRemove_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabRemove_Params{root.Struct()}, err
}

func (s Repo_fstabRemove_Params) String() string {
	str, _ := text.Marshal(0x86d95afae10f0893, s.Struct)
	return str
}

func (s Repo_fstabRemove_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_fstabRemove_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabRemove_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_fstabRemove_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_fstabRemove_Params_List is a list of Repo_fstabRemove_Params.
type Repo_fstabRemove_Params_List struct{ capnp.List }

// NewRepo_fstabRemove_Params creates a new list of Repo_fstabRemove_Params.
func NewRepo_fstabRemove_Params_List(s *capnp.Segment, sz int32) (Repo_fstabRemove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_fstabRemove_Params_List{l}, err
}

func (s Repo_fstabRemove_Params_List) At(i int) Repo_fstabRemove_Params {
	return Repo_fstabRemove_Params{s.List.Struct(i)}
}

func (s Repo_fstabRemove_Params_List) Set(i int, v Repo_fstabRemove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabRemove_Params_List) String() string {
	str, _ := text.MarshalList(0x86d95afae10f0893, s.List)
	return str
}

// Repo_fstabRemove_Params_Promise is a wrapper for a Repo_fstabRemove_Params promised by a client call.
type Repo_fstabRemove_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabRemove_Params_Promise) Struct() (Repo_fstabRemove_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabRemove_Params{s}, err
}

type Repo_fstabRemove_Results struct{ capnp.Struct }

// Repo_fstabRemove_Results_TypeID is the unique identifier for the type Repo_fstabRemove_Results.
const Repo_fstabRemove_Results_TypeID = 0xc3fcefc580775485

func NewRepo_fstabRemove_Results(s *capnp.Segment) (Repo_fstabRemove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabRemove_Results{st}, err
}

func NewRootRepo_fstabRemove_Results(s *capnp.Segment) (Repo_fstabRemove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabRemove_Results{st}, err
}

func ReadRootRepo_fstabRemove_Results(msg *capnp.Message) (Repo_fstabRemove_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabRemove_Results{root.Struct()}, err
}

func (s Repo_fstabRemove_Results) String() string {
	str, _ := text.Marshal(0xc3fcefc580775485, s.Struct)
	return str
}

// Repo_fstabRemove_Results_List is a list of Repo_fstabRemove_Results.
type Repo_fstabRemove_Results_List struct{ capnp.List }

// NewRepo_fstabRemove_Results creates a new list of Repo_fstabRemove_Results.
func NewRepo_fstabRemove_Results_List(s *capnp.Segment, sz int32) (Repo_fstabRemove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabRemove_Results_List{l}, err
}

func (s Repo_fstabRemove_Results_List) At(i int) Repo_fstabRemove_Results {
	return Repo_fstabRemove_Results{s.List.Struct(i)}
}

func (s Repo_fstabRemove_Results_List) Set(i int, v Repo_fstabRemove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabRemove_Results_List) String() string {
	str, _ := text.MarshalList(0xc3fcefc580775485, s.List)
	return str
}

// Repo_fstabRemove_Results_Promise is a wrapper for a Repo_fstabRemove_Results promised by a client call.
type Repo_fstabRemove_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabRemove_Results_Promise) Struct() (Repo_fstabRemove_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabRemove_Results{s}, err
}

type Repo_fstabApply_Params struct{ capnp.Struct }

// Repo_fstabApply_Params_TypeID is the unique identifier for the type Repo_fstabApply_Params.
const Repo_fstabApply_Params_TypeID = 0xc7e5f661ac57ebb2

func NewRepo_fstabApply_Params(s *capnp.Segment) (Repo_fstabApply_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Params{st}, err
}

func NewRootRepo_fstabApply_Params(s *capnp.Segment) (Repo_fstabApply_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Params{st}, err
}

func ReadRootRepo_fstabApply_Params(msg *capnp.Message) (Repo_fstabApply_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabApply_Params{root.Struct()}, err
}

func (s Repo_fstabApply_Params) String() string {
	str, _ := text.Marshal(0xc7e5f661ac57ebb2, s.Struct)
	return str
}

// Repo_fstabApply_Params_List is a list of Repo_fstabApply_Params.
type Repo_fstabApply_Params_List struct{ capnp.List }

// NewRepo_fstabApply_Params creates a new list of Repo_fstabApply_Params.
func NewRepo_fstabApply_Params_List(s *capnp.Segment, sz int32) (Repo_fstabApply_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabApply_Params_List{l}, err
}

func (s Repo_fstabApply_Params_List) At(i int) Repo_fstabApply_Params {
	return Repo_fstabApply_Params{s.List.Struct(i)}
}

func (s Repo_fstabApply_Params_List) Set(i int, v Repo_fstabApply_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabApply_Params_List) String() string {
	str, _ := text.MarshalList(0xc7e5f661ac57ebb2, s.List)
	return str
}

// Repo_fstabApply_Params_Promise is a wrapper for a Repo_fstabApply_Params promised by a client call.
type Repo_fstabApply_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabApply_Params_Promise) Struct() (Repo_fstabApply_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabApply_Params{s}, err
}

type Repo_fstabApply_Results struct{ capnp.Struct }

// Repo_fstabApply_Results_TypeID is the unique identifier for the type Repo_fstabApply_Results.
const Repo_fstabApply_Results_TypeID = 0xb5bf271ecf3bc074

func NewRepo_fstabApply_Results(s *capnp.Segment) (Repo_fstabApply_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Results{st}, err
}

func NewRootRepo_fstabApply_Results(s *capnp.Segment) (Repo_fstabApply_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Results{st}, err
}

func ReadRootRepo_fstabApply_Results(msg *capnp.Message) (Repo_fstabApply_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabApply_Results{root.Struct()}, err
}

func (s Repo_fstabApply_Results) String() string {
	str, _ := text.Marshal(0xb5bf271ecf3bc074, s.Struct)
	return str
}

// Repo_fstabApply_Results_List is a list of Repo_fstabApply_Results.
type Repo_fstabApply_Results_List struct{ capnp.List }

// NewRepo_fstabApply_Results creates a new list of Repo_fstabApply_Results.
func NewRepo_fstabApply_Results_List(s *capnp.Segment, sz int32) (Repo_fstabApply_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabApply_Results_List{l}, err
}

func (s Repo_fstabApply_Results_List) At(i int) Repo_fstabApply_Results {
	return Repo_fstabApply_Results{s.List.Struct(i)}
}

func (s Repo_fstabApply_Results_List) Set(i int, v Repo_fstabApply_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabApply_Results_List) String() string {
	str, _ := text.MarshalList(0xb5bf271ecf3bc074, s.List)
	return str
}

// Repo_fstabApply_Results_Promise is a wrapper for a Repo_fstabApply_Results promised by a client call.
type Repo_fstabApply_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabApply_Results_Promise) Struct() (Repo_fstabApply_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabApply_Results{s}, err
}

type Repo_fstabList_Params struct{ capnp.Struct }

// Repo_fstabList_Params_TypeID is the unique identifier for the type Repo_fstabList_Params.
const Repo_fstabList_Params_TypeID = 0xd7315a3b3f92aa4a

func NewRepo_fstabList_Params(s *capnp.Segment) (Repo_fstabList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabList_Params{st}, err
}

func NewRootRepo_fstabList_Params(s *capnp.Segment) (Repo_fstabList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabList_Params{st}, err
}

func ReadRootRepo_fstabList_Params(msg *capnp.Message) (Repo_fstabList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabList_Params{root.Struct()}, err
}

func (s Repo_fstabList_Params) String() string {
	str, _ := text.Marshal(0xd7315a3b3f92aa4a, s.Struct)
	return str
}

// Repo_fstabList_Params_List is a list of Repo_fstabList_Params.
type Repo_fstabList_Params_List struct{ capnp.List }

// NewRepo_fstabList_Params creates a new list of Repo_fstabList_Params.
func NewRepo_fstabList_Params_List(s *capnp.Segment, sz int32) (Repo_fstabList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabList_Params_List{l}, err
}

func (s Repo_fstabList_Params_List) At(i int) Repo_fstabList_Params {
	return Repo_fstabList_Params{s.List.Struct(i)}
}

func (s Repo_fstabList_Params_List) Set(i int, v Repo_fstabList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabList_Params_List) String() string {
	str, _ := text.MarshalList(0xd7315a3b3f92aa4a, s.List)
	return str
}

// Repo_fstabList_Params_Promise is a wrapper for a Repo_fstabList_Params promised by a client call.
type Repo_fstabList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabList_Params_Promise) Struct() (Repo_fstabList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabList_Params{s}, err
}

type Repo_fstabList_Results struct{ capnp.Struct }

// Repo_fstabList_Results_TypeID is the unique identifier for the type Repo_fstabList_Results.
const Repo_fstabList_Results_TypeID = 0xc44d12b3aee49f34

func NewRepo_fstabList_Results(s *capnp.Segment) (Repo_fstabList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabList_Results{st}, err
}

func NewRootRepo_fstabList_Results(s *capnp.Segment) (Repo_fstabList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabList_Results{st}, err
}

func ReadRootRepo_fstabList_Results(msg *capnp.Message) (Repo_fstabList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabList_Results{root.Struct()}, err
}

func (s Repo_fstabList_Results) String() string {
	str, _ := text.Marshal(0xc44d12b3aee49f34, s.Struct)
	return str
}

func (s Repo_fstabList_Results) Mounts() (FsTabEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FsTabEntry_List{List: p.List()}, err
}

func (s Repo_fstabList_Results) HasMounts() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabList_Results) SetMounts(v FsTabEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMounts sets the mounts field to a newly
// allocated FsTabEntry_List, preferring placement in s's segment.
func (s Repo_fstabList_Results) NewMounts(n int32) (FsTabEntry_List, error) {
	l, err := NewFsTabEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return FsTabEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_fstabList_Results_List is a list of Repo_fstabList_Results.
type Repo_fstabList_Results_List struct{ capnp.List }

// NewRepo_fstabList_Results creates a new list of Repo_fstabList_Results.
func NewRepo_fstabList_Results_List(s *capnp.Segment, sz int32) (Repo_fstabList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_fstabList_Results_List{l}, err
}

func (s Repo_fstabList_Results_List) At(i int) Repo_fstabList_Results {
	return Repo_fstabList_Results{s.List.Struct(i)}
}

func (s Repo_fstabList_Results_List) Set(i int, v Repo_fstabList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabList_Results_List) String() string {
	str, _ := text.MarshalList(0xc44d12b3aee49f34, s.List)
	return str
}

// Repo_fstabList_Results_Promise is a wrapper for a Repo_fstabList_Results promised by a client call.
type Repo_fstabList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabList_Results_Promise) Struct() (Repo_fstabList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabList_Results{s}, err
}

type Repo_fstabUnmountAll_Params struct{ capnp.Struct }

// Repo_fstabUnmountAll_Params_TypeID is the unique identifier for the type Repo_fstabUnmountAll_Params.
const Repo_fstabUnmountAll_Params_TypeID = 0xbbec523e9fc1abfc

func NewRepo_fstabUnmountAll_Params(s *capnp.Segment) (Repo_fstabUnmountAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Params{st}, err
}

func NewRootRepo_fstabUnmountAll_Params(s *capnp.Segment) (Repo_fstabUnmountAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Params{st}, err
}

func ReadRootRepo_fstabUnmountAll_Params(msg *capnp.Message) (Repo_fstabUnmountAll_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabUnmountAll_Params{root.Struct()}, err
}

func (s Repo_fstabUnmountAll_Params) String() string {
	str, _ := text.Marshal(0xbbec523e9fc1abfc, s.Struct)
	return str
}

// Repo_fstabUnmountAll_Params_List is a list of Repo_fstabUnmountAll_Params.
type Repo_fstabUnmountAll_Params_List struct{ capnp.List }

// NewRepo_fstabUnmountAll_Params creates a new list of Repo_fstabUnmountAll_Params.
func NewRepo_fstabUnmountAll_Params_List(s *capnp.Segment, sz int32) (Repo_fstabUnmountAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabUnmountAll_Params_List{l}, err
}

func (s Repo_fstabUnmountAll_Params_List) At(i int) Repo_fstabUnmountAll_Params {
	return Repo_fstabUnmountAll_Params{s.List.Struct(i)}
}

func (s Repo_fstabUnmountAll_Params_List) Set(i int, v Repo_fstabUnmountAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabUnmountAll_Params_List) String() string {
	str, _ := text.MarshalList(0xbbec523e9fc1abfc, s.List)
	return str
}

// Repo_fstabUnmountAll_Params_Promise is a wrapper for a Repo_fstabUnmountAll_Params promised by a client call.
type Repo_fstabUnmountAll_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabUnmountAll_Params_Promise) Struct() (Repo_fstabUnmountAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabUnmountAll_Params{s}, err
}

type Repo_fstabUnmountAll_Results struct{ capnp.Struct }

// Repo_fstabUnmountAll_Results_TypeID is the unique identifier for the type Repo_fstabUnmountAll_Results.
const Repo_fstabUnmountAll_Results_TypeID = 0x8ae5aae9653b7b02

func NewRepo_fstabUnmountAll_Results(s *capnp.Segment) (Repo_fstabUnmountAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Results{st}, err
}

func NewRootRepo_fstabUnmountAll_Results(s *capnp.Segment) (Repo_fstabUnmountAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Results{st}, err
}

func ReadRootRepo_fstabUnmountAll_Results(msg *capnp.Message) (Repo_fstabUnmountAll_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabUnmountAll_Results{root.Struct()}, err
}

func (s Repo_fstabUnmountAll_Results) String() string {
	str, _ := text.Marshal(0x8ae5aae9653b7b02, s.Struct)
	return str
}

// Repo_fstabUnmountAll_Results_List is a list of Repo_fstabUnmountAll_Results.
type Repo_fstabUnmountAll_Results_List struct{ capnp.List }

// NewRepo_fstabUnmountAll_Results creates a new list of Repo_fstabUnmountAll_Results.
func NewRepo_fstabUnmountAll_Results_List(s *capnp.Segment, sz int32) (Repo_fstabUnmountAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabUnmountAll_Results_List{l}, err
}

func (s Repo_fstabUnmountAll_Results_List) At(i int) Repo_fstabUnmountAll_Results {
	return Repo_fstabUnmountAll_Results{s.List.Struct(i)}
}

func (s Repo_fstabUnmountAll_Results_List) Set(i int, v Repo_fstabUnmountAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabUnmountAll_Results_List) String() string {
	str, _ := text.MarshalList(0x8ae5aae9653b7b02, s.List)
	return str
}

// Repo_fstabUnmountAll_Results_Promise is a wrapper for a Repo_fstabUnmountAll_Results promised by a client call.
type Repo_fstabUnmountAll_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabUnmountAll_Results_Promise) Struct() (Repo_fstabUnmountAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabUnmountAll_Results{s}, err
}

type Repo_version_Params struct{ capnp.Struct }

// Repo_version_Params_TypeID is the unique identifier for the type Repo_version_Params.
const Repo_version_Params_TypeID = 0x98eadc167523156e

func NewRepo_version_Params(s *capnp.Segment) (Repo_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_version_Params{st}, err
}

func NewRootRepo_version_Params(s *capnp.Segment) (Repo_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_version_Params{st}, err
}

func ReadRootRepo_version_Params(msg *capnp.Message) (Repo_version_Params, error) {
	root, err := msg.RootPtr()
	return Repo_version_Params{root.Struct()}, err
}

func (s Repo_version_Params) String() string {
	str, _ := text.Marshal(0x98eadc167523156e, s.Struct)
	return str
}

// Repo_version_Params_List is a list of Repo_version_Params.
type Repo_version_Params_List struct{ capnp.List }

// NewRepo_version_Params creates a new list of Repo_version_Params.
func NewRepo_version_Params_List(s *capnp.Segment, sz int32) (Repo_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_version_Params_List{l}, err
}

func (s Repo_version_Params_List) At(i int) Repo_version_Params {
	return Repo_version_Params{s.List.Struct(i)}
}

func (s Repo_version_Params_List) Set(i int, v Repo_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_version_Params_List) String() string {
	str, _ := text.MarshalList(0x98eadc167523156e, s.List)
	return str
}

// Repo_version_Params_Promise is a wrapper for a Repo_version_Params promised by a client call.
type Repo_version_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_version_Params_Promise) Struct() (Repo_version_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_version_Params{s}, err
}

type Repo_version_Results struct{ capnp.Struct }

// Repo_version_Results_TypeID is the unique identifier for the type Repo_version_Results.
const Repo_version_Results_TypeID = 0xafe329bc8cad8f74

func NewRepo_version_Results(s *capnp.Segment) (Repo_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_version_Results{st}, err
}

func NewRootRepo_version_Results(s *capnp.Segment) (Repo_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_version_Results{st}, err
}

func ReadRootRepo_version_Results(msg *capnp.Message) (Repo_version_Results, error) {
	root, err := msg.RootPtr()
	return Repo_version_Results{root.Struct()}, err
}

func (s Repo_version_Results) String() string {
	str, _ := text.Marshal(0xafe329bc8cad8f74, s.Struct)
	return str
}

func (s Repo_version_Results) Version() (Version, error) {
	p, err := s.Struct.Ptr(0)
	return Version{Struct: p.Struct()}, err
}

func (s Repo_version_Results) HasVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_version_Results) SetVersion(v Version) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVersion sets the version field to a newly
// allocated Version struct, preferring placement in s's segment.
func (s Repo_version_Results) NewVersion() (Version, error) {
	ss, err := NewVersion(s.Struct.Segment())
	if err != nil {
		return Version{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Repo_version_Results_List is a list of Repo_version_Results.
type Repo_version_Results_List struct{ capnp.List }

// NewRepo_version_Results creates a new list of Repo_version_Results.
func NewRepo_version_Results_List(s *capnp.Segment, sz int32) (Repo_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_version_Results_List{l}, err
}

func (s Repo_version_Results_List) At(i int) Repo_version_Results {
	return Repo_version_Results{s.List.Struct(i)}
}

func (s Repo_version_Results_List) Set(i int, v Repo_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_version_Results_List) String() string {
	str, _ := text.MarshalList(0xafe329bc8cad8f74, s.List)
	return str
}

// Repo_version_Results_Promise is a wrapper for a Repo_version_Results promised by a client call.
type Repo_version_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_version_Results_Promise) Struct() (Repo_version_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_version_Results{s}, err
}

func (p Repo_version_Results_Promise) Version() Version_Promise {
	return Version_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo_waitForInit_Params struct{ capnp.Struct }

// Repo_waitForInit_Params_TypeID is the unique identifier for the type Repo_waitForInit_Params.
const Repo_waitForInit_Params_TypeID = 0xac8fbc382ae513de

func NewRepo_waitForInit_Params(s *capnp.Segment) (Repo_waitForInit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Params{st}, err
}

func NewRootRepo_waitForInit_Params(s *capnp.Segment) (Repo_waitForInit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Params{st}, err
}

func ReadRootRepo_waitForInit_Params(msg *capnp.Message) (Repo_waitForInit_Params, error) {
	root, err := msg.RootPtr()
	return Repo_waitForInit_Params{root.Struct()}, err
}

func (s Repo_waitForInit_Params) String() string {
	str, _ := text.Marshal(0xac8fbc382ae513de, s.Struct)
	return str
}

// Repo_waitForInit_Params_List is a list of Repo_waitForInit_Params.
type Repo_waitForInit_Params_List struct{ capnp.List }

// NewRepo_waitForInit_Params creates a new list of Repo_waitForInit_Params.
func NewRepo_waitForInit_Params_List(s *capnp.Segment, sz int32) (Repo_waitForInit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_waitForInit_Params_List{l}, err
}

func (s Repo_waitForInit_Params_List) At(i int) Repo_waitForInit_Params {
	return Repo_waitForInit_Params{s.List.Struct(i)}
}

func (s Repo_waitForInit_Params_List) Set(i int, v Repo_waitForInit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_waitForInit_Params_List) String() string {
	str, _ := text.MarshalList(0xac8fbc382ae513de, s.List)
	return str
}

// Repo_waitForInit_Params_Promise is a wrapper for a Repo_waitForInit_Params promised by a client call.
type Repo_waitForInit_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_waitForInit_Params_Promise) Struct() (Repo_waitForInit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_waitForInit_Params{s}, err
}

type Repo_waitForInit_Results struct{ capnp.Struct }

// Repo_waitForInit_Results_TypeID is the unique identifier for the type Repo_waitForInit_Results.
const Repo_waitForInit_Results_TypeID = 0x96fe51446ad697f9

func NewRepo_waitForInit_Results(s *capnp.Segment) (Repo_waitForInit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Results{st}, err
}

func NewRootRepo_waitForInit_Results(s *capnp.Segment) (Repo_waitForInit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Results{st}, err
}

func ReadRootRepo_waitForInit_Results(msg *capnp.Message) (Repo_waitForInit_Results, error) {
	root, err := msg.RootPtr()
	return Repo_waitForInit_Results{root.Struct()}, err
}

func (s Repo_waitForInit_Results) String() string {
	str, _ := text.Marshal(0x96fe51446ad697f9, s.Struct)
	return str
}

// Repo_waitForInit_Results_List is a list of Repo_waitForInit_Results.
type Repo_waitForInit_Results_List struct{ capnp.List }

// NewRepo_waitForInit_Results creates a new list of Repo_waitForInit_Results.
func NewRepo_waitForInit_Results_List(s *capnp.Segment, sz int32) (Repo_waitForInit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_waitForInit_Results_List{l}, err
}

func (s Repo_waitForInit_Results_List) At(i int) Repo_waitForInit_Results {
	return Repo_waitForInit_Results{s.List.Struct(i)}
}

func (s Repo_waitForInit_Results_List) Set(i int, v Repo_waitForInit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_waitForInit_Results_List) String() string {
	str, _ := text.MarshalList(0x96fe51446ad697f9, s.List)
	return str
}

// Repo_waitForInit_Results_Promise is a wrapper for a Repo_waitForInit_Results promised by a client call.
type Repo_waitForInit_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_waitForInit_Results_Promise) Struct() (Repo_waitForInit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_waitForInit_Results{s}, err
}

type Repo_gatewayUserAdd_Params struct{ capnp.Struct }

// Repo_gatewayUserAdd_Params_TypeID is the unique identifier for the type Repo_gatewayUserAdd_Params.
const Repo_gatewayUserAdd_Params_TypeID = 0xcbd45f6552b4ba24

func NewRepo_gatewayUserAdd_Params(s *capnp.Segment) (Repo_gatewayUserAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_gatewayUserAdd_Params{st}, err
}

func NewRootRepo_gatewayUserAdd_Params(s *capnp.Segment) (Repo_gatewayUserAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_gatewayUserAdd_Params{st}, err
}

func ReadRootRepo_gatewayUserAdd_Params(msg *capnp.Message) (Repo_gatewayUserAdd_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserAdd_Params{root.Struct()}, err
}

func (s Repo_gatewayUserAdd_Params) String() string {
	str, _ := text.Marshal(0xcbd45f6552b4ba24, s.Struct)
	return str
}

func (s Repo_gatewayUserAdd_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_gatewayUserAdd_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserAdd_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_gatewayUserAdd_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_gatewayUserAdd_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserAdd_Params) SetPassword(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_gatewayUserAdd_Params) Folders() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Repo_gatewayUserAdd_Params) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) SetFolders(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Repo_gatewayUserAdd_Params) NewFolders(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Repo_gatewayUserAdd_Params) Rights() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(3)
	return capnp.TextList{List: p.List()}, err
}

func (s Repo_gatewayUserAdd_Params) HasRights() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) SetRights(v capnp.TextList) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewRights sets the rights field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Repo_gatewayUserAdd_Params) NewRights(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// Repo_gatewayUserAdd_Params_List is a list of Repo_gatewayUserAdd_Params.
type Repo_gatewayUserAdd_Params_List struct{ capnp.List }

// NewRepo_gatewayUserAdd_Params creates a new list of Repo_gatewayUserAdd_Params.
func NewRepo_gatewayUserAdd_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Repo_gatewayUserAdd_Params_List{l}, err
}

func (s Repo_gatewayUserAdd_Params_List) At(i int) Repo_gatewayUserAdd_Params {
	return Repo_gatewayUserAdd_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserAdd_Params_List) Set(i int, v Repo_gatewayUserAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xcbd45f6552b4ba24, s.List)
	return str
}

// Repo_gatewayUserAdd_Params_Promise is a wrapper for a Repo_gatewayUserAdd_Params promised by a client call.
type Repo_gatewayUserAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserAdd_Params_Promise) Struct() (Repo_gatewayUserAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserAdd_Params{s}, err
}

type Repo_gatewayUserAdd_Results struct{ capnp.Struct }

// Repo_gatewayUserAdd_Results_TypeID is the unique identifier for the type Repo_gatewayUserAdd_Results.
const Repo_gatewayUserAdd_Results_TypeID = 0xbd8d8f80992c4d78

func NewRepo_gatewayUserAdd_Results(s *capnp.Segment) (Repo_gatewayUserAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserAdd_Results{st}, err
}

func NewRootRepo_gatewayUserAdd_Results(s *capnp.Segment) (Repo_gatewayUserAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserAdd_Results{st}, err
}

func ReadRootRepo_gatewayUserAdd_Results(msg *capnp.Message) (Repo_gatewayUserAdd_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserAdd_Results{root.Struct()}, err
}

func (s Repo_gatewayUserAdd_Results) String() string {
	str, _ := text.Marshal(0xbd8d8f80992c4d78, s.Struct)
	return str
}

// Repo_gatewayUserAdd_Results_List is a list of Repo_gatewayUserAdd_Results.
type Repo_gatewayUserAdd_Results_List struct{ capnp.List }

// NewRepo_gatewayUserAdd_Results creates a new list of Repo_gatewayUserAdd_Results.
func NewRepo_gatewayUserAdd_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserAdd_Results_List{l}, err
}

func (s Repo_gatewayUserAdd_Results_List) At(i int) Repo_gatewayUserAdd_Results {
	return Repo_gatewayUserAdd_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserAdd_Results_List) Set(i int, v Repo_gatewayUserAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xbd8d8f80992c4d78, s.List)
	return str
}

// Repo_gatewayUserAdd_Results_Promise is a wrapper for a Repo_gatewayUserAdd_Results promised by a client call.
type Repo_gatewayUserAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserAdd_Results_Promise) Struct() (Repo_gatewayUserAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserAdd_Results{s}, err
}

type Repo_gatewayUserRm_Params struct{ capnp.Struct }

// Repo_gatewayUserRm_Params_TypeID is the unique identifier for the type Repo_gatewayUserRm_Params.
const Repo_gatewayUserRm_Params_TypeID = 0xbda24ef378533894

func NewRepo_gatewayUserRm_Params(s *capnp.Segment) (Repo_gatewayUserRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserRm_Params{st}, err
}

func NewRootRepo_gatewayUserRm_Params(s *capnp.Segment) (Repo_gatewayUserRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserRm_Params{st}, err
}

func ReadRootRepo_gatewayUserRm_Params(msg *capnp.Message) (Repo_gatewayUserRm_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserRm_Params{root.Struct()}, err
}

func (s Repo_gatewayUserRm_Params) String() string {
	str, _ := text.Marshal(0xbda24ef378533894, s.Struct)
	return str
}

func (s Repo_gatewayUserRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_gatewayUserRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_gatewayUserRm_Params_List is a list of Repo_gatewayUserRm_Params.
type Repo_gatewayUserRm_Params_List struct{ capnp.List }

// NewRepo_gatewayUserRm_Params creates a new list of Repo_gatewayUserRm_Params.
func NewRepo_gatewayUserRm_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_gatewayUserRm_Params_List{l}, err
}

func (s Repo_gatewayUserRm_Params_List) At(i int) Repo_gatewayUserRm_Params {
	return Repo_gatewayUserRm_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserRm_Params_List) Set(i int, v Repo_gatewayUserRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserRm_Params_List) String() string {
	str, _ := text.MarshalList(0xbda24ef378533894, s.List)
	return str
}

// Repo_gatewayUserRm_Params_Promise is a wrapper for a Repo_gatewayUserRm_Params promised by a client call.
type Repo_gatewayUserRm_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserRm_Params_Promise) Struct() (Repo_gatewayUserRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserRm_Params{s}, err
}

type Repo_gatewayUserRm_Results struct{ capnp.Struct }

// Repo_gatewayUserRm_Results_TypeID is the unique identifier for the type Repo_gatewayUserRm_Results.
const Repo_gatewayUserRm_Results_TypeID = 0xea498a2451bae614

func NewRepo_gatewayUserRm_Results(s *capnp.Segment) (Repo_gatewayUserRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserRm_Results{st}, err
}

func NewRootRepo_gatewayUserRm_Results(s *capnp.Segment) (Repo_gatewayUserRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserRm_Results{st}, err
}

func ReadRootRepo_gatewayUserRm_Results(msg *capnp.Message) (Repo_gatewayUserRm_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserRm_Results{root.Struct()}, err
}

func (s Repo_gatewayUserRm_Results) String() string {
	str, _ := text.Marshal(0xea498a2451bae614, s.Struct)
	return str
}

// Repo_gatewayUserRm_Results_List is a list of Repo_gatewayUserRm_Results.
type Repo_gatewayUserRm_Results_List struct{ capnp.List }

// NewRepo_gatewayUserRm_Results creates a new list of Repo_gatewayUserRm_Results.
func NewRepo_gatewayUserRm_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserRm_Results_List{l}, err
}

func (s Repo_gatewayUserRm_Results_List) At(i int) Repo_gatewayUserRm_Results {
	return Repo_gatewayUserRm_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserRm_Results_List) Set(i int, v Repo_gatewayUserRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserRm_Results_List) String() string {
	str, _ := text.MarshalList(0xea498a2451bae614, s.List)
	return str
}

// Repo_gatewayUserRm_Results_Promise is a wrapper for a Repo_gatewayUserRm_Results promised by a client call.
type Repo_gatewayUserRm_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserRm_Results_Promise) Struct() (Repo_gatewayUserRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserRm_Results{s}, err
}

type Repo_gatewayUserList_Params struct{ capnp.Struct }

// Repo_gatewayUserList_Params_TypeID is the unique identifier for the type Repo_gatewayUserList_Params.
const Repo_gatewayUserList_Params_TypeID = 0x936b942a74db0be0

func NewRepo_gatewayUserList_Params(s *capnp.Segment) (Repo_gatewayUserList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserList_Params{st}, err
}

func NewRootRepo_gatewayUserList_Params(s *capnp.Segment) (Repo_gatewayUserList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserList_Params{st}, err
}

func ReadRootRepo_gatewayUserList_Params(msg *capnp.Message) (Repo_gatewayUserList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserList_Params{root.Struct()}, err
}

func (s Repo_gatewayUserList_Params) String() string {
	str, _ := text.Marshal(0x936b942a74db0be0, s.Struct)
	return str
}

// Repo_gatewayUserList_Params_List is a list of Repo_gatewayUserList_Params.
type Repo_gatewayUserList_Params_List struct{ capnp.List }

// NewRepo_gatewayUserList_Params creates a new list of Repo_gatewayUserList_Params.
func NewRepo_gatewayUserList_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserList_Params_List{l}, err
}

func (s Repo_gatewayUserList_Params_List) At(i int) Repo_gatewayUserList_Params {
	return Repo_gatewayUserList_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserList_Params_List) Set(i int, v Repo_gatewayUserList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserList_Params_List) String() string {
	str, _ := text.MarshalList(0x936b942a74db0be0, s.List)
	return str
}

// Repo_gatewayUserList_Params_Promise is a wrapper for a Repo_gatewayUserList_Params promised by a client call.
type Repo_gatewayUserList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserList_Params_Promise) Struct() (Repo_gatewayUserList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserList_Params{s}, err
}

type Repo_gatewayUserList_Results struct{ capnp.Struct }

// Repo_gatewayUserList_Results_TypeID is the unique identifier for the type Repo_gatewayUserList_Results.
const Repo_gatewayUserList_Results_TypeID = 0x82f304d5d4e81ee4

func NewRepo_gatewayUserList_Results(s *capnp.Segment) (Repo_gatewayUserList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserList_Results{st}, err
}

func NewRootRepo_gatewayUserList_Results(s *capnp.Segment) (Repo_gatewayUserList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserList_Results{st}, err
}

func ReadRootRepo_gatewayUserList_Results(msg *capnp.Message) (Repo_gatewayUserList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserList_Results{root.Struct()}, err
}

func (s Repo_gatewayUserList_Results) String() string {
	str, _ := text.Marshal(0x82f304d5d4e81ee4, s.Struct)
	return str
}

func (s Repo_gatewayUserList_Results) Users() (capnp2.User_List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp2.User_List{List: p.List()}, err
}

func (s Repo_gatewayUserList_Results) HasUsers() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserList_Results) SetUsers(v capnp2.User_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewUsers sets the users field to a newly
// allocated capnp2.User_List, preferring placement in s's segment.
func (s Repo_gatewayUserList_Results) NewUsers(n int32) (capnp2.User_List, error) {
	l, err := capnp2.NewUser_List(s.Struct.Segment(), n)
	if err != nil {
		return capnp2.User_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_gatewayUserList_Results_List is a list of Repo_gatewayUserList_Results.
type Repo_gatewayUserList_Results_List struct{ capnp.List }

// NewRepo_gatewayUserList_Results creates a new list of Repo_gatewayUserList_Results.
func NewRepo_gatewayUserList_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_gatewayUserList_Results_List{l}, err
}

func (s Repo_gatewayUserList_Results_List) At(i int) Repo_gatewayUserList_Results {
	return Repo_gatewayUserList_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserList_Results_List) Set(i int, v Repo_gatewayUserList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserList_Results_List) String() string {
	str, _ := text.MarshalList(0x82f304d5d4e81ee4, s.List)
	return str
}

// Repo_gatewayUserList_Results_Promise is a wrapper for a Repo_gatewayUserList_Results promised by a client call.
type Repo_gatewayUserList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserList_Results_Promise) Struct() (Repo_gatewayUserList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserList_Results{s}, err
}

type Net struct{ Client capnp.Client }

// Net_TypeID is the unique identifier for the type Net.
const Net_TypeID = 0xaa133a60be5a7d01

func (c Net) RemoteAddOrUpdate(ctx context.Context, params func(Net_remoteAddOrUpdate_Params) error, opts ...capnp.CallOption) Net_remoteAddOrUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteAddOrUpdate_Params{Struct: s}) }
	}
	return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteRm(ctx context.Context, params func(Net_remoteRm_Params) error, opts ...capnp.CallOption) Net_remoteRm_Results_Promise {
	if c.Client == nil {
		return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteRm_Params{Struct: s}) }
	}
	return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteLs(ctx context.Context, params func(Net_remoteLs_Params) error, opts ...capnp.CallOption) Net_remoteLs_Results_Promise {
	if c.Client == nil {
		return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteLs_Params{Struct: s}) }
	}
	return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteUpdate(ctx context.Context, params func(Net_remoteUpdate_Params) error, opts ...capnp.CallOption) Net_remoteUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteUpdate_Params{Struct: s}) }
	}
	return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteSave(ctx context.Context, params func(Net_remoteSave_Params) error, opts ...capnp.CallOption) Net_remoteSave_Results_Promise {
	if c.Client == nil {
		return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteSave_Params{Struct: s}) }
	}
	return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemotePing(ctx context.Context, params func(Net_remotePing_Params) error, opts ...capnp.CallOption) Net_remotePing_Results_Promise {
	if c.Client == nil {
		return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remotePing_Params{Struct: s}) }
	}
	return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteClear(ctx context.Context, params func(Net_remoteClear_Params) error, opts ...capnp.CallOption) Net_remoteClear_Results_Promise {
	if c.Client == nil {
		return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteClear_Params{Struct: s}) }
	}
	return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) NetLocate(ctx context.Context, params func(Net_netLocate_Params) error, opts ...capnp.CallOption) Net_netLocate_Results_Promise {
	if c.Client == nil {
		return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocate_Params{Struct: s}) }
	}
	return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) NetLocateNext(ctx context.Context, params func(Net_netLocateNext_Params) error, opts ...capnp.CallOption) Net_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocateNext_Params{Struct: s}) }
	}
	return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Whoami(ctx context.Context, params func(Net_whoami_Params) error, opts ...capnp.CallOption) Net_whoami_Results_Promise {
	if c.Client == nil {
		return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_whoami_Params{Struct: s}) }
	}
	return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Connect(ctx context.Context, params func(Net_connect_Params) error, opts ...capnp.CallOption) Net_connect_Results_Promise {
	if c.Client == nil {
		return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_connect_Params{Struct: s}) }
	}
	return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Disconnect(ctx context.Context, params func(Net_disconnect_Params) error, opts ...capnp.CallOption) Net_disconnect_Results_Promise {
	if c.Client == nil {
		return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_disconnect_Params{Struct: s}) }
	}
	return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteOnlineList(ctx context.Context, params func(Net_remoteOnlineList_Params) error, opts ...capnp.CallOption) Net_remoteOnlineList_Results_Promise {
	if c.Client == nil {
		return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteOnlineList_Params{Struct: s}) }
	}
	return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteByName(ctx context.Context, params func(Net_remoteByName_Params) error, opts ...capnp.CallOption) Net_remoteByName_Results_Promise {
	if c.Client == nil {
		return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteByName_Params{Struct: s}) }
	}
	return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Net_Server interface {
	RemoteAddOrUpdate(Net_remoteAddOrUpdate) error

	RemoteRm(Net_remoteRm) error

	RemoteLs(Net_remoteLs) error

	RemoteUpdate(Net_remoteUpdate) error

	RemoteSave(Net_remoteSave) error

	RemotePing(Net_remotePing) error

	RemoteClear(Net_remoteClear) error

	NetLocate(Net_netLocate) error

	NetLocateNext(Net_netLocateNext) error

	Whoami(Net_whoami) error

	Connect(Net_connect) error

	Disconnect(Net_disconnect) error

	RemoteOnlineList(Net_remoteOnlineList) error

	RemoteByName(Net_remoteByName) error
}

func Net_ServerToClient(s Net_Server) Net {
	c, _ := s.(server.Closer)
	return Net{Client: server.New(Net_Methods(nil, s), c)}
}

func Net_Methods(methods []server.Method, s Net_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 14)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteAddOrUpdate{c, opts, Net_remoteAddOrUpdate_Params{Struct: p}, Net_remoteAddOrUpdate_Results{Struct: r}}
			return s.RemoteAddOrUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteRm{c, opts, Net_remoteRm_Params{Struct: p}, Net_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteLs{c, opts, Net_remoteLs_Params{Struct: p}, Net_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteUpdate{c, opts, Net_remoteUpdate_Params{Struct: p}, Net_remoteUpdate_Results{Struct: r}}
			return s.RemoteUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteSave{c, opts, Net_remoteSave_Params{Struct: p}, Net_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remotePing{c, opts, Net_remotePing_Params{Struct: p}, Net_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteClear{c, opts, Net_remoteClear_Params{Struct: p}, Net_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocate{c, opts, Net_netLocate_Params{Struct: p}, Net_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocateNext{c, opts, Net_netLocateNext_Params{Struct: p}, Net_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_whoami{c, opts, Net_whoami_Params{Struct: p}, Net_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_connect{c, opts, Net_connect_Params{Struct: p}, Net_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_disconnect{c, opts, Net_disconnect_Params{Struct: p}, Net_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteOnlineList{c, opts, Net_remoteOnlineList_Params{Struct: p}, Net_remoteOnlineList_Results{Struct: r}}
			return s.RemoteOnlineList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteByName{c, opts, Net_remoteByName_Params{Struct: p}, Net_remoteByName_Results{Struct: r}}
			return s.RemoteByName(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Net_remoteAddOrUpdate holds the arguments for a server call to Net.remoteAddOrUpdate.
type Net_remoteAddOrUpdate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteAddOrUpdate_Params
	Results Net_remoteAddOrUpdate_Results
}

// Net_remoteRm holds the arguments for a server call to Net.remoteRm.
type Net_remoteRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteRm_Params
	Results Net_remoteRm_Results
}

// Net_remoteLs holds the arguments for a server call to Net.remoteLs.
type Net_remoteLs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteLs_Params
	Results Net_remoteLs_Results
}

// Net_remoteUpdate holds the arguments for a server call to Net.remoteUpdate.
type Net_remoteUpdate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteUpdate_Params
	Results Net_remoteUpdate_Results
}

// Net_remoteSave holds the arguments for a server call to Net.remoteSave.
type Net_remoteSave struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteSave_Params
	Results Net_remoteSave_Results
}

// Net_remotePing holds the arguments for a server call to Net.remotePing.
type Net_remotePing struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remotePing_Params
	Results Net_remotePing_Results
}

// Net_remoteClear holds the arguments for a server call to Net.remoteClear.
type Net_remoteClear struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteClear_Params
	Results Net_remoteClear_Results
}

// Net_netLocate holds the arguments for a server call to Net.netLocate.
type Net_netLocate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_netLocate_Params
	Results Net_netLocate_Results
}

// Net_netLocateNext holds the arguments for a server call to Net.netLocateNext.
type Net_netLocateNext struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_netLocateNext_Params
	Results Net_netLocateNext_Results
}

// Net_whoami holds the arguments for a server call to Net.whoami.
type Net_whoami struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_whoami_Params
	Results Net_whoami_Results
}

// Net_connect holds the arguments for a server call to Net.connect.
type Net_connect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_connect_Params
	Results Net_connect_Results
}

// Net_disconnect holds the arguments for a server call to Net.disconnect.
type Net_disconnect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_disconnect_Params
	Results Net_disconnect_Results
}

// Net_remoteOnlineList holds the arguments for a server call to Net.remoteOnlineList.
type Net_remoteOnlineList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteOnlineList_Params
	Results Net_remoteOnlineList_Results
}

// Net_remoteByName holds the arguments for a server call to Net.remoteByName.
type Net_remoteByName struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteByName_Params
	Results Net_remoteByName_Results
}

type Net_remoteAddOrUpdate_Params struct{ capnp.Struct }

// Net_remoteAddOrUpdate_Params_TypeID is the unique identifier for the type Net_remoteAddOrUpdate_Params.
const Net_remoteAddOrUpdate_Params_TypeID = 0xf5c310bd5e2aa138

func NewNet_remoteAddOrUpdate_Params(s *capnp.Segment) (Net_remoteAddOrUpdate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteAddOrUpdate_Params{st}, err
}

func NewRootNet_remoteAddOrUpdate_Params(s *capnp.Segment) (Net_remoteAddOrUpdate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteAddOrUpdate_Params{st}, err
}

func ReadRootNet_remoteAddOrUpdate_Params(msg *capnp.Message) (Net_remoteAddOrUpdate_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteAddOrUpdate_Params{root.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Params) String() string {
	str, _ := text.Marshal(0xf5c310bd5e2aa138, s.Struct)
	return str
}

func (s Net_remoteAddOrUpdate_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteAddOrUpdate_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteAddOrUpdate_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteAddOrUpdate_Params_List is a list of Net_remoteAddOrUpdate_Params.
type Net_remoteAddOrUpdate_Params_List struct{ capnp.List }

// NewNet_remoteAddOrUpdate_Params creates a new list of Net_remoteAddOrUpdate_Params.
func NewNet_remoteAddOrUpdate_Params_List(s *capnp.Segment, sz int32) (Net_remoteAddOrUpdate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteAddOrUpdate_Params_List{l}, err
}

func (s Net_remoteAddOrUpdate_Params_List) At(i int) Net_remoteAddOrUpdate_Params {
	return Net_remoteAddOrUpdate_Params{s.List.Struct(i)}
}

func (s Net_remoteAddOrUpdate_Params_List) Set(i int, v Net_remoteAddOrUpdate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteAddOrUpdate_Params_List) String() string {
	str, _ := text.MarshalList(0xf5c310bd5e2aa138, s.List)
	return str
}

// Net_remoteAddOrUpdate_Params_Promise is a wrapper for a Net_remoteAddOrUpdate_Params promised by a client call.
type Net_remoteAddOrUpdate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteAddOrUpdate_Params_Promise) Struct() (Net_remoteAddOrUpdate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteAddOrUpdate_Params{s}, err
}

func (p Net_remoteAddOrUpdate_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_remoteAddOrUpdate_Results struct{ capnp.Struct }

// Net_remoteAddOrUpdate_Results_TypeID is the unique identifier for the type Net_remoteAddOrUpdate_Results.
const Net_remoteAddOrUpdate_Results_TypeID = 0xfcaa6dc30ba75197

func NewNet_remoteAddOrUpdate_Results(s *capnp.Segment) (Net_remoteAddOrUpdate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteAddOrUpdate_Results{st}, err
}

func NewRootNet_remoteAddOrUpdate_Results(s *capnp.Segment) (Net_remoteAddOrUpdate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteAddOrUpdate_Results{st}, err
}

func ReadRootNet_remoteAddOrUpdate_Results(msg *capnp.Message) (Net_remoteAddOrUpdate_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteAddOrUpdate_Results{root.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Results) String() string {
	str, _ := text.Marshal(0xfcaa6dc30ba75197, s.Struct)
	return str
}

// Net_remoteAddOrUpdate_Results_List is a list of Net_remoteAddOrUpdate_Results.
type Net_remoteAddOrUpdate_Results_List struct{ capnp.List }

// NewNet_remoteAddOrUpdate_Results creates a new list of Net_remoteAddOrUpdate_Results.
func NewNet_remoteAddOrUpdate_Results_List(s *capnp.Segment, sz int32) (Net_remoteAddOrUpdate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteAddOrUpdate_Results_List{l}, err
}

func (s Net_remoteAddOrUpdate_Results_List) At(i int) Net_remoteAddOrUpdate_Results {
	return Net_remoteAddOrUpdate_Results{s.List.Struct(i)}
}

func (s Net_remoteAddOrUpdate_Results_List) Set(i int, v Net_remoteAddOrUpdate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteAddOrUpdate_Results_List) String() string {
	str, _ := text.MarshalList(0xfcaa6dc30ba75197, s.List)
	return str
}

// Net_remoteAddOrUpdate_Results_Promise is a wrapper for a Net_remoteAddOrUpdate_Results promised by a client call.
type Net_remoteAddOrUpdate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteAddOrUpdate_Results_Promise) Struct() (Net_remoteAddOrUpdate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteAddOrUpdate_Results{s}, err
}

type Net_remoteRm_Params struct{ capnp.Struct }

// Net_remoteRm_Params_TypeID is the unique identifier for the type Net_remoteRm_Params.
const Net_remoteRm_Params_TypeID = 0xf485a561c31c83d2

func NewNet_remoteRm_Params(s *capnp.Segment) (Net_remoteRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteRm_Params{st}, err
}

func NewRootNet_remoteRm_Params(s *capnp.Segment) (Net_remoteRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteRm_Params{st}, err
}

func ReadRootNet_remoteRm_Params(msg *capnp.Message) (Net_remoteRm_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteRm_Params{root.Struct()}, err
}

func (s Net_remoteRm_Params) String() string {
	str, _ := text.Marshal(0xf485a561c31c83d2, s.Struct)
	return str
}

func (s Net_remoteRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remoteRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remoteRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remoteRm_Params_List is a list of Net_remoteRm_Params.
type Net_remoteRm_Params_List struct{ capnp.List }

// NewNet_remoteRm_Params creates a new list of Net_remoteRm_Params.
func NewNet_remoteRm_Params_List(s *capnp.Segment, sz int32) (Net_remoteRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteRm_Params_List{l}, err
}

func (s Net_remoteRm_Params_List) At(i int) Net_remoteRm_Params {
	return Net_remoteRm_Params{s.List.Struct(i)}
}

func (s Net_remoteRm_Params_List) Set(i int, v Net_remoteRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteRm_Params_List) String() string {
	str, _ := text.MarshalList(0xf485a561c31c83d2, s.List)
	return str
}

// Net_remoteRm_Params_Promise is a wrapper for a Net_remoteRm_Params promised by a client call.
type Net_remoteRm_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteRm_Params_Promise) Struct() (Net_remoteRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteRm_Params{s}, err
}

type Net_remoteRm_Results struct{ capnp.Struct }

// Net_remoteRm_Results_TypeID is the unique identifier for the type Net_remoteRm_Results.
const Net_remoteRm_Results_TypeID = 0xdb78f249dcc7b9f1

func NewNet_remoteRm_Results(s *capnp.Segment) (Net_remoteRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteRm_Results{st}, err
}

func NewRootNet_remoteRm_Results(s *capnp.Segment) (Net_remoteRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteRm_Results{st}, err
}

func ReadRootNet_remoteRm_Results(msg *capnp.Message) (Net_remoteRm_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteRm_Results{root.Struct()}, err
}

func (s Net_remoteRm_Results) String() string {
	str, _ := text.Marshal(0xdb78f249dcc7b9f1, s.Struct)
	return str
}

// Net_remoteRm_Results_List is a list of Net_remoteRm_Results.
type Net_remoteRm_Results_List struct{ capnp.List }

// NewNet_remoteRm_Results creates a new list of Net_remoteRm_Results.
func NewNet_remoteRm_Results_List(s *capnp.Segment, sz int32) (Net_remoteRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteRm_Results_List{l}, err
}

func (s Net_remoteRm_Results_List) At(i int) Net_remoteRm_Results {
	return Net_remoteRm_Results{s.List.Struct(i)}
}

func (s Net_remoteRm_Results_List) Set(i int, v Net_remoteRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteRm_Results_List) String() string {
	str, _ := text.MarshalList(0xdb78f249dcc7b9f1, s.List)
	return str
}

// Net_remoteRm_Results_Promise is a wrapper for a Net_remoteRm_Results promised by a client call.
type Net_remoteRm_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteRm_Results_Promise) Struct() (Net_remoteRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteRm_Results{s}, err
}

type Net_remoteLs_Params struct{ capnp.Struct }

// Net_remoteLs_Params_TypeID is the unique identifier for the type Net_remoteLs_Params.
const Net_remoteLs_Params_TypeID = 0xc18496cf650e6886

func NewNet_remoteLs_Params(s *capnp.Segment) (Net_remoteLs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteLs_Params{st}, err
}

func NewRootNet_remoteLs_Params(s *capnp.Segment) (Net_remoteLs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteLs_Params{st}, err
}

func ReadRootNet_remoteLs_Params(msg *capnp.Message) (Net_remoteLs_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteLs_Params{root.Struct()}, err
}

func (s Net_remoteLs_Params) String() string {
	str, _ := text.Marshal(0xc18496cf650e6886, s.Struct)
	return str
}

// Net_remoteLs_Params_List is a list of Net_remoteLs_Params.
type Net_remoteLs_Params_List struct{ capnp.List }

// NewNet_remoteLs_Params creates a new list of Net_remoteLs_Params.
func NewNet_remoteLs_Params_List(s *capnp.Segment, sz int32) (Net_remoteLs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteLs_Params_List{l}, err
}

func (s Net_remoteLs_Params_List) At(i int) Net_remoteLs_Params {
	return Net_remoteLs_Params{s.List.Struct(i)}
}

func (s Net_remoteLs_Params_List) Set(i int, v Net_remoteLs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteLs_Params_List) String() string {
	str, _ := text.MarshalList(0xc18496cf650e6886, s.List)
	return str
}

// Net_remoteLs_Params_Promise is a wrapper for a Net_remoteLs_Params promised by a client call.
type Net_remoteLs_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteLs_Params_Promise) Struct() (Net_remoteLs_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteLs_Params{s}, err
}

type Net_remoteLs_Results struct{ capnp.Struct }

// Net_remoteLs_Results_TypeID is the unique identifier for the type Net_remoteLs_Results.
const Net_remoteLs_Results_TypeID = 0xb2255c049c7bc42f

func NewNet_remoteLs_Results(s *capnp.Segment) (Net_remoteLs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteLs_Results{st}, err
}

func NewRootNet_remoteLs_Results(s *capnp.Segment) (Net_remoteLs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteLs_Results{st}, err
}

func ReadRootNet_remoteLs_Results(msg *capnp.Message) (Net_remoteLs_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteLs_Results{root.Struct()}, err
}

func (s Net_remoteLs_Results) String() string {
	str, _ := text.Marshal(0xb2255c049c7bc42f, s.Struct)
	return str
}

func (s Net_remoteLs_Results) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Net_remoteLs_Results) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteLs_Results) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Net_remoteLs_Results) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteLs_Results_List is a list of Net_remoteLs_Results.
type Net_remoteLs_Results_List struct{ capnp.List }

// NewNet_remoteLs_Results creates a new list of Net_remoteLs_Results.
func NewNet_remoteLs_Results_List(s *capnp.Segment, sz int32) (Net_remoteLs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteLs_Results_List{l}, err
}

func (s Net_remoteLs_Results_List) At(i int) Net_remoteLs_Results {
	return Net_remoteLs_Results{s.List.Struct(i)}
}

func (s Net_remoteLs_Results_List) Set(i int, v Net_remoteLs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteLs_Results_List) String() string {
	str, _ := text.MarshalList(0xb2255c049c7bc42f, s.List)
	return str
}

// Net_remoteLs_Results_Promise is a wrapper for a Net_remoteLs_Results promised by a client call.
type Net_remoteLs_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteLs_Results_Promise) Struct() (Net_remoteLs_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteLs_Results{s}, err
}

type Net_remoteUpdate_Params struct{ capnp.Struct }

// Net_remoteUpdate_Params_TypeID is the unique identifier for the type Net_remoteUpdate_Params.
const Net_remoteUpdate_Params_TypeID = 0xc089763bca3e3f44

func NewNet_remoteUpdate_Params(s *capnp.Segment) (Net_remoteUpdate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteUpdate_Params{st}, err
}

func NewRootNet_remoteUpdate_Params(s *capnp.Segment) (Net_remoteUpdate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteUpdate_Params{st}, err
}

func ReadRootNet_remoteUpdate_Params(msg *capnp.Message) (Net_remoteUpdate_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteUpdate_Params{root.Struct()}, err
}

func (s Net_remoteUpdate_Params) String() string {
	str, _ := text.Marshal(0xc089763bca3e3f44, s.Struct)
	return str
}

func (s Net_remoteUpdate_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteUpdate_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteUpdate_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteUpdate_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteUpdate_Params_List is a list of Net_remoteUpdate_Params.
type Net_remoteUpdate_Params_List struct{ capnp.List }

// NewNet_remoteUpdate_Params creates a new list of Net_remoteUpdate_Params.
func NewNet_remoteUpdate_Params_List(s *capnp.Segment, sz int32) (Net_remoteUpdate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteUpdate_Params_List{l}, err
}

func (s Net_remoteUpdate_Params_List) At(i int) Net_remoteUpdate_Params {
	return Net_remoteUpdate_Params{s.List.Struct(i)}
}

func (s Net_remoteUpdate_Params_List) Set(i int, v Net_remoteUpdate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteUpdate_Params_List) String() string {
	str, _ := text.MarshalList(0xc089763bca3e3f44, s.List)
	return str
}

// Net_remoteUpdate_Params_Promise is a wrapper for a Net_remoteUpdate_Params promised by a client call.
type Net_remoteUpdate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteUpdate_Params_Promise) Struct() (Net_remoteUpdate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteUpdate_Params{s}, err
}

func (p Net_remoteUpdate_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_remoteUpdate_Results struct{ capnp.Struct }

// Net_remoteUpdate_Results_TypeID is the unique identifier for the type Net_remoteUpdate_Results.
const Net_remoteUpdate_Results_TypeID = 0x99b03ceb2dad70db

func NewNet_remoteUpdate_Results(s *capnp.Segment) (Net_remoteUpdate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteUpdate_Results{st}, err
}

func NewRootNet_remoteUpdate_Results(s *capnp.Segment) (Net_remoteUpdate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteUpdate_Results{st}, err
}

func ReadRootNet_remoteUpdate_Results(msg *capnp.Message) (Net_remoteUpdate_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteUpdate_Results{root.Struct()}, err
}

func (s Net_remoteUpdate_Results) String() string {
	str, _ := text.Marshal(0x99b03ceb2dad70db, s.Struct)
	return str
}

// Net_remoteUpdate_Results_List is a list of Net_remoteUpdate_Results.
type Net_remoteUpdate_Results_List struct{ capnp.List }

// NewNet_remoteUpdate_Results creates a new list of Net_remoteUpdate_Results.
func NewNet_remoteUpdate_Results_List(s *capnp.Segment, sz int32) (Net_remoteUpdate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteUpdate_Results_List{l}, err
}

func (s Net_remoteUpdate_Results_List) At(i int) Net_remoteUpdate_Results {
	return Net_remoteUpdate_Results{s.List.Struct(i)}
}

func (s Net_remoteUpdate_Results_List) Set(i int, v Net_remoteUpdate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteUpdate_Results_List) String() string {
	str, _ := text.MarshalList(0x99b03ceb2dad70db, s.List)
	return str
}

// Net_remoteUpdate_Results_Promise is a wrapper for a Net_remoteUpdate_Results promised by a client call.
type Net_remoteUpdate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteUpdate_Results_Promise) Struct() (Net_remoteUpdate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteUpdate_Results{s}, err
}

type Net_remoteSave_Params struct{ capnp.Struct }

// Net_remoteSave_Params_TypeID is the unique identifier for the type Net_remoteSave_Params.
const Net_remoteSave_Params_TypeID = 0xb5dc333528e5f7ae

func NewNet_remoteSave_Params(s *capnp.Segment) (Net_remoteSave_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteSave_Params{st}, err
}

func NewRootNet_remoteSave_Params(s *capnp.Segment) (Net_remoteSave_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteSave_Params{st}, err
}

func ReadRootNet_remoteSave_Params(msg *capnp.Message) (Net_remoteSave_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteSave_Params{root.Struct()}, err
}

func (s Net_remoteSave_Params) String() string {
	str, _ := text.Marshal(0xb5dc333528e5f7ae, s.Struct)
	return str
}

func (s Net_remoteSave_Params) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Net_remoteSave_Params) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteSave_Params) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Net_remoteSave_Params) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteSave_Params_List is a list of Net_remoteSave_Params.
type Net_remoteSave_Params_List struct{ capnp.List }

// NewNet_remoteSave_Params creates a new list of Net_remoteSave_Params.
func NewNet_remoteSave_Params_List(s *capnp.Segment, sz int32) (Net_remoteSave_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteSave_Params_List{l}, err
}

func (s Net_remoteSave_Params_List) At(i int) Net_remoteSave_Params {
	return Net_remoteSave_Params{s.List.Struct(i)}
}

func (s Net_remoteSave_Params_List) Set(i int, v Net_remoteSave_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteSave_Params_List) String() string {
	str, _ := text.MarshalList(0xb5dc333528e5f7ae, s.List)
	return str
}

// Net_remoteSave_Params_Promise is a wrapper for a Net_remoteSave_Params promised by a client call.
type Net_remoteSave_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteSave_Params_Promise) Struct() (Net_remoteSave_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteSave_Params{s}, err
}

type Net_remoteSave_Results struct{ capnp.Struct }

// Net_remoteSave_Results_TypeID is the unique identifier for the type Net_remoteSave_Results.
const Net_remoteSave_Results_TypeID = 0xe83f954c9635f05a

func NewNet_remoteSave_Results(s *capnp.Segment) (Net_remoteSave_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteSave_Results{st}, err
}

func NewRootNet_remoteSave_Results(s *capnp.Segment) (Net_remoteSave_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteSave_Results{st}, err
}

func ReadRootNet_remoteSave_Results(msg *capnp.Message) (Net_remoteSave_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteSave_Results{root.Struct()}, err
}

func (s Net_remoteSave_Results) String() string {
	str, _ := text.Marshal(0xe83f954c9635f05a, s.Struct)
	return str
}

// Net_remoteSave_Results_List is a list of Net_remoteSave_Results.
type Net_remoteSave_Results_List struct{ capnp.List }

// NewNet_remoteSave_Results creates a new list of Net_remoteSave_Results.
func NewNet_remoteSave_Results_List(s *capnp.Segment, sz int32) (Net_remoteSave_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteSave_Results_List{l}, err
}

func (s Net_remoteSave_Results_List) At(i int) Net_remoteSave_Results {
	return Net_remoteSave_Results{s.List.Struct(i)}
}

func (s Net_remoteSave_Results_List) Set(i int, v Net_remoteSave_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteSave_Results_List) String() string {
	str, _ := text.MarshalList(0xe83f954c9635f05a, s.List)
	return str
}

// Net_remoteSave_Results_Promise is a wrapper for a Net_remoteSave_Results promised by a client call.
type Net_remoteSave_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteSave_Results_Promise) Struct() (Net_remoteSave_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteSave_Results{s}, err
}

type Net_remotePing_Params struct{ capnp.Struct }

// Net_remotePing_Params_TypeID is the unique identifier for the type Net_remotePing_Params.
const Net_remotePing_Params_TypeID = 0xbee5e0529f9017ff

func NewNet_remotePing_Params(s *capnp.Segment) (Net_remotePing_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remotePing_Params{st}, err
}

func NewRootNet_remotePing_Params(s *capnp.Segment) (Net_remotePing_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remotePing_Params{st}, err
}

func ReadRootNet_remotePing_Params(msg *capnp.Message) (Net_remotePing_Params, error) {
	root, err := msg.RootPtr()
	return Net_remotePing_Params{root.Struct()}, err
}

func (s Net_remotePing_Params) String() string {
	str, _ := text.Marshal(0xbee5e0529f9017ff, s.Struct)
	return str
}

func (s Net_remotePing_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remotePing_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remotePing_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remotePing_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remotePing_Params_List is a list of Net_remotePing_Params.
type Net_remotePing_Params_List struct{ capnp.List }

// NewNet_remotePing_Params creates a new list of Net_remotePing_Params.
func NewNet_remotePing_Params_List(s *capnp.Segment, sz int32) (Net_remotePing_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remotePing_Params_List{l}, err
}

func (s Net_remotePing_Params_List) At(i int) Net_remotePing_Params {
	return Net_remotePing_Params{s.List.Struct(i)}
}

func (s Net_remotePing_Params_List) Set(i int, v Net_remotePing_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remotePing_Params_List) String() string {
	str, _ := text.MarshalList(0xbee5e0529f9017ff, s.List)
	return str
}

// Net_remotePing_Params_Promise is a wrapper for a Net_remotePing_Params promised by a client call.
type Net_remotePing_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remotePing_Params_Promise) Struct() (Net_remotePing_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remotePing_Params{s}, err
}

type Net_remotePing_Results struct{ capnp.Struct }

// Net_remotePing_Results_TypeID is the unique identifier for the type Net_remotePing_Results.
const Net_remotePing_Results_TypeID = 0xad37ff6270c35769

func NewNet_remotePing_Results(s *capnp.Segment) (Net_remotePing_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_remotePing_Results{st}, err
}

func NewRootNet_remotePing_Results(s *capnp.Segment) (Net_remotePing_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_remotePing_Results{st}, err
}

func ReadRootNet_remotePing_Results(msg *capnp.Message) (Net_remotePing_Results, error) {
	root, err := msg.RootPtr()
	return Net_remotePing_Results{root.Struct()}, err
}

func (s Net_remotePing_Results) String() string {
	str, _ := text.Marshal(0xad37ff6270c35769, s.Struct)
	return str
}

func (s Net_remotePing_Results) Roundtrip() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Net_remotePing_Results) SetRoundtrip(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Net_remotePing_Results_List is a list of Net_remotePing_Results.
type Net_remotePing_Results_List struct{ capnp.List }

// NewNet_remotePing_Results creates a new list of Net_remotePing_Results.
func NewNet_remotePing_Results_List(s *capnp.Segment, sz int32) (Net_remotePing_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_remotePing_Results_List{l}, err
}

func (s Net_remotePing_Results_List) At(i int) Net_remotePing_Results {
	return Net_remotePing_Results{s.List.Struct(i)}
}

func (s Net_remotePing_Results_List) Set(i int, v Net_remotePing_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remotePing_Results_List) String() string {
	str, _ := text.MarshalList(0xad37ff6270c35769, s.List)
	return str
}

// Net_remotePing_Results_Promise is a wrapper for a Net_remotePing_Results promised by a client call.
type Net_remotePing_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remotePing_Results_Promise) Struct() (Net_remotePing_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remotePing_Results{s}, err
}

type Net_remoteClear_Params struct{ capnp.Struct }

// Net_remoteClear_Params_TypeID is the unique identifier for the type Net_remoteClear_Params.
const Net_remoteClear_Params_TypeID = 0xd35d6ae0fdbd9bc5

func NewNet_remoteClear_Params(s *capnp.Segment) (Net_remoteClear_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Params{st}, err
}

func NewRootNet_remoteClear_Params(s *capnp.Segment) (Net_remoteClear_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Params{st}, err
}

func ReadRootNet_remoteClear_Params(msg *capnp.Message) (Net_remoteClear_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteClear_Params{root.Struct()}, err
}

func (s Net_remoteClear_Params) String() string {
	str, _ := text.Marshal(0xd35d6ae0fdbd9bc5, s.Struct)
	return str
}

// Net_remoteClear_Params_List is a list of Net_remoteClear_Params.
type Net_remoteClear_Params_List struct{ capnp.List }

// NewNet_remoteClear_Params creates a new list of Net_remoteClear_Params.
func NewNet_remoteClear_Params_List(s *capnp.Segment, sz int32) (Net_remoteClear_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteClear_Params_List{l}, err
}

func (s Net_remoteClear_Params_List) At(i int) Net_remoteClear_Params {
	return Net_remoteClear_Params{s.List.Struct(i)}
}

func (s Net_remoteClear_Params_List) Set(i int, v Net_remoteClear_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteClear_Params_List) String() string {
	str, _ := text.MarshalList(0xd35d6ae0fdbd9bc5, s.List)
	return str
}

// Net_remoteClear_Params_Promise is a wrapper for a Net_remoteClear_Params promised by a client call.
type Net_remoteClear_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteClear_Params_Promise) Struct() (Net_remoteClear_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteClear_Params{s}, err
}

type Net_remoteClear_Results struct{ capnp.Struct }

// Net_remoteClear_Results_TypeID is the unique identifier for the type Net_remoteClear_Results.
const Net_remoteClear_Results_TypeID = 0xdc0aec8d179d4ec9

func NewNet_remoteClear_Results(s *capnp.Segment) (Net_remoteClear_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Results{st}, err
}

func NewRootNet_remoteClear_Results(s *capnp.Segment) (Net_remoteClear_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Results{st}, err
}

func ReadRootNet_remoteClear_Results(msg *capnp.Message) (Net_remoteClear_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteClear_Results{root.Struct()}, err
}

func (s Net_remoteClear_Results) String() string {
	str, _ := text.Marshal(0xdc0aec8d179d4ec9, s.Struct)
	return str
}

// Net_remoteClear_Results_List is a list of Net_remoteClear_Results.
type Net_remoteClear_Results_List struct{ capnp.List }

// NewNet_remoteClear_Results creates a new list of Net_remoteClear_Results.
func NewNet_remoteClear_Results_List(s *capnp.Segment, sz int32) (Net_remoteClear_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteClear_Results_List{l}, err
}

func (s Net_remoteClear_Results_List) At(i int) Net_remoteClear_Results {
	return Net_remoteClear_Results{s.List.Struct(i)}
}

func (s Net_remoteClear_Results_List) Set(i int, v Net_remoteClear_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteClear_Results_List) String() string {
	str, _ := text.MarshalList(0xdc0aec8d179d4ec9, s.List)
	return str
}

// Net_remoteClear_Results_Promise is a wrapper for a Net_remoteClear_Results promised by a client call.
type Net_remoteClear_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteClear_Results_Promise) Struct() (Net_remoteClear_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteClear_Results{s}, err
}

type Net_netLocate_Params struct{ capnp.Struct }

// Net_netLocate_Params_TypeID is the unique identifier for the type Net_netLocate_Params.
const Net_netLocate_Params_TypeID = 0xd701f5ae7e7560e9

func NewNet_netLocate_Params(s *capnp.Segment) (Net_netLocate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Net_netLocate_Params{st}, err
}

func NewRootNet_netLocate_Params(s *capnp.Segment) (Net_netLocate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Net_netLocate_Params{st}, err
}

func ReadRootNet_netLocate_Params(msg *capnp.Message) (Net_netLocate_Params, error) {
	root, err := msg.RootPtr()
	return Net_netLocate_Params{root.Struct()}, err
}

func (s Net_netLocate_Params) String() string {
	str, _ := text.Marshal(0xd701f5ae7e7560e9, s.Struct)
	return str
}

func (s Net_netLocate_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_netLocate_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_netLocate_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_netLocate_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Net_netLocate_Params) TimeoutSec() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Net_netLocate_Params) SetTimeoutSec(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Net_netLocate_Params) LocateMask() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Net_netLocate_Params) HasLocateMask() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Net_netLocate_Params) LocateMaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Net_netLocate_Params) SetLocateMask(v string) error {
	return s.Struct.SetText(1, v)
}

// Net_netLocate_Params_List is a list of Net_netLocate_Params.
type Net_netLocate_Params_List struct{ capnp.List }

// NewNet_netLocate_Params creates a new list of Net_netLocate_Params.
func NewNet_netLocate_Params_List(s *capnp.Segment, sz int32) (Net_netLocate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Net_netLocate_Params_List{l}, err
}

func (s Net_netLocate_Params_List) At(i int) Net_netLocate_Params {
	return Net_netLocate_Params{s.List.Struct(i)}
}

func (s Net_netLocate_Params_List) Set(i int, v Net_netLocate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocate_Params_List) String() string {
	str, _ := text.MarshalList(0xd701f5ae7e7560e9, s.List)
	return str
}

// Net_netLocate_Params_Promise is a wrapper for a Net_netLocate_Params promised by a client call.
type Net_netLocate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_netLocate_Params_Promise) Struct() (Net_netLocate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocate_Params{s}, err
}

type Net_netLocate_Results struct{ capnp.Struct }

// Net_netLocate_Results_TypeID is the unique identifier for the type Net_netLocate_Results.
const Net_netLocate_Results_TypeID = 0xd2117353ea065c72

func NewNet_netLocate_Results(s *capnp.Segment) (Net_netLocate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocate_Results{st}, err
}

func NewRootNet_netLocate_Results(s *capnp.Segment) (Net_netLocate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocate_Results{st}, err
}

func ReadRootNet_netLocate_Results(msg *capnp.Message) (Net_netLocate_Results, error) {
	root, err := msg.RootPtr()
	return Net_netLocate_Results{root.Struct()}, err
}

func (s Net_netLocate_Results) String() string {
	str, _ := text.Marshal(0xd2117353ea065c72, s.Struct)
	return str
}

func (s Net_netLocate_Results) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Net_netLocate_Results) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Net_netLocate_Results_List is a list of Net_netLocate_Results.
type Net_netLocate_Results_List struct{ capnp.List }

// NewNet_netLocate_Results creates a new list of Net_netLocate_Results.
func NewNet_netLocate_Results_List(s *capnp.Segment, sz int32) (Net_netLocate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_netLocate_Results_List{l}, err
}

func (s Net_netLocate_Results_List) At(i int) Net_netLocate_Results {
	return Net_netLocate_Results{s.List.Struct(i)}
}

func (s Net_netLocate_Results_List) Set(i int, v Net_netLocate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocate_Results_List) String() string {
	str, _ := text.MarshalList(0xd2117353ea065c72, s.List)
	return str
}

// Net_netLocate_Results_Promise is a wrapper for a Net_netLocate_Results promised by a client call.
type Net_netLocate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_netLocate_Results_Promise) Struct() (Net_netLocate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocate_Results{s}, err
}

type Net_netLocateNext_Params struct{ capnp.Struct }

// Net_netLocateNext_Params_TypeID is the unique identifier for the type Net_netLocateNext_Params.
const Net_netLocateNext_Params_TypeID = 0xc338177a5379031a

func NewNet_netLocateNext_Params(s *capnp.Segment) (Net_netLocateNext_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocateNext_Params{st}, err
}

func NewRootNet_netLocateNext_Params(s *capnp.Segment) (Net_netLocateNext_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocateNext_Params{st}, err
}

func ReadRootNet_netLocateNext_Params(msg *capnp.Message) (Net_netLocateNext_Params, error) {
	root, err := msg.RootPtr()
	return Net_netLocateNext_Params{root.Struct()}, err
}

func (s Net_netLocateNext_Params) String() string {
	str, _ := text.Marshal(0xc338177a5379031a, s.Struct)
	return str
}

func (s Net_netLocateNext_Params) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Net_netLocateNext_Params) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Net_netLocateNext_Params_List is a list of Net_netLocateNext_Params.
type Net_netLocateNext_Params_List struct{ capnp.List }

// NewNet_netLocateNext_Params creates a new list of Net_netLocateNext_Params.
func NewNet_netLocateNext_Params_List(s *capnp.Segment, sz int32) (Net_netLocateNext_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_netLocateNext_Params_List{l}, err
}

func (s Net_netLocateNext_Params_List) At(i int) Net_netLocateNext_Params {
	return Net_netLocateNext_Params{s.List.Struct(i)}
}

func (s Net_netLocateNext_Params_List) Set(i int, v Net_netLocateNext_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocateNext_Params_List) String() string {
	str, _ := text.MarshalList(0xc338177a5379031a, s.List)
	return str
}

// Net_netLocateNext_Params_Promise is a wrapper for a Net_netLocateNext_Params promised by a client call.
type Net_netLocateNext_Params_Promise struct{ *capnp.Pipeline }

func (p Net_netLocateNext_Params_Promise) Struct() (Net_netLocateNext_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocateNext_Params{s}, err
}

type Net_netLocateNext_Results struct{ capnp.Struct }

// Net_netLocateNext_Results_TypeID is the unique identifier for the type Net_netLocateNext_Results.
const Net_netLocateNext_Results_TypeID = 0x9a291d6964350a5b

func NewNet_netLocateNext_Results(s *capnp.Segment) (Net_netLocateNext_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_netLocateNext_Results{st}, err
}

func NewRootNet_netLocateNext_Results(s *capnp.Segment) (Net_netLocateNext_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_netLocateNext_Results{st}, err
}

func ReadRootNet_netLocateNext_Results(msg *capnp.Message) (Net_netLocateNext_Results, error) {
	root, err := msg.RootPtr()
	return Net_netLocateNext_Results{root.Struct()}, err
}

func (s Net_netLocateNext_Results) String() string {
	str, _ := text.Marshal(0x9a291d6964350a5b, s.Struct)
	return str
}

func (s Net_netLocateNext_Results) Result() (LocateResult, error) {
	p, err := s.Struct.Ptr(0)
	return LocateResult{Struct: p.Struct()}, err
}

func (s Net_netLocateNext_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_netLocateNext_Results) SetResult(v LocateResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated LocateResult struct, preferring placement in s's segment.
func (s Net_netLocateNext_Results) NewResult() (LocateResult, error) {
	ss, err := NewLocateResult(s.Struct.Segment())
	if err != nil {
		return LocateResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_netLocateNext_Results_List is a list of Net_netLocateNext_Results.
type Net_netLocateNext_Results_List struct{ capnp.List }

// NewNet_netLocateNext_Results creates a new list of Net_netLocateNext_Results.
func NewNet_netLocateNext_Results_List(s *capnp.Segment, sz int32) (Net_netLocateNext_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_netLocateNext_Results_List{l}, err
}

func (s Net_netLocateNext_Results_List) At(i int) Net_netLocateNext_Results {
	return Net_netLocateNext_Results{s.List.Struct(i)}
}

func (s Net_netLocateNext_Results_List) Set(i int, v Net_netLocateNext_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocateNext_Results_List) String() string {
	str, _ := text.MarshalList(0x9a291d6964350a5b, s.List)
	return str
}

// Net_netLocateNext_Results_Promise is a wrapper for a Net_netLocateNext_Results promised by a client call.
type Net_netLocateNext_Results_Promise struct{ *capnp.Pipeline }

func (p Net_netLocateNext_Results_Promise) Struct() (Net_netLocateNext_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocateNext_Results{s}, err
}

func (p Net_netLocateNext_Results_Promise) Result() LocateResult_Promise {
	return LocateResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_whoami_Params struct{ capnp.Struct }

// Net_whoami_Params_TypeID is the unique identifier for the type Net_whoami_Params.
const Net_whoami_Params_TypeID = 0x86541181da6400f7

func NewNet_whoami_Params(s *capnp.Segment) (Net_whoami_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_whoami_Params{st}, err
}

func NewRootNet_whoami_Params(s *capnp.Segment) (Net_whoami_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_whoami_Params{st}, err
}

func ReadRootNet_whoami_Params(msg *capnp.Message) (Net_whoami_Params, error) {
	root, err := msg.RootPtr()
	return Net_whoami_Params{root.Struct()}, err
}

func (s Net_whoami_Params) String() string {
	str, _ := text.Marshal(0x86541181da6400f7, s.Struct)
	return str
}

// Net_whoami_Params_List is a list of Net_whoami_Params.
type Net_whoami_Params_List struct{ capnp.List }

// NewNet_whoami_Params creates a new list of Net_whoami_Params.
func NewNet_whoami_Params_List(s *capnp.Segment, sz int32) (Net_whoami_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_whoami_Params_List{l}, err
}

func (s Net_whoami_Params_List) At(i int) Net_whoami_Params {
	return Net_whoami_Params{s.List.Struct(i)}
}

func (s Net_whoami_Params_List) Set(i int, v Net_whoami_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_whoami_Params_List) String() string {
	str, _ := text.MarshalList(0x86541181da6400f7, s.List)
	return str
}

// Net_whoami_Params_Promise is a wrapper for a Net_whoami_Params promised by a client call.
type Net_whoami_Params_Promise struct{ *capnp.Pipeline }

func (p Net_whoami_Params_Promise) Struct() (Net_whoami_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_whoami_Params{s}, err
}

type Net_whoami_Results struct{ capnp.Struct }

// Net_whoami_Results_TypeID is the unique identifier for the type Net_whoami_Results.
const Net_whoami_Results_TypeID = 0xd0071dd673841599

func NewNet_whoami_Results(s *capnp.Segment) (Net_whoami_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_whoami_Results{st}, err
}

func NewRootNet_whoami_Results(s *capnp.Segment) (Net_whoami_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_whoami_Results{st}, err
}

func ReadRootNet_whoami_Results(msg *capnp.Message) (Net_whoami_Results, error) {
	root, err := msg.RootPtr()
	return Net_whoami_Results{root.Struct()}, err
}

func (s Net_whoami_Results) String() string {
	str, _ := text.Marshal(0xd0071dd673841599, s.Struct)
	return str
}

func (s Net_whoami_Results) Whoami() (Identity, error) {
	p, err := s.Struct.Ptr(0)
	return Identity{Struct: p.Struct()}, err
}

func (s Net_whoami_Results) HasWhoami() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_whoami_Results) SetWhoami(v Identity) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWhoami sets the whoami field to a newly
// allocated Identity struct, preferring placement in s's segment.
func (s Net_whoami_Results) NewWhoami() (Identity, error) {
	ss, err := NewIdentity(s.Struct.Segment())
	if err != nil {
		return Identity{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_whoami_Results_List is a list of Net_whoami_Results.
type Net_whoami_Results_List struct{ capnp.List }

// NewNet_whoami_Results creates a new list of Net_whoami_Results.
func NewNet_whoami_Results_List(s *capnp.Segment, sz int32) (Net_whoami_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_whoami_Results_List{l}, err
}

func (s Net_whoami_Results_List) At(i int) Net_whoami_Results {
	return Net_whoami_Results{s.List.Struct(i)}
}

func (s Net_whoami_Results_List) Set(i int, v Net_whoami_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_whoami_Results_List) String() string {
	str, _ := text.MarshalList(0xd0071dd673841599, s.List)
	return str
}

// Net_whoami_Results_Promise is a wrapper for a Net_whoami_Results promised by a client call.
type Net_whoami_Results_Promise struct{ *capnp.Pipeline }

func (p Net_whoami_Results_Promise) Struct() (Net_whoami_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_whoami_Results{s}, err
}

func (p Net_whoami_Results_Promise) Whoami() Identity_Promise {
	return Identity_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_connect_Params struct{ capnp.Struct }

// Net_connect_Params_TypeID is the unique identifier for the type Net_connect_Params.
const Net_connect_Params_TypeID = 0xaf631f5cddda9aa3

func NewNet_connect_Params(s *capnp.Segment) (Net_connect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Params{st}, err
}

func NewRootNet_connect_Params(s *capnp.Segment) (Net_connect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Params{st}, err
}

func ReadRootNet_connect_Params(msg *capnp.Message) (Net_connect_Params, error) {
	root, err := msg.RootPtr()
	return Net_connect_Params{root.Struct()}, err
}

func (s Net_connect_Params) String() string {
	str, _ := text.Marshal(0xaf631f5cddda9aa3, s.Struct)
	return str
}

// Net_connect_Params_List is a list of Net_connect_Params.
type Net_connect_Params_List struct{ capnp.List }

// NewNet_connect_Params creates a new list of Net_connect_Params.
func NewNet_connect_Params_List(s *capnp.Segment, sz int32) (Net_connect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_connect_Params_List{l}, err
}

func (s Net_connect_Params_List) At(i int) Net_connect_Params {
	return Net_connect_Params{s.List.Struct(i)}
}

func (s Net_connect_Params_List) Set(i int, v Net_connect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_connect_Params_List) String() string {
	str, _ := text.MarshalList(0xaf631f5cddda9aa3, s.List)
	return str
}

// Net_connect_Params_Promise is a wrapper for a Net_connect_Params promised by a client call.
type Net_connect_Params_Promise struct{ *capnp.Pipeline }

func (p Net_connect_Params_Promise) Struct() (Net_connect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_connect_Params{s}, err
}

type Net_connect_Results struct{ capnp.Struct }

// Net_connect_Results_TypeID is the unique identifier for the type Net_connect_Results.
const Net_connect_Results_TypeID = 0xcb6e3e65f2dbc914

func NewNet_connect_Results(s *capnp.Segment) (Net_connect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Results{st}, err
}

func NewRootNet_connect_Results(s *capnp.Segment) (Net_connect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Results{st}, err
}

func ReadRootNet_connect_Results(msg *capnp.Message) (Net_connect_Results, error) {
	root, err := msg.RootPtr()
	return Net_connect_Results{root.Struct()}, err
}

func (s Net_connect_Results) String() string {
	str, _ := text.Marshal(0xcb6e3e65f2dbc914, s.Struct)
	return str
}

// Net_connect_Results_List is a list of Net_connect_Results.
type Net_connect_Results_List struct{ capnp.List }

// NewNet_connect_Results creates a new list of Net_connect_Results.
func NewNet_connect_Results_List(s *capnp.Segment, sz int32) (Net_connect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_connect_Results_List{l}, err
}

func (s Net_connect_Results_List) At(i int) Net_connect_Results {
	return Net_connect_Results{s.List.Struct(i)}
}

func (s Net_connect_Results_List) Set(i int, v Net_connect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_connect_Results_List) String() string {
	str, _ := text.MarshalList(0xcb6e3e65f2dbc914, s.List)
	return str
}

// Net_connect_Results_Promise is a wrapper for a Net_connect_Results promised by a client call.
type Net_connect_Results_Promise struct{ *capnp.Pipeline }

func (p Net_connect_Results_Promise) Struct() (Net_connect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_connect_Results{s}, err
}

type Net_disconnect_Params struct{ capnp.Struct }

// Net_disconnect_Params_TypeID is the unique identifier for the type Net_disconnect_Params.
const Net_disconnect_Params_TypeID = 0xe19b7cffa7304650

func NewNet_disconnect_Params(s *capnp.Segment) (Net_disconnect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Params{st}, err
}

func NewRootNet_disconnect_Params(s *capnp.Segment) (Net_disconnect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Params{st}, err
}

func ReadRootNet_disconnect_Params(msg *capnp.Message) (Net_disconnect_Params, error) {
	root, err := msg.RootPtr()
	return Net_disconnect_Params{root.Struct()}, err
}

func (s Net_disconnect_Params) String() string {
	str, _ := text.Marshal(0xe19b7cffa7304650, s.Struct)
	return str
}

// Net_disconnect_Params_List is a list of Net_disconnect_Params.
type Net_disconnect_Params_List struct{ capnp.List }

// NewNet_disconnect_Params creates a new list of Net_disconnect_Params.
func NewNet_disconnect_Params_List(s *capnp.Segment, sz int32) (Net_disconnect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_disconnect_Params_List{l}, err
}

func (s Net_disconnect_Params_List) At(i int) Net_disconnect_Params {
	return Net_disconnect_Params{s.List.Struct(i)}
}

func (s Net_disconnect_Params_List) Set(i int, v Net_disconnect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_disconnect_Params_List) String() string {
	str, _ := text.MarshalList(0xe19b7cffa7304650, s.List)
	return str
}

// Net_disconnect_Params_Promise is a wrapper for a Net_disconnect_Params promised by a client call.
type Net_disconnect_Params_Promise struct{ *capnp.Pipeline }

func (p Net_disconnect_Params_Promise) Struct() (Net_disconnect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_disconnect_Params{s}, err
}

type Net_disconnect_Results struct{ capnp.Struct }

// Net_disconnect_Results_TypeID is the unique identifier for the type Net_disconnect_Results.
const Net_disconnect_Results_TypeID = 0xb9095b6d17298884

func NewNet_disconnect_Results(s *capnp.Segment) (Net_disconnect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Results{st}, err
}

func NewRootNet_disconnect_Results(s *capnp.Segment) (Net_disconnect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Results{st}, err
}

func ReadRootNet_disconnect_Results(msg *capnp.Message) (Net_disconnect_Results, error) {
	root, err := msg.RootPtr()
	return Net_disconnect_Results{root.Struct()}, err
}

func (s Net_disconnect_Results) String() string {
	str, _ := text.Marshal(0xb9095b6d17298884, s.Struct)
	return str
}

// Net_disconnect_Results_List is a list of Net_disconnect_Results.
type Net_disconnect_Results_List struct{ capnp.List }

// NewNet_disconnect_Results creates a new list of Net_disconnect_Results.
func NewNet_disconnect_Results_List(s *capnp.Segment, sz int32) (Net_disconnect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_disconnect_Results_List{l}, err
}

func (s Net_disconnect_Results_List) At(i int) Net_disconnect_Results {
	return Net_disconnect_Results{s.List.Struct(i)}
}

func (s Net_disconnect_Results_List) Set(i int, v Net_disconnect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_disconnect_Results_List) String() string {
	str, _ := text.MarshalList(0xb9095b6d17298884, s.List)
	return str
}

// Net_disconnect_Results_Promise is a wrapper for a Net_disconnect_Results promised by a client call.
type Net_disconnect_Results_Promise struct{ *capnp.Pipeline }

func (p Net_disconnect_Results_Promise) Struct() (Net_disconnect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_disconnect_Results{s}, err
}

type Net_remoteOnlineList_Params struct{ capnp.Struct }

// Net_remoteOnlineList_Params_TypeID is the unique identifier for the type Net_remoteOnlineList_Params.
const Net_remoteOnlineList_Params_TypeID = 0xb13597d7a0d68f31

func NewNet_remoteOnlineList_Params(s *capnp.Segment) (Net_remoteOnlineList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteOnlineList_Params{st}, err
}

func NewRootNet_remoteOnlineList_Params(s *capnp.Segment) (Net_remoteOnlineList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteOnlineList_Params{st}, err
}

func ReadRootNet_remoteOnlineList_Params(msg *capnp.Message) (Net_remoteOnlineList_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteOnlineList_Params{root.Struct()}, err
}

func (s Net_remoteOnlineList_Params) String() string {
	str, _ := text.Marshal(0xb13597d7a0d68f31, s.Struct)
	return str
}

// Net_remoteOnlineList_Params_List is a list of Net_remoteOnlineList_Params.
type Net_remoteOnlineList_Params_List struct{ capnp.List }

// NewNet_remoteOnlineList_Params creates a new list of Net_remoteOnlineList_Params.
func NewNet_remoteOnlineList_Params_List(s *capnp.Segment, sz int32) (Net_remoteOnlineList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteOnlineList_Params_List{l}, err
}

func (s Net_remoteOnlineList_Params_List) At(i int) Net_remoteOnlineList_Params {
	return Net_remoteOnlineList_Params{s.List.Struct(i)}
}

func (s Net_remoteOnlineList_Params_List) Set(i int, v Net_remoteOnlineList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteOnlineList_Params_List) String() string {
	str, _ := text.MarshalList(0xb13597d7a0d68f31, s.List)
	return str
}

// Net_remoteOnlineList_Params_Promise is a wrapper for a Net_remoteOnlineList_Params promised by a client call.
type Net_remoteOnlineList_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteOnlineList_Params_Promise) Struct() (Net_remoteOnlineList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteOnlineList_Params{s}, err
}

type Net_remoteOnlineList_Results struct{ capnp.Struct }

// Net_remoteOnlineList_Results_TypeID is the unique identifier for the type Net_remoteOnlineList_Results.
const Net_remoteOnlineList_Results_TypeID = 0xb973694cb94aee47

func NewNet_remoteOnlineList_Results(s *capnp.Segment) (Net_remoteOnlineList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteOnlineList_Results{st}, err
}

func NewRootNet_remoteOnlineList_Results(s *capnp.Segment) (Net_remoteOnlineList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteOnlineList_Results{st}, err
}

func ReadRootNet_remoteOnlineList_Results(msg *capnp.Message) (Net_remoteOnlineList_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteOnlineList_Results{root.Struct()}, err
}

func (s Net_remoteOnlineList_Results) String() string {
	str, _ := text.Marshal(0xb973694cb94aee47, s.Struct)
	return str
}

func (s Net_remoteOnlineList_Results) Infos() (RemoteStatus_List, error) {
	p, err := s.Struct.Ptr(0)
	return RemoteStatus_List{List: p.List()}, err
}

func (s Net_remoteOnlineList_Results) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteOnlineList_Results) SetInfos(v RemoteStatus_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated RemoteStatus_List, preferring placement in s's segment.
func (s Net_remoteOnlineList_Results) NewInfos(n int32) (RemoteStatus_List, error) {
	l, err := NewRemoteStatus_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteStatus_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteOnlineList_Results_List is a list of Net_remoteOnlineList_Results.
type Net_remoteOnlineList_Results_List struct{ capnp.List }

// NewNet_remoteOnlineList_Results creates a new list of Net_remoteOnlineList_Results.
func NewNet_remoteOnlineList_Results_List(s *capnp.Segment, sz int32) (Net_remoteOnlineList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteOnlineList_Results_List{l}, err
}

func (s Net_remoteOnlineList_Results_List) At(i int) Net_remoteOnlineList_Results {
	return Net_remoteOnlineList_Results{s.List.Struct(i)}
}

func (s Net_remoteOnlineList_Results_List) Set(i int, v Net_remoteOnlineList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteOnlineList_Results_List) String() string {
	str, _ := text.MarshalList(0xb973694cb94aee47, s.List)
	return str
}

// Net_remoteOnlineList_Results_Promise is a wrapper for a Net_remoteOnlineList_Results promised by a client call.
type Net_remoteOnlineList_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteOnlineList_Results_Promise) Struct() (Net_remoteOnlineList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteOnlineList_Results{s}, err
}

type Net_remoteByName_Params struct{ capnp.Struct }

// Net_remoteByName_Params_TypeID is the unique identifier for the type Net_remoteByName_Params.
const Net_remoteByName_Params_TypeID = 0x91ac69870ceff408

func NewNet_remoteByName_Params(s *capnp.Segment) (Net_remoteByName_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Params{st}, err
}

func NewRootNet_remoteByName_Params(s *capnp.Segment) (Net_remoteByName_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Params{st}, err
}

func ReadRootNet_remoteByName_Params(msg *capnp.Message) (Net_remoteByName_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteByName_Params{root.Struct()}, err
}

func (s Net_remoteByName_Params) String() string {
	str, _ := text.Marshal(0x91ac69870ceff408, s.Struct)
	return str
}

func (s Net_remoteByName_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remoteByName_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteByName_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remoteByName_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remoteByName_Params_List is a list of Net_remoteByName_Params.
type Net_remoteByName_Params_List struct{ capnp.List }

// NewNet_remoteByName_Params creates a new list of Net_remoteByName_Params.
func NewNet_remoteByName_Params_List(s *capnp.Segment, sz int32) (Net_remoteByName_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteByName_Params_List{l}, err
}

func (s Net_remoteByName_Params_List) At(i int) Net_remoteByName_Params {
	return Net_remoteByName_Params{s.List.Struct(i)}
}

func (s Net_remoteByName_Params_List) Set(i int, v Net_remoteByName_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteByName_Params_List) String() string {
	str, _ := text.MarshalList(0x91ac69870ceff408, s.List)
	return str
}

// Net_remoteByName_Params_Promise is a wrapper for a Net_remoteByName_Params promised by a client call.
type Net_remoteByName_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteByName_Params_Promise) Struct() (Net_remoteByName_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteByName_Params{s}, err
}

type Net_remoteByName_Results struct{ capnp.Struct }

// Net_remoteByName_Results_TypeID is the unique identifier for the type Net_remoteByName_Results.
const Net_remoteByName_Results_TypeID = 0xac6cc5b649f638a8

func NewNet_remoteByName_Results(s *capnp.Segment) (Net_remoteByName_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Results{st}, err
}

func NewRootNet_remoteByName_Results(s *capnp.Segment) (Net_remoteByName_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Results{st}, err
}

func ReadRootNet_remoteByName_Results(msg *capnp.Message) (Net_remoteByName_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteByName_Results{root.Struct()}, err
}

func (s Net_remoteByName_Results) String() string {
	str, _ := text.Marshal(0xac6cc5b649f638a8, s.Struct)
	return str
}

func (s Net_remoteByName_Results) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteByName_Results) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteByName_Results) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteByName_Results) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteByName_Results_List is a list of Net_remoteByName_Results.
type Net_remoteByName_Results_List struct{ capnp.List }

// NewNet_remoteByName_Results creates a new list of Net_remoteByName_Results.
func NewNet_remoteByName_Results_List(s *capnp.Segment, sz int32) (Net_remoteByName_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteByName_Results_List{l}, err
}

func (s Net_remoteByName_Results_List) At(i int) Net_remoteByName_Results {
	return Net_remoteByName_Results{s.List.Struct(i)}
}

func (s Net_remoteByName_Results_List) Set(i int, v Net_remoteByName_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteByName_Results_List) String() string {
	str, _ := text.MarshalList(0xac6cc5b649f638a8, s.List)
	return str
}

// Net_remoteByName_Results_Promise is a wrapper for a Net_remoteByName_Results promised by a client call.
type Net_remoteByName_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteByName_Results_Promise) Struct() (Net_remoteByName_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteByName_Results{s}, err
}

func (p Net_remoteByName_Results_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type API struct{ Client capnp.Client }

// API_TypeID is the unique identifier for the type API.
const API_TypeID = 0xfc487818328b97ef

func (c API) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tar(ctx context.Context, params func(FS_tar_Params) error, opts ...capnp.CallOption) FS_tar_Results_Promise {
	if c.Client == nil {
		return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_tar_Params{Struct: s}) }
	}
	return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) DeletedNodes(ctx context.Context, params func(FS_deletedNodes_Params) error, opts ...capnp.CallOption) FS_deletedNodes_Results_Promise {
	if c.Client == nil {
		return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_deletedNodes_Params{Struct: s}) }
	}
	return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Undelete(ctx context.Context, params func(FS_undelete_Params) error, opts ...capnp.CallOption) FS_undelete_Results_Promise {
	if c.Client == nil {
		return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_undelete_Params{Struct: s}) }
	}
	return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Repin(ctx context.Context, params func(FS_repin_Params) error, opts ...capnp.CallOption) FS_repin_Results_Promise {
	if c.Client == nil {
		return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_repin_Params{Struct: s}) }
	}
	return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) CommitInfo(ctx context.Context, params func(VCS_commitInfo_Params) error, opts ...capnp.CallOption) VCS_commitInfo_Results_Promise {
	if c.Client == nil {
		return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commitInfo_Params{Struct: s}) }
	}
	return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Quit(ctx context.Context, params func(Repo_quit_Params) error, opts ...capnp.CallOption) Repo_quit_Results_Promise {
	if c.Client == nil {
		return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_quit_Params{Struct: s}) }
	}
	return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Ping(ctx context.Context, params func(Repo_ping_Params) error, opts ...capnp.CallOption) Repo_ping_Results_Promise {
	if c.Client == nil {
		return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_ping_Params{Struct: s}) }
	}
	return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Init(ctx context.Context, params func(Repo_init_Params) error, opts ...capnp.CallOption) Repo_init_Results_Promise {
	if c.Client == nil {
		return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_init_Params{Struct: s}) }
	}
	return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mount(ctx context.Context, params func(Repo_mount_Params) error, opts ...capnp.CallOption) Repo_mount_Results_Promise {
	if c.Client == nil {
		return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_mount_Params{Struct: s}) }
	}
	return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unmount(ctx context.Context, params func(Repo_unmount_Params) error, opts ...capnp.CallOption) Repo_unmount_Results_Promise {
	if c.Client == nil {
		return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_unmount_Params{Struct: s}) }
	}
	return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigGet(ctx context.Context, params func(Repo_configGet_Params) error, opts ...capnp.CallOption) Repo_configGet_Results_Promise {
	if c.Client == nil {
		return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configGet_Params{Struct: s}) }
	}
	return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigSet(ctx context.Context, params func(Repo_configSet_Params) error, opts ...capnp.CallOption) Repo_configSet_Results_Promise {
	if c.Client == nil {
		return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configSet_Params{Struct: s}) }
	}
	return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigAll(ctx context.Context, params func(Repo_configAll_Params) error, opts ...capnp.CallOption) Repo_configAll_Results_Promise {
	if c.Client == nil {
		return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configAll_Params{Struct: s}) }
	}
	return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigDoc(ctx context.Context, params func(Repo_configDoc_Params) error, opts ...capnp.CallOption) Repo_configDoc_Results_Promise {
	if c.Client == nil {
		return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configDoc_Params{Struct: s}) }
	}
	return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Become(ctx context.Context, params func(Repo_become_Params) error, opts ...capnp.CallOption) Repo_become_Results_Promise {
	if c.Client == nil {
		return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_become_Params{Struct: s}) }
	}
	return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabAdd(ctx context.Context, params func(Repo_fstabAdd_Params) error, opts ...capnp.CallOption) Repo_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabAdd_Params{Struct: s}) }
	}
	return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabRemove(ctx context.Context, params func(Repo_fstabRemove_Params) error, opts ...capnp.CallOption) Repo_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabRemove_Params{Struct: s}) }
	}
	return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabApply(ctx context.Context, params func(Repo_fstabApply_Params) error, opts ...capnp.CallOption) Repo_fstabApply_Results_Promise {
	if c.Client == nil {
		return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabApply_Params{Struct: s}) }
	}
	return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabList(ctx context.Context, params func(Repo_fstabList_Params) error, opts ...capnp.CallOption) Repo_fstabList_Results_Promise {
	if c.Client == nil {
		return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabList_Params{Struct: s}) }
	}
	return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabUnmountAll(ctx context.Context, params func(Repo_fstabUnmountAll_Params) error, opts ...capnp.CallOption) Repo_fstabUnmountAll_Results_Promise {
	if c.Client == nil {
		return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabUnmountAll_Params{Struct: s}) }
	}
	return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Version(ctx context.Context, params func(Repo_version_Params) error, opts ...capnp.CallOption) Repo_version_Results_Promise {
	if c.Client == nil {
		return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_version_Params{Struct: s}) }
	}
	return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) WaitForInit(ctx context.Context, params func(Repo_waitForInit_Params) error, opts ...capnp.CallOption) Repo_waitForInit_Results_Promise {
	if c.Client == nil {
		return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_waitForInit_Params{Struct: s}) }
	}
	return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserAdd(ctx context.Context, params func(Repo_gatewayUserAdd_Params) error, opts ...capnp.CallOption) Repo_gatewayUserAdd_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserAdd_Params{Struct: s}) }
	}
	return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserRm(ctx context.Context, params func(Repo_gatewayUserRm_Params) error, opts ...capnp.CallOption) Repo_gatewayUserRm_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserRm_Params{Struct: s}) }
	}
	return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserList(ctx context.Context, params func(Repo_gatewayUserList_Params) error, opts ...capnp.CallOption) Repo_gatewayUserList_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserList_Params{Struct: s}) }
	}
	return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteAddOrUpdate(ctx context.Context, params func(Net_remoteAddOrUpdate_Params) error, opts ...capnp.CallOption) Net_remoteAddOrUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteAddOrUpdate_Params{Struct: s}) }
	}
	return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteRm(ctx context.Context, params func(Net_remoteRm_Params) error, opts ...capnp.CallOption) Net_remoteRm_Results_Promise {
	if c.Client == nil {
		return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteRm_Params{Struct: s}) }
	}
	return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteLs(ctx context.Context, params func(Net_remoteLs_Params) error, opts ...capnp.CallOption) Net_remoteLs_Results_Promise {
	if c.Client == nil {
		return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteLs_Params{Struct: s}) }
	}
	return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteUpdate(ctx context.Context, params func(Net_remoteUpdate_Params) error, opts ...capnp.CallOption) Net_remoteUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteUpdate_Params{Struct: s}) }
	}
	return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteSave(ctx context.Context, params func(Net_remoteSave_Params) error, opts ...capnp.CallOption) Net_remoteSave_Results_Promise {
	if c.Client == nil {
		return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteSave_Params{Struct: s}) }
	}
	return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemotePing(ctx context.Context, params func(Net_remotePing_Params) error, opts ...capnp.CallOption) Net_remotePing_Results_Promise {
	if c.Client == nil {
		return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remotePing_Params{Struct: s}) }
	}
	return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteClear(ctx context.Context, params func(Net_remoteClear_Params) error, opts ...capnp.CallOption) Net_remoteClear_Results_Promise {
	if c.Client == nil {
		return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteClear_Params{Struct: s}) }
	}
	return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocate(ctx context.Context, params func(Net_netLocate_Params) error, opts ...capnp.CallOption) Net_netLocate_Results_Promise {
	if c.Client == nil {
		return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocate_Params{Struct: s}) }
	}
	return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocateNext(ctx context.Context, params func(Net_netLocateNext_Params) error, opts ...capnp.CallOption) Net_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocateNext_Params{Struct: s}) }
	}
	return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Whoami(ctx context.Context, params func(Net_whoami_Params) error, opts ...capnp.CallOption) Net_whoami_Results_Promise {
	if c.Client == nil {
		return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_whoami_Params{Struct: s}) }
	}
	return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Connect(ctx context.Context, params func(Net_connect_Params) error, opts ...capnp.CallOption) Net_connect_Results_Promise {
	if c.Client == nil {
		return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_connect_Params{Struct: s}) }
	}
	return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Disconnect(ctx context.Context, params func(Net_disconnect_Params) error, opts ...capnp.CallOption) Net_disconnect_Results_Promise {
	if c.Client == nil {
		return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_disconnect_Params{Struct: s}) }
	}
	return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteOnlineList(ctx context.Context, params func(Net_remoteOnlineList_Params) error, opts ...capnp.CallOption) Net_remoteOnlineList_Results_Promise {
	if c.Client == nil {
		return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteOnlineList_Params{Struct: s}) }
	}
	return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteByName(ctx context.Context, params func(Net_remoteByName_Params) error, opts ...capnp.CallOption) Net_remoteByName_Results_Promise {
	if c.Client == nil {
		return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteByName_Params{Struct: s}) }
	}
	return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type API_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	Tar(FS_tar) error

	DeletedNodes(FS_deletedNodes) error

	Undelete(FS_undelete) error

	Repin(FS_repin) error

	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	CommitInfo(VCS_commitInfo) error

	Quit(Repo_quit) error

	Ping(Repo_ping) error

	Init(Repo_init) error

	Mount(Repo_mount) error

	Unmount(Repo_unmount) error

	ConfigGet(Repo_configGet) error

	ConfigSet(Repo_configSet) error

	ConfigAll(Repo_configAll) error

	ConfigDoc(Repo_configDoc) error

	Become(Repo_become) error

	FstabAdd(Repo_fstabAdd) error

	FstabRemove(Repo_fstabRemove) error

	FstabApply(Repo_fstabApply) error

	FstabList(Repo_fstabList) error

	FstabUnmountAll(Repo_fstabUnmountAll) error

	Version(Repo_version) error

	WaitForInit(Repo_waitForInit) error

	GatewayUserAdd(Repo_gatewayUserAdd) error

	GatewayUserRm(Repo_gatewayUserRm) error

	GatewayUserList(Repo_gatewayUserList) error

	RemoteAddOrUpdate(Net_remoteAddOrUpdate) error

	RemoteRm(Net_remoteRm) error

	RemoteLs(Net_remoteLs) error

	RemoteUpdate(Net_remoteUpdate) error

	RemoteSave(Net_remoteSave) error

	RemotePing(Net_remotePing) error

	RemoteClear(Net_remoteClear) error

	NetLocate(Net_netLocate) error

	NetLocateNext(Net_netLocateNext) error

	Whoami(Net_whoami) error

	Connect(Net_connect) error

	Disconnect(Net_disconnect) error

	RemoteOnlineList(Net_remoteOnlineList) error

	RemoteByName(Net_remoteByName) error
}

func API_ServerToClient(s API_Server) API {
	c, _ := s.(server.Closer)
	return API{Client: server.New(API_Methods(nil, s), c)}
}

func API_Methods(methods []server.Method, s API_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 61)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_tar{c, opts, FS_tar_Params{Struct: p}, FS_tar_Results{Struct: r}}
			return s.Tar(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_deletedNodes{c, opts, FS_deletedNodes_Params{Struct: p}, FS_deletedNodes_Results{Struct: r}}
			return s.DeletedNodes(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_undelete{c, opts, FS_undelete_Params{Struct: p}, FS_undelete_Results{Struct: r}}
			return s.Undelete(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_repin{c, opts, FS_repin_Params{Struct: p}, FS_repin_Results{Struct: r}}
			return s.Repin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commitInfo{c, opts, VCS_commitInfo_Params{Struct: p}, VCS_commitInfo_Results{Struct: r}}
			return s.CommitInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_quit{c, opts, Repo_quit_Params{Struct: p}, Repo_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_ping{c, opts, Repo_ping_Params{Struct: p}, Repo_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_init{c, opts, Repo_init_Params{Struct: p}, Repo_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_mount{c, opts, Repo_mount_Params{Struct: p}, Repo_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_unmount{c, opts, Repo_unmount_Params{Struct: p}, Repo_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configGet{c, opts, Repo_configGet_Params{Struct: p}, Repo_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configSet{c, opts, Repo_configSet_Params{Struct: p}, Repo_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configAll{c, opts, Repo_configAll_Params{Struct: p}, Repo_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configDoc{c, opts, Repo_configDoc_Params{Struct: p}, Repo_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_become{c, opts, Repo_become_Params{Struct: p}, Repo_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabAdd{c, opts, Repo_fstabAdd_Params{Struct: p}, Repo_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabRemove{c, opts, Repo_fstabRemove_Params{Struct: p}, Repo_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabApply{c, opts, Repo_fstabApply_Params{Struct: p}, Repo_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabList{c, opts, Repo_fstabList_Params{Struct: p}, Repo_fstabList_Results{Struct: r}}
			return s.FstabList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabUnmountAll{c, opts, Repo_fstabUnmountAll_Params{Struct: p}, Repo_fstabUnmountAll_Results{Struct: r}}
			return s.FstabUnmountAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_version{c, opts, Repo_version_Params{Struct: p}, Repo_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_waitForInit{c, opts, Repo_waitForInit_Params{Struct: p}, Repo_waitForInit_Results{Struct: r}}
			return s.WaitForInit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserAdd{c, opts, Repo_gatewayUserAdd_Params{Struct: p}, Repo_gatewayUserAdd_Results{Struct: r}}
			return s.GatewayUserAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserRm{c, opts, Repo_gatewayUserRm_Params{Struct: p}, Repo_gatewayUserRm_Results{Struct: r}}
			return s.GatewayUserRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserList{c, opts, Repo_gatewayUserList_Params{Struct: p}, Repo_gatewayUserList_Results{Struct: r}}
			return s.GatewayUserList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteAddOrUpdate{c, opts, Net_remoteAddOrUpdate_Params{Struct: p}, Net_remoteAddOrUpdate_Results{Struct: r}}
			return s.RemoteAddOrUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteRm{c, opts, Net_remoteRm_Params{Struct: p}, Net_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteLs{c, opts, Net_remoteLs_Params{Struct: p}, Net_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteUpdate{c, opts, Net_remoteUpdate_Params{Struct: p}, Net_remoteUpdate_Results{Struct: r}}
			return s.RemoteUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteSave{c, opts, Net_remoteSave_Params{Struct: p}, Net_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remotePing{c, opts, Net_remotePing_Params{Struct: p}, Net_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteClear{c, opts, Net_remoteClear_Params{Struct: p}, Net_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocate{c, opts, Net_netLocate_Params{Struct: p}, Net_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocateNext{c, opts, Net_netLocateNext_Params{Struct: p}, Net_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_whoami{c, opts, Net_whoami_Params{Struct: p}, Net_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_connect{c, opts, Net_connect_Params{Struct: p}, Net_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_disconnect{c, opts, Net_disconnect_Params{Struct: p}, Net_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteOnlineList{c, opts, Net_remoteOnlineList_Params{Struct: p}, Net_remoteOnlineList_Results{Struct: r}}
			return s.RemoteOnlineList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteByName{c, opts, Net_remoteByName_Params{Struct: p}, Net_remoteByName_Results{Struct: r}}
			return s.RemoteByName(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

const schema_ea883e7d5248d81b = "x\xda\xb4|{|\x14E\xbah}\xdd\x09-B\x08" +
	"c\x07\x95,0C\xe4\x19 \x90@\xae\x10\xc0\xbc\x81" +
	"px\xa4g\x08b\x16\\;3\x95\xa4a^tw" +
	"\x08a\xe5\xf0X\x10\xf1\x88oDP\x8e\x8fsYA" +
	"e\x11]\xd7\x83.\xae\xabr<\xec\xea]APQ" +
	"\xf0\xc8\x1e8+\x1e9\x88\x8a+.\xec\xdc_UO" +
	"u\xd7$\x93\xcc\x84\xeb\xfd+\x99\xea\xaf\xaa\xbe\xaa\xfa" +
	"\xde\xdfW5\xee\xaa\xeb\xcb\x84\xc2\xcc-\xe3\x11\xf2-" +
	"\x102{\xc4\\?\xef\x7f\xdc\x98\xb3}5R<\x00" +
	"\x08eH\x08\x8d\xdf\xdb\xbf\x01\x10\xc8\xfb\xfb\x97\"\x88" +
	"\x9d\x1a\xf4\xf9\x91\xa3\x19\xdf\xacE\xae<@(\x13\x08" +
	"\xc0\x89\xfe\x87\x09\xc0y\x0ap\xa1\xe6\x17\xda\xd1\xa9\xbd" +
	"\xef\xb0\x00\xe8\x00\x83sW\x00\xca\xb8\xfc\xd7\xc0\xc7k" +
	"\\\xf3\xeep\x0df\xedY\xb4=\xf6\xe0U\xd9'\x7f" +
	"\xa8?v\x07?\xe4\xc5\xfe\xcf\x90!{\xe6\x92!\xbf" +
	"\xbf\x16\x8f\x1e\xf7\xcfom@.\x0f\xeb:&W'" +
	"]\xef\xdc\xf4Os\xb4\x89\x15wr_\xfa[_\x84" +
	"\x9fO\xc6g\x9e9}\x17\x87Ff\xeea\xf2\xc5\xf3" +
	"\xf6\xb6\xffuFy\xef\x1e\xe4\x1a\x08\xb1\x9f|4\xc3" +
	"\xbb\xf2\xa6;\xbf\xb0\xa7\xf5\x82\x9c\x95+\xc9Y\xb9n" +
	"\xb9\x9cL\xfe\x1fG\xc6\xe4\xcf\xc8\xd3\xees&P\xad" +
	"\x09\xae\xfa\xf6\\\xef\x0d\xdas\xf7#\xba\x1e\xab\xfb\xec" +
	"\\\x8a\xf5\"\x8a\xf5g\xbd>1\xf3\x1fZ\xf2 \x87" +
	"\xc1\xca\xdc?\x90\xae\xef-\x98\xd1\xb8\xc7\xaf=da" +
	"mu]\x9a\xbb\x96t]I\xbb\xbez\xf7\x9c\xa9/" +
	"\xfe\xf2\x9e\xcd<\xc0\xf6\xdcz\x02\xb0\x8b\x02\xe8\xc3\x1e" +
	":{\xe8\xe5\x9d\x9b\xb9u\x1f\xcc\xbd\x8b\x8c}q\xcb" +
	"\x07\x8b\xab\x94\xbf?\xcc\xcd\xba/\xf7\x05\xf2ez\xc5" +
	"\xd9?}\xef\x9a\xb5\x05)\x03\x81_8\x85\xd9\x95;" +
	"\x13\xe4\xfd\xb9\x92\xbc?\xd7=\xfel\xae\x1b\x10\xc4\x16" +
	"Bq\xee,\xef\xdd[\xb8\xa1`\x00]\xfb\xcd\xef," +
	"=\xf7`\xafq\x8f\xc4OL \x9f\xce\xfed\x05\xc1" +
	"\xef\xe2OZ\x11\xc4\xc2\xfdnh\xb9\xf6\xf8\x17\x8fp" +
	"]o\x19@\xf1\xfb$\xba{\xcc\x7fOy~+r" +
	"\xc8\xa0f\x00\xc5\xef\xa7W\x17\x07\xb4\x81#\xb7\xf1\x1b" +
	":i\xc0+d\xd0\x9a\x01d\xd1\x1b\xdb\xa4\xd7\x0e~" +
	"\xfe\xf0\xa3<\x9dh\x03\xb6\x11\x806\x0a\xf0\x98p\xf5" +
	"\x96\xebw>\xfdh|\xdb(Z[\x07,&\x00;" +
	"\x06\x10\xb4\xfa\xbaJkV\xb5\xf6\x7f,>\x02\x9d\xbd" +
	"\xe7@\x9d\x00\xf4\x1b\xf8\x17\x04\xb1\xeb\x94\xb9\x9f\xf6q" +
	"\xbf\xf8\x18O\xfe\xe7\x07\xbe@\x00`\x10\x99\"\xe6\xdd" +
	"\xd8v\xdd\x0f\x81\xed<\x0eC\x07\xd1\x95\x17R\x80\xef" +
	"\xae\xfdJ\xa8\xdar\xe9\x9f\xf9\xa3S\x06\xd1\xa3[D" +
	"\x01&\xaex\xe3\x81w\x0f\x7f\xfe8?\xc5\xcaA\x94" +
	"\xc36R\x80\x7f\x9fs\xdd\x1b\x9e\xe0\xca'\xf9\x11v" +
	"\x0dz\x8a\x00\xec\xa3\x00mg\xef\xf1?{z\xd7\x93" +
	"H\x19\x0c6\xc41\x0b\xe2\xcc \xb2\xceu\x13\xea\x9f" +
	"*\xf8\xd9\xb8\xa7\xc8Q\x8b\xdcQ\xf7\xa0\xdb\xed.\x02" +
	"\xf9\x16\xb7$\xdf\xe2v\x8f\xdf\xe4~Z@\x10[\xe2" +
	"\xf3\x95\x7f-W\xfc\x0b\xbf\xac\xba<:\"\xce#s" +
	"\xae\x1f\xb5\xf2\x80\xef\xfds\xff\x9b;\xb6\xf5y\x0d\xe4" +
	"\xd8^9|\xcd\x1fFLm\xd9\xc1\xafgi\x1e\xdd" +
	"\x91\x95\xb4\xeb\xcb;\xf6B\xe0\xe6q\xbf\xe4\xcfu{" +
	"\x1e=\xb6\xdd\x14 o\xd9\xda=\x87\xa7m|\x9a_" +
	"\xf0\xbby\x94\x93NP\x80\xfb\xcf\xafx\xfc\x81w\x1b" +
	"v\"\xd7@n5\x08\xc6g\xddp\x0d\xc8\x03o\xa0" +
	"l\x7f\x83\x94)\x87\x86I\x08\xc5\xae\x95\xb6|\xf2\xc4" +
	"\xbc\x07vr\xc4W7\xec)\x82\xeb\x84\xf9\x83b\xb3" +
	"~\xdas\x17?S\xf50z8\xca02S\xe8\xc8" +
	"_\xc2=\x9bV\xee\x8a\xe3J)h\xe90z8+" +
	"\x87\x91\x9d\x15\xaf\xe9\xed*hx,a\x84c\xc3(" +
	"\x05\x9d\xa6#,^;\x7f\xf8\x018\xb5\xab=\x97\x89" +
	"T\x02\x0d\xf7\x82\xdc\x7f\xb8$\xf7\x1f\xee\x1e_>\x9c" +
	"r\x19\xac\xac\x7f\xed\xb6\x12\xf9\x99\x0e\x8b[4\xe2j" +
	"\x90C#(\x95\x8f\xd8 \xca\x87\xf2\xc9\xe2\x06\xbf\xff" +
	"\xee\xd0uO?\xf2\x0c\xcf\xdf\xf9\x94)\xf7h\xb3\xee" +
	"9=c\xd0\xb3<j;\xf2)\xf5\xef\xcd'\xa8\xe5" +
	"G\xbe~\xf4\xd2\xbfm|\x96\x13\x1a\x87\xc8\xf7\x8c\xd8" +
	"\xd2\xd0\xe2}\xf7}\xf9\xe6\xb3\xfc\xf1\xef\xcf\xa7\xc7\xff" +
	".\xed\xbas\xe2w5\xbf9\x10|\x8e?\xc3\xb3\xf9" +
	"\x94/.S\x80O\xe5\xd3\xf9\x13\x7f{\xefs\x1cZ" +
	"\x03G=C\xc6^\\\xf9\xfe\xae\xb2\xac\x0b\xcf\xf1c" +
	"g\x8d\xa2c\x0f\x1cE\xbaj7\xbf\x19m\x88\xdd\xb8" +
	";N\xce\xb4\xefl\x0b`\x11\x05\xf8\x97m\x1f\x9fX" +
	"\xe8\xf6\xef\xe1ho\xcd\xa8\xb5dl\xf3\xde\xddw\xff" +
	"v\xe4\x7f\xee\xe1\xc7\x0e\x8dz\x80\x1e\x17\xed\xfa\x9e\xef" +
	"\xef\x9f\xfcG\xc1w{\x12ho\x14=\xae]\x14@" +
	"\xed3\xf9\x8f\xd7_\x1a\xf7|\x9cz-\x88\x83\xa3\xe8" +
	"\xae\x1d\x1dEN\xfc\xe5\xa5\x9fN(\xf9\xe8\xa7\xcf'" +
	"p[\xf1h\x0aQ>\x9a@\x14\xde\xfb\xc1\x13\x1fn" +
	")\xde\xcb\xe1\xb7c4\x15\xf4c\xdf\xfa\xf9c\x19\x0b" +
	"\x87\xbe\xc0O\xbfu4\xc5o\xd7h*\xb1fO\x7f" +
	"\xe3\x83\xcf\x1a^\xe0\xba\x1e\x1bM\x95b\xdd\xf6\x117" +
	"<\xb3\xe0\xf6_\xb7\xd3R\x14\xe4\xc0\xe8<\x90\x8f\x8e" +
	"\x96\xe4\xa3\xa3\xdd\xf2\xe5\xd1Dp\x99\xafO\xfe\xd3\xa0" +
	"\xe1\xbf{\x89\xdb\xff\x93c\xe8\xfe\xff\xea\xaf\xa7G\x14" +
	"\x8f?\xfe\x12\x8f\xc3\xa11\x94\xfdN\x8e!8\x9c\xbf" +
	"\xfc\xed\xf1\xdfO\x8d\xbc\xccKMW\x01\xa5\xf9\x81\x05" +
	"d}\x93Z\xfeq\xda\x92\x13\xef\xbd\xcc!\xd9V@" +
	"\xf7\x7f\xdd\x9d#\xaf\x0b\xfd\xb4\xe7>\xee\x0b.\xa0\x9c" +
	"6\xfd\x7ff\xee\x9b\xa5\x19\xfb\xf8Y\xeb\x0a\xa8\x99\xa0" +
	"\x15\x90Y\xf7\x0c\x9fu\xc3}\xa7\xb2^\xe1\xban-" +
	"\xa0+\x7f\xf1\xe3\xcbS\x9f\xd8u\xeb\xab<\x1d\xaf/" +
	"\xa0z`3\xed\xba\xfbx\xec\xc1\xfc\xf1\xbfx\x95[" +
	"\xeb\x81\x82m\xa4\xeb\xa5g\x7f\xff\xf8M\xde/\xf9/" +
	"/\x15\xd0\x93x\xe4\xad\x95\x15\x85\x0bg\xff\xb6=[" +
	"Z\xd2\xb5\xc0\x0b\xf2\xfe\x02\x09!y\x1f]\xf1\xf2\xd9" +
	"\xa3\xb7\xae\xbew\xd3~\x9e\x9a\xc7\xd2q\x1e\x9a\xe8[" +
	"\xfe\xcd\x9c\xa7\xf6\xf3\x14\xe7\x1aK\x91\x1b<\x96 \xf7" +
	"\x0f\x8f\xe7\xdc\xdeZ\xb3k?\xb7\xae\xf2\xb1\x94\xc9|" +
	"\x93\xc7=\xfce\xdbo\xf6\xf3\xeb\x1a3\x96\xd2\xd1$" +
	"\xdau\x9b\xefH\x9f\x9f\xbf\xba\xf4\xb5\xa4\xa2\xe3\x96\xb1" +
	"y kc%Y\x1b\xeb\x96\xb7\x8e%g^3e" +
	"\xf7\x97\x7f8\xfd\xcak\x1c\x96\x1b\xc7\xd1}\x88]w" +
	"\xdf\xe3\xde\xcfN\xbf\xc6\xef~\xdb8z\xe6\x1b\xc7\x91" +
	"\xa9\xa6\x9f\x99\xf7_\x1f|3\xe0w\x9c(\xd85\x8e" +
	"J\x91\xaa\xd2\x9b\xfe0y\xd9\xc6\xd7\xf9\xae\x9b\xc7Q" +
	"a\xbc\x83vm}vK\xcep\xdf\xee\xd7y\xdd\x7f" +
	"\xc0\x1a\xfb\xe88\xb2y\xdf\x17\x1c\xfb\xf8\xd3\xc6\x13\xaf" +
	"\xf3\xf4TXH\xe9ij!\x01\xb8\xa3\xb9\x0f\xfe\xd3" +
	"\xc3\xeb~\xcf\x1f}!5\x0er\xc56\xdf\x8a\xeb&" +
	"\xbe\xc9\x8b\x82\x8d\x85T\xccl-\xa4jh^\xeb\xea" +
	"\x03\xe7.\xbd\xc9K\xbfBj=Lx\xfc\xd4\xaf^" +
	"\xbcf\xf6[\xfc\xc1\xec*\xb4\xb4&\xed\xfa\xc2\x7f\xdf" +
	"\xfc\x9c\xfa\xdd\xe9\xb7\xb9\xaeg\x0a)\xad\xdez\xfe\xf9" +
	"a\xcf\xddSw0A\xa6\x17\xd2\x839M\xbb6>" +
	"\xb1x\xdb\xbf\x0f\xba\xed`;^\x94\xa8H/\xba\x06" +
	"\xe4~E\x92\xdc\xaf\xc8=\xbe\xbc\xe8^\"\xd2?\xf4" +
	"5\x97\x0e\xdb\xf9\xe2Anw\xa7N\xa0\xb4\x9ds\xf0" +
	"\x93\xaf\xf1M\xe1?rK\x1f9\x81.}\xc8+\xbf" +
	"\xf6\xe2\x9f\x1d\xf9#o\x9a\xf4\x9f\xf0\x06Ab\xe4\x04" +
	"r\xda\xdf\x9dU6\xde\xfd\xf5\xb7\xefp\x83\x0e.\xa6" +
	"\x84\xb5\xb5\xdf:\xe3\x83\x81\xd2{\xfc\x91e\x15Ss" +
	"\xb2\x7f1\xd5I\xff\xb3\xe1\x8b\xbf\xcb\xd7\xbe\xd7\x9e\xb0" +
	"\xa890\xa98\x0f\xe4\x9abI\xae)v\x8fo)" +
	"~\x9b,\xe0H\x8d\x96\xf3\xaf\xffg\xcf\xa182\x94" +
	"\x00\xabo\xa4r\xab\xee\xc6=\xc4\xfe\\\xd8\xe3\x0b\x9f" +
	"\xe1:\xcc\x1f\xd4\x85\x1b)\x11dN$S\x1ext" +
	"\xff\xe5\xcf\x16/z\x9f[\xe8\xd0\x89t\xb7+*\xeb" +
	"\xff\x16\x1d\xba\xedHR*\xef7\xb1\x08\xe4\xa1\x13%" +
	"y\xe8D\xb7\\7\x91\xac\xfb\xccm-\xff\xf8\xab\x0b" +
	"\xf0!\x93\xbf\x94\x9e\x8a'Qd\xaa'\x11d\xa6\xbe" +
	"<x\xf3\xdc~\xbd?\xe4N\xf64\xf9\x9e\x11\x9b\xf9" +
	"\xcc\x03\xa5\x93\xeb\x0b\xf9/G'Q\x0e9p\xe0\xe8" +
	"\xdf\xbe\x1b\xb2\xe1C\xfe\xcc\x0fL\xa2Dzh\x12Y" +
	"@\xe5\xa5\x87\xeb\xb3\xbez\xfaC\x9e\x9e\xceO\xba\x8b" +
	"Z\x82%\x04 K]w*4\xe3\xdc\x87\xfc\xae\x0f" +
	"-\xa1h\x15S\x80\x877\x8dWox\xbc\xfaX\x82" +
	"\x08,\xa1\x86\x91J\x01\xb4m;\xbf\xff\xce\x98w," +
	"\x99\x88_S\xe2\x05ys\x09\x11I\xf7\x97\x90m\xf8" +
	"\xea\xf0\xea\x1d\x95\x7f\x1e\xfe\x09\x8f\xb06\x99j\xb2\x96" +
	"\xc9T\x8c\xef{\xfbx\xcd\xd7\xcb?\xe1v|\xf3d" +
	"\xba\x0b\xdf\xbe\xf9\\u\xc6\x7f\xee\xfc\x84\xa3\x9c\xf5\x93" +
	"\xa9\xedvp\xce\xf6\xeb6}y\xf5q\xae\xcf\xd2\xc9" +
	"Tk\x9c~\xfb\xd1-[\x1a7\x1co\x87\x1b\xdd|" +
	"u\xf2L2)\xc1m\xe9d\xc2\xd0\xb9GO\xbdw" +
	"\xdb\x8e\xbd\x9f\xf1{\xf5\xeedJ\x0d'(n/\xe8" +
	"\xa3\xdf\xfa\xd7\xed\xdf~\xc6o\xc5\xe5\xc9t3\xb3\xa6" +
	"\x10\x807\xbe\xf9\x87\x9c\x0d\xa7\xe6\x9d\xe4\x01\xa6N\xa1" +
	"$\\C\x01j\xa7\x8d{:v\xfb\xa3'9L\xb5" +
	")\xf4$wKo\xad\x1a\x92\xf7\xd2\xc9d\xbbx\xcb" +
	"\x94|\x90\xb5)\x04S<\x85\xec\xe2\xc5#\xb7\xffz" +
	"\xd1\x82\x17\xff\xdc\xc1\xd8\xaa\x99*\x80\\7\x95Z\xeb" +
	"S\xa7g\xc8\x99e\xc4\xd8\x9a\\yN\xac\xfa\xc9\xf7" +
	"\x7ff\xb4G\x07=[J\x10\x1f\x7f\xb9\x94\x9ao\x97" +
	"\xff\xad\xc7o?\xba\xad\xdf_\x12\xc8sp9=\x98" +
	"1\xe5\x84<\xd7\xfe\xf1\x957\xcc\xc7\x16\xfe\x85\xdf\x9d" +
	"\x03\xe5tm\x87\xca\xc9\xda\xea\xbf*~x\xd6\xe6\xd2" +
	"\xcf\xb9\xb5\x9d/\xa7\xbc2\x7f\xc4;\x9e\xdf\x15\x8f<" +
	"\xc3\x1f\xfa\xc9r*\x99\xce\xd2\xae9\xff\xf5\x8a2\xe4" +
	"\xae\x9a/xEU\xf1\x06\xe9z\xdf\x91O\xdd{\xbf" +
	"\xfe\x98\xff\x92UA%\xcd\x81\x0f>\xfb\xdb\x86\xec\xbd" +
	"_\xb6\xdb0\xca\x7f\x97\xcbg\x82\xec\xaa\x90dW\x85" +
	"[.\xaf \xe8\xf7;|\xe97u\xcb_\xff*A" +
	":VX\xd2\xb1\x82\xe0\xf0\xcdC\xc2\x82\xf9EC\xbe" +
	"\xe1\xc8+\xb3\x92\xea\x92\xc3\xbf\x18\xf0\xa6\xbac\xfd\xb7" +
	"\xfc\xa9\x9e\xaf\xb0x\xa8\x92*\xcb\x92=\xf2\xde1G" +
	"\x12\x00\x06WZ{G\x01&>\x99\x7f\xeb\xfe\xbeo" +
	"^Hp\xb2+\xa9\x19\xa1R\x80\xefn\xa8_0\xa9" +
	"\xe7\xd0\xbf\xf2\x00k*)v\x9b(\xc0\xfb\xaf\x7f\xf0" +
	"\xc5\xfbC?\xfekRq\xb3\xbf\xb2\x02\xe4w+\xa9" +
	"\xcdWI\x8f\xd3{\xb2\xe2\xd5_\xb8\xeb\xbeOF\xf7" +
	"'\xaa\x8a@>[%\xc9g\xab\xdcr\xffjB\xf9" +
	"\xbbn:V\xba^\x7f\xf9\"wt-\xd5T\xd2\x1f" +
	"\xbb\x94=f\xf8\xaf3~\xe0\x11S\xab\xe9\xd2B\xd5" +
	"\x04\xb1[\x87\xe7m\xfe\xe1\x8e\xaa\x1f\xb8\x03\xdaTM" +
	"\xad\xaa!\xd3\xde\xba\xe6\xdc\xea_\xfe\xd0\x81H\xdb\xaa" +
	"\xaf\x06yc5e\xe0\xea\x0d\x82<p:!\xd2s" +
	"[\xfe\xa9\xe8\xfa\xe53.u\x00\xcf\x9c~5\xc8\xfd" +
	"\x08\x8c\xec\x9a.\xc9\xae\xe9\xd3\x11\x8a\xd5o<w\xf9" +
	"\xba\xaa%\x97\xb8i\xfbO\xa7\x18oQ\x9e\xee\xf5f" +
	"\xe8\x99K\xdcZ2\xa7\x7fL\xbe\xdc(l>:\xb0" +
	"\xf5\x8e\xcb\x09F\xf2\xc5iTZfNoEsb" +
	"\x06\xd6\x97a}\xac?C\x8d\x86\xa3c\x83\x11\xbf\x1a" +
	"\xfc\x99\x1a\xd5\x0a\xfc\xe4w\xc94_\x81\xa9\xeaC\xbc" +
	"\xd8h\x91\x82\xa6\xa1d\x88\x19\x08e\x00B\xae\xac|" +
	"\x84\x94\xabDPr\x04\xc8\x8eFt\x132\x90\x00\x19" +
	"\x08\xec\x11{$\x1d\xd1\x8b\xa3\x91\x82&\xd5\xc4\xadj" +
	"[\x9d\x81\xf5Y\x9aa\xd2\xf1\x83&$\x8c_\x14\x1f" +
	"\x7f\x88\x00\xee\x16\x03\xeb\x06\xf4AP+\x02\xf4\x8d\xe5" +
	"\xcd\xac\x9f2\xed\xd4\xc0;\x10\x02\xd2\x98b\x0dt\xc6" +
	"\xa5-\x9a9\xc4[J\xe71Rt\x98\x83\xcd\x82\xd6" +
	"\xe6\x88\x1a\xd2\x86\x94\xd6\xaa\xba\x1ar:dv>C" +
	"\xa3a\xaa\x0d^\x1c\x8a,\xc3Cj\xd5l\xd2\x8d_" +
	"\x8e\x17!\xa5\xb7\x08\xca\xf5\x02\xc4B\x91\x96\xb09G" +
	"\x0d!\xc0\xd0\x1b\x09\xd0;\xe5\x1a\xa6\xf9\x0aZ\xc2Q" +
	"-<\xc4\x8b\xdd\xe9,a\x9a\xaf\xc00\xd5&\xdc\x11" +
	"\xbeG\x8a\x15\xd4\x85)v\xe5\xc1\xa0}*)\xf77" +
	"\x141\xf1\xb4H0\x80A\xaf\x05P2@\x88\xdd\xfa" +
	"\xe0\xe3\xca\xfe\x0f\xee:\x80\x94\x0c\x01\xca\x87\x00\xf4F" +
	"\xa8\x10\x1a V\xeei$\x90z\x86\xc7lVM\x8f" +
	"\xea\xd1iw\x8ffx\xd4`0\xd2\x8a\x03\x1e3\xe2" +
	"Q\xfd~\x09\x1b\x06B\xfc\x16\x968\x14Wj\x0d\x92" +
	"\xfe\xee\xe98\xe9\xeeevJ\x00\x16Z\x15ms\xd4" +
	"P\xd2\xf3\xe4\xc9?\xac\x86:\x1ed7\xc8\xdf\"2" +
	"\x84R\xa0E\x89 \x80\x83\xd8\xc4\xacK\xa7\x0c\xa9\x9a" +
	"\xcd\xe9o\x0eaq2\xa0\xd8\xf9\x12\x93\x0e\x98\x1aM" +
	"\x8b\x84R/\x8dnK\xab\xaa\x99\xd3\"zM\x98\xb0" +
	"jzt^\x19\x097jM\xd5aSoC(9" +
	"\xedy\xe2\xb4\x97Oh\xcfO\xe1E\x0f&=<#" +
	"\xb4\xb0?\xd8\x12\xd0\xc2M\x9e\x106U\x8f\x96\x1dn" +
	"\x8c\x8cDH\xc9\xb17ae\x1eB\xcar\x11\x94u" +
	"\x02\xb8\x00r\x88\x14u\xad!\x8d\xb7\x8b\xa0\xdc)\x80" +
	"K\x10r@@\xc8\xb5\x9e4\xae\x16A\xb9[\x00\x97" +
	"(\xe6\x80\x88\x90kc\x05B\xca:\x11\x94\xfb\x04\x80" +
	"\x8c\x1c\xc8@\xc8\xb5i1B\xca\xdd\"(\x8f\x08 " +
	"-\xc1ml[\xa5ej\xd0\xfe?\x10\xf1\xb3\xffW" +
	"\x05p\xa3J\x18\x91m\x7f\x18\xe3\x80\xe1\xc5\x06\xca6" +
	"U\xdd\x04@\x02@zR0\xaa\x85\x9b\x86\xd4\xba\x13" +
	"eZ\x17\xf0T\x140!\xa8\\e\xef\xcaH\"\xcd" +
	"F\x88\xa0L\xe0v\xa5\x90\xacu\xb4\x08\xcaD&\xe2" +
	"jU\x13\x81M6\xab\"QS\x8b\x84\x0d\xe8\xeb\xf8" +
	"\xf4\x08\xa0oJ\x82\xa2\xa8,\xc3\xba\xa1E\xc2\xe9\xf2" +
	"\x8a\xc3\xc2u\xd1\x80j\xe2\xee\xb0~\x18\x9b\xb3\"~" +
	"\xd5\xc4s\xf0rGit&\x89tKJ\xf6u\x9c" +
	"\x82\xf4\x17e\x91cU\xc4\x9f\x8c\xfd\xf2\x9cIx2" +
	"IW\xf23\x99\x95\xea\xd4f\"\xa4\x8c\x13A\x99\"" +
	"@\x8c\x0e\x96xj1\x1dG#\xb5\xaa\xd9\x8c\x10J" +
	"\x13\x05\xba4\x8dpq\x9c\xd4\x94\xbe6\x0e*\x99\xee" +
	"6\x11\x94 \x87\x83Ft}@\x04%\xca\xf1S\x88" +
	"\x90S\xb3\x08\x8a\xc9\xf1\xd3R\xd2=*\x82r\xbb\x00" +
	"\xb1\x06\xd5\xc0\xed0sGZ\xc3\x8eZX\xd5\xa0\xfa" +
	"\x97\xe0p\xc0\xc6;\xaa\x1aFkD\x0f$[K\xa7" +
	"\xc2\xacI\xd5\x1b\xd4&\\\x19\x09\x06\xb1\xdfY\x13w" +
	"R\xf5\x9cnW\x9b\x9atl\x18\x1a\x12\x97\xe1n\xb3" +
	"f2Z+r\xc8\xc0\xad\xe3h\xb0\x1b\x84@T\xde" +
	"\x95\xc8\xf5N\x07\xf4\xab\xe6\x95\xd9\x82\x9dn\xae\xa5'" +
	"\x02s\"\x01l\x10\\\xa5.\xd4\xac\x1e\x89\x98i\x1e" +
	"\xdb\xfcJ_\x81?\x12\x0aifM\xb81\xe2\xe0\xcc" +
	"1C\xbd\xc3\x0c6/\x94p\x12L3\xe6\xabA-" +
	"\xe0E\"nd\x07Yj\x8d\x09}\x9d o;f" +
	"\x17\x93\xa2\xe33U7\xc5\xa4k\xf3h-\xc4|\xa6" +
	"J\x013\xa9A\xe41L\xd5\x1c\x13\xd4\x96`O\x00" +
	"\x1b~]\xa3\x12\xd4\x13i\xf4\xa8\xe16O8\x12\xc0" +
	"\x88ro|Qr9\xe4#\xe4\x9b\x02\"\xf8f\x80" +
	"\xc3`r5\xccD\xc8WE\xdakA\x00\xb0XL" +
	"\x9eM\xc1g\x90\xe6y\x04\\\x04\xcae\xb2\x02E\x08" +
	"\xf9f\x91\xf6\x05\xa4=c5\xd5\\r\x1dm\xaf%" +
	"\xed\x0bI{ff\x0ed\"$\xdfB\xdb\xe7\x91\xf6" +
	"\xdbH{\x0f!\x07z $/\x82\x0a\x84|\x0bH" +
	"{\x80\xb4Kkr\x88\x03\"\xab\x14\x9d\xdbH{\x90" +
	"\xb4_\xb56\x07\xaeBH\xd6\xa0\x1e!_3i7" +
	"I{O1\x07z\"$/\x85\x06\x84|Q\xd2~" +
	";i\xbf:#\x07\xaeFHn\xa3\xf8\x9b\xa4}5" +
	"i\xef\x95\x99\x03\xbd\x10\x92WR\xf8\xdbI\xfb\x9d\xd0" +
	"\x9e\xc8M\x1d\xe3\x19\xaaA\xa5F\x16\x12 \x0bA\xb6" +
	"\xa1\xad\xc0\xd0\x13\x09\xd0\x13\x81[#\xfb\xea\xfc2\xaa" +
	"4\x9d\x9d\xbf;\x80\xa3f3\xa3\xeeU\xa1H`\x9e" +
	"\xc6\x99~\x9aQ\xab\x85\xc3\x98\x8a\x17\xc6\xfa\x9aQ\xbd" +
	"<\x1a\xd4\xfcH\xd4\x1cU\xed\x8f\x84M\x1c6g " +
	"I5\x9am,\x88\x97c\x8f\x15\x17]\x89 \xdd\xd3" +
	")\xa98\x95\x90\x14\xf4u\xb2\xcb\xedH9\xa3S\xce" +
	"\x0aF\x9a\x18\xaf\xa6\x96\x19x\xb9f\x98FJ5j" +
	"\x81u\x90\x98i\xb1w\x0a\xe5\xa9\xe3e\xe9K\xfb\x04" +
	"\x81\xe4\xc5Fvg\xf2\x98\xf8\xa5\x84R8\xbf\xd4N" +
	"\xde\xb6\xf3K\xc5\xceN\x0b\xa8@\xa8\x153\xb9\xf4 " +
	"\xb02\x0cy\xa9\x90\x8f\x04\x19\x0b\x128\x19}`i" +
	"l\xf9\x16\xfau\xb6 \x81`g\xc7\x81\xc5\x08\xe4r" +
	"\xfa\xb5X\x90@\xb4s\xfe\xc0\x02\x17\xf2H\xa1\x08\x09" +
	"\xf2@A\x82\x0c;\\\x0a,\x18+\xbb\x84\x0a$\xc8" +
	"\x99\x82\x04\x99v\x80\x10X\xa2Q\xbe\x08^$\xc8\xe7" +
	"A\x82\x1evF\x01X\xe2V>M\xbf\x9e\x00\x09$" +
	";\xcb\x01,\x91(\x1f\xa2_\x0f\x82\x04W\xd95\x01" +
	"\xc02\xd8\xf2~\xfa\xf5%\x90\xa0\xa7\x1dz\x03\x16\x0d" +
	"\x93wA\x09\x12\xe4\xed \xc1\xd5v\x94\x1bXBI" +
	"\xbe\x1ff\"A\xde\x08\x12\xf4\xb2\xabR\x80\xe5\x1c\xa8" +
	"@\x10\xe4\x16\x90\xa0\xb7\x9dM\x00\x96x\xa3bG\x90" +
	"U\x90 \xcb\x8e;\x03\xcbJ\xc8u\x14\xab\xd9 A" +
	"\x1f;K\x05\xacFE.\x87\xb5H\x90'\x81\x04\xd9" +
	"v\xe9\x04\xb0\xe4\xa6<\x06\xc8N\x0e\x06\x09\xfa\xday" +
	"V`u\x1er?\x8aU\x16H\xe0\xb2\x93\x08\xc0\x12" +
	"X2\xc0\x0a$\xb8.Jp\x8d\x9d\xba\x02\x164t" +
	"\x9d\xd5\x91\xe0:-\x81l\xd7\xaa\x00+\xefq\x1d[" +
	"\x8b\x04\xd7!){i\x8bf\x96A61,\xca " +
	"\x9b\xd8ce\xe0\xa6vy\x19\xacj\x09\xc7\xff\x8bY" +
	"\xf2b:F\xe0\xfc\xf2%\xfc*\x0f\"\x08\xda\xbf\xaa" +
	"\"\x08\xfceP\xda\x80\xfd\x91\x10.\x83\x18\x0d\x1b\x94" +
	"\x07\x88\xd4c\xbf\xbc8\x84\xa4\xc82\xe7k4\x8a\xc4" +
	"`\x1b\xfb9K3\xac\xf1Y\xc4\x01\xe2!\x07T\x06" +
	"\xab\xe2\x86~\x19\xc4\x98?\x88$\x8a{\x8c\xb9\xcd\xa8" +
	"\xd4\xc0zy \xc07\xb9\x0d\xac{C\\\x0b\xc4\x9d" +
	"kT\x06\xb5\xd0\x0d\xc1\xe9\xc3\x8e\x89\x93\x9eA\xf4\xe3" +
	"YXD\xac\x99\xaa-[yk\x85\xc8\xb3!\"(" +
	"\xe38\xb3yL\x85c\xc2\xf0Bn\x95\xa96\xcdI" +
	"\x16\x92\xe8\":b\x85\xad:\x9a\xb6W\xb8\x12+&" +
	"D\x8c\x99\x160\x92\x1b=\xd7S\xa3\xc7\x05\xaf\xc4\xc2" +
	"\xd8\xa4\x86\x0e\xb4\x18\xd4\xb4\xf1\x94Z\x9e[\xa2#^" +
	"\x92\xcc\x11\x9f\xe9\xf8\xdcq\xa3\xc6\xb5\xb1\x01!\xe5N" +
	"\x11\x94\x87\x88E#X~\xc3\xfdE\x8e\xcf\xed\xca\xf0" +
	"X\x8e\xf8f\x1d!\xe5!\x11\x94'\xa8\x1bG\xa6\x84" +
	"\xbeN.7\xae\x0e\x83\xaaa\xfa0\x0e\xf3>\x83\x1e" +
	"i\x09\x07L]CRt\xb6\xc1\xcc\x017\xd6\xf5\x88" +
	"\xa3\xc0\xd5\x16\xb3\x19\x87M\x0d\xb9\x89+\x19\xe8\xa0\xd9" +
	"\xc4\xce\xfcO+\x901\x91*\x05\x16E\x07\x16\xe2\x95" +
	"\xf7\xc2\x03H\x90w\x03Q\x0a,J\x0f,\x83$?" +
	"I\xc5\xe0V J\x81%k\x81\xd52\xc8\x9b\xe8\xd7" +
	"\xf5@\x94\x02\xcb\x16\x03+\xeb\x92\xdb`1\x12\xe4\xa5" +
	"@\x94\x02+=\x00\x96\xe1\x901\x15\x92\x8b\x80(\x05" +
	"\x96\xa4\x06V\x00\"+\xf4k\x0dU\x0a,\x81\x08," +
	"G%O\xa5\x82\xae\x98*\x05\x96\x14\x04\x96\x88\x94G" +
	"R\x01;\x98*\x05\x96F\x06VR&\xf7\x03=." +
	"${\xb22D'm*\x03Q\x0a\xae\x0bD'\xb0" +
	"Z\x13`\x99Z\xd7\x99\x0a$\xb8N\x10\x8d\xc0rP" +
	"\xc0\xca\x1e\\\x87\xea\x91\xe0:H\xf4\x01\xab\x01\x01V" +
	"\xf8\xe0\xda\x7f\x17\x12\\\xfb\x886`\x95\x82\xc0\xaah" +
	"\\\xbb\x17#\xc1\xb5C\x8aY\xe4R\x1e\x80\xc0\\\x9d" +
	"F\x18\x80\x08;\xab\xd5\x1b\xb2D\xa1\xf5k\x96\xc1\xff" +
	"\xaa\x8b\xa2\xec\x80j:\xc0>\x95x\x8a\xf6\xcfZ\x0d" +
	"\x89D^\xc7\x7fV\x06\x91\x84U\xbd\x0cb,(\x81" +
	"\xe8D\xf6/7\x0dR\x94A\xa9\x15\xb0.\x83U\xfe" +
	"H8\x8c\xfdD^\x064\x83\xfe@\"\xfdi\x8d8" +
	"7\x0cA-\x8c\xa9ht\xd0\xaahC\xd9Dd$" +
	"\x0a\xcbT\xf1\xf4\xf4\"I\xd3|\x05f\xa4\xc5\xdf\x9c" +
	"*\x8a\xda=W\x94\x0a,f\x9f\xa5/\xde\xa7\xe3\xe4" +
	"\x1e,\xefe/S\x83-8M\x8b\xb1C\xa8\x98\xc5" +
	"\x99:\x0f\x17u\"g\xba\x19 \x8dof\xfa+g" +
	"\x11\xfd\xf6+\xcfs\xecYI\x0d\x06\x1dk\x96\xf7\x0b" +
	"\xfatc#ji$#\xc9L|\x0a\xc4\x96\xa0\x10" +
	"\x85^H\x80^\xdc\x04\xbd:\x9d N\xdb,\x08\xc8" +
	":\xa4\x8e\x1a&K0U8\xa7\xc2\x8c\x0e\xe8\xeb$" +
	"\xa5\xd3\xf6\x86\x1a\xb1I\x88\xbb\xa3\xee\xe4}\x90\xd6\xe6" +
	"H7h{I@\xd3\x93\x05\xf0\xf2\x1d+\xc06\x02" +
	"t'f\x91\xc8B~\x1d\xab&\xaeU\x91[\xc7\xe1" +
	"$\xaeU\xe7+2\xda\xc2\xfed\xd3\xcfL\x122\xf1" +
	"r\xe1\xc3V\xcdl\xbe\xb99\x12\xe2Ue\x18\xe3\xc0" +
	"4l\xfa\x114w\xc0\xa0G\x0aJ\x9a\x1bf\xa2\xaa" +
	"\xfba\xdfYF\x97\x87>D\x80U\x16 \xe7\xbf\xf1" +
	",\xd9\xa7\x1bg\xdf!\xaf(v\x92\xac\x08I!\xcd" +
	"\xec\xda\x1c\xba+\xe6\xd3\xc2MA\xec\x09B\xa4\xc9\xca" +
	"S \xe0\x03\xa8\x84\x06\x16\x8a\xa04sv\x10\xce\xe3" +
	"\xa2\xaa,\x80\xaa\xe5\xc7\xa3\xaa\xab\xb9\x00\xea\xca|\xc7" +
	"\x8c\xcan\xe6B\x0bR\xc8hb\x87\x96m\xaaM\xf6" +
	"\xb6\x90\xb6>\x08\xa8\xd6JS(:\xd9\xc4\xf2h4" +
	"\xd8\x96\xae\x98v\x0e\xcf\xa7.\xc3\xc9\xec\xea\x1f\xf1\xf4" +
	"\x98\x0aIbkW\xa4\xb0\xb5W\x19\xba\xbf\x96\xe3\xb4" +
	"U\x01\xc3\xacM\xa6\xbcz\xa5\x08^\xd8\xe9\xb1.\x05" +
	"\x19\xd9\x16\xa6\xca\xfdI\x9c\x93npQ\xaa<\xbb\x16" +
	"n\x8cp;jWD\xa7\xcd\x0f-a\xe2\xbft\xe0" +
	"\x87tc\xeb]\xc5\xbf\x09~\x8d:\xc6\x01\x07?\xbb" +
	"\x1e&-\x0d\xc5Qe `m\x85xe\x89\xf1\x0e" +
	"\xc2(\xf9\x86\xcc&\xf0si\xc8\xd6r\x82R\x88R" +
	">\x13\xa3c507\x1cl\xe3C\x89z$bv" +
	"\x96\x89I/\xdbl/<\xdd\x94,\xd7\xd7\x1b\xb2\x13" +
	"\x81\xddI\x83w\xed\xe9v\x90\x0c]%\xb5\xcc\xa4\xf1" +
	"8\x1e\x03B\xbf\xed\xe2p}\xd3\x88\xc3\x85$b\xb6" +
	"t\x99=.\x82XM\xb81\xe2Q=\xbah\x15," +
	"D1\xd6=\xad\xd8\x13\xd2\x9a\x9aM\x0fQ\x99n\x0f" +
	"Q\x80\x08\xa5\x94\xd6\x0d]\xa5\xbb\xd6\x09\x00qa\xbd" +
	"\xe6\x01'{\x9c\xb8\xbb\x8dZ\xb8\x09\xebQ\x1dIZ" +
	"\xd8\xce\x89\xac\xb2\x8a\"8\x06\xb6/L\xc5\x19D\xf5" +
	"\xfbq\xd4,o\x013b\xa5E!\xdd\x88k;C" +
	"2.\x9b\xbbg\x13\xa6\x08\xd3v\xcbD\xb2<\x8an" +
	"\xd7s\xc4\x93\xc1I<\x91\x1f\xcbFw\xa2Hl\xb9" +
	"\xa9\xa28E\\\x14\x87\xcb\xf3v\xe2\x86t\x1e\x8a\x8a" +
	"D\xdb\xfe\xbfj\xb34,\xaenXi\x89I\xf6$" +
	"\xd63\x7f \xa6\xe6_\x82M\x96\x93\xe9n5V\x9a" +
	"T\xe2\xf4\xb3u\xa5\xd4\x89#7D\x80R\xaa\x0d8" +
	"^\xb3\xcb\x15\xbb\xab\x8c\xa8\x89\x94v:\xc5*\x03\xbb" +
	"\x12W:\xb9\xf4\xab\xd2\x1a\xa11\xb9\xec\x1b\x107I" +
	"\x7f\x88Ui\x8d\x8dX\xc7a\xc1\x8f=\x0d\xd8l\xc5" +
	"8\xec1[#\x1e\x7f)\xb5c\x0c\x84\x94\x016&" +
	"/\x11\x82~^\x04\xe5\x1d\x8e\xe2\x0e\x12\x8a{K\x04" +
	"\xe53N\xe6\x9d \x8d\x1f\x89\xa0|\xcbY\xa8\xe7I" +
	"\xe3\x97\"\xf8\xae\xa2\xa9G\xabhF\xce\x84\"\x84\xbc" +
	" \x82o\x00\x9fy\xec\x0f%\x08\xf9rH\xfb8\x9a" +
	"y\xecae\x1e\xc7\xd0\x0c\xe3h\x96\x08u\xab\x81\x00" +
	"o8\xb4K\xd4\xac\xb2\xe2\x9f]\x00hM\xe1\x88\xde" +
	"\x15@H3\x0c-\xdc\xd4)\x80\xbb\xdd\x04v\xb5\xaa" +
	"\xf5\xb94\x84\xf5\xa6.\xbe\xd3\xd8{P\xf3\x9bD\xf7" +
	"w\x0a\x94n\x9c7M\xfb\x8c\xf7\xb8;Z\x0d\xe9[" +
	"\x1c\xacV-\x95Z\x9c\x99B-\xda$\xb2\xa6$^" +
	"\x7f\xf5H{\xbd\x98\xa4\xc0\xa3\xbdV\x8c\xfb3\xa5:" +
	"\xd1\xdb\xed[\xd3\x14\xb3\xddph\xe2\x85\xa4l\xff:" +
	"\x93p\x16\x18\xf4u.Y\xa4e\xbbT6\xabR\xb8" +
	"\x09w\xcd\xbf_\xc4\xe6\x86\xb1\xa7Y3L!\xa2\xb7" +
	"\xc5k\xdf\x1a#\xbaG\xf5d7jA\x8c\x90\xe2\xb1" +
	"\xb1:D\x8e\xe6\x1d\x11\x94\x8f\xb8\xa39JP}O" +
	"\x04\xe58w4\xc7\x08\xe4\x918K\xb3\xa39\x91\x1f" +
	"g\xe9S\x0e\xf3\xbaN\x92C<.\x82\xf2\xb9\xc3\xba" +
	"\xae\xd3k\x11RN\x89\xa0|%\x00Xl\xeb:;" +
	"\xd3\xe2}\xe5{\x01\\\x12\xd0j\x01\xd7\x85z\x84\x94" +
	"oE\xf0\xb6O\xe5\x97\xfa\x9b\xd5p\x93}\xf8\xd9\xcd" +
	"X\x0dt,\xcd\xc8\x0e\xe3\xe5I*6VQ\x86\x9c" +
	"\xe7\x98\x1c\xad\xaaQ\xab\xe3e\x1aDZ\x8c`[\xb9" +
	"\x89\xba\x9f\xd6\xef\x8e\xffA\x99\x02\x0c\xa5\xb7\xbd\xf3\xd5" +
	"^\x84\x94*\x11\x94Zn\xe7g\x93\xc6Y\"(\x0b" +
	"\xb8\x9d\xaf#\xfbY+\x82\xb2\xb0\x93b\xe2\x1f\xb3\xfa" +
	".AY\xdbn\xd3\x8f\xa2\xa9\x1d\xdb\xa12\x88\xad\x1a" +
	"\xd4\x04%\x98\x9c\xe6k\x02\xd8\x1d65\xb3\xadk\x8b" +
	"\xfd\x1af\xb17D\xc4\x16\xd3\x13i\xd1=\xfe\x16]" +
	"\xc7a\xd3\xd3b`\xdd\xca8\xe1Dk\xbd!\xed\xe2" +
	"4\x02\x19\x14AY\xeeX\xeb-\x84xM+\xde\x12" +
	"\x8bOU\x87$\xae\xa8#\xb1:-\xb9\x11\x1f\xd3\x0c" +
	"\xcba\xe7\xa9\xad;'\x94\x84\xb0\x88\xd9Y&\x822" +
	"\xcbq6k\x08S\xcd\x10A\x99GV\x05\xd6\xaa\x94" +
	"z\x87\xae\x12\xccqS\x0b\xe1H\x8b\xe9C\"\xf6\xdb" +
	"\xe1\xda \x9do\xb6\x8aDcIw\x02C\xf1\xd4s" +
	"\xc7\xf2\xf2\xb4\xcc\xb2\xf6\x9eG\xd7\x0ec\x8a\x8a\xb2n" +
	"T5'\xa0\xce\xec\xdc.\x0b\xfc\xdb\xd5Q\xa6\xaeh" +
	"\x09\xa9K0\xb1\xb4\x92\x86i\x12\x0aw\xb4\xc6F\xe8" +
	"\xeb\\nL;T\x1d\x0f;%\xf1\xe3yG\x8c\x8b" +
	"\x04\xa6\x18\xd3\"9\x8a.\xd0\xb8f*\x15\x9f\xdfU" +
	"\x9c2\xca\xe9\x11\x9e\xc1\x12T|\xb6\x1a\x08\xd8,\x94" +
	"\x1dR9\xdaK\xceO\xe9\x16(]I\xf2;\x95X" +
	"\xf3\x86\xd2\xbdD\x11\xaf\xd6\xec\x10\xdcKOp\xa6\x19" +
	"F\xb1T\x96f\xd6ja+\xc9\x9c<\xb5\xe0\xb8\x89" +
	"%\x8e\x9b\xd8N\xf3Zu\x90\xdd`\x1d'\xfdv\x05" +
	"\xa5\xce\x9d\xf3\x0c\xb1j\"z\x9bc\x9fv\x16.\x8e" +
	"\x03r\xc1Mv\xb56-\x7f\x8d\x9f\xebJ\xee^d" +
	"\xa6\x13\xdam/\xdb\x92\xeb\xbf\xf9X\xcf6\xb4H\xb8" +
	"\x1d\xbf\xe9\xc9t\x97\x97\xab\xa1f\xfc\xb6t\x85SC" +
	"m\xf3[[\xbd\x93\x17\x88\xcf?\x1f#\xb7\x95\x15K" +
	"\\\x8c\x17#X\xd6\xbeNq>*\xc5\x89\xc0\xf1\x0f" +
	"^$&)\xbf\x13;a\x02J\x95U\xb4\xf4\x81=" +
	"\x09\x03\xec\xa5 \xd9E\xab\xd62i=\x1c\xbb\xd8\x06" +
	"\xec\xa2\xa5|\x11\xf2\x91 \x9f\xa5\xa5\x0f\xec\xb5\x10`" +
	"O\xb6\xc8'!\x0f\x09\xf2QZ\xfa\xc0^\x8e\x00v" +
	"\xffQ>\x08d\xe4\xfd\xb4\xf4\x81\xbd\x13\x02\xec.\xb8" +
	"\xbc\x97V\x9e\xed\xa0\xa5\x0f\xec\xc9\x05`Or\xc8[" +
	"\xe9\xbc\x9bh\xe9\x03\xbb@\x0f\xec\xca\xb7\xbc\x86~m" +
	"\xa1\xa5\x0f\xec\x81\x19`\xd7ze\x8db\xb5\x88\x96>" +
	"\xb0\xbb\xec\xc0\xdeL\xa2e\xb8\x82\\M\xeb\xe1\xd8\xad" +
	"g`o\x11\xc8\x93\xe8\xc8ch=\x1c{\xfc\x06\xd8" +
	"\x0b\x0c\xf2`X\x81\x04\xb9?\xad\x87c\xcf\x8b\x00{" +
	";@\xce\xa2#\x03\xad\x87c\xd7\x93\x81=\x07\xe3\xba" +
	"P\x82\x04\xd7\x19\x09\xb2\xec\xd7\x8c\x80=.\xe5:\x91" +
	"G\x8b\xcb\xa0\x8f\xfd\xd8\x0d\xb0G`\\\x07\x16#\xc1" +
	"\xb5_\x82l\xfb\x99$`\xaf\x1d\xb9\xf6\xceD\x82k" +
	"\x97\x04}\xed[\xa9@\x9fgB\xda}\xae\xedEH" +
	"p\xdd/\xb9\xe9\xbd\x852\xc8\x0ej\x86Y\x06\x92_" +
	"\xa5\x05kK\x02\x9a^f\xc5\xe4\x96\x91\xaf\xf1?\xc4" +
	"\x0f+\x03)\xaa\x85\xcb\xc0M\x83\"e\x90Mt>" +
	"\xad\x01\xb3\xb2\x0a\xa8\xd4\xca+\x94\x81\x9b\xc6\x0b\xcbX" +
	"\x99i\x19H&\xad\xaa`\xd5\x9e(;\x12\xc0F\x19" +
	"\xc4\xd8\xcd%Z\xb3\xe1\xa6\xb7\xc6\xd2) KP\xdf" +
	"\xb6u\xc0U/\xd5s7\x86\x18w\xaeop\xc2\xbb" +
	"6wn\x9a\xc9U*1\xee\xdc\xecu*\x95\xd85" +
	"\xa2\xed\xa4\xed1\x11\x94\x9d\xec\xe2\xc6\xdc\xd60\x129" +
	"\xfb2\x9e\xfeiE\x12ouRP/^\x96P\xcf" +
	"di\xab\x04\xc6\xee*q\xdb\xb9\x85\xa1c\x03;\xe1" +
	"<\xce\x06\xcdwlP{\x03j\xf2\x1c\x8f\x87\x95o" +
	"\xcd.r\x0c\xd3\x04Q\xcaW\xb8\xb9\x1b#\xba\x1fw" +
	"\xc7\xef\xb2\xaa\x15\x93\x89\xeeT!\xe8\xb4r\x95\xe9W" +
	"\x0c\x06\xe3\xb1\xc5\x0ey\x0c^Y\x11\x17]K\xa7\xb2" +
	"\xb8w\xba\xa9\x9b\xb42\x8d\xfcNu\x0c\xf8$_\xd2" +
	"t\x8b\xd7jL\x1cJu\x03\xaf\x02b\xe5\x1e\x83f" +
	"\xb73<\x9a\x89C\xd6\x15\xd0V\xd5\xf0,\xd1\x82A" +
	"\x1c\xf04\xb4y\xccf\xeci\xf2#jLwM<" +
	"\x15\x9c\xbb,\xa4\xa2\x9eU\xf1\x92{\x96\xeen\xe7\x8a" +
	"\xa5y\x7f\xf4\xc7\xad`\xa2U\x1e\xddNaxCI" +
	"\xdd\x8f\xff\x87D\x9c\x95\xb4Mb\xff\xf2\x152\x9d\xd5" +
	"\x94\xa6\xca>\x97\x07X\x85\x9c\xe3\x9a^i\xda\xa5\xeb" +
	"\x1b\x09\xddf*>\"\x94F\xec\xcf\x98\xa76X7" +
	"M\x09\x99s\xb2=?Yej\xbe#\xf0\x99h[" +
	"?\x93\x93\xf7\xac2uS>W\xae\x9a\x01\x96l\xbf" +
	"\xbf\xc4Q\x02\x89\xdeO\x02\x89%I\x12'\\\x92*" +
	"U\xfd\xa6\x96\xe4\x1aZ\xa7\x99\x00wc\xad\xaa\xe9]" +
	"G\x13\xbf\x8eyq\x94\x88\xf9\xb0`\xd2$@\x80&" +
	"\x07\xb4p\x93\xc7\xdd\xa8\x05\xb1A\xb7\xbc\xeb\x94W\x1e" +
	"\x97\xf22t\x7f\xc7\x94\xad\x140\xcc.\x12\xb9\xa9\xf4" +
	"O\x9a\x17\xfd\xedZ\xa7dE{\xddp\xb8{\xa6\xba" +
	"A\x9b\x96\xf4\x9d_\xe9\xb3$\xe8\x08j\xff\xb2w\xfb" +
	"\x80=\x94!\x17Rkq(-\xfdeO\xd4\x00{" +
	"\xe2\x8b\xa6B\xacBY\xc1~\x0c\x0f\xd8\x9bV2\x90" +
	"\xbe\xae\x0b\xc4\xfceOw\x00{\xc8\xcbu\xa6\xc8*" +
	"\x94\xcd\xb0\xdfD\x01\xf6<\x86\xeb\x10\xf9v\x80\x98\xbe" +
	"\xec\xa5\x17`o\xc2\xb8\xf6U \xc1\xb5\x9b\x18\xbe\xec" +
	"\xb9\x15`o\xeb\xb8\x9e$\x06\xdfVb\xf6\xb2g\xd8" +
	"\x80=\xacAh^p\xad!F/{\xe5\x0d\xd8s" +
	"j\xae\x162\x9fFL^\xf6\xfa \xb0W\x13]\x8b" +
	"\xea\x91\xe0\xaa\x93\xa4`\xa4\xa9\x8c\xf9\xa0\xd4\x94k\xa2" +
	"6\xa0\xf5\x97R@\x99\xed\xf0\x95A\x8c\x19f\xd4\xa6" +
	"\xcb&\x07^\x06nZ\xb9E/5X\xd7\x88\x90\xd8" +
	"\x18I\xb4\xf4\x92sIym\x0d=\xa5Z1S\xe9" +
	"\x0b\xdc\xbb4\x089\xcf\x7f \xe4\xbc|\x88\x90\xf3P" +
	"`Jm\xea\\\x9d\xed@\xc2\xdd\x11\xb4\x1d\x8a[\xba" +
	"6G\x92d\x8d\x93U\x1a\xce\xe4*\x0d\x13\xeeb\x86" +
	"\xd4\xe5U8j\x15\xa6\xc4\x8b\xe1\xffo\x00\x00\x00\xff" +
	"\xff\xbe\xbc#\x90"

func init() {
	schemas.Register(schema_ea883e7d5248d81b,
		0x809d4e73dc197b11,
		0x82f304d5d4e81ee4,
		0x860c3dd5698349f5,
		0x86541181da6400f7,
		0x86d95afae10f0893,
		0x87c49e302c6516f8,
		0x884238694e8b8d88,
		0x8ae5aae9653b7b02,
		0x8ed051e9369ac720,
		0x90690022482a2dd4,
		0x91ac69870ceff408,
		0x936b942a74db0be0,
		0x946963af664858d0,
		0x958ea6b33d4e8cbb,
		0x95a8b7d1ed942672,
		0x96fe51446ad697f9,
		0x974c11f8cfed4247,
		0x978c524c1a35015c,
		0x98300b93ef71cc57,
		0x98eadc167523156e,
		0x99b03ceb2dad70db,
		0x9a291d6964350a5b,
		0x9b96e8c9be077989,
		0x9ba7a818970a029c,
		0x9c19777f493f1110,
		0x9cb31f0ede4f5117,
		0x9d64fa17798952ff,
		0x9efc974402f016f6,
		0x9fe8d2cd92c27a38,
		0xa17d6c20c2174ec8,
		0xa1a9e5ab638eed79,
		0xa2305f2ea25a3484,
		0xa34213f24153536b,
		0xa4efd353c57d2b85,
		0xa5753d28ca12d2ba,
		0xa630576401b1a5b7,
		0xa78946d2af827622,
		0xa862cd929f7af191,
		0xa89254a0db970716,
		0xa9095b4cff1e5634,
		0xa97d67096ee7d46d,
		0xa99c622e110c1203,
		0xa9e401c52756826a,
		0xaa133a60be5a7d01,
		0xaa98a78425cdd321,
		0xab1e48e58e4c69af,
		0xab89c6fc9bf26f2a,
		0xabc3ec90b96a6d71,
		0xac6cc5b649f638a8,
		0xac8fbc382ae513de,
		0xacf50d40a9d3436a,
		0xad37ff6270c35769,
		0xaf631f5cddda9aa3,
		0xafe329bc8cad8f74,
		0xaff62edfdbfe53d0,
		0xb030fc18cb3b0e61,
		0xb05bd83a34de71b7,
		0xb13597d7a0d68f31,
		0xb2255c049c7bc42f,
		0xb262e0d6c2474d9c,
		0xb47c58aa23289d55,
		0xb5bf271ecf3bc074,
		0xb5dc333528e5f7ae,
		0xb76f3dc1dcf4fdf1,
		0xb7d0dd6b467e7539,
		0xb9095b6d17298884,
		0xb973694cb94aee47,
		0xba0de490234c27af,
		0xbb5ea9a03dfddab3,
		0xbb83332a93ffdcad,
		0xbbec523e9fc1abfc,
		0xbc4d5c31427dc498,
		0xbd8d8f80992c4d78,
		0xbda24ef378533894,
		0xbda949777c149f4b,
		0xbdb679ec96303b53,
		0xbe71bb7b0ed4539a,
		0xbebae5caecad3c49,
		0xbee5e0529f9017ff,
		0xbf1cf3d6e654e947,
		0xc089763bca3e3f44,
		0xc0ad53271497ab77,
		0xc0dd66dedad92ef8,
		0xc18496cf650e6886,
		0xc338177a5379031a,
		0xc3fcefc580775485,
		0xc44d12b3aee49f34,
		0xc7e5f661ac57ebb2,
		0xc9558eac26b0f15e,
		0xc9601ec89a6aa066,
		0xc9b3a8263f6853d7,
		0xcb6e3e65f2dbc914,
		0xcbd45f6552b4ba24,
		0xccf4f28c8951edf6,
		0xd0071dd673841599,
		0xd01613feea87ee6a,
		0xd1afceb8146949d4,
		0xd2117353ea065c72,
		0xd35d6ae0fdbd9bc5,
		0xd49a2570fb5a4342,
		0xd701f5ae7e7560e9,
		0xd70c154f9521b73d,
		0xd7315a3b3f92aa4a,
		0xd78724f6fbd5c5c5,
		0xd7a7f00d5a96fc43,
		0xd7ef486de484610d,
		0xd9459f2361338d96,
		0xd95473f6f8a89a69,
		0xdb27e243a580d2f0,
		0xdb78f249dcc7b9f1,
		0xdba8e30445acc3f4,
		0xdc0aec8d179d4ec9,
		0xdc876697979bc7e5,
		0xe0b1a560d0e4d51a,
		0xe0f49db8c42c72b2,
		0xe154e487144bf3c2,
		0xe19b7cffa7304650,
		0xe1b522247fc407ad,
		0xe2b3585db47cd4f9,
		0xe2f81b4403ef433b,
		0xe71560d8bc06c6fd,
		0xe75c9c74c2bacb82,
		0xe83f954c9635f05a,
		0xe92935bf20cc2856,
		0xea498a2451bae614,
		0xeadaf2b11fded490,
		0xecb10f87fbe0d6c5,
		0xf0c07855b6fcd215,
		0xf3243256580294f3,
		0xf485a561c31c83d2,
		0xf4d42db113af3a4b,
		0xf5c310bd5e2aa138,
		0xf7250939585a23f6,
		0xf7da25d3ead6c0d3,
		0xf8551f83bb42e152,
		0xf9b772853fd93ea9,
		0xfa04b4272d0ffcd9,
		0xfa4486fa9522275e,
		0xfaa680ef12c44624,
		0xfc487818328b97ef,
		0xfc6b4417fdef895a,
		0xfcaa6dc30ba75197,
		0xfd86771dd5950237)
}
