// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	capnp2 "github.com/sahib/brig/gateway/db/capnp"
	context "golang.org/x/net/context"
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

// StatInfo is a stat-like description of any node
type StatInfo struct{ capnp.Struct }

// StatInfo_TypeID is the unique identifier for the type StatInfo.
const StatInfo_TypeID = 0xa2305f2ea25a3484

func NewStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6})
	return StatInfo{st}, err
}

func NewRootStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6})
	return StatInfo{st}, err
}

func ReadRootStatInfo(msg *capnp.Message) (StatInfo, error) {
	root, err := msg.RootPtr()
	return StatInfo{root.Struct()}, err
}

func (s StatInfo) String() string {
	str, _ := text.Marshal(0xa2305f2ea25a3484, s.Struct)
	return str
}

func (s StatInfo) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s StatInfo) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s StatInfo) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s StatInfo) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s StatInfo) TreeHash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s StatInfo) HasTreeHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetTreeHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s StatInfo) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s StatInfo) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s StatInfo) Inode() uint64 {
	return s.Struct.Uint64(8)
}

func (s StatInfo) SetInode(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s StatInfo) IsDir() bool {
	return s.Struct.Bit(128)
}

func (s StatInfo) SetIsDir(v bool) {
	s.Struct.SetBit(128, v)
}

func (s StatInfo) Depth() int32 {
	return int32(s.Struct.Uint32(20))
}

func (s StatInfo) SetDepth(v int32) {
	s.Struct.SetUint32(20, uint32(v))
}

func (s StatInfo) ModTime() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s StatInfo) HasModTime() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s StatInfo) ModTimeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s StatInfo) SetModTime(v string) error {
	return s.Struct.SetText(2, v)
}

func (s StatInfo) IsPinned() bool {
	return s.Struct.Bit(129)
}

func (s StatInfo) SetIsPinned(v bool) {
	s.Struct.SetBit(129, v)
}

func (s StatInfo) IsExplicit() bool {
	return s.Struct.Bit(130)
}

func (s StatInfo) SetIsExplicit(v bool) {
	s.Struct.SetBit(130, v)
}

func (s StatInfo) ContentHash() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s StatInfo) HasContentHash() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetContentHash(v []byte) error {
	return s.Struct.SetData(3, v)
}

func (s StatInfo) User() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s StatInfo) HasUser() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s StatInfo) UserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s StatInfo) SetUser(v string) error {
	return s.Struct.SetText(4, v)
}

func (s StatInfo) BackendHash() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return []byte(p.Data()), err
}

func (s StatInfo) HasBackendHash() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetBackendHash(v []byte) error {
	return s.Struct.SetData(5, v)
}

// StatInfo_List is a list of StatInfo.
type StatInfo_List struct{ capnp.List }

// NewStatInfo creates a new list of StatInfo.
func NewStatInfo_List(s *capnp.Segment, sz int32) (StatInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 6}, sz)
	return StatInfo_List{l}, err
}

func (s StatInfo_List) At(i int) StatInfo { return StatInfo{s.List.Struct(i)} }

func (s StatInfo_List) Set(i int, v StatInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s StatInfo_List) String() string {
	str, _ := text.MarshalList(0xa2305f2ea25a3484, s.List)
	return str
}

// StatInfo_Promise is a wrapper for a StatInfo promised by a client call.
type StatInfo_Promise struct{ *capnp.Pipeline }

func (p StatInfo_Promise) Struct() (StatInfo, error) {
	s, err := p.Pipeline.Struct()
	return StatInfo{s}, err
}

// Single log entry
type Commit struct{ capnp.Struct }

// Commit_TypeID is the unique identifier for the type Commit.
const Commit_TypeID = 0xb47c58aa23289d55

func NewCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func NewRootCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func ReadRootCommit(msg *capnp.Message) (Commit, error) {
	root, err := msg.RootPtr()
	return Commit{root.Struct()}, err
}

func (s Commit) String() string {
	str, _ := text.Marshal(0xb47c58aa23289d55, s.Struct)
	return str
}

func (s Commit) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Commit) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Commit) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Commit) Msg() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Commit) HasMsg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Commit) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Commit) SetMsg(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Commit) Tags() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Commit) HasTags() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Commit) SetTags(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewTags sets the tags field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Commit) NewTags(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Commit) Date() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Commit) HasDate() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Commit) DateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Commit) SetDate(v string) error {
	return s.Struct.SetText(3, v)
}

// Commit_List is a list of Commit.
type Commit_List struct{ capnp.List }

// NewCommit creates a new list of Commit.
func NewCommit_List(s *capnp.Segment, sz int32) (Commit_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Commit_List{l}, err
}

func (s Commit_List) At(i int) Commit { return Commit{s.List.Struct(i)} }

func (s Commit_List) Set(i int, v Commit) error { return s.List.SetStruct(i, v.Struct) }

func (s Commit_List) String() string {
	str, _ := text.MarshalList(0xb47c58aa23289d55, s.List)
	return str
}

// Commit_Promise is a wrapper for a Commit promised by a client call.
type Commit_Promise struct{ *capnp.Pipeline }

func (p Commit_Promise) Struct() (Commit, error) {
	s, err := p.Pipeline.Struct()
	return Commit{s}, err
}

// A config entry (including meta info)
type ConfigEntry struct{ capnp.Struct }

// ConfigEntry_TypeID is the unique identifier for the type ConfigEntry.
const ConfigEntry_TypeID = 0x974c11f8cfed4247

func NewConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func NewRootConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func ReadRootConfigEntry(msg *capnp.Message) (ConfigEntry, error) {
	root, err := msg.RootPtr()
	return ConfigEntry{root.Struct()}, err
}

func (s ConfigEntry) String() string {
	str, _ := text.Marshal(0x974c11f8cfed4247, s.Struct)
	return str
}

func (s ConfigEntry) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ConfigEntry) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ConfigEntry) Val() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ConfigEntry) HasVal() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) ValBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetVal(v string) error {
	return s.Struct.SetText(1, v)
}

func (s ConfigEntry) Doc() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s ConfigEntry) HasDoc() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DocBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDoc(v string) error {
	return s.Struct.SetText(2, v)
}

func (s ConfigEntry) Default() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s ConfigEntry) HasDefault() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DefaultBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDefault(v string) error {
	return s.Struct.SetText(3, v)
}

func (s ConfigEntry) NeedsRestart() bool {
	return s.Struct.Bit(0)
}

func (s ConfigEntry) SetNeedsRestart(v bool) {
	s.Struct.SetBit(0, v)
}

// ConfigEntry_List is a list of ConfigEntry.
type ConfigEntry_List struct{ capnp.List }

// NewConfigEntry creates a new list of ConfigEntry.
func NewConfigEntry_List(s *capnp.Segment, sz int32) (ConfigEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return ConfigEntry_List{l}, err
}

func (s ConfigEntry_List) At(i int) ConfigEntry { return ConfigEntry{s.List.Struct(i)} }

func (s ConfigEntry_List) Set(i int, v ConfigEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s ConfigEntry_List) String() string {
	str, _ := text.MarshalList(0x974c11f8cfed4247, s.List)
	return str
}

// ConfigEntry_Promise is a wrapper for a ConfigEntry promised by a client call.
type ConfigEntry_Promise struct{ *capnp.Pipeline }

func (p ConfigEntry_Promise) Struct() (ConfigEntry, error) {
	s, err := p.Pipeline.Struct()
	return ConfigEntry{s}, err
}

// One history entry for a file
type Change struct{ capnp.Struct }

// Change_TypeID is the unique identifier for the type Change.
const Change_TypeID = 0xd01613feea87ee6a

func NewChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return Change{st}, err
}

func NewRootChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return Change{st}, err
}

func ReadRootChange(msg *capnp.Message) (Change, error) {
	root, err := msg.RootPtr()
	return Change{root.Struct()}, err
}

func (s Change) String() string {
	str, _ := text.Marshal(0xd01613feea87ee6a, s.Struct)
	return str
}

func (s Change) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Change) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Change) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Change) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Change) Change() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Change) HasChange() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Change) ChangeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Change) SetChange(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Change) Head() (Commit, error) {
	p, err := s.Struct.Ptr(2)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasHead() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Change) SetHead(v Commit) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewHead sets the head field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewHead() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) Next() (Commit, error) {
	p, err := s.Struct.Ptr(3)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasNext() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Change) SetNext(v Commit) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewNext sets the next field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewNext() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) MovedTo() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Change) HasMovedTo() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Change) MovedToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Change) SetMovedTo(v string) error {
	return s.Struct.SetText(4, v)
}

func (s Change) WasPreviouslyAt() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s Change) HasWasPreviouslyAt() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Change) WasPreviouslyAtBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s Change) SetWasPreviouslyAt(v string) error {
	return s.Struct.SetText(5, v)
}

func (s Change) IsPinned() bool {
	return s.Struct.Bit(0)
}

func (s Change) SetIsPinned(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Change) IsExplicit() bool {
	return s.Struct.Bit(1)
}

func (s Change) SetIsExplicit(v bool) {
	s.Struct.SetBit(1, v)
}

// Change_List is a list of Change.
type Change_List struct{ capnp.List }

// NewChange creates a new list of Change.
func NewChange_List(s *capnp.Segment, sz int32) (Change_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return Change_List{l}, err
}

func (s Change_List) At(i int) Change { return Change{s.List.Struct(i)} }

func (s Change_List) Set(i int, v Change) error { return s.List.SetStruct(i, v.Struct) }

func (s Change_List) String() string {
	str, _ := text.MarshalList(0xd01613feea87ee6a, s.List)
	return str
}

// Change_Promise is a wrapper for a Change promised by a client call.
type Change_Promise struct{ *capnp.Pipeline }

func (p Change_Promise) Struct() (Change, error) {
	s, err := p.Pipeline.Struct()
	return Change{s}, err
}

func (p Change_Promise) Head() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

func (p Change_Promise) Next() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(3)}
}

// Represent two differing files
type DiffPair struct{ capnp.Struct }

// DiffPair_TypeID is the unique identifier for the type DiffPair.
const DiffPair_TypeID = 0xf8551f83bb42e152

func NewDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func NewRootDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func ReadRootDiffPair(msg *capnp.Message) (DiffPair, error) {
	root, err := msg.RootPtr()
	return DiffPair{root.Struct()}, err
}

func (s DiffPair) String() string {
	str, _ := text.Marshal(0xf8551f83bb42e152, s.Struct)
	return str
}

func (s DiffPair) Src() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasSrc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetSrc(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSrc sets the src field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewSrc() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s DiffPair) Dst() (StatInfo, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasDst() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetDst(v StatInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDst sets the dst field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewDst() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// DiffPair_List is a list of DiffPair.
type DiffPair_List struct{ capnp.List }

// NewDiffPair creates a new list of DiffPair.
func NewDiffPair_List(s *capnp.Segment, sz int32) (DiffPair_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DiffPair_List{l}, err
}

func (s DiffPair_List) At(i int) DiffPair { return DiffPair{s.List.Struct(i)} }

func (s DiffPair_List) Set(i int, v DiffPair) error { return s.List.SetStruct(i, v.Struct) }

func (s DiffPair_List) String() string {
	str, _ := text.MarshalList(0xf8551f83bb42e152, s.List)
	return str
}

// DiffPair_Promise is a wrapper for a DiffPair promised by a client call.
type DiffPair_Promise struct{ *capnp.Pipeline }

func (p DiffPair_Promise) Struct() (DiffPair, error) {
	s, err := p.Pipeline.Struct()
	return DiffPair{s}, err
}

func (p DiffPair_Promise) Src() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p DiffPair_Promise) Dst() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

// Difference between two commits
type Diff struct{ capnp.Struct }

// Diff_TypeID is the unique identifier for the type Diff.
const Diff_TypeID = 0xc9601ec89a6aa066

func NewDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func NewRootDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func ReadRootDiff(msg *capnp.Message) (Diff, error) {
	root, err := msg.RootPtr()
	return Diff{root.Struct()}, err
}

func (s Diff) String() string {
	str, _ := text.Marshal(0xc9601ec89a6aa066, s.Struct)
	return str
}

func (s Diff) Added() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasAdded() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Diff) SetAdded(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAdded sets the added field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewAdded(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Diff) Removed() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasRemoved() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Diff) SetRemoved(v StatInfo_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemoved sets the removed field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewRemoved(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Diff) Ignored() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(2)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasIgnored() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Diff) SetIgnored(v StatInfo_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewIgnored sets the ignored field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewIgnored(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Diff) Missing() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(3)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasMissing() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Diff) SetMissing(v StatInfo_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMissing sets the missing field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewMissing(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s Diff) Moved() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(4)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMoved() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Diff) SetMoved(v DiffPair_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMoved sets the moved field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMoved(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s Diff) Merged() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(5)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMerged() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Diff) SetMerged(v DiffPair_List) error {
	return s.Struct.SetPtr(5, v.List.ToPtr())
}

// NewMerged sets the merged field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMerged(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(5, l.List.ToPtr())
	return l, err
}

func (s Diff) Conflict() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(6)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasConflict() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s Diff) SetConflict(v DiffPair_List) error {
	return s.Struct.SetPtr(6, v.List.ToPtr())
}

// NewConflict sets the conflict field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewConflict(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(6, l.List.ToPtr())
	return l, err
}

// Diff_List is a list of Diff.
type Diff_List struct{ capnp.List }

// NewDiff creates a new list of Diff.
func NewDiff_List(s *capnp.Segment, sz int32) (Diff_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7}, sz)
	return Diff_List{l}, err
}

func (s Diff_List) At(i int) Diff { return Diff{s.List.Struct(i)} }

func (s Diff_List) Set(i int, v Diff) error { return s.List.SetStruct(i, v.Struct) }

func (s Diff_List) String() string {
	str, _ := text.MarshalList(0xc9601ec89a6aa066, s.List)
	return str
}

// Diff_Promise is a wrapper for a Diff promised by a client call.
type Diff_Promise struct{ *capnp.Pipeline }

func (p Diff_Promise) Struct() (Diff, error) {
	s, err := p.Pipeline.Struct()
	return Diff{s}, err
}

// A folder that a remote is allowed to access
type RemoteFolder struct{ capnp.Struct }

// RemoteFolder_TypeID is the unique identifier for the type RemoteFolder.
const RemoteFolder_TypeID = 0x8ed051e9369ac720

func NewRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RemoteFolder{st}, err
}

func NewRootRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RemoteFolder{st}, err
}

func ReadRootRemoteFolder(msg *capnp.Message) (RemoteFolder, error) {
	root, err := msg.RootPtr()
	return RemoteFolder{root.Struct()}, err
}

func (s RemoteFolder) String() string {
	str, _ := text.Marshal(0x8ed051e9369ac720, s.Struct)
	return str
}

func (s RemoteFolder) Folder() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RemoteFolder) HasFolder() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) FolderBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetFolder(v string) error {
	return s.Struct.SetText(0, v)
}

// RemoteFolder_List is a list of RemoteFolder.
type RemoteFolder_List struct{ capnp.List }

// NewRemoteFolder creates a new list of RemoteFolder.
func NewRemoteFolder_List(s *capnp.Segment, sz int32) (RemoteFolder_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RemoteFolder_List{l}, err
}

func (s RemoteFolder_List) At(i int) RemoteFolder { return RemoteFolder{s.List.Struct(i)} }

func (s RemoteFolder_List) Set(i int, v RemoteFolder) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteFolder_List) String() string {
	str, _ := text.MarshalList(0x8ed051e9369ac720, s.List)
	return str
}

// RemoteFolder_Promise is a wrapper for a RemoteFolder promised by a client call.
type RemoteFolder_Promise struct{ *capnp.Pipeline }

func (p RemoteFolder_Promise) Struct() (RemoteFolder, error) {
	s, err := p.Pipeline.Struct()
	return RemoteFolder{s}, err
}

type LocateResult struct{ capnp.Struct }

// LocateResult_TypeID is the unique identifier for the type LocateResult.
const LocateResult_TypeID = 0xd95473f6f8a89a69

func NewLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func NewRootLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func ReadRootLocateResult(msg *capnp.Message) (LocateResult, error) {
	root, err := msg.RootPtr()
	return LocateResult{root.Struct()}, err
}

func (s LocateResult) String() string {
	str, _ := text.Marshal(0xd95473f6f8a89a69, s.Struct)
	return str
}

func (s LocateResult) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s LocateResult) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s LocateResult) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s LocateResult) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s LocateResult) Addr() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s LocateResult) HasAddr() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s LocateResult) AddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s LocateResult) SetAddr(v string) error {
	return s.Struct.SetText(1, v)
}

func (s LocateResult) Mask() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s LocateResult) HasMask() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s LocateResult) MaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s LocateResult) SetMask(v string) error {
	return s.Struct.SetText(2, v)
}

func (s LocateResult) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s LocateResult) HasFingerprint() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s LocateResult) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s LocateResult) SetFingerprint(v string) error {
	return s.Struct.SetText(3, v)
}

// LocateResult_List is a list of LocateResult.
type LocateResult_List struct{ capnp.List }

// NewLocateResult creates a new list of LocateResult.
func NewLocateResult_List(s *capnp.Segment, sz int32) (LocateResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return LocateResult_List{l}, err
}

func (s LocateResult_List) At(i int) LocateResult { return LocateResult{s.List.Struct(i)} }

func (s LocateResult_List) Set(i int, v LocateResult) error { return s.List.SetStruct(i, v.Struct) }

func (s LocateResult_List) String() string {
	str, _ := text.MarshalList(0xd95473f6f8a89a69, s.List)
	return str
}

// LocateResult_Promise is a wrapper for a LocateResult promised by a client call.
type LocateResult_Promise struct{ *capnp.Pipeline }

func (p LocateResult_Promise) Struct() (LocateResult, error) {
	s, err := p.Pipeline.Struct()
	return LocateResult{s}, err
}

// Info about our current user state
type Identity struct{ capnp.Struct }

// Identity_TypeID is the unique identifier for the type Identity.
const Identity_TypeID = 0xd49a2570fb5a4342

func NewIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func NewRootIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func ReadRootIdentity(msg *capnp.Message) (Identity, error) {
	root, err := msg.RootPtr()
	return Identity{root.Struct()}, err
}

func (s Identity) String() string {
	str, _ := text.Marshal(0xd49a2570fb5a4342, s.Struct)
	return str
}

func (s Identity) CurrentUser() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Identity) HasCurrentUser() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Identity) CurrentUserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Identity) SetCurrentUser(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Identity) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Identity) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Identity) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Identity) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Identity) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Identity) HasFingerprint() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Identity) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Identity) SetFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Identity) IsOnline() bool {
	return s.Struct.Bit(0)
}

func (s Identity) SetIsOnline(v bool) {
	s.Struct.SetBit(0, v)
}

// Identity_List is a list of Identity.
type Identity_List struct{ capnp.List }

// NewIdentity creates a new list of Identity.
func NewIdentity_List(s *capnp.Segment, sz int32) (Identity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Identity_List{l}, err
}

func (s Identity_List) At(i int) Identity { return Identity{s.List.Struct(i)} }

func (s Identity_List) Set(i int, v Identity) error { return s.List.SetStruct(i, v.Struct) }

func (s Identity_List) String() string {
	str, _ := text.MarshalList(0xd49a2570fb5a4342, s.List)
	return str
}

// Identity_Promise is a wrapper for a Identity promised by a client call.
type Identity_Promise struct{ *capnp.Pipeline }

func (p Identity_Promise) Struct() (Identity, error) {
	s, err := p.Pipeline.Struct()
	return Identity{s}, err
}

type MountOptions struct{ capnp.Struct }

// MountOptions_TypeID is the unique identifier for the type MountOptions.
const MountOptions_TypeID = 0xbc4d5c31427dc498

func NewMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func NewRootMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func ReadRootMountOptions(msg *capnp.Message) (MountOptions, error) {
	root, err := msg.RootPtr()
	return MountOptions{root.Struct()}, err
}

func (s MountOptions) String() string {
	str, _ := text.Marshal(0xbc4d5c31427dc498, s.Struct)
	return str
}

func (s MountOptions) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s MountOptions) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s MountOptions) RootPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s MountOptions) HasRootPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s MountOptions) RootPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s MountOptions) SetRootPath(v string) error {
	return s.Struct.SetText(0, v)
}

// MountOptions_List is a list of MountOptions.
type MountOptions_List struct{ capnp.List }

// NewMountOptions creates a new list of MountOptions.
func NewMountOptions_List(s *capnp.Segment, sz int32) (MountOptions_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return MountOptions_List{l}, err
}

func (s MountOptions_List) At(i int) MountOptions { return MountOptions{s.List.Struct(i)} }

func (s MountOptions_List) Set(i int, v MountOptions) error { return s.List.SetStruct(i, v.Struct) }

func (s MountOptions_List) String() string {
	str, _ := text.MarshalList(0xbc4d5c31427dc498, s.List)
	return str
}

// MountOptions_Promise is a wrapper for a MountOptions promised by a client call.
type MountOptions_Promise struct{ *capnp.Pipeline }

func (p MountOptions_Promise) Struct() (MountOptions, error) {
	s, err := p.Pipeline.Struct()
	return MountOptions{s}, err
}

// Info a remote peer we might sync with
type Remote struct{ capnp.Struct }

// Remote_TypeID is the unique identifier for the type Remote.
const Remote_TypeID = 0xbe71bb7b0ed4539a

func NewRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Remote{st}, err
}

func NewRootRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Remote{st}, err
}

func ReadRootRemote(msg *capnp.Message) (Remote, error) {
	root, err := msg.RootPtr()
	return Remote{root.Struct()}, err
}

func (s Remote) String() string {
	str, _ := text.Marshal(0xbe71bb7b0ed4539a, s.Struct)
	return str
}

func (s Remote) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Remote) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Remote) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Remote) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Remote) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Remote) HasFingerprint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Remote) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Remote) SetFingerprint(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Remote) Folders() (RemoteFolder_List, error) {
	p, err := s.Struct.Ptr(2)
	return RemoteFolder_List{List: p.List()}, err
}

func (s Remote) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Remote) SetFolders(v RemoteFolder_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated RemoteFolder_List, preferring placement in s's segment.
func (s Remote) NewFolders(n int32) (RemoteFolder_List, error) {
	l, err := NewRemoteFolder_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteFolder_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Remote) AcceptAutoUpdates() bool {
	return s.Struct.Bit(0)
}

func (s Remote) SetAcceptAutoUpdates(v bool) {
	s.Struct.SetBit(0, v)
}

// Remote_List is a list of Remote.
type Remote_List struct{ capnp.List }

// NewRemote creates a new list of Remote.
func NewRemote_List(s *capnp.Segment, sz int32) (Remote_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Remote_List{l}, err
}

func (s Remote_List) At(i int) Remote { return Remote{s.List.Struct(i)} }

func (s Remote_List) Set(i int, v Remote) error { return s.List.SetStruct(i, v.Struct) }

func (s Remote_List) String() string {
	str, _ := text.MarshalList(0xbe71bb7b0ed4539a, s.List)
	return str
}

// Remote_Promise is a wrapper for a Remote promised by a client call.
type Remote_Promise struct{ *capnp.Pipeline }

func (p Remote_Promise) Struct() (Remote, error) {
	s, err := p.Pipeline.Struct()
	return Remote{s}, err
}

// net status of a remote
type RemoteStatus struct{ capnp.Struct }

// RemoteStatus_TypeID is the unique identifier for the type RemoteStatus.
const RemoteStatus_TypeID = 0xa9e401c52756826a

func NewRemoteStatus(s *capnp.Segment) (RemoteStatus, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return RemoteStatus{st}, err
}

func NewRootRemoteStatus(s *capnp.Segment) (RemoteStatus, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return RemoteStatus{st}, err
}

func ReadRootRemoteStatus(msg *capnp.Message) (RemoteStatus, error) {
	root, err := msg.RootPtr()
	return RemoteStatus{root.Struct()}, err
}

func (s RemoteStatus) String() string {
	str, _ := text.Marshal(0xa9e401c52756826a, s.Struct)
	return str
}

func (s RemoteStatus) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s RemoteStatus) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s RemoteStatus) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RemoteStatus) LastSeen() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RemoteStatus) HasLastSeen() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) LastSeenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RemoteStatus) SetLastSeen(v string) error {
	return s.Struct.SetText(1, v)
}

func (s RemoteStatus) RoundtripMs() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s RemoteStatus) SetRoundtripMs(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s RemoteStatus) Error() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s RemoteStatus) HasError() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) ErrorBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s RemoteStatus) SetError(v string) error {
	return s.Struct.SetText(2, v)
}

func (s RemoteStatus) Authenticated() bool {
	return s.Struct.Bit(32)
}

func (s RemoteStatus) SetAuthenticated(v bool) {
	s.Struct.SetBit(32, v)
}

// RemoteStatus_List is a list of RemoteStatus.
type RemoteStatus_List struct{ capnp.List }

// NewRemoteStatus creates a new list of RemoteStatus.
func NewRemoteStatus_List(s *capnp.Segment, sz int32) (RemoteStatus_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return RemoteStatus_List{l}, err
}

func (s RemoteStatus_List) At(i int) RemoteStatus { return RemoteStatus{s.List.Struct(i)} }

func (s RemoteStatus_List) Set(i int, v RemoteStatus) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteStatus_List) String() string {
	str, _ := text.MarshalList(0xa9e401c52756826a, s.List)
	return str
}

// RemoteStatus_Promise is a wrapper for a RemoteStatus promised by a client call.
type RemoteStatus_Promise struct{ *capnp.Pipeline }

func (p RemoteStatus_Promise) Struct() (RemoteStatus, error) {
	s, err := p.Pipeline.Struct()
	return RemoteStatus{s}, err
}

func (p RemoteStatus_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

// A single item that was killed by the gc
type GarbageItem struct{ capnp.Struct }

// GarbageItem_TypeID is the unique identifier for the type GarbageItem.
const GarbageItem_TypeID = 0xecb10f87fbe0d6c5

func NewGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func NewRootGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func ReadRootGarbageItem(msg *capnp.Message) (GarbageItem, error) {
	root, err := msg.RootPtr()
	return GarbageItem{root.Struct()}, err
}

func (s GarbageItem) String() string {
	str, _ := text.Marshal(0xecb10f87fbe0d6c5, s.Struct)
	return str
}

func (s GarbageItem) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GarbageItem) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GarbageItem) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GarbageItem) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GarbageItem) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s GarbageItem) HasContent() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GarbageItem) SetContent(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s GarbageItem) Owner() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GarbageItem) HasOwner() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GarbageItem) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GarbageItem) SetOwner(v string) error {
	return s.Struct.SetText(2, v)
}

// GarbageItem_List is a list of GarbageItem.
type GarbageItem_List struct{ capnp.List }

// NewGarbageItem creates a new list of GarbageItem.
func NewGarbageItem_List(s *capnp.Segment, sz int32) (GarbageItem_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GarbageItem_List{l}, err
}

func (s GarbageItem_List) At(i int) GarbageItem { return GarbageItem{s.List.Struct(i)} }

func (s GarbageItem_List) Set(i int, v GarbageItem) error { return s.List.SetStruct(i, v.Struct) }

func (s GarbageItem_List) String() string {
	str, _ := text.MarshalList(0xecb10f87fbe0d6c5, s.List)
	return str
}

// GarbageItem_Promise is a wrapper for a GarbageItem promised by a client call.
type GarbageItem_Promise struct{ *capnp.Pipeline }

func (p GarbageItem_Promise) Struct() (GarbageItem, error) {
	s, err := p.Pipeline.Struct()
	return GarbageItem{s}, err
}

type Version struct{ capnp.Struct }

// Version_TypeID is the unique identifier for the type Version.
const Version_TypeID = 0xe1b522247fc407ad

func NewVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func NewRootVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func ReadRootVersion(msg *capnp.Message) (Version, error) {
	root, err := msg.RootPtr()
	return Version{root.Struct()}, err
}

func (s Version) String() string {
	str, _ := text.Marshal(0xe1b522247fc407ad, s.Struct)
	return str
}

func (s Version) ServerVersion() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Version) HasServerVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Version) ServerVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Version) SetServerVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Version) ServerRev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Version) HasServerRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Version) ServerRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Version) SetServerRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Version) BackendVersion() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Version) HasBackendVersion() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Version) BackendVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Version) SetBackendVersion(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Version) BackendRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Version) HasBackendRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Version) BackendRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Version) SetBackendRev(v string) error {
	return s.Struct.SetText(3, v)
}

// Version_List is a list of Version.
type Version_List struct{ capnp.List }

// NewVersion creates a new list of Version.
func NewVersion_List(s *capnp.Segment, sz int32) (Version_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Version_List{l}, err
}

func (s Version_List) At(i int) Version { return Version{s.List.Struct(i)} }

func (s Version_List) Set(i int, v Version) error { return s.List.SetStruct(i, v.Struct) }

func (s Version_List) String() string {
	str, _ := text.MarshalList(0xe1b522247fc407ad, s.List)
	return str
}

// Version_Promise is a wrapper for a Version promised by a client call.
type Version_Promise struct{ *capnp.Pipeline }

func (p Version_Promise) Struct() (Version, error) {
	s, err := p.Pipeline.Struct()
	return Version{s}, err
}

type ExplicitPin struct{ capnp.Struct }

// ExplicitPin_TypeID is the unique identifier for the type ExplicitPin.
const ExplicitPin_TypeID = 0xdc876697979bc7e5

func NewExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func NewRootExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func ReadRootExplicitPin(msg *capnp.Message) (ExplicitPin, error) {
	root, err := msg.RootPtr()
	return ExplicitPin{root.Struct()}, err
}

func (s ExplicitPin) String() string {
	str, _ := text.Marshal(0xdc876697979bc7e5, s.Struct)
	return str
}

func (s ExplicitPin) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ExplicitPin) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ExplicitPin) Commit() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ExplicitPin) HasCommit() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetCommit(v string) error {
	return s.Struct.SetText(1, v)
}

// ExplicitPin_List is a list of ExplicitPin.
type ExplicitPin_List struct{ capnp.List }

// NewExplicitPin creates a new list of ExplicitPin.
func NewExplicitPin_List(s *capnp.Segment, sz int32) (ExplicitPin_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ExplicitPin_List{l}, err
}

func (s ExplicitPin_List) At(i int) ExplicitPin { return ExplicitPin{s.List.Struct(i)} }

func (s ExplicitPin_List) Set(i int, v ExplicitPin) error { return s.List.SetStruct(i, v.Struct) }

func (s ExplicitPin_List) String() string {
	str, _ := text.MarshalList(0xdc876697979bc7e5, s.List)
	return str
}

// ExplicitPin_Promise is a wrapper for a ExplicitPin promised by a client call.
type ExplicitPin_Promise struct{ *capnp.Pipeline }

func (p ExplicitPin_Promise) Struct() (ExplicitPin, error) {
	s, err := p.Pipeline.Struct()
	return ExplicitPin{s}, err
}

type FsTabEntry struct{ capnp.Struct }

// FsTabEntry_TypeID is the unique identifier for the type FsTabEntry.
const FsTabEntry_TypeID = 0xf7da25d3ead6c0d3

func NewFsTabEntry(s *capnp.Segment) (FsTabEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return FsTabEntry{st}, err
}

func NewRootFsTabEntry(s *capnp.Segment) (FsTabEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return FsTabEntry{st}, err
}

func ReadRootFsTabEntry(msg *capnp.Message) (FsTabEntry, error) {
	root, err := msg.RootPtr()
	return FsTabEntry{root.Struct()}, err
}

func (s FsTabEntry) String() string {
	str, _ := text.Marshal(0xf7da25d3ead6c0d3, s.Struct)
	return str
}

func (s FsTabEntry) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FsTabEntry) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FsTabEntry) Path() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FsTabEntry) HasPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FsTabEntry) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s FsTabEntry) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s FsTabEntry) Root() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FsTabEntry) HasRoot() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetRoot(v string) error {
	return s.Struct.SetText(2, v)
}

func (s FsTabEntry) Active() bool {
	return s.Struct.Bit(1)
}

func (s FsTabEntry) SetActive(v bool) {
	s.Struct.SetBit(1, v)
}

// FsTabEntry_List is a list of FsTabEntry.
type FsTabEntry_List struct{ capnp.List }

// NewFsTabEntry creates a new list of FsTabEntry.
func NewFsTabEntry_List(s *capnp.Segment, sz int32) (FsTabEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return FsTabEntry_List{l}, err
}

func (s FsTabEntry_List) At(i int) FsTabEntry { return FsTabEntry{s.List.Struct(i)} }

func (s FsTabEntry_List) Set(i int, v FsTabEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s FsTabEntry_List) String() string {
	str, _ := text.MarshalList(0xf7da25d3ead6c0d3, s.List)
	return str
}

// FsTabEntry_Promise is a wrapper for a FsTabEntry promised by a client call.
type FsTabEntry_Promise struct{ *capnp.Pipeline }

func (p FsTabEntry_Promise) Struct() (FsTabEntry, error) {
	s, err := p.Pipeline.Struct()
	return FsTabEntry{s}, err
}

type FS struct{ Client capnp.Client }

// FS_TypeID is the unique identifier for the type FS.
const FS_TypeID = 0xe2b3585db47cd4f9

func (c FS) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) ListExplicitPins(ctx context.Context, params func(FS_listExplicitPins_Params) error, opts ...capnp.CallOption) FS_listExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_listExplicitPins_Params{Struct: s}) }
	}
	return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) ClearExplicitPins(ctx context.Context, params func(FS_clearExplicitPins_Params) error, opts ...capnp.CallOption) FS_clearExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_clearExplicitPins_Params{Struct: s}) }
	}
	return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) SetExplicitPins(ctx context.Context, params func(FS_setExplicitPins_Params) error, opts ...capnp.CallOption) FS_setExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_setExplicitPins_Params{Struct: s}) }
	}
	return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Tar(ctx context.Context, params func(FS_tar_Params) error, opts ...capnp.CallOption) FS_tar_Results_Promise {
	if c.Client == nil {
		return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_tar_Params{Struct: s}) }
	}
	return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) DeletedNodes(ctx context.Context, params func(FS_deletedNodes_Params) error, opts ...capnp.CallOption) FS_deletedNodes_Results_Promise {
	if c.Client == nil {
		return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_deletedNodes_Params{Struct: s}) }
	}
	return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Undelete(ctx context.Context, params func(FS_undelete_Params) error, opts ...capnp.CallOption) FS_undelete_Results_Promise {
	if c.Client == nil {
		return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_undelete_Params{Struct: s}) }
	}
	return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type FS_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	ListExplicitPins(FS_listExplicitPins) error

	ClearExplicitPins(FS_clearExplicitPins) error

	SetExplicitPins(FS_setExplicitPins) error

	Tar(FS_tar) error

	DeletedNodes(FS_deletedNodes) error

	Undelete(FS_undelete) error
}

func FS_ServerToClient(s FS_Server) FS {
	c, _ := s.(server.Closer)
	return FS{Client: server.New(FS_Methods(nil, s), c)}
}

func FS_Methods(methods []server.Method, s FS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 19)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_listExplicitPins{c, opts, FS_listExplicitPins_Params{Struct: p}, FS_listExplicitPins_Results{Struct: r}}
			return s.ListExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_clearExplicitPins{c, opts, FS_clearExplicitPins_Params{Struct: p}, FS_clearExplicitPins_Results{Struct: r}}
			return s.ClearExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_setExplicitPins{c, opts, FS_setExplicitPins_Params{Struct: p}, FS_setExplicitPins_Results{Struct: r}}
			return s.SetExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_tar{c, opts, FS_tar_Params{Struct: p}, FS_tar_Results{Struct: r}}
			return s.Tar(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_deletedNodes{c, opts, FS_deletedNodes_Params{Struct: p}, FS_deletedNodes_Results{Struct: r}}
			return s.DeletedNodes(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_undelete{c, opts, FS_undelete_Params{Struct: p}, FS_undelete_Results{Struct: r}}
			return s.Undelete(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// FS_stage holds the arguments for a server call to FS.stage.
type FS_stage struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stage_Params
	Results FS_stage_Results
}

// FS_list holds the arguments for a server call to FS.list.
type FS_list struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_list_Params
	Results FS_list_Results
}

// FS_cat holds the arguments for a server call to FS.cat.
type FS_cat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_cat_Params
	Results FS_cat_Results
}

// FS_mkdir holds the arguments for a server call to FS.mkdir.
type FS_mkdir struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_mkdir_Params
	Results FS_mkdir_Results
}

// FS_remove holds the arguments for a server call to FS.remove.
type FS_remove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_remove_Params
	Results FS_remove_Results
}

// FS_move holds the arguments for a server call to FS.move.
type FS_move struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_move_Params
	Results FS_move_Results
}

// FS_copy holds the arguments for a server call to FS.copy.
type FS_copy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_copy_Params
	Results FS_copy_Results
}

// FS_pin holds the arguments for a server call to FS.pin.
type FS_pin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_pin_Params
	Results FS_pin_Results
}

// FS_unpin holds the arguments for a server call to FS.unpin.
type FS_unpin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_unpin_Params
	Results FS_unpin_Results
}

// FS_stat holds the arguments for a server call to FS.stat.
type FS_stat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stat_Params
	Results FS_stat_Results
}

// FS_garbageCollect holds the arguments for a server call to FS.garbageCollect.
type FS_garbageCollect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_garbageCollect_Params
	Results FS_garbageCollect_Results
}

// FS_touch holds the arguments for a server call to FS.touch.
type FS_touch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_touch_Params
	Results FS_touch_Results
}

// FS_exists holds the arguments for a server call to FS.exists.
type FS_exists struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_exists_Params
	Results FS_exists_Results
}

// FS_listExplicitPins holds the arguments for a server call to FS.listExplicitPins.
type FS_listExplicitPins struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_listExplicitPins_Params
	Results FS_listExplicitPins_Results
}

// FS_clearExplicitPins holds the arguments for a server call to FS.clearExplicitPins.
type FS_clearExplicitPins struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_clearExplicitPins_Params
	Results FS_clearExplicitPins_Results
}

// FS_setExplicitPins holds the arguments for a server call to FS.setExplicitPins.
type FS_setExplicitPins struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_setExplicitPins_Params
	Results FS_setExplicitPins_Results
}

// FS_tar holds the arguments for a server call to FS.tar.
type FS_tar struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_tar_Params
	Results FS_tar_Results
}

// FS_deletedNodes holds the arguments for a server call to FS.deletedNodes.
type FS_deletedNodes struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_deletedNodes_Params
	Results FS_deletedNodes_Results
}

// FS_undelete holds the arguments for a server call to FS.undelete.
type FS_undelete struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_undelete_Params
	Results FS_undelete_Results
}

type FS_stage_Params struct{ capnp.Struct }

// FS_stage_Params_TypeID is the unique identifier for the type FS_stage_Params.
const FS_stage_Params_TypeID = 0x9ba7a818970a029c

func NewFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func NewRootFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func ReadRootFS_stage_Params(msg *capnp.Message) (FS_stage_Params, error) {
	root, err := msg.RootPtr()
	return FS_stage_Params{root.Struct()}, err
}

func (s FS_stage_Params) String() string {
	str, _ := text.Marshal(0x9ba7a818970a029c, s.Struct)
	return str
}

func (s FS_stage_Params) LocalPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stage_Params) HasLocalPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) LocalPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetLocalPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_stage_Params) RepoPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_stage_Params) HasRepoPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) RepoPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetRepoPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_stage_Params_List is a list of FS_stage_Params.
type FS_stage_Params_List struct{ capnp.List }

// NewFS_stage_Params creates a new list of FS_stage_Params.
func NewFS_stage_Params_List(s *capnp.Segment, sz int32) (FS_stage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_stage_Params_List{l}, err
}

func (s FS_stage_Params_List) At(i int) FS_stage_Params { return FS_stage_Params{s.List.Struct(i)} }

func (s FS_stage_Params_List) Set(i int, v FS_stage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Params_List) String() string {
	str, _ := text.MarshalList(0x9ba7a818970a029c, s.List)
	return str
}

// FS_stage_Params_Promise is a wrapper for a FS_stage_Params promised by a client call.
type FS_stage_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Params_Promise) Struct() (FS_stage_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Params{s}, err
}

type FS_stage_Results struct{ capnp.Struct }

// FS_stage_Results_TypeID is the unique identifier for the type FS_stage_Results.
const FS_stage_Results_TypeID = 0x884238694e8b8d88

func NewFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func NewRootFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func ReadRootFS_stage_Results(msg *capnp.Message) (FS_stage_Results, error) {
	root, err := msg.RootPtr()
	return FS_stage_Results{root.Struct()}, err
}

func (s FS_stage_Results) String() string {
	str, _ := text.Marshal(0x884238694e8b8d88, s.Struct)
	return str
}

// FS_stage_Results_List is a list of FS_stage_Results.
type FS_stage_Results_List struct{ capnp.List }

// NewFS_stage_Results creates a new list of FS_stage_Results.
func NewFS_stage_Results_List(s *capnp.Segment, sz int32) (FS_stage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_stage_Results_List{l}, err
}

func (s FS_stage_Results_List) At(i int) FS_stage_Results { return FS_stage_Results{s.List.Struct(i)} }

func (s FS_stage_Results_List) Set(i int, v FS_stage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Results_List) String() string {
	str, _ := text.MarshalList(0x884238694e8b8d88, s.List)
	return str
}

// FS_stage_Results_Promise is a wrapper for a FS_stage_Results promised by a client call.
type FS_stage_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Results_Promise) Struct() (FS_stage_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Results{s}, err
}

type FS_list_Params struct{ capnp.Struct }

// FS_list_Params_TypeID is the unique identifier for the type FS_list_Params.
const FS_list_Params_TypeID = 0xfd86771dd5950237

func NewFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func NewRootFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func ReadRootFS_list_Params(msg *capnp.Message) (FS_list_Params, error) {
	root, err := msg.RootPtr()
	return FS_list_Params{root.Struct()}, err
}

func (s FS_list_Params) String() string {
	str, _ := text.Marshal(0xfd86771dd5950237, s.Struct)
	return str
}

func (s FS_list_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_list_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_list_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_list_Params) MaxDepth() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_list_Params) SetMaxDepth(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_list_Params_List is a list of FS_list_Params.
type FS_list_Params_List struct{ capnp.List }

// NewFS_list_Params creates a new list of FS_list_Params.
func NewFS_list_Params_List(s *capnp.Segment, sz int32) (FS_list_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_list_Params_List{l}, err
}

func (s FS_list_Params_List) At(i int) FS_list_Params { return FS_list_Params{s.List.Struct(i)} }

func (s FS_list_Params_List) Set(i int, v FS_list_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_list_Params_List) String() string {
	str, _ := text.MarshalList(0xfd86771dd5950237, s.List)
	return str
}

// FS_list_Params_Promise is a wrapper for a FS_list_Params promised by a client call.
type FS_list_Params_Promise struct{ *capnp.Pipeline }

func (p FS_list_Params_Promise) Struct() (FS_list_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Params{s}, err
}

type FS_list_Results struct{ capnp.Struct }

// FS_list_Results_TypeID is the unique identifier for the type FS_list_Results.
const FS_list_Results_TypeID = 0xe92935bf20cc2856

func NewFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func NewRootFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func ReadRootFS_list_Results(msg *capnp.Message) (FS_list_Results, error) {
	root, err := msg.RootPtr()
	return FS_list_Results{root.Struct()}, err
}

func (s FS_list_Results) String() string {
	str, _ := text.Marshal(0xe92935bf20cc2856, s.Struct)
	return str
}

func (s FS_list_Results) Entries() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_list_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Results) SetEntries(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_list_Results) NewEntries(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_list_Results_List is a list of FS_list_Results.
type FS_list_Results_List struct{ capnp.List }

// NewFS_list_Results creates a new list of FS_list_Results.
func NewFS_list_Results_List(s *capnp.Segment, sz int32) (FS_list_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_list_Results_List{l}, err
}

func (s FS_list_Results_List) At(i int) FS_list_Results { return FS_list_Results{s.List.Struct(i)} }

func (s FS_list_Results_List) Set(i int, v FS_list_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_list_Results_List) String() string {
	str, _ := text.MarshalList(0xe92935bf20cc2856, s.List)
	return str
}

// FS_list_Results_Promise is a wrapper for a FS_list_Results promised by a client call.
type FS_list_Results_Promise struct{ *capnp.Pipeline }

func (p FS_list_Results_Promise) Struct() (FS_list_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Results{s}, err
}

type FS_cat_Params struct{ capnp.Struct }

// FS_cat_Params_TypeID is the unique identifier for the type FS_cat_Params.
const FS_cat_Params_TypeID = 0xa9095b4cff1e5634

func NewFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func NewRootFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func ReadRootFS_cat_Params(msg *capnp.Message) (FS_cat_Params, error) {
	root, err := msg.RootPtr()
	return FS_cat_Params{root.Struct()}, err
}

func (s FS_cat_Params) String() string {
	str, _ := text.Marshal(0xa9095b4cff1e5634, s.Struct)
	return str
}

func (s FS_cat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_cat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_cat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_cat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_cat_Params_List is a list of FS_cat_Params.
type FS_cat_Params_List struct{ capnp.List }

// NewFS_cat_Params creates a new list of FS_cat_Params.
func NewFS_cat_Params_List(s *capnp.Segment, sz int32) (FS_cat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_cat_Params_List{l}, err
}

func (s FS_cat_Params_List) At(i int) FS_cat_Params { return FS_cat_Params{s.List.Struct(i)} }

func (s FS_cat_Params_List) Set(i int, v FS_cat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Params_List) String() string {
	str, _ := text.MarshalList(0xa9095b4cff1e5634, s.List)
	return str
}

// FS_cat_Params_Promise is a wrapper for a FS_cat_Params promised by a client call.
type FS_cat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Params_Promise) Struct() (FS_cat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Params{s}, err
}

type FS_cat_Results struct{ capnp.Struct }

// FS_cat_Results_TypeID is the unique identifier for the type FS_cat_Results.
const FS_cat_Results_TypeID = 0x9fe8d2cd92c27a38

func NewFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func NewRootFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func ReadRootFS_cat_Results(msg *capnp.Message) (FS_cat_Results, error) {
	root, err := msg.RootPtr()
	return FS_cat_Results{root.Struct()}, err
}

func (s FS_cat_Results) String() string {
	str, _ := text.Marshal(0x9fe8d2cd92c27a38, s.Struct)
	return str
}

func (s FS_cat_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_cat_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_cat_Results_List is a list of FS_cat_Results.
type FS_cat_Results_List struct{ capnp.List }

// NewFS_cat_Results creates a new list of FS_cat_Results.
func NewFS_cat_Results_List(s *capnp.Segment, sz int32) (FS_cat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_cat_Results_List{l}, err
}

func (s FS_cat_Results_List) At(i int) FS_cat_Results { return FS_cat_Results{s.List.Struct(i)} }

func (s FS_cat_Results_List) Set(i int, v FS_cat_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Results_List) String() string {
	str, _ := text.MarshalList(0x9fe8d2cd92c27a38, s.List)
	return str
}

// FS_cat_Results_Promise is a wrapper for a FS_cat_Results promised by a client call.
type FS_cat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Results_Promise) Struct() (FS_cat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Results{s}, err
}

type FS_mkdir_Params struct{ capnp.Struct }

// FS_mkdir_Params_TypeID is the unique identifier for the type FS_mkdir_Params.
const FS_mkdir_Params_TypeID = 0xb030fc18cb3b0e61

func NewFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func NewRootFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func ReadRootFS_mkdir_Params(msg *capnp.Message) (FS_mkdir_Params, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Params{root.Struct()}, err
}

func (s FS_mkdir_Params) String() string {
	str, _ := text.Marshal(0xb030fc18cb3b0e61, s.Struct)
	return str
}

func (s FS_mkdir_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_mkdir_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_mkdir_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_mkdir_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_mkdir_Params) CreateParents() bool {
	return s.Struct.Bit(0)
}

func (s FS_mkdir_Params) SetCreateParents(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_mkdir_Params_List is a list of FS_mkdir_Params.
type FS_mkdir_Params_List struct{ capnp.List }

// NewFS_mkdir_Params creates a new list of FS_mkdir_Params.
func NewFS_mkdir_Params_List(s *capnp.Segment, sz int32) (FS_mkdir_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_mkdir_Params_List{l}, err
}

func (s FS_mkdir_Params_List) At(i int) FS_mkdir_Params { return FS_mkdir_Params{s.List.Struct(i)} }

func (s FS_mkdir_Params_List) Set(i int, v FS_mkdir_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Params_List) String() string {
	str, _ := text.MarshalList(0xb030fc18cb3b0e61, s.List)
	return str
}

// FS_mkdir_Params_Promise is a wrapper for a FS_mkdir_Params promised by a client call.
type FS_mkdir_Params_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Params_Promise) Struct() (FS_mkdir_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Params{s}, err
}

type FS_mkdir_Results struct{ capnp.Struct }

// FS_mkdir_Results_TypeID is the unique identifier for the type FS_mkdir_Results.
const FS_mkdir_Results_TypeID = 0xf3243256580294f3

func NewFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func NewRootFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func ReadRootFS_mkdir_Results(msg *capnp.Message) (FS_mkdir_Results, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Results{root.Struct()}, err
}

func (s FS_mkdir_Results) String() string {
	str, _ := text.Marshal(0xf3243256580294f3, s.Struct)
	return str
}

// FS_mkdir_Results_List is a list of FS_mkdir_Results.
type FS_mkdir_Results_List struct{ capnp.List }

// NewFS_mkdir_Results creates a new list of FS_mkdir_Results.
func NewFS_mkdir_Results_List(s *capnp.Segment, sz int32) (FS_mkdir_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_mkdir_Results_List{l}, err
}

func (s FS_mkdir_Results_List) At(i int) FS_mkdir_Results { return FS_mkdir_Results{s.List.Struct(i)} }

func (s FS_mkdir_Results_List) Set(i int, v FS_mkdir_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Results_List) String() string {
	str, _ := text.MarshalList(0xf3243256580294f3, s.List)
	return str
}

// FS_mkdir_Results_Promise is a wrapper for a FS_mkdir_Results promised by a client call.
type FS_mkdir_Results_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Results_Promise) Struct() (FS_mkdir_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Results{s}, err
}

type FS_remove_Params struct{ capnp.Struct }

// FS_remove_Params_TypeID is the unique identifier for the type FS_remove_Params.
const FS_remove_Params_TypeID = 0xa99c622e110c1203

func NewFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func NewRootFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func ReadRootFS_remove_Params(msg *capnp.Message) (FS_remove_Params, error) {
	root, err := msg.RootPtr()
	return FS_remove_Params{root.Struct()}, err
}

func (s FS_remove_Params) String() string {
	str, _ := text.Marshal(0xa99c622e110c1203, s.Struct)
	return str
}

func (s FS_remove_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_remove_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_remove_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_remove_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_remove_Params_List is a list of FS_remove_Params.
type FS_remove_Params_List struct{ capnp.List }

// NewFS_remove_Params creates a new list of FS_remove_Params.
func NewFS_remove_Params_List(s *capnp.Segment, sz int32) (FS_remove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_remove_Params_List{l}, err
}

func (s FS_remove_Params_List) At(i int) FS_remove_Params { return FS_remove_Params{s.List.Struct(i)} }

func (s FS_remove_Params_List) Set(i int, v FS_remove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Params_List) String() string {
	str, _ := text.MarshalList(0xa99c622e110c1203, s.List)
	return str
}

// FS_remove_Params_Promise is a wrapper for a FS_remove_Params promised by a client call.
type FS_remove_Params_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Params_Promise) Struct() (FS_remove_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Params{s}, err
}

type FS_remove_Results struct{ capnp.Struct }

// FS_remove_Results_TypeID is the unique identifier for the type FS_remove_Results.
const FS_remove_Results_TypeID = 0xc9b3a8263f6853d7

func NewFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func NewRootFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func ReadRootFS_remove_Results(msg *capnp.Message) (FS_remove_Results, error) {
	root, err := msg.RootPtr()
	return FS_remove_Results{root.Struct()}, err
}

func (s FS_remove_Results) String() string {
	str, _ := text.Marshal(0xc9b3a8263f6853d7, s.Struct)
	return str
}

// FS_remove_Results_List is a list of FS_remove_Results.
type FS_remove_Results_List struct{ capnp.List }

// NewFS_remove_Results creates a new list of FS_remove_Results.
func NewFS_remove_Results_List(s *capnp.Segment, sz int32) (FS_remove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_remove_Results_List{l}, err
}

func (s FS_remove_Results_List) At(i int) FS_remove_Results {
	return FS_remove_Results{s.List.Struct(i)}
}

func (s FS_remove_Results_List) Set(i int, v FS_remove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Results_List) String() string {
	str, _ := text.MarshalList(0xc9b3a8263f6853d7, s.List)
	return str
}

// FS_remove_Results_Promise is a wrapper for a FS_remove_Results promised by a client call.
type FS_remove_Results_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Results_Promise) Struct() (FS_remove_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Results{s}, err
}

type FS_move_Params struct{ capnp.Struct }

// FS_move_Params_TypeID is the unique identifier for the type FS_move_Params.
const FS_move_Params_TypeID = 0xb76f3dc1dcf4fdf1

func NewFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func NewRootFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func ReadRootFS_move_Params(msg *capnp.Message) (FS_move_Params, error) {
	root, err := msg.RootPtr()
	return FS_move_Params{root.Struct()}, err
}

func (s FS_move_Params) String() string {
	str, _ := text.Marshal(0xb76f3dc1dcf4fdf1, s.Struct)
	return str
}

func (s FS_move_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_move_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_move_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_move_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_move_Params_List is a list of FS_move_Params.
type FS_move_Params_List struct{ capnp.List }

// NewFS_move_Params creates a new list of FS_move_Params.
func NewFS_move_Params_List(s *capnp.Segment, sz int32) (FS_move_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_move_Params_List{l}, err
}

func (s FS_move_Params_List) At(i int) FS_move_Params { return FS_move_Params{s.List.Struct(i)} }

func (s FS_move_Params_List) Set(i int, v FS_move_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_move_Params_List) String() string {
	str, _ := text.MarshalList(0xb76f3dc1dcf4fdf1, s.List)
	return str
}

// FS_move_Params_Promise is a wrapper for a FS_move_Params promised by a client call.
type FS_move_Params_Promise struct{ *capnp.Pipeline }

func (p FS_move_Params_Promise) Struct() (FS_move_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Params{s}, err
}

type FS_move_Results struct{ capnp.Struct }

// FS_move_Results_TypeID is the unique identifier for the type FS_move_Results.
const FS_move_Results_TypeID = 0xab89c6fc9bf26f2a

func NewFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func NewRootFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func ReadRootFS_move_Results(msg *capnp.Message) (FS_move_Results, error) {
	root, err := msg.RootPtr()
	return FS_move_Results{root.Struct()}, err
}

func (s FS_move_Results) String() string {
	str, _ := text.Marshal(0xab89c6fc9bf26f2a, s.Struct)
	return str
}

// FS_move_Results_List is a list of FS_move_Results.
type FS_move_Results_List struct{ capnp.List }

// NewFS_move_Results creates a new list of FS_move_Results.
func NewFS_move_Results_List(s *capnp.Segment, sz int32) (FS_move_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_move_Results_List{l}, err
}

func (s FS_move_Results_List) At(i int) FS_move_Results { return FS_move_Results{s.List.Struct(i)} }

func (s FS_move_Results_List) Set(i int, v FS_move_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_move_Results_List) String() string {
	str, _ := text.MarshalList(0xab89c6fc9bf26f2a, s.List)
	return str
}

// FS_move_Results_Promise is a wrapper for a FS_move_Results promised by a client call.
type FS_move_Results_Promise struct{ *capnp.Pipeline }

func (p FS_move_Results_Promise) Struct() (FS_move_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Results{s}, err
}

type FS_copy_Params struct{ capnp.Struct }

// FS_copy_Params_TypeID is the unique identifier for the type FS_copy_Params.
const FS_copy_Params_TypeID = 0xc0dd66dedad92ef8

func NewFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func NewRootFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func ReadRootFS_copy_Params(msg *capnp.Message) (FS_copy_Params, error) {
	root, err := msg.RootPtr()
	return FS_copy_Params{root.Struct()}, err
}

func (s FS_copy_Params) String() string {
	str, _ := text.Marshal(0xc0dd66dedad92ef8, s.Struct)
	return str
}

func (s FS_copy_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_copy_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_copy_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_copy_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_copy_Params_List is a list of FS_copy_Params.
type FS_copy_Params_List struct{ capnp.List }

// NewFS_copy_Params creates a new list of FS_copy_Params.
func NewFS_copy_Params_List(s *capnp.Segment, sz int32) (FS_copy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_copy_Params_List{l}, err
}

func (s FS_copy_Params_List) At(i int) FS_copy_Params { return FS_copy_Params{s.List.Struct(i)} }

func (s FS_copy_Params_List) Set(i int, v FS_copy_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_copy_Params_List) String() string {
	str, _ := text.MarshalList(0xc0dd66dedad92ef8, s.List)
	return str
}

// FS_copy_Params_Promise is a wrapper for a FS_copy_Params promised by a client call.
type FS_copy_Params_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Params_Promise) Struct() (FS_copy_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Params{s}, err
}

type FS_copy_Results struct{ capnp.Struct }

// FS_copy_Results_TypeID is the unique identifier for the type FS_copy_Results.
const FS_copy_Results_TypeID = 0xccf4f28c8951edf6

func NewFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func NewRootFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func ReadRootFS_copy_Results(msg *capnp.Message) (FS_copy_Results, error) {
	root, err := msg.RootPtr()
	return FS_copy_Results{root.Struct()}, err
}

func (s FS_copy_Results) String() string {
	str, _ := text.Marshal(0xccf4f28c8951edf6, s.Struct)
	return str
}

// FS_copy_Results_List is a list of FS_copy_Results.
type FS_copy_Results_List struct{ capnp.List }

// NewFS_copy_Results creates a new list of FS_copy_Results.
func NewFS_copy_Results_List(s *capnp.Segment, sz int32) (FS_copy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_copy_Results_List{l}, err
}

func (s FS_copy_Results_List) At(i int) FS_copy_Results { return FS_copy_Results{s.List.Struct(i)} }

func (s FS_copy_Results_List) Set(i int, v FS_copy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_copy_Results_List) String() string {
	str, _ := text.MarshalList(0xccf4f28c8951edf6, s.List)
	return str
}

// FS_copy_Results_Promise is a wrapper for a FS_copy_Results promised by a client call.
type FS_copy_Results_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Results_Promise) Struct() (FS_copy_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Results{s}, err
}

type FS_pin_Params struct{ capnp.Struct }

// FS_pin_Params_TypeID is the unique identifier for the type FS_pin_Params.
const FS_pin_Params_TypeID = 0x9efc974402f016f6

func NewFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func NewRootFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func ReadRootFS_pin_Params(msg *capnp.Message) (FS_pin_Params, error) {
	root, err := msg.RootPtr()
	return FS_pin_Params{root.Struct()}, err
}

func (s FS_pin_Params) String() string {
	str, _ := text.Marshal(0x9efc974402f016f6, s.Struct)
	return str
}

func (s FS_pin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_pin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_pin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_pin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_pin_Params_List is a list of FS_pin_Params.
type FS_pin_Params_List struct{ capnp.List }

// NewFS_pin_Params creates a new list of FS_pin_Params.
func NewFS_pin_Params_List(s *capnp.Segment, sz int32) (FS_pin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_pin_Params_List{l}, err
}

func (s FS_pin_Params_List) At(i int) FS_pin_Params { return FS_pin_Params{s.List.Struct(i)} }

func (s FS_pin_Params_List) Set(i int, v FS_pin_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Params_List) String() string {
	str, _ := text.MarshalList(0x9efc974402f016f6, s.List)
	return str
}

// FS_pin_Params_Promise is a wrapper for a FS_pin_Params promised by a client call.
type FS_pin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Params_Promise) Struct() (FS_pin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Params{s}, err
}

type FS_pin_Results struct{ capnp.Struct }

// FS_pin_Results_TypeID is the unique identifier for the type FS_pin_Results.
const FS_pin_Results_TypeID = 0xdba8e30445acc3f4

func NewFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func NewRootFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func ReadRootFS_pin_Results(msg *capnp.Message) (FS_pin_Results, error) {
	root, err := msg.RootPtr()
	return FS_pin_Results{root.Struct()}, err
}

func (s FS_pin_Results) String() string {
	str, _ := text.Marshal(0xdba8e30445acc3f4, s.Struct)
	return str
}

// FS_pin_Results_List is a list of FS_pin_Results.
type FS_pin_Results_List struct{ capnp.List }

// NewFS_pin_Results creates a new list of FS_pin_Results.
func NewFS_pin_Results_List(s *capnp.Segment, sz int32) (FS_pin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_pin_Results_List{l}, err
}

func (s FS_pin_Results_List) At(i int) FS_pin_Results { return FS_pin_Results{s.List.Struct(i)} }

func (s FS_pin_Results_List) Set(i int, v FS_pin_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Results_List) String() string {
	str, _ := text.MarshalList(0xdba8e30445acc3f4, s.List)
	return str
}

// FS_pin_Results_Promise is a wrapper for a FS_pin_Results promised by a client call.
type FS_pin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Results_Promise) Struct() (FS_pin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Results{s}, err
}

type FS_unpin_Params struct{ capnp.Struct }

// FS_unpin_Params_TypeID is the unique identifier for the type FS_unpin_Params.
const FS_unpin_Params_TypeID = 0xc9558eac26b0f15e

func NewFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func NewRootFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func ReadRootFS_unpin_Params(msg *capnp.Message) (FS_unpin_Params, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Params{root.Struct()}, err
}

func (s FS_unpin_Params) String() string {
	str, _ := text.Marshal(0xc9558eac26b0f15e, s.Struct)
	return str
}

func (s FS_unpin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_unpin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_unpin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_unpin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_unpin_Params_List is a list of FS_unpin_Params.
type FS_unpin_Params_List struct{ capnp.List }

// NewFS_unpin_Params creates a new list of FS_unpin_Params.
func NewFS_unpin_Params_List(s *capnp.Segment, sz int32) (FS_unpin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_unpin_Params_List{l}, err
}

func (s FS_unpin_Params_List) At(i int) FS_unpin_Params { return FS_unpin_Params{s.List.Struct(i)} }

func (s FS_unpin_Params_List) Set(i int, v FS_unpin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Params_List) String() string {
	str, _ := text.MarshalList(0xc9558eac26b0f15e, s.List)
	return str
}

// FS_unpin_Params_Promise is a wrapper for a FS_unpin_Params promised by a client call.
type FS_unpin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Params_Promise) Struct() (FS_unpin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Params{s}, err
}

type FS_unpin_Results struct{ capnp.Struct }

// FS_unpin_Results_TypeID is the unique identifier for the type FS_unpin_Results.
const FS_unpin_Results_TypeID = 0x87c49e302c6516f8

func NewFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func NewRootFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func ReadRootFS_unpin_Results(msg *capnp.Message) (FS_unpin_Results, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Results{root.Struct()}, err
}

func (s FS_unpin_Results) String() string {
	str, _ := text.Marshal(0x87c49e302c6516f8, s.Struct)
	return str
}

// FS_unpin_Results_List is a list of FS_unpin_Results.
type FS_unpin_Results_List struct{ capnp.List }

// NewFS_unpin_Results creates a new list of FS_unpin_Results.
func NewFS_unpin_Results_List(s *capnp.Segment, sz int32) (FS_unpin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_unpin_Results_List{l}, err
}

func (s FS_unpin_Results_List) At(i int) FS_unpin_Results { return FS_unpin_Results{s.List.Struct(i)} }

func (s FS_unpin_Results_List) Set(i int, v FS_unpin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Results_List) String() string {
	str, _ := text.MarshalList(0x87c49e302c6516f8, s.List)
	return str
}

// FS_unpin_Results_Promise is a wrapper for a FS_unpin_Results promised by a client call.
type FS_unpin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Results_Promise) Struct() (FS_unpin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Results{s}, err
}

type FS_stat_Params struct{ capnp.Struct }

// FS_stat_Params_TypeID is the unique identifier for the type FS_stat_Params.
const FS_stat_Params_TypeID = 0xd78724f6fbd5c5c5

func NewFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func NewRootFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func ReadRootFS_stat_Params(msg *capnp.Message) (FS_stat_Params, error) {
	root, err := msg.RootPtr()
	return FS_stat_Params{root.Struct()}, err
}

func (s FS_stat_Params) String() string {
	str, _ := text.Marshal(0xd78724f6fbd5c5c5, s.Struct)
	return str
}

func (s FS_stat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_stat_Params_List is a list of FS_stat_Params.
type FS_stat_Params_List struct{ capnp.List }

// NewFS_stat_Params creates a new list of FS_stat_Params.
func NewFS_stat_Params_List(s *capnp.Segment, sz int32) (FS_stat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Params_List{l}, err
}

func (s FS_stat_Params_List) At(i int) FS_stat_Params { return FS_stat_Params{s.List.Struct(i)} }

func (s FS_stat_Params_List) Set(i int, v FS_stat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_stat_Params_List) String() string {
	str, _ := text.MarshalList(0xd78724f6fbd5c5c5, s.List)
	return str
}

// FS_stat_Params_Promise is a wrapper for a FS_stat_Params promised by a client call.
type FS_stat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Params_Promise) Struct() (FS_stat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Params{s}, err
}

type FS_stat_Results struct{ capnp.Struct }

// FS_stat_Results_TypeID is the unique identifier for the type FS_stat_Results.
const FS_stat_Results_TypeID = 0xbdb679ec96303b53

func NewFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func NewRootFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func ReadRootFS_stat_Results(msg *capnp.Message) (FS_stat_Results, error) {
	root, err := msg.RootPtr()
	return FS_stat_Results{root.Struct()}, err
}

func (s FS_stat_Results) String() string {
	str, _ := text.Marshal(0xbdb679ec96303b53, s.Struct)
	return str
}

func (s FS_stat_Results) Info() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s FS_stat_Results) HasInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Results) SetInfo(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s FS_stat_Results) NewInfo() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FS_stat_Results_List is a list of FS_stat_Results.
type FS_stat_Results_List struct{ capnp.List }

// NewFS_stat_Results creates a new list of FS_stat_Results.
func NewFS_stat_Results_List(s *capnp.Segment, sz int32) (FS_stat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Results_List{l}, err
}

func (s FS_stat_Results_List) At(i int) FS_stat_Results { return FS_stat_Results{s.List.Struct(i)} }

func (s FS_stat_Results_List) Set(i int, v FS_stat_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stat_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb679ec96303b53, s.List)
	return str
}

// FS_stat_Results_Promise is a wrapper for a FS_stat_Results promised by a client call.
type FS_stat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Results_Promise) Struct() (FS_stat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Results{s}, err
}

func (p FS_stat_Results_Promise) Info() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type FS_garbageCollect_Params struct{ capnp.Struct }

// FS_garbageCollect_Params_TypeID is the unique identifier for the type FS_garbageCollect_Params.
const FS_garbageCollect_Params_TypeID = 0x9cb31f0ede4f5117

func NewFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func NewRootFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func ReadRootFS_garbageCollect_Params(msg *capnp.Message) (FS_garbageCollect_Params, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Params{root.Struct()}, err
}

func (s FS_garbageCollect_Params) String() string {
	str, _ := text.Marshal(0x9cb31f0ede4f5117, s.Struct)
	return str
}

func (s FS_garbageCollect_Params) Aggressive() bool {
	return s.Struct.Bit(0)
}

func (s FS_garbageCollect_Params) SetAggressive(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_garbageCollect_Params_List is a list of FS_garbageCollect_Params.
type FS_garbageCollect_Params_List struct{ capnp.List }

// NewFS_garbageCollect_Params creates a new list of FS_garbageCollect_Params.
func NewFS_garbageCollect_Params_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_garbageCollect_Params_List{l}, err
}

func (s FS_garbageCollect_Params_List) At(i int) FS_garbageCollect_Params {
	return FS_garbageCollect_Params{s.List.Struct(i)}
}

func (s FS_garbageCollect_Params_List) Set(i int, v FS_garbageCollect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Params_List) String() string {
	str, _ := text.MarshalList(0x9cb31f0ede4f5117, s.List)
	return str
}

// FS_garbageCollect_Params_Promise is a wrapper for a FS_garbageCollect_Params promised by a client call.
type FS_garbageCollect_Params_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Params_Promise) Struct() (FS_garbageCollect_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Params{s}, err
}

type FS_garbageCollect_Results struct{ capnp.Struct }

// FS_garbageCollect_Results_TypeID is the unique identifier for the type FS_garbageCollect_Results.
const FS_garbageCollect_Results_TypeID = 0xbb5ea9a03dfddab3

func NewFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func NewRootFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func ReadRootFS_garbageCollect_Results(msg *capnp.Message) (FS_garbageCollect_Results, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Results{root.Struct()}, err
}

func (s FS_garbageCollect_Results) String() string {
	str, _ := text.Marshal(0xbb5ea9a03dfddab3, s.Struct)
	return str
}

func (s FS_garbageCollect_Results) Freed() (GarbageItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return GarbageItem_List{List: p.List()}, err
}

func (s FS_garbageCollect_Results) HasFreed() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_garbageCollect_Results) SetFreed(v GarbageItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFreed sets the freed field to a newly
// allocated GarbageItem_List, preferring placement in s's segment.
func (s FS_garbageCollect_Results) NewFreed(n int32) (GarbageItem_List, error) {
	l, err := NewGarbageItem_List(s.Struct.Segment(), n)
	if err != nil {
		return GarbageItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_garbageCollect_Results_List is a list of FS_garbageCollect_Results.
type FS_garbageCollect_Results_List struct{ capnp.List }

// NewFS_garbageCollect_Results creates a new list of FS_garbageCollect_Results.
func NewFS_garbageCollect_Results_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_garbageCollect_Results_List{l}, err
}

func (s FS_garbageCollect_Results_List) At(i int) FS_garbageCollect_Results {
	return FS_garbageCollect_Results{s.List.Struct(i)}
}

func (s FS_garbageCollect_Results_List) Set(i int, v FS_garbageCollect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Results_List) String() string {
	str, _ := text.MarshalList(0xbb5ea9a03dfddab3, s.List)
	return str
}

// FS_garbageCollect_Results_Promise is a wrapper for a FS_garbageCollect_Results promised by a client call.
type FS_garbageCollect_Results_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Results_Promise) Struct() (FS_garbageCollect_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Results{s}, err
}

type FS_touch_Params struct{ capnp.Struct }

// FS_touch_Params_TypeID is the unique identifier for the type FS_touch_Params.
const FS_touch_Params_TypeID = 0xab1e48e58e4c69af

func NewFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func NewRootFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func ReadRootFS_touch_Params(msg *capnp.Message) (FS_touch_Params, error) {
	root, err := msg.RootPtr()
	return FS_touch_Params{root.Struct()}, err
}

func (s FS_touch_Params) String() string {
	str, _ := text.Marshal(0xab1e48e58e4c69af, s.Struct)
	return str
}

func (s FS_touch_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_touch_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_touch_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_touch_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_touch_Params_List is a list of FS_touch_Params.
type FS_touch_Params_List struct{ capnp.List }

// NewFS_touch_Params creates a new list of FS_touch_Params.
func NewFS_touch_Params_List(s *capnp.Segment, sz int32) (FS_touch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_touch_Params_List{l}, err
}

func (s FS_touch_Params_List) At(i int) FS_touch_Params { return FS_touch_Params{s.List.Struct(i)} }

func (s FS_touch_Params_List) Set(i int, v FS_touch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Params_List) String() string {
	str, _ := text.MarshalList(0xab1e48e58e4c69af, s.List)
	return str
}

// FS_touch_Params_Promise is a wrapper for a FS_touch_Params promised by a client call.
type FS_touch_Params_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Params_Promise) Struct() (FS_touch_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Params{s}, err
}

type FS_touch_Results struct{ capnp.Struct }

// FS_touch_Results_TypeID is the unique identifier for the type FS_touch_Results.
const FS_touch_Results_TypeID = 0xbf1cf3d6e654e947

func NewFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func NewRootFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func ReadRootFS_touch_Results(msg *capnp.Message) (FS_touch_Results, error) {
	root, err := msg.RootPtr()
	return FS_touch_Results{root.Struct()}, err
}

func (s FS_touch_Results) String() string {
	str, _ := text.Marshal(0xbf1cf3d6e654e947, s.Struct)
	return str
}

// FS_touch_Results_List is a list of FS_touch_Results.
type FS_touch_Results_List struct{ capnp.List }

// NewFS_touch_Results creates a new list of FS_touch_Results.
func NewFS_touch_Results_List(s *capnp.Segment, sz int32) (FS_touch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_touch_Results_List{l}, err
}

func (s FS_touch_Results_List) At(i int) FS_touch_Results { return FS_touch_Results{s.List.Struct(i)} }

func (s FS_touch_Results_List) Set(i int, v FS_touch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Results_List) String() string {
	str, _ := text.MarshalList(0xbf1cf3d6e654e947, s.List)
	return str
}

// FS_touch_Results_Promise is a wrapper for a FS_touch_Results promised by a client call.
type FS_touch_Results_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Results_Promise) Struct() (FS_touch_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Results{s}, err
}

type FS_exists_Params struct{ capnp.Struct }

// FS_exists_Params_TypeID is the unique identifier for the type FS_exists_Params.
const FS_exists_Params_TypeID = 0xdb27e243a580d2f0

func NewFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func NewRootFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func ReadRootFS_exists_Params(msg *capnp.Message) (FS_exists_Params, error) {
	root, err := msg.RootPtr()
	return FS_exists_Params{root.Struct()}, err
}

func (s FS_exists_Params) String() string {
	str, _ := text.Marshal(0xdb27e243a580d2f0, s.Struct)
	return str
}

func (s FS_exists_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_exists_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_exists_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_exists_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_exists_Params_List is a list of FS_exists_Params.
type FS_exists_Params_List struct{ capnp.List }

// NewFS_exists_Params creates a new list of FS_exists_Params.
func NewFS_exists_Params_List(s *capnp.Segment, sz int32) (FS_exists_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_exists_Params_List{l}, err
}

func (s FS_exists_Params_List) At(i int) FS_exists_Params { return FS_exists_Params{s.List.Struct(i)} }

func (s FS_exists_Params_List) Set(i int, v FS_exists_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Params_List) String() string {
	str, _ := text.MarshalList(0xdb27e243a580d2f0, s.List)
	return str
}

// FS_exists_Params_Promise is a wrapper for a FS_exists_Params promised by a client call.
type FS_exists_Params_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Params_Promise) Struct() (FS_exists_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Params{s}, err
}

type FS_exists_Results struct{ capnp.Struct }

// FS_exists_Results_TypeID is the unique identifier for the type FS_exists_Results.
const FS_exists_Results_TypeID = 0xa5753d28ca12d2ba

func NewFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func NewRootFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func ReadRootFS_exists_Results(msg *capnp.Message) (FS_exists_Results, error) {
	root, err := msg.RootPtr()
	return FS_exists_Results{root.Struct()}, err
}

func (s FS_exists_Results) String() string {
	str, _ := text.Marshal(0xa5753d28ca12d2ba, s.Struct)
	return str
}

func (s FS_exists_Results) Exists() bool {
	return s.Struct.Bit(0)
}

func (s FS_exists_Results) SetExists(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_exists_Results_List is a list of FS_exists_Results.
type FS_exists_Results_List struct{ capnp.List }

// NewFS_exists_Results creates a new list of FS_exists_Results.
func NewFS_exists_Results_List(s *capnp.Segment, sz int32) (FS_exists_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_exists_Results_List{l}, err
}

func (s FS_exists_Results_List) At(i int) FS_exists_Results {
	return FS_exists_Results{s.List.Struct(i)}
}

func (s FS_exists_Results_List) Set(i int, v FS_exists_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Results_List) String() string {
	str, _ := text.MarshalList(0xa5753d28ca12d2ba, s.List)
	return str
}

// FS_exists_Results_Promise is a wrapper for a FS_exists_Results promised by a client call.
type FS_exists_Results_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Results_Promise) Struct() (FS_exists_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Results{s}, err
}

type FS_listExplicitPins_Params struct{ capnp.Struct }

// FS_listExplicitPins_Params_TypeID is the unique identifier for the type FS_listExplicitPins_Params.
const FS_listExplicitPins_Params_TypeID = 0x958ea6b33d4e8cbb

func NewFS_listExplicitPins_Params(s *capnp.Segment) (FS_listExplicitPins_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_listExplicitPins_Params{st}, err
}

func NewRootFS_listExplicitPins_Params(s *capnp.Segment) (FS_listExplicitPins_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_listExplicitPins_Params{st}, err
}

func ReadRootFS_listExplicitPins_Params(msg *capnp.Message) (FS_listExplicitPins_Params, error) {
	root, err := msg.RootPtr()
	return FS_listExplicitPins_Params{root.Struct()}, err
}

func (s FS_listExplicitPins_Params) String() string {
	str, _ := text.Marshal(0x958ea6b33d4e8cbb, s.Struct)
	return str
}

func (s FS_listExplicitPins_Params) Prefix() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_listExplicitPins_Params) HasPrefix() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Params) PrefixBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_listExplicitPins_Params) SetPrefix(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_listExplicitPins_Params) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_listExplicitPins_Params) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Params) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_listExplicitPins_Params) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FS_listExplicitPins_Params) To() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FS_listExplicitPins_Params) HasTo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Params) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FS_listExplicitPins_Params) SetTo(v string) error {
	return s.Struct.SetText(2, v)
}

// FS_listExplicitPins_Params_List is a list of FS_listExplicitPins_Params.
type FS_listExplicitPins_Params_List struct{ capnp.List }

// NewFS_listExplicitPins_Params creates a new list of FS_listExplicitPins_Params.
func NewFS_listExplicitPins_Params_List(s *capnp.Segment, sz int32) (FS_listExplicitPins_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return FS_listExplicitPins_Params_List{l}, err
}

func (s FS_listExplicitPins_Params_List) At(i int) FS_listExplicitPins_Params {
	return FS_listExplicitPins_Params{s.List.Struct(i)}
}

func (s FS_listExplicitPins_Params_List) Set(i int, v FS_listExplicitPins_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_listExplicitPins_Params_List) String() string {
	str, _ := text.MarshalList(0x958ea6b33d4e8cbb, s.List)
	return str
}

// FS_listExplicitPins_Params_Promise is a wrapper for a FS_listExplicitPins_Params promised by a client call.
type FS_listExplicitPins_Params_Promise struct{ *capnp.Pipeline }

func (p FS_listExplicitPins_Params_Promise) Struct() (FS_listExplicitPins_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_listExplicitPins_Params{s}, err
}

type FS_listExplicitPins_Results struct{ capnp.Struct }

// FS_listExplicitPins_Results_TypeID is the unique identifier for the type FS_listExplicitPins_Results.
const FS_listExplicitPins_Results_TypeID = 0x809d4e73dc197b11

func NewFS_listExplicitPins_Results(s *capnp.Segment) (FS_listExplicitPins_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_listExplicitPins_Results{st}, err
}

func NewRootFS_listExplicitPins_Results(s *capnp.Segment) (FS_listExplicitPins_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_listExplicitPins_Results{st}, err
}

func ReadRootFS_listExplicitPins_Results(msg *capnp.Message) (FS_listExplicitPins_Results, error) {
	root, err := msg.RootPtr()
	return FS_listExplicitPins_Results{root.Struct()}, err
}

func (s FS_listExplicitPins_Results) String() string {
	str, _ := text.Marshal(0x809d4e73dc197b11, s.Struct)
	return str
}

func (s FS_listExplicitPins_Results) Pins() (ExplicitPin_List, error) {
	p, err := s.Struct.Ptr(0)
	return ExplicitPin_List{List: p.List()}, err
}

func (s FS_listExplicitPins_Results) HasPins() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_listExplicitPins_Results) SetPins(v ExplicitPin_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPins sets the pins field to a newly
// allocated ExplicitPin_List, preferring placement in s's segment.
func (s FS_listExplicitPins_Results) NewPins(n int32) (ExplicitPin_List, error) {
	l, err := NewExplicitPin_List(s.Struct.Segment(), n)
	if err != nil {
		return ExplicitPin_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_listExplicitPins_Results_List is a list of FS_listExplicitPins_Results.
type FS_listExplicitPins_Results_List struct{ capnp.List }

// NewFS_listExplicitPins_Results creates a new list of FS_listExplicitPins_Results.
func NewFS_listExplicitPins_Results_List(s *capnp.Segment, sz int32) (FS_listExplicitPins_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_listExplicitPins_Results_List{l}, err
}

func (s FS_listExplicitPins_Results_List) At(i int) FS_listExplicitPins_Results {
	return FS_listExplicitPins_Results{s.List.Struct(i)}
}

func (s FS_listExplicitPins_Results_List) Set(i int, v FS_listExplicitPins_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_listExplicitPins_Results_List) String() string {
	str, _ := text.MarshalList(0x809d4e73dc197b11, s.List)
	return str
}

// FS_listExplicitPins_Results_Promise is a wrapper for a FS_listExplicitPins_Results promised by a client call.
type FS_listExplicitPins_Results_Promise struct{ *capnp.Pipeline }

func (p FS_listExplicitPins_Results_Promise) Struct() (FS_listExplicitPins_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_listExplicitPins_Results{s}, err
}

type FS_clearExplicitPins_Params struct{ capnp.Struct }

// FS_clearExplicitPins_Params_TypeID is the unique identifier for the type FS_clearExplicitPins_Params.
const FS_clearExplicitPins_Params_TypeID = 0xa17d6c20c2174ec8

func NewFS_clearExplicitPins_Params(s *capnp.Segment) (FS_clearExplicitPins_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_clearExplicitPins_Params{st}, err
}

func NewRootFS_clearExplicitPins_Params(s *capnp.Segment) (FS_clearExplicitPins_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_clearExplicitPins_Params{st}, err
}

func ReadRootFS_clearExplicitPins_Params(msg *capnp.Message) (FS_clearExplicitPins_Params, error) {
	root, err := msg.RootPtr()
	return FS_clearExplicitPins_Params{root.Struct()}, err
}

func (s FS_clearExplicitPins_Params) String() string {
	str, _ := text.Marshal(0xa17d6c20c2174ec8, s.Struct)
	return str
}

func (s FS_clearExplicitPins_Params) Prefix() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_clearExplicitPins_Params) HasPrefix() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_clearExplicitPins_Params) PrefixBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_clearExplicitPins_Params) SetPrefix(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_clearExplicitPins_Params) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_clearExplicitPins_Params) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_clearExplicitPins_Params) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_clearExplicitPins_Params) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FS_clearExplicitPins_Params) To() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FS_clearExplicitPins_Params) HasTo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FS_clearExplicitPins_Params) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FS_clearExplicitPins_Params) SetTo(v string) error {
	return s.Struct.SetText(2, v)
}

// FS_clearExplicitPins_Params_List is a list of FS_clearExplicitPins_Params.
type FS_clearExplicitPins_Params_List struct{ capnp.List }

// NewFS_clearExplicitPins_Params creates a new list of FS_clearExplicitPins_Params.
func NewFS_clearExplicitPins_Params_List(s *capnp.Segment, sz int32) (FS_clearExplicitPins_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return FS_clearExplicitPins_Params_List{l}, err
}

func (s FS_clearExplicitPins_Params_List) At(i int) FS_clearExplicitPins_Params {
	return FS_clearExplicitPins_Params{s.List.Struct(i)}
}

func (s FS_clearExplicitPins_Params_List) Set(i int, v FS_clearExplicitPins_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_clearExplicitPins_Params_List) String() string {
	str, _ := text.MarshalList(0xa17d6c20c2174ec8, s.List)
	return str
}

// FS_clearExplicitPins_Params_Promise is a wrapper for a FS_clearExplicitPins_Params promised by a client call.
type FS_clearExplicitPins_Params_Promise struct{ *capnp.Pipeline }

func (p FS_clearExplicitPins_Params_Promise) Struct() (FS_clearExplicitPins_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_clearExplicitPins_Params{s}, err
}

type FS_clearExplicitPins_Results struct{ capnp.Struct }

// FS_clearExplicitPins_Results_TypeID is the unique identifier for the type FS_clearExplicitPins_Results.
const FS_clearExplicitPins_Results_TypeID = 0xa78946d2af827622

func NewFS_clearExplicitPins_Results(s *capnp.Segment) (FS_clearExplicitPins_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_clearExplicitPins_Results{st}, err
}

func NewRootFS_clearExplicitPins_Results(s *capnp.Segment) (FS_clearExplicitPins_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_clearExplicitPins_Results{st}, err
}

func ReadRootFS_clearExplicitPins_Results(msg *capnp.Message) (FS_clearExplicitPins_Results, error) {
	root, err := msg.RootPtr()
	return FS_clearExplicitPins_Results{root.Struct()}, err
}

func (s FS_clearExplicitPins_Results) String() string {
	str, _ := text.Marshal(0xa78946d2af827622, s.Struct)
	return str
}

func (s FS_clearExplicitPins_Results) Count() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_clearExplicitPins_Results) SetCount(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_clearExplicitPins_Results_List is a list of FS_clearExplicitPins_Results.
type FS_clearExplicitPins_Results_List struct{ capnp.List }

// NewFS_clearExplicitPins_Results creates a new list of FS_clearExplicitPins_Results.
func NewFS_clearExplicitPins_Results_List(s *capnp.Segment, sz int32) (FS_clearExplicitPins_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_clearExplicitPins_Results_List{l}, err
}

func (s FS_clearExplicitPins_Results_List) At(i int) FS_clearExplicitPins_Results {
	return FS_clearExplicitPins_Results{s.List.Struct(i)}
}

func (s FS_clearExplicitPins_Results_List) Set(i int, v FS_clearExplicitPins_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_clearExplicitPins_Results_List) String() string {
	str, _ := text.MarshalList(0xa78946d2af827622, s.List)
	return str
}

// FS_clearExplicitPins_Results_Promise is a wrapper for a FS_clearExplicitPins_Results promised by a client call.
type FS_clearExplicitPins_Results_Promise struct{ *capnp.Pipeline }

func (p FS_clearExplicitPins_Results_Promise) Struct() (FS_clearExplicitPins_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_clearExplicitPins_Results{s}, err
}

type FS_setExplicitPins_Params struct{ capnp.Struct }

// FS_setExplicitPins_Params_TypeID is the unique identifier for the type FS_setExplicitPins_Params.
const FS_setExplicitPins_Params_TypeID = 0x946963af664858d0

func NewFS_setExplicitPins_Params(s *capnp.Segment) (FS_setExplicitPins_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_setExplicitPins_Params{st}, err
}

func NewRootFS_setExplicitPins_Params(s *capnp.Segment) (FS_setExplicitPins_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return FS_setExplicitPins_Params{st}, err
}

func ReadRootFS_setExplicitPins_Params(msg *capnp.Message) (FS_setExplicitPins_Params, error) {
	root, err := msg.RootPtr()
	return FS_setExplicitPins_Params{root.Struct()}, err
}

func (s FS_setExplicitPins_Params) String() string {
	str, _ := text.Marshal(0x946963af664858d0, s.Struct)
	return str
}

func (s FS_setExplicitPins_Params) Prefix() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_setExplicitPins_Params) HasPrefix() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_setExplicitPins_Params) PrefixBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_setExplicitPins_Params) SetPrefix(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_setExplicitPins_Params) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_setExplicitPins_Params) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_setExplicitPins_Params) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_setExplicitPins_Params) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FS_setExplicitPins_Params) To() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FS_setExplicitPins_Params) HasTo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FS_setExplicitPins_Params) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FS_setExplicitPins_Params) SetTo(v string) error {
	return s.Struct.SetText(2, v)
}

// FS_setExplicitPins_Params_List is a list of FS_setExplicitPins_Params.
type FS_setExplicitPins_Params_List struct{ capnp.List }

// NewFS_setExplicitPins_Params creates a new list of FS_setExplicitPins_Params.
func NewFS_setExplicitPins_Params_List(s *capnp.Segment, sz int32) (FS_setExplicitPins_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return FS_setExplicitPins_Params_List{l}, err
}

func (s FS_setExplicitPins_Params_List) At(i int) FS_setExplicitPins_Params {
	return FS_setExplicitPins_Params{s.List.Struct(i)}
}

func (s FS_setExplicitPins_Params_List) Set(i int, v FS_setExplicitPins_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_setExplicitPins_Params_List) String() string {
	str, _ := text.MarshalList(0x946963af664858d0, s.List)
	return str
}

// FS_setExplicitPins_Params_Promise is a wrapper for a FS_setExplicitPins_Params promised by a client call.
type FS_setExplicitPins_Params_Promise struct{ *capnp.Pipeline }

func (p FS_setExplicitPins_Params_Promise) Struct() (FS_setExplicitPins_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_setExplicitPins_Params{s}, err
}

type FS_setExplicitPins_Results struct{ capnp.Struct }

// FS_setExplicitPins_Results_TypeID is the unique identifier for the type FS_setExplicitPins_Results.
const FS_setExplicitPins_Results_TypeID = 0x95a8b7d1ed942672

func NewFS_setExplicitPins_Results(s *capnp.Segment) (FS_setExplicitPins_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_setExplicitPins_Results{st}, err
}

func NewRootFS_setExplicitPins_Results(s *capnp.Segment) (FS_setExplicitPins_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_setExplicitPins_Results{st}, err
}

func ReadRootFS_setExplicitPins_Results(msg *capnp.Message) (FS_setExplicitPins_Results, error) {
	root, err := msg.RootPtr()
	return FS_setExplicitPins_Results{root.Struct()}, err
}

func (s FS_setExplicitPins_Results) String() string {
	str, _ := text.Marshal(0x95a8b7d1ed942672, s.Struct)
	return str
}

func (s FS_setExplicitPins_Results) Count() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_setExplicitPins_Results) SetCount(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_setExplicitPins_Results_List is a list of FS_setExplicitPins_Results.
type FS_setExplicitPins_Results_List struct{ capnp.List }

// NewFS_setExplicitPins_Results creates a new list of FS_setExplicitPins_Results.
func NewFS_setExplicitPins_Results_List(s *capnp.Segment, sz int32) (FS_setExplicitPins_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_setExplicitPins_Results_List{l}, err
}

func (s FS_setExplicitPins_Results_List) At(i int) FS_setExplicitPins_Results {
	return FS_setExplicitPins_Results{s.List.Struct(i)}
}

func (s FS_setExplicitPins_Results_List) Set(i int, v FS_setExplicitPins_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_setExplicitPins_Results_List) String() string {
	str, _ := text.MarshalList(0x95a8b7d1ed942672, s.List)
	return str
}

// FS_setExplicitPins_Results_Promise is a wrapper for a FS_setExplicitPins_Results promised by a client call.
type FS_setExplicitPins_Results_Promise struct{ *capnp.Pipeline }

func (p FS_setExplicitPins_Results_Promise) Struct() (FS_setExplicitPins_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_setExplicitPins_Results{s}, err
}

type FS_tar_Params struct{ capnp.Struct }

// FS_tar_Params_TypeID is the unique identifier for the type FS_tar_Params.
const FS_tar_Params_TypeID = 0xf0c07855b6fcd215

func NewFS_tar_Params(s *capnp.Segment) (FS_tar_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_tar_Params{st}, err
}

func NewRootFS_tar_Params(s *capnp.Segment) (FS_tar_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_tar_Params{st}, err
}

func ReadRootFS_tar_Params(msg *capnp.Message) (FS_tar_Params, error) {
	root, err := msg.RootPtr()
	return FS_tar_Params{root.Struct()}, err
}

func (s FS_tar_Params) String() string {
	str, _ := text.Marshal(0xf0c07855b6fcd215, s.Struct)
	return str
}

func (s FS_tar_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_tar_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_tar_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_tar_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_tar_Params_List is a list of FS_tar_Params.
type FS_tar_Params_List struct{ capnp.List }

// NewFS_tar_Params creates a new list of FS_tar_Params.
func NewFS_tar_Params_List(s *capnp.Segment, sz int32) (FS_tar_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_tar_Params_List{l}, err
}

func (s FS_tar_Params_List) At(i int) FS_tar_Params { return FS_tar_Params{s.List.Struct(i)} }

func (s FS_tar_Params_List) Set(i int, v FS_tar_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_tar_Params_List) String() string {
	str, _ := text.MarshalList(0xf0c07855b6fcd215, s.List)
	return str
}

// FS_tar_Params_Promise is a wrapper for a FS_tar_Params promised by a client call.
type FS_tar_Params_Promise struct{ *capnp.Pipeline }

func (p FS_tar_Params_Promise) Struct() (FS_tar_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_tar_Params{s}, err
}

type FS_tar_Results struct{ capnp.Struct }

// FS_tar_Results_TypeID is the unique identifier for the type FS_tar_Results.
const FS_tar_Results_TypeID = 0x90690022482a2dd4

func NewFS_tar_Results(s *capnp.Segment) (FS_tar_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_tar_Results{st}, err
}

func NewRootFS_tar_Results(s *capnp.Segment) (FS_tar_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_tar_Results{st}, err
}

func ReadRootFS_tar_Results(msg *capnp.Message) (FS_tar_Results, error) {
	root, err := msg.RootPtr()
	return FS_tar_Results{root.Struct()}, err
}

func (s FS_tar_Results) String() string {
	str, _ := text.Marshal(0x90690022482a2dd4, s.Struct)
	return str
}

func (s FS_tar_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_tar_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_tar_Results_List is a list of FS_tar_Results.
type FS_tar_Results_List struct{ capnp.List }

// NewFS_tar_Results creates a new list of FS_tar_Results.
func NewFS_tar_Results_List(s *capnp.Segment, sz int32) (FS_tar_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_tar_Results_List{l}, err
}

func (s FS_tar_Results_List) At(i int) FS_tar_Results { return FS_tar_Results{s.List.Struct(i)} }

func (s FS_tar_Results_List) Set(i int, v FS_tar_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_tar_Results_List) String() string {
	str, _ := text.MarshalList(0x90690022482a2dd4, s.List)
	return str
}

// FS_tar_Results_Promise is a wrapper for a FS_tar_Results promised by a client call.
type FS_tar_Results_Promise struct{ *capnp.Pipeline }

func (p FS_tar_Results_Promise) Struct() (FS_tar_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_tar_Results{s}, err
}

type FS_deletedNodes_Params struct{ capnp.Struct }

// FS_deletedNodes_Params_TypeID is the unique identifier for the type FS_deletedNodes_Params.
const FS_deletedNodes_Params_TypeID = 0xf39ffa0d4b61ecce

func NewFS_deletedNodes_Params(s *capnp.Segment) (FS_deletedNodes_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Params{st}, err
}

func NewRootFS_deletedNodes_Params(s *capnp.Segment) (FS_deletedNodes_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Params{st}, err
}

func ReadRootFS_deletedNodes_Params(msg *capnp.Message) (FS_deletedNodes_Params, error) {
	root, err := msg.RootPtr()
	return FS_deletedNodes_Params{root.Struct()}, err
}

func (s FS_deletedNodes_Params) String() string {
	str, _ := text.Marshal(0xf39ffa0d4b61ecce, s.Struct)
	return str
}

func (s FS_deletedNodes_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_deletedNodes_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_deletedNodes_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_deletedNodes_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_deletedNodes_Params_List is a list of FS_deletedNodes_Params.
type FS_deletedNodes_Params_List struct{ capnp.List }

// NewFS_deletedNodes_Params creates a new list of FS_deletedNodes_Params.
func NewFS_deletedNodes_Params_List(s *capnp.Segment, sz int32) (FS_deletedNodes_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_deletedNodes_Params_List{l}, err
}

func (s FS_deletedNodes_Params_List) At(i int) FS_deletedNodes_Params {
	return FS_deletedNodes_Params{s.List.Struct(i)}
}

func (s FS_deletedNodes_Params_List) Set(i int, v FS_deletedNodes_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_deletedNodes_Params_List) String() string {
	str, _ := text.MarshalList(0xf39ffa0d4b61ecce, s.List)
	return str
}

// FS_deletedNodes_Params_Promise is a wrapper for a FS_deletedNodes_Params promised by a client call.
type FS_deletedNodes_Params_Promise struct{ *capnp.Pipeline }

func (p FS_deletedNodes_Params_Promise) Struct() (FS_deletedNodes_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_deletedNodes_Params{s}, err
}

type FS_deletedNodes_Results struct{ capnp.Struct }

// FS_deletedNodes_Results_TypeID is the unique identifier for the type FS_deletedNodes_Results.
const FS_deletedNodes_Results_TypeID = 0x9f8515931298bab7

func NewFS_deletedNodes_Results(s *capnp.Segment) (FS_deletedNodes_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Results{st}, err
}

func NewRootFS_deletedNodes_Results(s *capnp.Segment) (FS_deletedNodes_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Results{st}, err
}

func ReadRootFS_deletedNodes_Results(msg *capnp.Message) (FS_deletedNodes_Results, error) {
	root, err := msg.RootPtr()
	return FS_deletedNodes_Results{root.Struct()}, err
}

func (s FS_deletedNodes_Results) String() string {
	str, _ := text.Marshal(0x9f8515931298bab7, s.Struct)
	return str
}

func (s FS_deletedNodes_Results) Nodes() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_deletedNodes_Results) HasNodes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_deletedNodes_Results) SetNodes(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewNodes sets the nodes field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_deletedNodes_Results) NewNodes(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_deletedNodes_Results_List is a list of FS_deletedNodes_Results.
type FS_deletedNodes_Results_List struct{ capnp.List }

// NewFS_deletedNodes_Results creates a new list of FS_deletedNodes_Results.
func NewFS_deletedNodes_Results_List(s *capnp.Segment, sz int32) (FS_deletedNodes_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_deletedNodes_Results_List{l}, err
}

func (s FS_deletedNodes_Results_List) At(i int) FS_deletedNodes_Results {
	return FS_deletedNodes_Results{s.List.Struct(i)}
}

func (s FS_deletedNodes_Results_List) Set(i int, v FS_deletedNodes_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_deletedNodes_Results_List) String() string {
	str, _ := text.MarshalList(0x9f8515931298bab7, s.List)
	return str
}

// FS_deletedNodes_Results_Promise is a wrapper for a FS_deletedNodes_Results promised by a client call.
type FS_deletedNodes_Results_Promise struct{ *capnp.Pipeline }

func (p FS_deletedNodes_Results_Promise) Struct() (FS_deletedNodes_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_deletedNodes_Results{s}, err
}

type FS_undelete_Params struct{ capnp.Struct }

// FS_undelete_Params_TypeID is the unique identifier for the type FS_undelete_Params.
const FS_undelete_Params_TypeID = 0xed67802d71143df2

func NewFS_undelete_Params(s *capnp.Segment) (FS_undelete_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_undelete_Params{st}, err
}

func NewRootFS_undelete_Params(s *capnp.Segment) (FS_undelete_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_undelete_Params{st}, err
}

func ReadRootFS_undelete_Params(msg *capnp.Message) (FS_undelete_Params, error) {
	root, err := msg.RootPtr()
	return FS_undelete_Params{root.Struct()}, err
}

func (s FS_undelete_Params) String() string {
	str, _ := text.Marshal(0xed67802d71143df2, s.Struct)
	return str
}

func (s FS_undelete_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_undelete_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_undelete_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_undelete_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_undelete_Params_List is a list of FS_undelete_Params.
type FS_undelete_Params_List struct{ capnp.List }

// NewFS_undelete_Params creates a new list of FS_undelete_Params.
func NewFS_undelete_Params_List(s *capnp.Segment, sz int32) (FS_undelete_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_undelete_Params_List{l}, err
}

func (s FS_undelete_Params_List) At(i int) FS_undelete_Params {
	return FS_undelete_Params{s.List.Struct(i)}
}

func (s FS_undelete_Params_List) Set(i int, v FS_undelete_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_undelete_Params_List) String() string {
	str, _ := text.MarshalList(0xed67802d71143df2, s.List)
	return str
}

// FS_undelete_Params_Promise is a wrapper for a FS_undelete_Params promised by a client call.
type FS_undelete_Params_Promise struct{ *capnp.Pipeline }

func (p FS_undelete_Params_Promise) Struct() (FS_undelete_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_undelete_Params{s}, err
}

type FS_undelete_Results struct{ capnp.Struct }

// FS_undelete_Results_TypeID is the unique identifier for the type FS_undelete_Results.
const FS_undelete_Results_TypeID = 0xdec9706a7438a8f0

func NewFS_undelete_Results(s *capnp.Segment) (FS_undelete_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_undelete_Results{st}, err
}

func NewRootFS_undelete_Results(s *capnp.Segment) (FS_undelete_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_undelete_Results{st}, err
}

func ReadRootFS_undelete_Results(msg *capnp.Message) (FS_undelete_Results, error) {
	root, err := msg.RootPtr()
	return FS_undelete_Results{root.Struct()}, err
}

func (s FS_undelete_Results) String() string {
	str, _ := text.Marshal(0xdec9706a7438a8f0, s.Struct)
	return str
}

// FS_undelete_Results_List is a list of FS_undelete_Results.
type FS_undelete_Results_List struct{ capnp.List }

// NewFS_undelete_Results creates a new list of FS_undelete_Results.
func NewFS_undelete_Results_List(s *capnp.Segment, sz int32) (FS_undelete_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_undelete_Results_List{l}, err
}

func (s FS_undelete_Results_List) At(i int) FS_undelete_Results {
	return FS_undelete_Results{s.List.Struct(i)}
}

func (s FS_undelete_Results_List) Set(i int, v FS_undelete_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_undelete_Results_List) String() string {
	str, _ := text.MarshalList(0xdec9706a7438a8f0, s.List)
	return str
}

// FS_undelete_Results_Promise is a wrapper for a FS_undelete_Results promised by a client call.
type FS_undelete_Results_Promise struct{ *capnp.Pipeline }

func (p FS_undelete_Results_Promise) Struct() (FS_undelete_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_undelete_Results{s}, err
}

type VCS struct{ Client capnp.Client }

// VCS_TypeID is the unique identifier for the type VCS.
const VCS_TypeID = 0xfaa680ef12c44624

func (c VCS) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) CommitInfo(ctx context.Context, params func(VCS_commitInfo_Params) error, opts ...capnp.CallOption) VCS_commitInfo_Results_Promise {
	if c.Client == nil {
		return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commitInfo_Params{Struct: s}) }
	}
	return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type VCS_Server interface {
	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	CommitInfo(VCS_commitInfo) error
}

func VCS_ServerToClient(s VCS_Server) VCS {
	c, _ := s.(server.Closer)
	return VCS{Client: server.New(VCS_Methods(nil, s), c)}
}

func VCS_Methods(methods []server.Method, s VCS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 10)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commitInfo{c, opts, VCS_commitInfo_Params{Struct: p}, VCS_commitInfo_Results{Struct: r}}
			return s.CommitInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 1},
	})

	return methods
}

// VCS_log holds the arguments for a server call to VCS.log.
type VCS_log struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_log_Params
	Results VCS_log_Results
}

// VCS_commit holds the arguments for a server call to VCS.commit.
type VCS_commit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commit_Params
	Results VCS_commit_Results
}

// VCS_tag holds the arguments for a server call to VCS.tag.
type VCS_tag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_tag_Params
	Results VCS_tag_Results
}

// VCS_untag holds the arguments for a server call to VCS.untag.
type VCS_untag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_untag_Params
	Results VCS_untag_Results
}

// VCS_reset holds the arguments for a server call to VCS.reset.
type VCS_reset struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_reset_Params
	Results VCS_reset_Results
}

// VCS_history holds the arguments for a server call to VCS.history.
type VCS_history struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_history_Params
	Results VCS_history_Results
}

// VCS_makeDiff holds the arguments for a server call to VCS.makeDiff.
type VCS_makeDiff struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_makeDiff_Params
	Results VCS_makeDiff_Results
}

// VCS_sync holds the arguments for a server call to VCS.sync.
type VCS_sync struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_sync_Params
	Results VCS_sync_Results
}

// VCS_fetch holds the arguments for a server call to VCS.fetch.
type VCS_fetch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_fetch_Params
	Results VCS_fetch_Results
}

// VCS_commitInfo holds the arguments for a server call to VCS.commitInfo.
type VCS_commitInfo struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commitInfo_Params
	Results VCS_commitInfo_Results
}

type VCS_log_Params struct{ capnp.Struct }

// VCS_log_Params_TypeID is the unique identifier for the type VCS_log_Params.
const VCS_log_Params_TypeID = 0xa4efd353c57d2b85

func NewVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func NewRootVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func ReadRootVCS_log_Params(msg *capnp.Message) (VCS_log_Params, error) {
	root, err := msg.RootPtr()
	return VCS_log_Params{root.Struct()}, err
}

func (s VCS_log_Params) String() string {
	str, _ := text.Marshal(0xa4efd353c57d2b85, s.Struct)
	return str
}

// VCS_log_Params_List is a list of VCS_log_Params.
type VCS_log_Params_List struct{ capnp.List }

// NewVCS_log_Params creates a new list of VCS_log_Params.
func NewVCS_log_Params_List(s *capnp.Segment, sz int32) (VCS_log_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_log_Params_List{l}, err
}

func (s VCS_log_Params_List) At(i int) VCS_log_Params { return VCS_log_Params{s.List.Struct(i)} }

func (s VCS_log_Params_List) Set(i int, v VCS_log_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_log_Params_List) String() string {
	str, _ := text.MarshalList(0xa4efd353c57d2b85, s.List)
	return str
}

// VCS_log_Params_Promise is a wrapper for a VCS_log_Params promised by a client call.
type VCS_log_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Params_Promise) Struct() (VCS_log_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Params{s}, err
}

type VCS_log_Results struct{ capnp.Struct }

// VCS_log_Results_TypeID is the unique identifier for the type VCS_log_Results.
const VCS_log_Results_TypeID = 0xf7250939585a23f6

func NewVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func NewRootVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func ReadRootVCS_log_Results(msg *capnp.Message) (VCS_log_Results, error) {
	root, err := msg.RootPtr()
	return VCS_log_Results{root.Struct()}, err
}

func (s VCS_log_Results) String() string {
	str, _ := text.Marshal(0xf7250939585a23f6, s.Struct)
	return str
}

func (s VCS_log_Results) Entries() (Commit_List, error) {
	p, err := s.Struct.Ptr(0)
	return Commit_List{List: p.List()}, err
}

func (s VCS_log_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_log_Results) SetEntries(v Commit_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated Commit_List, preferring placement in s's segment.
func (s VCS_log_Results) NewEntries(n int32) (Commit_List, error) {
	l, err := NewCommit_List(s.Struct.Segment(), n)
	if err != nil {
		return Commit_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_log_Results_List is a list of VCS_log_Results.
type VCS_log_Results_List struct{ capnp.List }

// NewVCS_log_Results creates a new list of VCS_log_Results.
func NewVCS_log_Results_List(s *capnp.Segment, sz int32) (VCS_log_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_log_Results_List{l}, err
}

func (s VCS_log_Results_List) At(i int) VCS_log_Results { return VCS_log_Results{s.List.Struct(i)} }

func (s VCS_log_Results_List) Set(i int, v VCS_log_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_log_Results_List) String() string {
	str, _ := text.MarshalList(0xf7250939585a23f6, s.List)
	return str
}

// VCS_log_Results_Promise is a wrapper for a VCS_log_Results promised by a client call.
type VCS_log_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Results_Promise) Struct() (VCS_log_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Results{s}, err
}

type VCS_commit_Params struct{ capnp.Struct }

// VCS_commit_Params_TypeID is the unique identifier for the type VCS_commit_Params.
const VCS_commit_Params_TypeID = 0xd9459f2361338d96

func NewVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func NewRootVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func ReadRootVCS_commit_Params(msg *capnp.Message) (VCS_commit_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Params{root.Struct()}, err
}

func (s VCS_commit_Params) String() string {
	str, _ := text.Marshal(0xd9459f2361338d96, s.Struct)
	return str
}

func (s VCS_commit_Params) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commit_Params) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commit_Params) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commit_Params) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commit_Params_List is a list of VCS_commit_Params.
type VCS_commit_Params_List struct{ capnp.List }

// NewVCS_commit_Params creates a new list of VCS_commit_Params.
func NewVCS_commit_Params_List(s *capnp.Segment, sz int32) (VCS_commit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commit_Params_List{l}, err
}

func (s VCS_commit_Params_List) At(i int) VCS_commit_Params {
	return VCS_commit_Params{s.List.Struct(i)}
}

func (s VCS_commit_Params_List) Set(i int, v VCS_commit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Params_List) String() string {
	str, _ := text.MarshalList(0xd9459f2361338d96, s.List)
	return str
}

// VCS_commit_Params_Promise is a wrapper for a VCS_commit_Params promised by a client call.
type VCS_commit_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Params_Promise) Struct() (VCS_commit_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Params{s}, err
}

type VCS_commit_Results struct{ capnp.Struct }

// VCS_commit_Results_TypeID is the unique identifier for the type VCS_commit_Results.
const VCS_commit_Results_TypeID = 0xb7d0dd6b467e7539

func NewVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func NewRootVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func ReadRootVCS_commit_Results(msg *capnp.Message) (VCS_commit_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Results{root.Struct()}, err
}

func (s VCS_commit_Results) String() string {
	str, _ := text.Marshal(0xb7d0dd6b467e7539, s.Struct)
	return str
}

// VCS_commit_Results_List is a list of VCS_commit_Results.
type VCS_commit_Results_List struct{ capnp.List }

// NewVCS_commit_Results creates a new list of VCS_commit_Results.
func NewVCS_commit_Results_List(s *capnp.Segment, sz int32) (VCS_commit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_commit_Results_List{l}, err
}

func (s VCS_commit_Results_List) At(i int) VCS_commit_Results {
	return VCS_commit_Results{s.List.Struct(i)}
}

func (s VCS_commit_Results_List) Set(i int, v VCS_commit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Results_List) String() string {
	str, _ := text.MarshalList(0xb7d0dd6b467e7539, s.List)
	return str
}

// VCS_commit_Results_Promise is a wrapper for a VCS_commit_Results promised by a client call.
type VCS_commit_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Results_Promise) Struct() (VCS_commit_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Results{s}, err
}

type VCS_tag_Params struct{ capnp.Struct }

// VCS_tag_Params_TypeID is the unique identifier for the type VCS_tag_Params.
const VCS_tag_Params_TypeID = 0xa97d67096ee7d46d

func NewVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func NewRootVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func ReadRootVCS_tag_Params(msg *capnp.Message) (VCS_tag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Params{root.Struct()}, err
}

func (s VCS_tag_Params) String() string {
	str, _ := text.Marshal(0xa97d67096ee7d46d, s.Struct)
	return str
}

func (s VCS_tag_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_tag_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_tag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_tag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetTagName(v string) error {
	return s.Struct.SetText(1, v)
}

// VCS_tag_Params_List is a list of VCS_tag_Params.
type VCS_tag_Params_List struct{ capnp.List }

// NewVCS_tag_Params creates a new list of VCS_tag_Params.
func NewVCS_tag_Params_List(s *capnp.Segment, sz int32) (VCS_tag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return VCS_tag_Params_List{l}, err
}

func (s VCS_tag_Params_List) At(i int) VCS_tag_Params { return VCS_tag_Params{s.List.Struct(i)} }

func (s VCS_tag_Params_List) Set(i int, v VCS_tag_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_tag_Params_List) String() string {
	str, _ := text.MarshalList(0xa97d67096ee7d46d, s.List)
	return str
}

// VCS_tag_Params_Promise is a wrapper for a VCS_tag_Params promised by a client call.
type VCS_tag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Params_Promise) Struct() (VCS_tag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Params{s}, err
}

type VCS_tag_Results struct{ capnp.Struct }

// VCS_tag_Results_TypeID is the unique identifier for the type VCS_tag_Results.
const VCS_tag_Results_TypeID = 0xbda949777c149f4b

func NewVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func NewRootVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func ReadRootVCS_tag_Results(msg *capnp.Message) (VCS_tag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Results{root.Struct()}, err
}

func (s VCS_tag_Results) String() string {
	str, _ := text.Marshal(0xbda949777c149f4b, s.Struct)
	return str
}

// VCS_tag_Results_List is a list of VCS_tag_Results.
type VCS_tag_Results_List struct{ capnp.List }

// NewVCS_tag_Results creates a new list of VCS_tag_Results.
func NewVCS_tag_Results_List(s *capnp.Segment, sz int32) (VCS_tag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_tag_Results_List{l}, err
}

func (s VCS_tag_Results_List) At(i int) VCS_tag_Results { return VCS_tag_Results{s.List.Struct(i)} }

func (s VCS_tag_Results_List) Set(i int, v VCS_tag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_tag_Results_List) String() string {
	str, _ := text.MarshalList(0xbda949777c149f4b, s.List)
	return str
}

// VCS_tag_Results_Promise is a wrapper for a VCS_tag_Results promised by a client call.
type VCS_tag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Results_Promise) Struct() (VCS_tag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Results{s}, err
}

type VCS_untag_Params struct{ capnp.Struct }

// VCS_untag_Params_TypeID is the unique identifier for the type VCS_untag_Params.
const VCS_untag_Params_TypeID = 0xf4d42db113af3a4b

func NewVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func NewRootVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func ReadRootVCS_untag_Params(msg *capnp.Message) (VCS_untag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Params{root.Struct()}, err
}

func (s VCS_untag_Params) String() string {
	str, _ := text.Marshal(0xf4d42db113af3a4b, s.Struct)
	return str
}

func (s VCS_untag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_untag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_untag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_untag_Params) SetTagName(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_untag_Params_List is a list of VCS_untag_Params.
type VCS_untag_Params_List struct{ capnp.List }

// NewVCS_untag_Params creates a new list of VCS_untag_Params.
func NewVCS_untag_Params_List(s *capnp.Segment, sz int32) (VCS_untag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_untag_Params_List{l}, err
}

func (s VCS_untag_Params_List) At(i int) VCS_untag_Params { return VCS_untag_Params{s.List.Struct(i)} }

func (s VCS_untag_Params_List) Set(i int, v VCS_untag_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Params_List) String() string {
	str, _ := text.MarshalList(0xf4d42db113af3a4b, s.List)
	return str
}

// VCS_untag_Params_Promise is a wrapper for a VCS_untag_Params promised by a client call.
type VCS_untag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Params_Promise) Struct() (VCS_untag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Params{s}, err
}

type VCS_untag_Results struct{ capnp.Struct }

// VCS_untag_Results_TypeID is the unique identifier for the type VCS_untag_Results.
const VCS_untag_Results_TypeID = 0xba0de490234c27af

func NewVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func NewRootVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func ReadRootVCS_untag_Results(msg *capnp.Message) (VCS_untag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Results{root.Struct()}, err
}

func (s VCS_untag_Results) String() string {
	str, _ := text.Marshal(0xba0de490234c27af, s.Struct)
	return str
}

// VCS_untag_Results_List is a list of VCS_untag_Results.
type VCS_untag_Results_List struct{ capnp.List }

// NewVCS_untag_Results creates a new list of VCS_untag_Results.
func NewVCS_untag_Results_List(s *capnp.Segment, sz int32) (VCS_untag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_untag_Results_List{l}, err
}

func (s VCS_untag_Results_List) At(i int) VCS_untag_Results {
	return VCS_untag_Results{s.List.Struct(i)}
}

func (s VCS_untag_Results_List) Set(i int, v VCS_untag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Results_List) String() string {
	str, _ := text.MarshalList(0xba0de490234c27af, s.List)
	return str
}

// VCS_untag_Results_Promise is a wrapper for a VCS_untag_Results promised by a client call.
type VCS_untag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Results_Promise) Struct() (VCS_untag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Results{s}, err
}

type VCS_reset_Params struct{ capnp.Struct }

// VCS_reset_Params_TypeID is the unique identifier for the type VCS_reset_Params.
const VCS_reset_Params_TypeID = 0xe71560d8bc06c6fd

func NewVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func NewRootVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func ReadRootVCS_reset_Params(msg *capnp.Message) (VCS_reset_Params, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Params{root.Struct()}, err
}

func (s VCS_reset_Params) String() string {
	str, _ := text.Marshal(0xe71560d8bc06c6fd, s.Struct)
	return str
}

func (s VCS_reset_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_reset_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_reset_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_reset_Params) HasRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_reset_Params) Force() bool {
	return s.Struct.Bit(0)
}

func (s VCS_reset_Params) SetForce(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_reset_Params_List is a list of VCS_reset_Params.
type VCS_reset_Params_List struct{ capnp.List }

// NewVCS_reset_Params creates a new list of VCS_reset_Params.
func NewVCS_reset_Params_List(s *capnp.Segment, sz int32) (VCS_reset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return VCS_reset_Params_List{l}, err
}

func (s VCS_reset_Params_List) At(i int) VCS_reset_Params { return VCS_reset_Params{s.List.Struct(i)} }

func (s VCS_reset_Params_List) Set(i int, v VCS_reset_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Params_List) String() string {
	str, _ := text.MarshalList(0xe71560d8bc06c6fd, s.List)
	return str
}

// VCS_reset_Params_Promise is a wrapper for a VCS_reset_Params promised by a client call.
type VCS_reset_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Params_Promise) Struct() (VCS_reset_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Params{s}, err
}

type VCS_reset_Results struct{ capnp.Struct }

// VCS_reset_Results_TypeID is the unique identifier for the type VCS_reset_Results.
const VCS_reset_Results_TypeID = 0xf9b772853fd93ea9

func NewVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func NewRootVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func ReadRootVCS_reset_Results(msg *capnp.Message) (VCS_reset_Results, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Results{root.Struct()}, err
}

func (s VCS_reset_Results) String() string {
	str, _ := text.Marshal(0xf9b772853fd93ea9, s.Struct)
	return str
}

// VCS_reset_Results_List is a list of VCS_reset_Results.
type VCS_reset_Results_List struct{ capnp.List }

// NewVCS_reset_Results creates a new list of VCS_reset_Results.
func NewVCS_reset_Results_List(s *capnp.Segment, sz int32) (VCS_reset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_reset_Results_List{l}, err
}

func (s VCS_reset_Results_List) At(i int) VCS_reset_Results {
	return VCS_reset_Results{s.List.Struct(i)}
}

func (s VCS_reset_Results_List) Set(i int, v VCS_reset_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b772853fd93ea9, s.List)
	return str
}

// VCS_reset_Results_Promise is a wrapper for a VCS_reset_Results promised by a client call.
type VCS_reset_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Results_Promise) Struct() (VCS_reset_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Results{s}, err
}

type VCS_history_Params struct{ capnp.Struct }

// VCS_history_Params_TypeID is the unique identifier for the type VCS_history_Params.
const VCS_history_Params_TypeID = 0xe154e487144bf3c2

func NewVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func NewRootVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func ReadRootVCS_history_Params(msg *capnp.Message) (VCS_history_Params, error) {
	root, err := msg.RootPtr()
	return VCS_history_Params{root.Struct()}, err
}

func (s VCS_history_Params) String() string {
	str, _ := text.Marshal(0xe154e487144bf3c2, s.Struct)
	return str
}

func (s VCS_history_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_history_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_history_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_history_Params_List is a list of VCS_history_Params.
type VCS_history_Params_List struct{ capnp.List }

// NewVCS_history_Params creates a new list of VCS_history_Params.
func NewVCS_history_Params_List(s *capnp.Segment, sz int32) (VCS_history_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Params_List{l}, err
}

func (s VCS_history_Params_List) At(i int) VCS_history_Params {
	return VCS_history_Params{s.List.Struct(i)}
}

func (s VCS_history_Params_List) Set(i int, v VCS_history_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Params_List) String() string {
	str, _ := text.MarshalList(0xe154e487144bf3c2, s.List)
	return str
}

// VCS_history_Params_Promise is a wrapper for a VCS_history_Params promised by a client call.
type VCS_history_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Params_Promise) Struct() (VCS_history_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Params{s}, err
}

type VCS_history_Results struct{ capnp.Struct }

// VCS_history_Results_TypeID is the unique identifier for the type VCS_history_Results.
const VCS_history_Results_TypeID = 0xe0f49db8c42c72b2

func NewVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func NewRootVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func ReadRootVCS_history_Results(msg *capnp.Message) (VCS_history_Results, error) {
	root, err := msg.RootPtr()
	return VCS_history_Results{root.Struct()}, err
}

func (s VCS_history_Results) String() string {
	str, _ := text.Marshal(0xe0f49db8c42c72b2, s.Struct)
	return str
}

func (s VCS_history_Results) History() (Change_List, error) {
	p, err := s.Struct.Ptr(0)
	return Change_List{List: p.List()}, err
}

func (s VCS_history_Results) HasHistory() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Results) SetHistory(v Change_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHistory sets the history field to a newly
// allocated Change_List, preferring placement in s's segment.
func (s VCS_history_Results) NewHistory(n int32) (Change_List, error) {
	l, err := NewChange_List(s.Struct.Segment(), n)
	if err != nil {
		return Change_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_history_Results_List is a list of VCS_history_Results.
type VCS_history_Results_List struct{ capnp.List }

// NewVCS_history_Results creates a new list of VCS_history_Results.
func NewVCS_history_Results_List(s *capnp.Segment, sz int32) (VCS_history_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Results_List{l}, err
}

func (s VCS_history_Results_List) At(i int) VCS_history_Results {
	return VCS_history_Results{s.List.Struct(i)}
}

func (s VCS_history_Results_List) Set(i int, v VCS_history_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f49db8c42c72b2, s.List)
	return str
}

// VCS_history_Results_Promise is a wrapper for a VCS_history_Results promised by a client call.
type VCS_history_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Results_Promise) Struct() (VCS_history_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Results{s}, err
}

type VCS_makeDiff_Params struct{ capnp.Struct }

// VCS_makeDiff_Params_TypeID is the unique identifier for the type VCS_makeDiff_Params.
const VCS_makeDiff_Params_TypeID = 0xe2f81b4403ef433b

func NewVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func NewRootVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func ReadRootVCS_makeDiff_Params(msg *capnp.Message) (VCS_makeDiff_Params, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Params{root.Struct()}, err
}

func (s VCS_makeDiff_Params) String() string {
	str, _ := text.Marshal(0xe2f81b4403ef433b, s.Struct)
	return str
}

func (s VCS_makeDiff_Params) LocalOwner() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalOwner() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalOwner(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_makeDiff_Params) RemoteOwner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_makeDiff_Params) LocalRev() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalRev() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalRev(v string) error {
	return s.Struct.SetText(2, v)
}

func (s VCS_makeDiff_Params) RemoteRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteRev(v string) error {
	return s.Struct.SetText(3, v)
}

func (s VCS_makeDiff_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_makeDiff_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_makeDiff_Params_List is a list of VCS_makeDiff_Params.
type VCS_makeDiff_Params_List struct{ capnp.List }

// NewVCS_makeDiff_Params creates a new list of VCS_makeDiff_Params.
func NewVCS_makeDiff_Params_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return VCS_makeDiff_Params_List{l}, err
}

func (s VCS_makeDiff_Params_List) At(i int) VCS_makeDiff_Params {
	return VCS_makeDiff_Params{s.List.Struct(i)}
}

func (s VCS_makeDiff_Params_List) Set(i int, v VCS_makeDiff_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Params_List) String() string {
	str, _ := text.MarshalList(0xe2f81b4403ef433b, s.List)
	return str
}

// VCS_makeDiff_Params_Promise is a wrapper for a VCS_makeDiff_Params promised by a client call.
type VCS_makeDiff_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Params_Promise) Struct() (VCS_makeDiff_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Params{s}, err
}

type VCS_makeDiff_Results struct{ capnp.Struct }

// VCS_makeDiff_Results_TypeID is the unique identifier for the type VCS_makeDiff_Results.
const VCS_makeDiff_Results_TypeID = 0xd7ef486de484610d

func NewVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func NewRootVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func ReadRootVCS_makeDiff_Results(msg *capnp.Message) (VCS_makeDiff_Results, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Results{root.Struct()}, err
}

func (s VCS_makeDiff_Results) String() string {
	str, _ := text.Marshal(0xd7ef486de484610d, s.Struct)
	return str
}

func (s VCS_makeDiff_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_makeDiff_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_makeDiff_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_makeDiff_Results_List is a list of VCS_makeDiff_Results.
type VCS_makeDiff_Results_List struct{ capnp.List }

// NewVCS_makeDiff_Results creates a new list of VCS_makeDiff_Results.
func NewVCS_makeDiff_Results_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_makeDiff_Results_List{l}, err
}

func (s VCS_makeDiff_Results_List) At(i int) VCS_makeDiff_Results {
	return VCS_makeDiff_Results{s.List.Struct(i)}
}

func (s VCS_makeDiff_Results_List) Set(i int, v VCS_makeDiff_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Results_List) String() string {
	str, _ := text.MarshalList(0xd7ef486de484610d, s.List)
	return str
}

// VCS_makeDiff_Results_Promise is a wrapper for a VCS_makeDiff_Results promised by a client call.
type VCS_makeDiff_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Results_Promise) Struct() (VCS_makeDiff_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Results{s}, err
}

func (p VCS_makeDiff_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_sync_Params struct{ capnp.Struct }

// VCS_sync_Params_TypeID is the unique identifier for the type VCS_sync_Params.
const VCS_sync_Params_TypeID = 0xb05bd83a34de71b7

func NewVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func NewRootVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func ReadRootVCS_sync_Params(msg *capnp.Message) (VCS_sync_Params, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Params{root.Struct()}, err
}

func (s VCS_sync_Params) String() string {
	str, _ := text.Marshal(0xb05bd83a34de71b7, s.Struct)
	return str
}

func (s VCS_sync_Params) WithWhom() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_sync_Params) HasWithWhom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Params) WithWhomBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_sync_Params) SetWithWhom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_sync_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_sync_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_sync_Params_List is a list of VCS_sync_Params.
type VCS_sync_Params_List struct{ capnp.List }

// NewVCS_sync_Params creates a new list of VCS_sync_Params.
func NewVCS_sync_Params_List(s *capnp.Segment, sz int32) (VCS_sync_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_sync_Params_List{l}, err
}

func (s VCS_sync_Params_List) At(i int) VCS_sync_Params { return VCS_sync_Params{s.List.Struct(i)} }

func (s VCS_sync_Params_List) Set(i int, v VCS_sync_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Params_List) String() string {
	str, _ := text.MarshalList(0xb05bd83a34de71b7, s.List)
	return str
}

// VCS_sync_Params_Promise is a wrapper for a VCS_sync_Params promised by a client call.
type VCS_sync_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Params_Promise) Struct() (VCS_sync_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Params{s}, err
}

type VCS_sync_Results struct{ capnp.Struct }

// VCS_sync_Results_TypeID is the unique identifier for the type VCS_sync_Results.
const VCS_sync_Results_TypeID = 0xfa04b4272d0ffcd9

func NewVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func NewRootVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func ReadRootVCS_sync_Results(msg *capnp.Message) (VCS_sync_Results, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Results{root.Struct()}, err
}

func (s VCS_sync_Results) String() string {
	str, _ := text.Marshal(0xfa04b4272d0ffcd9, s.Struct)
	return str
}

func (s VCS_sync_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_sync_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_sync_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_sync_Results_List is a list of VCS_sync_Results.
type VCS_sync_Results_List struct{ capnp.List }

// NewVCS_sync_Results creates a new list of VCS_sync_Results.
func NewVCS_sync_Results_List(s *capnp.Segment, sz int32) (VCS_sync_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_sync_Results_List{l}, err
}

func (s VCS_sync_Results_List) At(i int) VCS_sync_Results { return VCS_sync_Results{s.List.Struct(i)} }

func (s VCS_sync_Results_List) Set(i int, v VCS_sync_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Results_List) String() string {
	str, _ := text.MarshalList(0xfa04b4272d0ffcd9, s.List)
	return str
}

// VCS_sync_Results_Promise is a wrapper for a VCS_sync_Results promised by a client call.
type VCS_sync_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Results_Promise) Struct() (VCS_sync_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Results{s}, err
}

func (p VCS_sync_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_fetch_Params struct{ capnp.Struct }

// VCS_fetch_Params_TypeID is the unique identifier for the type VCS_fetch_Params.
const VCS_fetch_Params_TypeID = 0xaff62edfdbfe53d0

func NewVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func NewRootVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func ReadRootVCS_fetch_Params(msg *capnp.Message) (VCS_fetch_Params, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Params{root.Struct()}, err
}

func (s VCS_fetch_Params) String() string {
	str, _ := text.Marshal(0xaff62edfdbfe53d0, s.Struct)
	return str
}

func (s VCS_fetch_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_fetch_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_fetch_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_fetch_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_fetch_Params_List is a list of VCS_fetch_Params.
type VCS_fetch_Params_List struct{ capnp.List }

// NewVCS_fetch_Params creates a new list of VCS_fetch_Params.
func NewVCS_fetch_Params_List(s *capnp.Segment, sz int32) (VCS_fetch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_fetch_Params_List{l}, err
}

func (s VCS_fetch_Params_List) At(i int) VCS_fetch_Params { return VCS_fetch_Params{s.List.Struct(i)} }

func (s VCS_fetch_Params_List) Set(i int, v VCS_fetch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Params_List) String() string {
	str, _ := text.MarshalList(0xaff62edfdbfe53d0, s.List)
	return str
}

// VCS_fetch_Params_Promise is a wrapper for a VCS_fetch_Params promised by a client call.
type VCS_fetch_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Params_Promise) Struct() (VCS_fetch_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Params{s}, err
}

type VCS_fetch_Results struct{ capnp.Struct }

// VCS_fetch_Results_TypeID is the unique identifier for the type VCS_fetch_Results.
const VCS_fetch_Results_TypeID = 0xb262e0d6c2474d9c

func NewVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func NewRootVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func ReadRootVCS_fetch_Results(msg *capnp.Message) (VCS_fetch_Results, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Results{root.Struct()}, err
}

func (s VCS_fetch_Results) String() string {
	str, _ := text.Marshal(0xb262e0d6c2474d9c, s.Struct)
	return str
}

// VCS_fetch_Results_List is a list of VCS_fetch_Results.
type VCS_fetch_Results_List struct{ capnp.List }

// NewVCS_fetch_Results creates a new list of VCS_fetch_Results.
func NewVCS_fetch_Results_List(s *capnp.Segment, sz int32) (VCS_fetch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_fetch_Results_List{l}, err
}

func (s VCS_fetch_Results_List) At(i int) VCS_fetch_Results {
	return VCS_fetch_Results{s.List.Struct(i)}
}

func (s VCS_fetch_Results_List) Set(i int, v VCS_fetch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Results_List) String() string {
	str, _ := text.MarshalList(0xb262e0d6c2474d9c, s.List)
	return str
}

// VCS_fetch_Results_Promise is a wrapper for a VCS_fetch_Results promised by a client call.
type VCS_fetch_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Results_Promise) Struct() (VCS_fetch_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Results{s}, err
}

type VCS_commitInfo_Params struct{ capnp.Struct }

// VCS_commitInfo_Params_TypeID is the unique identifier for the type VCS_commitInfo_Params.
const VCS_commitInfo_Params_TypeID = 0xa630576401b1a5b7

func NewVCS_commitInfo_Params(s *capnp.Segment) (VCS_commitInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commitInfo_Params{st}, err
}

func NewRootVCS_commitInfo_Params(s *capnp.Segment) (VCS_commitInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commitInfo_Params{st}, err
}

func ReadRootVCS_commitInfo_Params(msg *capnp.Message) (VCS_commitInfo_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commitInfo_Params{root.Struct()}, err
}

func (s VCS_commitInfo_Params) String() string {
	str, _ := text.Marshal(0xa630576401b1a5b7, s.Struct)
	return str
}

func (s VCS_commitInfo_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commitInfo_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commitInfo_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commitInfo_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commitInfo_Params_List is a list of VCS_commitInfo_Params.
type VCS_commitInfo_Params_List struct{ capnp.List }

// NewVCS_commitInfo_Params creates a new list of VCS_commitInfo_Params.
func NewVCS_commitInfo_Params_List(s *capnp.Segment, sz int32) (VCS_commitInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commitInfo_Params_List{l}, err
}

func (s VCS_commitInfo_Params_List) At(i int) VCS_commitInfo_Params {
	return VCS_commitInfo_Params{s.List.Struct(i)}
}

func (s VCS_commitInfo_Params_List) Set(i int, v VCS_commitInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commitInfo_Params_List) String() string {
	str, _ := text.MarshalList(0xa630576401b1a5b7, s.List)
	return str
}

// VCS_commitInfo_Params_Promise is a wrapper for a VCS_commitInfo_Params promised by a client call.
type VCS_commitInfo_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commitInfo_Params_Promise) Struct() (VCS_commitInfo_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commitInfo_Params{s}, err
}

type VCS_commitInfo_Results struct{ capnp.Struct }

// VCS_commitInfo_Results_TypeID is the unique identifier for the type VCS_commitInfo_Results.
const VCS_commitInfo_Results_TypeID = 0xa1a9e5ab638eed79

func NewVCS_commitInfo_Results(s *capnp.Segment) (VCS_commitInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_commitInfo_Results{st}, err
}

func NewRootVCS_commitInfo_Results(s *capnp.Segment) (VCS_commitInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_commitInfo_Results{st}, err
}

func ReadRootVCS_commitInfo_Results(msg *capnp.Message) (VCS_commitInfo_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commitInfo_Results{root.Struct()}, err
}

func (s VCS_commitInfo_Results) String() string {
	str, _ := text.Marshal(0xa1a9e5ab638eed79, s.Struct)
	return str
}

func (s VCS_commitInfo_Results) IsValidRef() bool {
	return s.Struct.Bit(0)
}

func (s VCS_commitInfo_Results) SetIsValidRef(v bool) {
	s.Struct.SetBit(0, v)
}

func (s VCS_commitInfo_Results) Commit() (Commit, error) {
	p, err := s.Struct.Ptr(0)
	return Commit{Struct: p.Struct()}, err
}

func (s VCS_commitInfo_Results) HasCommit() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commitInfo_Results) SetCommit(v Commit) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewCommit sets the commit field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s VCS_commitInfo_Results) NewCommit() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_commitInfo_Results_List is a list of VCS_commitInfo_Results.
type VCS_commitInfo_Results_List struct{ capnp.List }

// NewVCS_commitInfo_Results creates a new list of VCS_commitInfo_Results.
func NewVCS_commitInfo_Results_List(s *capnp.Segment, sz int32) (VCS_commitInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_commitInfo_Results_List{l}, err
}

func (s VCS_commitInfo_Results_List) At(i int) VCS_commitInfo_Results {
	return VCS_commitInfo_Results{s.List.Struct(i)}
}

func (s VCS_commitInfo_Results_List) Set(i int, v VCS_commitInfo_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commitInfo_Results_List) String() string {
	str, _ := text.MarshalList(0xa1a9e5ab638eed79, s.List)
	return str
}

// VCS_commitInfo_Results_Promise is a wrapper for a VCS_commitInfo_Results promised by a client call.
type VCS_commitInfo_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commitInfo_Results_Promise) Struct() (VCS_commitInfo_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commitInfo_Results{s}, err
}

func (p VCS_commitInfo_Results_Promise) Commit() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo struct{ Client capnp.Client }

// Repo_TypeID is the unique identifier for the type Repo.
const Repo_TypeID = 0xa862cd929f7af191

func (c Repo) Quit(ctx context.Context, params func(Repo_quit_Params) error, opts ...capnp.CallOption) Repo_quit_Results_Promise {
	if c.Client == nil {
		return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_quit_Params{Struct: s}) }
	}
	return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Ping(ctx context.Context, params func(Repo_ping_Params) error, opts ...capnp.CallOption) Repo_ping_Results_Promise {
	if c.Client == nil {
		return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_ping_Params{Struct: s}) }
	}
	return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Init(ctx context.Context, params func(Repo_init_Params) error, opts ...capnp.CallOption) Repo_init_Results_Promise {
	if c.Client == nil {
		return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_init_Params{Struct: s}) }
	}
	return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Mount(ctx context.Context, params func(Repo_mount_Params) error, opts ...capnp.CallOption) Repo_mount_Results_Promise {
	if c.Client == nil {
		return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_mount_Params{Struct: s}) }
	}
	return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Unmount(ctx context.Context, params func(Repo_unmount_Params) error, opts ...capnp.CallOption) Repo_unmount_Results_Promise {
	if c.Client == nil {
		return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_unmount_Params{Struct: s}) }
	}
	return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigGet(ctx context.Context, params func(Repo_configGet_Params) error, opts ...capnp.CallOption) Repo_configGet_Results_Promise {
	if c.Client == nil {
		return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configGet_Params{Struct: s}) }
	}
	return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigSet(ctx context.Context, params func(Repo_configSet_Params) error, opts ...capnp.CallOption) Repo_configSet_Results_Promise {
	if c.Client == nil {
		return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configSet_Params{Struct: s}) }
	}
	return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigAll(ctx context.Context, params func(Repo_configAll_Params) error, opts ...capnp.CallOption) Repo_configAll_Results_Promise {
	if c.Client == nil {
		return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configAll_Params{Struct: s}) }
	}
	return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigDoc(ctx context.Context, params func(Repo_configDoc_Params) error, opts ...capnp.CallOption) Repo_configDoc_Results_Promise {
	if c.Client == nil {
		return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configDoc_Params{Struct: s}) }
	}
	return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Become(ctx context.Context, params func(Repo_become_Params) error, opts ...capnp.CallOption) Repo_become_Results_Promise {
	if c.Client == nil {
		return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_become_Params{Struct: s}) }
	}
	return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabAdd(ctx context.Context, params func(Repo_fstabAdd_Params) error, opts ...capnp.CallOption) Repo_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabAdd_Params{Struct: s}) }
	}
	return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabRemove(ctx context.Context, params func(Repo_fstabRemove_Params) error, opts ...capnp.CallOption) Repo_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabRemove_Params{Struct: s}) }
	}
	return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabApply(ctx context.Context, params func(Repo_fstabApply_Params) error, opts ...capnp.CallOption) Repo_fstabApply_Results_Promise {
	if c.Client == nil {
		return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabApply_Params{Struct: s}) }
	}
	return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabList(ctx context.Context, params func(Repo_fstabList_Params) error, opts ...capnp.CallOption) Repo_fstabList_Results_Promise {
	if c.Client == nil {
		return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabList_Params{Struct: s}) }
	}
	return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabUnmountAll(ctx context.Context, params func(Repo_fstabUnmountAll_Params) error, opts ...capnp.CallOption) Repo_fstabUnmountAll_Results_Promise {
	if c.Client == nil {
		return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabUnmountAll_Params{Struct: s}) }
	}
	return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Version(ctx context.Context, params func(Repo_version_Params) error, opts ...capnp.CallOption) Repo_version_Results_Promise {
	if c.Client == nil {
		return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_version_Params{Struct: s}) }
	}
	return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) WaitForInit(ctx context.Context, params func(Repo_waitForInit_Params) error, opts ...capnp.CallOption) Repo_waitForInit_Results_Promise {
	if c.Client == nil {
		return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_waitForInit_Params{Struct: s}) }
	}
	return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserAdd(ctx context.Context, params func(Repo_gatewayUserAdd_Params) error, opts ...capnp.CallOption) Repo_gatewayUserAdd_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserAdd_Params{Struct: s}) }
	}
	return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserRm(ctx context.Context, params func(Repo_gatewayUserRm_Params) error, opts ...capnp.CallOption) Repo_gatewayUserRm_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserRm_Params{Struct: s}) }
	}
	return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserList(ctx context.Context, params func(Repo_gatewayUserList_Params) error, opts ...capnp.CallOption) Repo_gatewayUserList_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserList_Params{Struct: s}) }
	}
	return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Repo_Server interface {
	Quit(Repo_quit) error

	Ping(Repo_ping) error

	Init(Repo_init) error

	Mount(Repo_mount) error

	Unmount(Repo_unmount) error

	ConfigGet(Repo_configGet) error

	ConfigSet(Repo_configSet) error

	ConfigAll(Repo_configAll) error

	ConfigDoc(Repo_configDoc) error

	Become(Repo_become) error

	FstabAdd(Repo_fstabAdd) error

	FstabRemove(Repo_fstabRemove) error

	FstabApply(Repo_fstabApply) error

	FstabList(Repo_fstabList) error

	FstabUnmountAll(Repo_fstabUnmountAll) error

	Version(Repo_version) error

	WaitForInit(Repo_waitForInit) error

	GatewayUserAdd(Repo_gatewayUserAdd) error

	GatewayUserRm(Repo_gatewayUserRm) error

	GatewayUserList(Repo_gatewayUserList) error
}

func Repo_ServerToClient(s Repo_Server) Repo {
	c, _ := s.(server.Closer)
	return Repo{Client: server.New(Repo_Methods(nil, s), c)}
}

func Repo_Methods(methods []server.Method, s Repo_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 20)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_quit{c, opts, Repo_quit_Params{Struct: p}, Repo_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_ping{c, opts, Repo_ping_Params{Struct: p}, Repo_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_init{c, opts, Repo_init_Params{Struct: p}, Repo_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_mount{c, opts, Repo_mount_Params{Struct: p}, Repo_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_unmount{c, opts, Repo_unmount_Params{Struct: p}, Repo_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configGet{c, opts, Repo_configGet_Params{Struct: p}, Repo_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configSet{c, opts, Repo_configSet_Params{Struct: p}, Repo_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configAll{c, opts, Repo_configAll_Params{Struct: p}, Repo_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configDoc{c, opts, Repo_configDoc_Params{Struct: p}, Repo_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_become{c, opts, Repo_become_Params{Struct: p}, Repo_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabAdd{c, opts, Repo_fstabAdd_Params{Struct: p}, Repo_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabRemove{c, opts, Repo_fstabRemove_Params{Struct: p}, Repo_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabApply{c, opts, Repo_fstabApply_Params{Struct: p}, Repo_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabList{c, opts, Repo_fstabList_Params{Struct: p}, Repo_fstabList_Results{Struct: r}}
			return s.FstabList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabUnmountAll{c, opts, Repo_fstabUnmountAll_Params{Struct: p}, Repo_fstabUnmountAll_Results{Struct: r}}
			return s.FstabUnmountAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_version{c, opts, Repo_version_Params{Struct: p}, Repo_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_waitForInit{c, opts, Repo_waitForInit_Params{Struct: p}, Repo_waitForInit_Results{Struct: r}}
			return s.WaitForInit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserAdd{c, opts, Repo_gatewayUserAdd_Params{Struct: p}, Repo_gatewayUserAdd_Results{Struct: r}}
			return s.GatewayUserAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserRm{c, opts, Repo_gatewayUserRm_Params{Struct: p}, Repo_gatewayUserRm_Results{Struct: r}}
			return s.GatewayUserRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserList{c, opts, Repo_gatewayUserList_Params{Struct: p}, Repo_gatewayUserList_Results{Struct: r}}
			return s.GatewayUserList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Repo_quit holds the arguments for a server call to Repo.quit.
type Repo_quit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_quit_Params
	Results Repo_quit_Results
}

// Repo_ping holds the arguments for a server call to Repo.ping.
type Repo_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_ping_Params
	Results Repo_ping_Results
}

// Repo_init holds the arguments for a server call to Repo.init.
type Repo_init struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_init_Params
	Results Repo_init_Results
}

// Repo_mount holds the arguments for a server call to Repo.mount.
type Repo_mount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_mount_Params
	Results Repo_mount_Results
}

// Repo_unmount holds the arguments for a server call to Repo.unmount.
type Repo_unmount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_unmount_Params
	Results Repo_unmount_Results
}

// Repo_configGet holds the arguments for a server call to Repo.configGet.
type Repo_configGet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configGet_Params
	Results Repo_configGet_Results
}

// Repo_configSet holds the arguments for a server call to Repo.configSet.
type Repo_configSet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configSet_Params
	Results Repo_configSet_Results
}

// Repo_configAll holds the arguments for a server call to Repo.configAll.
type Repo_configAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configAll_Params
	Results Repo_configAll_Results
}

// Repo_configDoc holds the arguments for a server call to Repo.configDoc.
type Repo_configDoc struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configDoc_Params
	Results Repo_configDoc_Results
}

// Repo_become holds the arguments for a server call to Repo.become.
type Repo_become struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_become_Params
	Results Repo_become_Results
}

// Repo_fstabAdd holds the arguments for a server call to Repo.fstabAdd.
type Repo_fstabAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabAdd_Params
	Results Repo_fstabAdd_Results
}

// Repo_fstabRemove holds the arguments for a server call to Repo.fstabRemove.
type Repo_fstabRemove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabRemove_Params
	Results Repo_fstabRemove_Results
}

// Repo_fstabApply holds the arguments for a server call to Repo.fstabApply.
type Repo_fstabApply struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabApply_Params
	Results Repo_fstabApply_Results
}

// Repo_fstabList holds the arguments for a server call to Repo.fstabList.
type Repo_fstabList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabList_Params
	Results Repo_fstabList_Results
}

// Repo_fstabUnmountAll holds the arguments for a server call to Repo.fstabUnmountAll.
type Repo_fstabUnmountAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabUnmountAll_Params
	Results Repo_fstabUnmountAll_Results
}

// Repo_version holds the arguments for a server call to Repo.version.
type Repo_version struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_version_Params
	Results Repo_version_Results
}

// Repo_waitForInit holds the arguments for a server call to Repo.waitForInit.
type Repo_waitForInit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_waitForInit_Params
	Results Repo_waitForInit_Results
}

// Repo_gatewayUserAdd holds the arguments for a server call to Repo.gatewayUserAdd.
type Repo_gatewayUserAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserAdd_Params
	Results Repo_gatewayUserAdd_Results
}

// Repo_gatewayUserRm holds the arguments for a server call to Repo.gatewayUserRm.
type Repo_gatewayUserRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserRm_Params
	Results Repo_gatewayUserRm_Results
}

// Repo_gatewayUserList holds the arguments for a server call to Repo.gatewayUserList.
type Repo_gatewayUserList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserList_Params
	Results Repo_gatewayUserList_Results
}

type Repo_quit_Params struct{ capnp.Struct }

// Repo_quit_Params_TypeID is the unique identifier for the type Repo_quit_Params.
const Repo_quit_Params_TypeID = 0xaa98a78425cdd321

func NewRepo_quit_Params(s *capnp.Segment) (Repo_quit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Params{st}, err
}

func NewRootRepo_quit_Params(s *capnp.Segment) (Repo_quit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Params{st}, err
}

func ReadRootRepo_quit_Params(msg *capnp.Message) (Repo_quit_Params, error) {
	root, err := msg.RootPtr()
	return Repo_quit_Params{root.Struct()}, err
}

func (s Repo_quit_Params) String() string {
	str, _ := text.Marshal(0xaa98a78425cdd321, s.Struct)
	return str
}

// Repo_quit_Params_List is a list of Repo_quit_Params.
type Repo_quit_Params_List struct{ capnp.List }

// NewRepo_quit_Params creates a new list of Repo_quit_Params.
func NewRepo_quit_Params_List(s *capnp.Segment, sz int32) (Repo_quit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_quit_Params_List{l}, err
}

func (s Repo_quit_Params_List) At(i int) Repo_quit_Params { return Repo_quit_Params{s.List.Struct(i)} }

func (s Repo_quit_Params_List) Set(i int, v Repo_quit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_quit_Params_List) String() string {
	str, _ := text.MarshalList(0xaa98a78425cdd321, s.List)
	return str
}

// Repo_quit_Params_Promise is a wrapper for a Repo_quit_Params promised by a client call.
type Repo_quit_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_quit_Params_Promise) Struct() (Repo_quit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_quit_Params{s}, err
}

type Repo_quit_Results struct{ capnp.Struct }

// Repo_quit_Results_TypeID is the unique identifier for the type Repo_quit_Results.
const Repo_quit_Results_TypeID = 0x860c3dd5698349f5

func NewRepo_quit_Results(s *capnp.Segment) (Repo_quit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Results{st}, err
}

func NewRootRepo_quit_Results(s *capnp.Segment) (Repo_quit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Results{st}, err
}

func ReadRootRepo_quit_Results(msg *capnp.Message) (Repo_quit_Results, error) {
	root, err := msg.RootPtr()
	return Repo_quit_Results{root.Struct()}, err
}

func (s Repo_quit_Results) String() string {
	str, _ := text.Marshal(0x860c3dd5698349f5, s.Struct)
	return str
}

// Repo_quit_Results_List is a list of Repo_quit_Results.
type Repo_quit_Results_List struct{ capnp.List }

// NewRepo_quit_Results creates a new list of Repo_quit_Results.
func NewRepo_quit_Results_List(s *capnp.Segment, sz int32) (Repo_quit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_quit_Results_List{l}, err
}

func (s Repo_quit_Results_List) At(i int) Repo_quit_Results {
	return Repo_quit_Results{s.List.Struct(i)}
}

func (s Repo_quit_Results_List) Set(i int, v Repo_quit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_quit_Results_List) String() string {
	str, _ := text.MarshalList(0x860c3dd5698349f5, s.List)
	return str
}

// Repo_quit_Results_Promise is a wrapper for a Repo_quit_Results promised by a client call.
type Repo_quit_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_quit_Results_Promise) Struct() (Repo_quit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_quit_Results{s}, err
}

type Repo_ping_Params struct{ capnp.Struct }

// Repo_ping_Params_TypeID is the unique identifier for the type Repo_ping_Params.
const Repo_ping_Params_TypeID = 0x978c524c1a35015c

func NewRepo_ping_Params(s *capnp.Segment) (Repo_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_ping_Params{st}, err
}

func NewRootRepo_ping_Params(s *capnp.Segment) (Repo_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_ping_Params{st}, err
}

func ReadRootRepo_ping_Params(msg *capnp.Message) (Repo_ping_Params, error) {
	root, err := msg.RootPtr()
	return Repo_ping_Params{root.Struct()}, err
}

func (s Repo_ping_Params) String() string {
	str, _ := text.Marshal(0x978c524c1a35015c, s.Struct)
	return str
}

// Repo_ping_Params_List is a list of Repo_ping_Params.
type Repo_ping_Params_List struct{ capnp.List }

// NewRepo_ping_Params creates a new list of Repo_ping_Params.
func NewRepo_ping_Params_List(s *capnp.Segment, sz int32) (Repo_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_ping_Params_List{l}, err
}

func (s Repo_ping_Params_List) At(i int) Repo_ping_Params { return Repo_ping_Params{s.List.Struct(i)} }

func (s Repo_ping_Params_List) Set(i int, v Repo_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_ping_Params_List) String() string {
	str, _ := text.MarshalList(0x978c524c1a35015c, s.List)
	return str
}

// Repo_ping_Params_Promise is a wrapper for a Repo_ping_Params promised by a client call.
type Repo_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_ping_Params_Promise) Struct() (Repo_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_ping_Params{s}, err
}

type Repo_ping_Results struct{ capnp.Struct }

// Repo_ping_Results_TypeID is the unique identifier for the type Repo_ping_Results.
const Repo_ping_Results_TypeID = 0x9d64fa17798952ff

func NewRepo_ping_Results(s *capnp.Segment) (Repo_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_ping_Results{st}, err
}

func NewRootRepo_ping_Results(s *capnp.Segment) (Repo_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_ping_Results{st}, err
}

func ReadRootRepo_ping_Results(msg *capnp.Message) (Repo_ping_Results, error) {
	root, err := msg.RootPtr()
	return Repo_ping_Results{root.Struct()}, err
}

func (s Repo_ping_Results) String() string {
	str, _ := text.Marshal(0x9d64fa17798952ff, s.Struct)
	return str
}

func (s Repo_ping_Results) Reply() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_ping_Results) HasReply() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_ping_Results) ReplyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_ping_Results) SetReply(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_ping_Results_List is a list of Repo_ping_Results.
type Repo_ping_Results_List struct{ capnp.List }

// NewRepo_ping_Results creates a new list of Repo_ping_Results.
func NewRepo_ping_Results_List(s *capnp.Segment, sz int32) (Repo_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_ping_Results_List{l}, err
}

func (s Repo_ping_Results_List) At(i int) Repo_ping_Results {
	return Repo_ping_Results{s.List.Struct(i)}
}

func (s Repo_ping_Results_List) Set(i int, v Repo_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_ping_Results_List) String() string {
	str, _ := text.MarshalList(0x9d64fa17798952ff, s.List)
	return str
}

// Repo_ping_Results_Promise is a wrapper for a Repo_ping_Results promised by a client call.
type Repo_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_ping_Results_Promise) Struct() (Repo_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_ping_Results{s}, err
}

type Repo_init_Params struct{ capnp.Struct }

// Repo_init_Params_TypeID is the unique identifier for the type Repo_init_Params.
const Repo_init_Params_TypeID = 0x9c19777f493f1110

func NewRepo_init_Params(s *capnp.Segment) (Repo_init_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_init_Params{st}, err
}

func NewRootRepo_init_Params(s *capnp.Segment) (Repo_init_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_init_Params{st}, err
}

func ReadRootRepo_init_Params(msg *capnp.Message) (Repo_init_Params, error) {
	root, err := msg.RootPtr()
	return Repo_init_Params{root.Struct()}, err
}

func (s Repo_init_Params) String() string {
	str, _ := text.Marshal(0x9c19777f493f1110, s.Struct)
	return str
}

func (s Repo_init_Params) BasePath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_init_Params) HasBasePath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) BasePathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetBasePath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_init_Params) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_init_Params) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_init_Params) Backend() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Repo_init_Params) HasBackend() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) BackendBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetBackend(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Repo_init_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Repo_init_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Repo_init_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Repo_init_Params) SetPassword(v string) error {
	return s.Struct.SetText(3, v)
}

// Repo_init_Params_List is a list of Repo_init_Params.
type Repo_init_Params_List struct{ capnp.List }

// NewRepo_init_Params creates a new list of Repo_init_Params.
func NewRepo_init_Params_List(s *capnp.Segment, sz int32) (Repo_init_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Repo_init_Params_List{l}, err
}

func (s Repo_init_Params_List) At(i int) Repo_init_Params { return Repo_init_Params{s.List.Struct(i)} }

func (s Repo_init_Params_List) Set(i int, v Repo_init_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_init_Params_List) String() string {
	str, _ := text.MarshalList(0x9c19777f493f1110, s.List)
	return str
}

// Repo_init_Params_Promise is a wrapper for a Repo_init_Params promised by a client call.
type Repo_init_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_init_Params_Promise) Struct() (Repo_init_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_init_Params{s}, err
}

type Repo_init_Results struct{ capnp.Struct }

// Repo_init_Results_TypeID is the unique identifier for the type Repo_init_Results.
const Repo_init_Results_TypeID = 0xfc6b4417fdef895a

func NewRepo_init_Results(s *capnp.Segment) (Repo_init_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_init_Results{st}, err
}

func NewRootRepo_init_Results(s *capnp.Segment) (Repo_init_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_init_Results{st}, err
}

func ReadRootRepo_init_Results(msg *capnp.Message) (Repo_init_Results, error) {
	root, err := msg.RootPtr()
	return Repo_init_Results{root.Struct()}, err
}

func (s Repo_init_Results) String() string {
	str, _ := text.Marshal(0xfc6b4417fdef895a, s.Struct)
	return str
}

// Repo_init_Results_List is a list of Repo_init_Results.
type Repo_init_Results_List struct{ capnp.List }

// NewRepo_init_Results creates a new list of Repo_init_Results.
func NewRepo_init_Results_List(s *capnp.Segment, sz int32) (Repo_init_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_init_Results_List{l}, err
}

func (s Repo_init_Results_List) At(i int) Repo_init_Results {
	return Repo_init_Results{s.List.Struct(i)}
}

func (s Repo_init_Results_List) Set(i int, v Repo_init_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_init_Results_List) String() string {
	str, _ := text.MarshalList(0xfc6b4417fdef895a, s.List)
	return str
}

// Repo_init_Results_Promise is a wrapper for a Repo_init_Results promised by a client call.
type Repo_init_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_init_Results_Promise) Struct() (Repo_init_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_init_Results{s}, err
}

type Repo_mount_Params struct{ capnp.Struct }

// Repo_mount_Params_TypeID is the unique identifier for the type Repo_mount_Params.
const Repo_mount_Params_TypeID = 0x98300b93ef71cc57

func NewRepo_mount_Params(s *capnp.Segment) (Repo_mount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_mount_Params{st}, err
}

func NewRootRepo_mount_Params(s *capnp.Segment) (Repo_mount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_mount_Params{st}, err
}

func ReadRootRepo_mount_Params(msg *capnp.Message) (Repo_mount_Params, error) {
	root, err := msg.RootPtr()
	return Repo_mount_Params{root.Struct()}, err
}

func (s Repo_mount_Params) String() string {
	str, _ := text.Marshal(0x98300b93ef71cc57, s.Struct)
	return str
}

func (s Repo_mount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_mount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_mount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_mount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_mount_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(1)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Repo_mount_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_mount_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Repo_mount_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Repo_mount_Params_List is a list of Repo_mount_Params.
type Repo_mount_Params_List struct{ capnp.List }

// NewRepo_mount_Params creates a new list of Repo_mount_Params.
func NewRepo_mount_Params_List(s *capnp.Segment, sz int32) (Repo_mount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_mount_Params_List{l}, err
}

func (s Repo_mount_Params_List) At(i int) Repo_mount_Params {
	return Repo_mount_Params{s.List.Struct(i)}
}

func (s Repo_mount_Params_List) Set(i int, v Repo_mount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_mount_Params_List) String() string {
	str, _ := text.MarshalList(0x98300b93ef71cc57, s.List)
	return str
}

// Repo_mount_Params_Promise is a wrapper for a Repo_mount_Params promised by a client call.
type Repo_mount_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_mount_Params_Promise) Struct() (Repo_mount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_mount_Params{s}, err
}

func (p Repo_mount_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Repo_mount_Results struct{ capnp.Struct }

// Repo_mount_Results_TypeID is the unique identifier for the type Repo_mount_Results.
const Repo_mount_Results_TypeID = 0xfa4486fa9522275e

func NewRepo_mount_Results(s *capnp.Segment) (Repo_mount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_mount_Results{st}, err
}

func NewRootRepo_mount_Results(s *capnp.Segment) (Repo_mount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_mount_Results{st}, err
}

func ReadRootRepo_mount_Results(msg *capnp.Message) (Repo_mount_Results, error) {
	root, err := msg.RootPtr()
	return Repo_mount_Results{root.Struct()}, err
}

func (s Repo_mount_Results) String() string {
	str, _ := text.Marshal(0xfa4486fa9522275e, s.Struct)
	return str
}

// Repo_mount_Results_List is a list of Repo_mount_Results.
type Repo_mount_Results_List struct{ capnp.List }

// NewRepo_mount_Results creates a new list of Repo_mount_Results.
func NewRepo_mount_Results_List(s *capnp.Segment, sz int32) (Repo_mount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_mount_Results_List{l}, err
}

func (s Repo_mount_Results_List) At(i int) Repo_mount_Results {
	return Repo_mount_Results{s.List.Struct(i)}
}

func (s Repo_mount_Results_List) Set(i int, v Repo_mount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_mount_Results_List) String() string {
	str, _ := text.MarshalList(0xfa4486fa9522275e, s.List)
	return str
}

// Repo_mount_Results_Promise is a wrapper for a Repo_mount_Results promised by a client call.
type Repo_mount_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_mount_Results_Promise) Struct() (Repo_mount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_mount_Results{s}, err
}

type Repo_unmount_Params struct{ capnp.Struct }

// Repo_unmount_Params_TypeID is the unique identifier for the type Repo_unmount_Params.
const Repo_unmount_Params_TypeID = 0xd7a7f00d5a96fc43

func NewRepo_unmount_Params(s *capnp.Segment) (Repo_unmount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_unmount_Params{st}, err
}

func NewRootRepo_unmount_Params(s *capnp.Segment) (Repo_unmount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_unmount_Params{st}, err
}

func ReadRootRepo_unmount_Params(msg *capnp.Message) (Repo_unmount_Params, error) {
	root, err := msg.RootPtr()
	return Repo_unmount_Params{root.Struct()}, err
}

func (s Repo_unmount_Params) String() string {
	str, _ := text.Marshal(0xd7a7f00d5a96fc43, s.Struct)
	return str
}

func (s Repo_unmount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_unmount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_unmount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_unmount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_unmount_Params_List is a list of Repo_unmount_Params.
type Repo_unmount_Params_List struct{ capnp.List }

// NewRepo_unmount_Params creates a new list of Repo_unmount_Params.
func NewRepo_unmount_Params_List(s *capnp.Segment, sz int32) (Repo_unmount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_unmount_Params_List{l}, err
}

func (s Repo_unmount_Params_List) At(i int) Repo_unmount_Params {
	return Repo_unmount_Params{s.List.Struct(i)}
}

func (s Repo_unmount_Params_List) Set(i int, v Repo_unmount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_unmount_Params_List) String() string {
	str, _ := text.MarshalList(0xd7a7f00d5a96fc43, s.List)
	return str
}

// Repo_unmount_Params_Promise is a wrapper for a Repo_unmount_Params promised by a client call.
type Repo_unmount_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_unmount_Params_Promise) Struct() (Repo_unmount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_unmount_Params{s}, err
}

type Repo_unmount_Results struct{ capnp.Struct }

// Repo_unmount_Results_TypeID is the unique identifier for the type Repo_unmount_Results.
const Repo_unmount_Results_TypeID = 0xd70c154f9521b73d

func NewRepo_unmount_Results(s *capnp.Segment) (Repo_unmount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_unmount_Results{st}, err
}

func NewRootRepo_unmount_Results(s *capnp.Segment) (Repo_unmount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_unmount_Results{st}, err
}

func ReadRootRepo_unmount_Results(msg *capnp.Message) (Repo_unmount_Results, error) {
	root, err := msg.RootPtr()
	return Repo_unmount_Results{root.Struct()}, err
}

func (s Repo_unmount_Results) String() string {
	str, _ := text.Marshal(0xd70c154f9521b73d, s.Struct)
	return str
}

// Repo_unmount_Results_List is a list of Repo_unmount_Results.
type Repo_unmount_Results_List struct{ capnp.List }

// NewRepo_unmount_Results creates a new list of Repo_unmount_Results.
func NewRepo_unmount_Results_List(s *capnp.Segment, sz int32) (Repo_unmount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_unmount_Results_List{l}, err
}

func (s Repo_unmount_Results_List) At(i int) Repo_unmount_Results {
	return Repo_unmount_Results{s.List.Struct(i)}
}

func (s Repo_unmount_Results_List) Set(i int, v Repo_unmount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_unmount_Results_List) String() string {
	str, _ := text.MarshalList(0xd70c154f9521b73d, s.List)
	return str
}

// Repo_unmount_Results_Promise is a wrapper for a Repo_unmount_Results promised by a client call.
type Repo_unmount_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_unmount_Results_Promise) Struct() (Repo_unmount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_unmount_Results{s}, err
}

type Repo_configGet_Params struct{ capnp.Struct }

// Repo_configGet_Params_TypeID is the unique identifier for the type Repo_configGet_Params.
const Repo_configGet_Params_TypeID = 0xe0b1a560d0e4d51a

func NewRepo_configGet_Params(s *capnp.Segment) (Repo_configGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Params{st}, err
}

func NewRootRepo_configGet_Params(s *capnp.Segment) (Repo_configGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Params{st}, err
}

func ReadRootRepo_configGet_Params(msg *capnp.Message) (Repo_configGet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configGet_Params{root.Struct()}, err
}

func (s Repo_configGet_Params) String() string {
	str, _ := text.Marshal(0xe0b1a560d0e4d51a, s.Struct)
	return str
}

func (s Repo_configGet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configGet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configGet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configGet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configGet_Params_List is a list of Repo_configGet_Params.
type Repo_configGet_Params_List struct{ capnp.List }

// NewRepo_configGet_Params creates a new list of Repo_configGet_Params.
func NewRepo_configGet_Params_List(s *capnp.Segment, sz int32) (Repo_configGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configGet_Params_List{l}, err
}

func (s Repo_configGet_Params_List) At(i int) Repo_configGet_Params {
	return Repo_configGet_Params{s.List.Struct(i)}
}

func (s Repo_configGet_Params_List) Set(i int, v Repo_configGet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configGet_Params_List) String() string {
	str, _ := text.MarshalList(0xe0b1a560d0e4d51a, s.List)
	return str
}

// Repo_configGet_Params_Promise is a wrapper for a Repo_configGet_Params promised by a client call.
type Repo_configGet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configGet_Params_Promise) Struct() (Repo_configGet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configGet_Params{s}, err
}

type Repo_configGet_Results struct{ capnp.Struct }

// Repo_configGet_Results_TypeID is the unique identifier for the type Repo_configGet_Results.
const Repo_configGet_Results_TypeID = 0xabc3ec90b96a6d71

func NewRepo_configGet_Results(s *capnp.Segment) (Repo_configGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Results{st}, err
}

func NewRootRepo_configGet_Results(s *capnp.Segment) (Repo_configGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Results{st}, err
}

func ReadRootRepo_configGet_Results(msg *capnp.Message) (Repo_configGet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configGet_Results{root.Struct()}, err
}

func (s Repo_configGet_Results) String() string {
	str, _ := text.Marshal(0xabc3ec90b96a6d71, s.Struct)
	return str
}

func (s Repo_configGet_Results) Value() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configGet_Results) HasValue() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configGet_Results) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configGet_Results) SetValue(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configGet_Results_List is a list of Repo_configGet_Results.
type Repo_configGet_Results_List struct{ capnp.List }

// NewRepo_configGet_Results creates a new list of Repo_configGet_Results.
func NewRepo_configGet_Results_List(s *capnp.Segment, sz int32) (Repo_configGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configGet_Results_List{l}, err
}

func (s Repo_configGet_Results_List) At(i int) Repo_configGet_Results {
	return Repo_configGet_Results{s.List.Struct(i)}
}

func (s Repo_configGet_Results_List) Set(i int, v Repo_configGet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configGet_Results_List) String() string {
	str, _ := text.MarshalList(0xabc3ec90b96a6d71, s.List)
	return str
}

// Repo_configGet_Results_Promise is a wrapper for a Repo_configGet_Results promised by a client call.
type Repo_configGet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configGet_Results_Promise) Struct() (Repo_configGet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configGet_Results{s}, err
}

type Repo_configSet_Params struct{ capnp.Struct }

// Repo_configSet_Params_TypeID is the unique identifier for the type Repo_configSet_Params.
const Repo_configSet_Params_TypeID = 0xc0ad53271497ab77

func NewRepo_configSet_Params(s *capnp.Segment) (Repo_configSet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_configSet_Params{st}, err
}

func NewRootRepo_configSet_Params(s *capnp.Segment) (Repo_configSet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_configSet_Params{st}, err
}

func ReadRootRepo_configSet_Params(msg *capnp.Message) (Repo_configSet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configSet_Params{root.Struct()}, err
}

func (s Repo_configSet_Params) String() string {
	str, _ := text.Marshal(0xc0ad53271497ab77, s.Struct)
	return str
}

func (s Repo_configSet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configSet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configSet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configSet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_configSet_Params) Value() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_configSet_Params) HasValue() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_configSet_Params) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_configSet_Params) SetValue(v string) error {
	return s.Struct.SetText(1, v)
}

// Repo_configSet_Params_List is a list of Repo_configSet_Params.
type Repo_configSet_Params_List struct{ capnp.List }

// NewRepo_configSet_Params creates a new list of Repo_configSet_Params.
func NewRepo_configSet_Params_List(s *capnp.Segment, sz int32) (Repo_configSet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_configSet_Params_List{l}, err
}

func (s Repo_configSet_Params_List) At(i int) Repo_configSet_Params {
	return Repo_configSet_Params{s.List.Struct(i)}
}

func (s Repo_configSet_Params_List) Set(i int, v Repo_configSet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configSet_Params_List) String() string {
	str, _ := text.MarshalList(0xc0ad53271497ab77, s.List)
	return str
}

// Repo_configSet_Params_Promise is a wrapper for a Repo_configSet_Params promised by a client call.
type Repo_configSet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configSet_Params_Promise) Struct() (Repo_configSet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configSet_Params{s}, err
}

type Repo_configSet_Results struct{ capnp.Struct }

// Repo_configSet_Results_TypeID is the unique identifier for the type Repo_configSet_Results.
const Repo_configSet_Results_TypeID = 0xa89254a0db970716

func NewRepo_configSet_Results(s *capnp.Segment) (Repo_configSet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configSet_Results{st}, err
}

func NewRootRepo_configSet_Results(s *capnp.Segment) (Repo_configSet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configSet_Results{st}, err
}

func ReadRootRepo_configSet_Results(msg *capnp.Message) (Repo_configSet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configSet_Results{root.Struct()}, err
}

func (s Repo_configSet_Results) String() string {
	str, _ := text.Marshal(0xa89254a0db970716, s.Struct)
	return str
}

// Repo_configSet_Results_List is a list of Repo_configSet_Results.
type Repo_configSet_Results_List struct{ capnp.List }

// NewRepo_configSet_Results creates a new list of Repo_configSet_Results.
func NewRepo_configSet_Results_List(s *capnp.Segment, sz int32) (Repo_configSet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_configSet_Results_List{l}, err
}

func (s Repo_configSet_Results_List) At(i int) Repo_configSet_Results {
	return Repo_configSet_Results{s.List.Struct(i)}
}

func (s Repo_configSet_Results_List) Set(i int, v Repo_configSet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configSet_Results_List) String() string {
	str, _ := text.MarshalList(0xa89254a0db970716, s.List)
	return str
}

// Repo_configSet_Results_Promise is a wrapper for a Repo_configSet_Results promised by a client call.
type Repo_configSet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configSet_Results_Promise) Struct() (Repo_configSet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configSet_Results{s}, err
}

type Repo_configAll_Params struct{ capnp.Struct }

// Repo_configAll_Params_TypeID is the unique identifier for the type Repo_configAll_Params.
const Repo_configAll_Params_TypeID = 0xbebae5caecad3c49

func NewRepo_configAll_Params(s *capnp.Segment) (Repo_configAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configAll_Params{st}, err
}

func NewRootRepo_configAll_Params(s *capnp.Segment) (Repo_configAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configAll_Params{st}, err
}

func ReadRootRepo_configAll_Params(msg *capnp.Message) (Repo_configAll_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configAll_Params{root.Struct()}, err
}

func (s Repo_configAll_Params) String() string {
	str, _ := text.Marshal(0xbebae5caecad3c49, s.Struct)
	return str
}

// Repo_configAll_Params_List is a list of Repo_configAll_Params.
type Repo_configAll_Params_List struct{ capnp.List }

// NewRepo_configAll_Params creates a new list of Repo_configAll_Params.
func NewRepo_configAll_Params_List(s *capnp.Segment, sz int32) (Repo_configAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_configAll_Params_List{l}, err
}

func (s Repo_configAll_Params_List) At(i int) Repo_configAll_Params {
	return Repo_configAll_Params{s.List.Struct(i)}
}

func (s Repo_configAll_Params_List) Set(i int, v Repo_configAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configAll_Params_List) String() string {
	str, _ := text.MarshalList(0xbebae5caecad3c49, s.List)
	return str
}

// Repo_configAll_Params_Promise is a wrapper for a Repo_configAll_Params promised by a client call.
type Repo_configAll_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configAll_Params_Promise) Struct() (Repo_configAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configAll_Params{s}, err
}

type Repo_configAll_Results struct{ capnp.Struct }

// Repo_configAll_Results_TypeID is the unique identifier for the type Repo_configAll_Results.
const Repo_configAll_Results_TypeID = 0xacf50d40a9d3436a

func NewRepo_configAll_Results(s *capnp.Segment) (Repo_configAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configAll_Results{st}, err
}

func NewRootRepo_configAll_Results(s *capnp.Segment) (Repo_configAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configAll_Results{st}, err
}

func ReadRootRepo_configAll_Results(msg *capnp.Message) (Repo_configAll_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configAll_Results{root.Struct()}, err
}

func (s Repo_configAll_Results) String() string {
	str, _ := text.Marshal(0xacf50d40a9d3436a, s.Struct)
	return str
}

func (s Repo_configAll_Results) All() (ConfigEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry_List{List: p.List()}, err
}

func (s Repo_configAll_Results) HasAll() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configAll_Results) SetAll(v ConfigEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAll sets the all field to a newly
// allocated ConfigEntry_List, preferring placement in s's segment.
func (s Repo_configAll_Results) NewAll(n int32) (ConfigEntry_List, error) {
	l, err := NewConfigEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return ConfigEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_configAll_Results_List is a list of Repo_configAll_Results.
type Repo_configAll_Results_List struct{ capnp.List }

// NewRepo_configAll_Results creates a new list of Repo_configAll_Results.
func NewRepo_configAll_Results_List(s *capnp.Segment, sz int32) (Repo_configAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configAll_Results_List{l}, err
}

func (s Repo_configAll_Results_List) At(i int) Repo_configAll_Results {
	return Repo_configAll_Results{s.List.Struct(i)}
}

func (s Repo_configAll_Results_List) Set(i int, v Repo_configAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configAll_Results_List) String() string {
	str, _ := text.MarshalList(0xacf50d40a9d3436a, s.List)
	return str
}

// Repo_configAll_Results_Promise is a wrapper for a Repo_configAll_Results promised by a client call.
type Repo_configAll_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configAll_Results_Promise) Struct() (Repo_configAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configAll_Results{s}, err
}

type Repo_configDoc_Params struct{ capnp.Struct }

// Repo_configDoc_Params_TypeID is the unique identifier for the type Repo_configDoc_Params.
const Repo_configDoc_Params_TypeID = 0x9b96e8c9be077989

func NewRepo_configDoc_Params(s *capnp.Segment) (Repo_configDoc_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Params{st}, err
}

func NewRootRepo_configDoc_Params(s *capnp.Segment) (Repo_configDoc_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Params{st}, err
}

func ReadRootRepo_configDoc_Params(msg *capnp.Message) (Repo_configDoc_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configDoc_Params{root.Struct()}, err
}

func (s Repo_configDoc_Params) String() string {
	str, _ := text.Marshal(0x9b96e8c9be077989, s.Struct)
	return str
}

func (s Repo_configDoc_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configDoc_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configDoc_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configDoc_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configDoc_Params_List is a list of Repo_configDoc_Params.
type Repo_configDoc_Params_List struct{ capnp.List }

// NewRepo_configDoc_Params creates a new list of Repo_configDoc_Params.
func NewRepo_configDoc_Params_List(s *capnp.Segment, sz int32) (Repo_configDoc_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configDoc_Params_List{l}, err
}

func (s Repo_configDoc_Params_List) At(i int) Repo_configDoc_Params {
	return Repo_configDoc_Params{s.List.Struct(i)}
}

func (s Repo_configDoc_Params_List) Set(i int, v Repo_configDoc_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configDoc_Params_List) String() string {
	str, _ := text.MarshalList(0x9b96e8c9be077989, s.List)
	return str
}

// Repo_configDoc_Params_Promise is a wrapper for a Repo_configDoc_Params promised by a client call.
type Repo_configDoc_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configDoc_Params_Promise) Struct() (Repo_configDoc_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configDoc_Params{s}, err
}

type Repo_configDoc_Results struct{ capnp.Struct }

// Repo_configDoc_Results_TypeID is the unique identifier for the type Repo_configDoc_Results.
const Repo_configDoc_Results_TypeID = 0xa34213f24153536b

func NewRepo_configDoc_Results(s *capnp.Segment) (Repo_configDoc_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Results{st}, err
}

func NewRootRepo_configDoc_Results(s *capnp.Segment) (Repo_configDoc_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Results{st}, err
}

func ReadRootRepo_configDoc_Results(msg *capnp.Message) (Repo_configDoc_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configDoc_Results{root.Struct()}, err
}

func (s Repo_configDoc_Results) String() string {
	str, _ := text.Marshal(0xa34213f24153536b, s.Struct)
	return str
}

func (s Repo_configDoc_Results) Desc() (ConfigEntry, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry{Struct: p.Struct()}, err
}

func (s Repo_configDoc_Results) HasDesc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configDoc_Results) SetDesc(v ConfigEntry) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDesc sets the desc field to a newly
// allocated ConfigEntry struct, preferring placement in s's segment.
func (s Repo_configDoc_Results) NewDesc() (ConfigEntry, error) {
	ss, err := NewConfigEntry(s.Struct.Segment())
	if err != nil {
		return ConfigEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Repo_configDoc_Results_List is a list of Repo_configDoc_Results.
type Repo_configDoc_Results_List struct{ capnp.List }

// NewRepo_configDoc_Results creates a new list of Repo_configDoc_Results.
func NewRepo_configDoc_Results_List(s *capnp.Segment, sz int32) (Repo_configDoc_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configDoc_Results_List{l}, err
}

func (s Repo_configDoc_Results_List) At(i int) Repo_configDoc_Results {
	return Repo_configDoc_Results{s.List.Struct(i)}
}

func (s Repo_configDoc_Results_List) Set(i int, v Repo_configDoc_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configDoc_Results_List) String() string {
	str, _ := text.MarshalList(0xa34213f24153536b, s.List)
	return str
}

// Repo_configDoc_Results_Promise is a wrapper for a Repo_configDoc_Results promised by a client call.
type Repo_configDoc_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configDoc_Results_Promise) Struct() (Repo_configDoc_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configDoc_Results{s}, err
}

func (p Repo_configDoc_Results_Promise) Desc() ConfigEntry_Promise {
	return ConfigEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo_become_Params struct{ capnp.Struct }

// Repo_become_Params_TypeID is the unique identifier for the type Repo_become_Params.
const Repo_become_Params_TypeID = 0xe75c9c74c2bacb82

func NewRepo_become_Params(s *capnp.Segment) (Repo_become_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_become_Params{st}, err
}

func NewRootRepo_become_Params(s *capnp.Segment) (Repo_become_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_become_Params{st}, err
}

func ReadRootRepo_become_Params(msg *capnp.Message) (Repo_become_Params, error) {
	root, err := msg.RootPtr()
	return Repo_become_Params{root.Struct()}, err
}

func (s Repo_become_Params) String() string {
	str, _ := text.Marshal(0xe75c9c74c2bacb82, s.Struct)
	return str
}

func (s Repo_become_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_become_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_become_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_become_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_become_Params_List is a list of Repo_become_Params.
type Repo_become_Params_List struct{ capnp.List }

// NewRepo_become_Params creates a new list of Repo_become_Params.
func NewRepo_become_Params_List(s *capnp.Segment, sz int32) (Repo_become_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_become_Params_List{l}, err
}

func (s Repo_become_Params_List) At(i int) Repo_become_Params {
	return Repo_become_Params{s.List.Struct(i)}
}

func (s Repo_become_Params_List) Set(i int, v Repo_become_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_become_Params_List) String() string {
	str, _ := text.MarshalList(0xe75c9c74c2bacb82, s.List)
	return str
}

// Repo_become_Params_Promise is a wrapper for a Repo_become_Params promised by a client call.
type Repo_become_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_become_Params_Promise) Struct() (Repo_become_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_become_Params{s}, err
}

type Repo_become_Results struct{ capnp.Struct }

// Repo_become_Results_TypeID is the unique identifier for the type Repo_become_Results.
const Repo_become_Results_TypeID = 0xeadaf2b11fded490

func NewRepo_become_Results(s *capnp.Segment) (Repo_become_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_become_Results{st}, err
}

func NewRootRepo_become_Results(s *capnp.Segment) (Repo_become_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_become_Results{st}, err
}

func ReadRootRepo_become_Results(msg *capnp.Message) (Repo_become_Results, error) {
	root, err := msg.RootPtr()
	return Repo_become_Results{root.Struct()}, err
}

func (s Repo_become_Results) String() string {
	str, _ := text.Marshal(0xeadaf2b11fded490, s.Struct)
	return str
}

// Repo_become_Results_List is a list of Repo_become_Results.
type Repo_become_Results_List struct{ capnp.List }

// NewRepo_become_Results creates a new list of Repo_become_Results.
func NewRepo_become_Results_List(s *capnp.Segment, sz int32) (Repo_become_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_become_Results_List{l}, err
}

func (s Repo_become_Results_List) At(i int) Repo_become_Results {
	return Repo_become_Results{s.List.Struct(i)}
}

func (s Repo_become_Results_List) Set(i int, v Repo_become_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_become_Results_List) String() string {
	str, _ := text.MarshalList(0xeadaf2b11fded490, s.List)
	return str
}

// Repo_become_Results_Promise is a wrapper for a Repo_become_Results promised by a client call.
type Repo_become_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_become_Results_Promise) Struct() (Repo_become_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_become_Results{s}, err
}

type Repo_fstabAdd_Params struct{ capnp.Struct }

// Repo_fstabAdd_Params_TypeID is the unique identifier for the type Repo_fstabAdd_Params.
const Repo_fstabAdd_Params_TypeID = 0xd1afceb8146949d4

func NewRepo_fstabAdd_Params(s *capnp.Segment) (Repo_fstabAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Repo_fstabAdd_Params{st}, err
}

func NewRootRepo_fstabAdd_Params(s *capnp.Segment) (Repo_fstabAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Repo_fstabAdd_Params{st}, err
}

func ReadRootRepo_fstabAdd_Params(msg *capnp.Message) (Repo_fstabAdd_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabAdd_Params{root.Struct()}, err
}

func (s Repo_fstabAdd_Params) String() string {
	str, _ := text.Marshal(0xd1afceb8146949d4, s.Struct)
	return str
}

func (s Repo_fstabAdd_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_fstabAdd_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_fstabAdd_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_fstabAdd_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_fstabAdd_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_fstabAdd_Params) SetMountPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_fstabAdd_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(2)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Repo_fstabAdd_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Repo_fstabAdd_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// Repo_fstabAdd_Params_List is a list of Repo_fstabAdd_Params.
type Repo_fstabAdd_Params_List struct{ capnp.List }

// NewRepo_fstabAdd_Params creates a new list of Repo_fstabAdd_Params.
func NewRepo_fstabAdd_Params_List(s *capnp.Segment, sz int32) (Repo_fstabAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Repo_fstabAdd_Params_List{l}, err
}

func (s Repo_fstabAdd_Params_List) At(i int) Repo_fstabAdd_Params {
	return Repo_fstabAdd_Params{s.List.Struct(i)}
}

func (s Repo_fstabAdd_Params_List) Set(i int, v Repo_fstabAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xd1afceb8146949d4, s.List)
	return str
}

// Repo_fstabAdd_Params_Promise is a wrapper for a Repo_fstabAdd_Params promised by a client call.
type Repo_fstabAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabAdd_Params_Promise) Struct() (Repo_fstabAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabAdd_Params{s}, err
}

func (p Repo_fstabAdd_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

type Repo_fstabAdd_Results struct{ capnp.Struct }

// Repo_fstabAdd_Results_TypeID is the unique identifier for the type Repo_fstabAdd_Results.
const Repo_fstabAdd_Results_TypeID = 0xbb83332a93ffdcad

func NewRepo_fstabAdd_Results(s *capnp.Segment) (Repo_fstabAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabAdd_Results{st}, err
}

func NewRootRepo_fstabAdd_Results(s *capnp.Segment) (Repo_fstabAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabAdd_Results{st}, err
}

func ReadRootRepo_fstabAdd_Results(msg *capnp.Message) (Repo_fstabAdd_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabAdd_Results{root.Struct()}, err
}

func (s Repo_fstabAdd_Results) String() string {
	str, _ := text.Marshal(0xbb83332a93ffdcad, s.Struct)
	return str
}

// Repo_fstabAdd_Results_List is a list of Repo_fstabAdd_Results.
type Repo_fstabAdd_Results_List struct{ capnp.List }

// NewRepo_fstabAdd_Results creates a new list of Repo_fstabAdd_Results.
func NewRepo_fstabAdd_Results_List(s *capnp.Segment, sz int32) (Repo_fstabAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabAdd_Results_List{l}, err
}

func (s Repo_fstabAdd_Results_List) At(i int) Repo_fstabAdd_Results {
	return Repo_fstabAdd_Results{s.List.Struct(i)}
}

func (s Repo_fstabAdd_Results_List) Set(i int, v Repo_fstabAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xbb83332a93ffdcad, s.List)
	return str
}

// Repo_fstabAdd_Results_Promise is a wrapper for a Repo_fstabAdd_Results promised by a client call.
type Repo_fstabAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabAdd_Results_Promise) Struct() (Repo_fstabAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabAdd_Results{s}, err
}

type Repo_fstabRemove_Params struct{ capnp.Struct }

// Repo_fstabRemove_Params_TypeID is the unique identifier for the type Repo_fstabRemove_Params.
const Repo_fstabRemove_Params_TypeID = 0x86d95afae10f0893

func NewRepo_fstabRemove_Params(s *capnp.Segment) (Repo_fstabRemove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabRemove_Params{st}, err
}

func NewRootRepo_fstabRemove_Params(s *capnp.Segment) (Repo_fstabRemove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabRemove_Params{st}, err
}

func ReadRootRepo_fstabRemove_Params(msg *capnp.Message) (Repo_fstabRemove_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabRemove_Params{root.Struct()}, err
}

func (s Repo_fstabRemove_Params) String() string {
	str, _ := text.Marshal(0x86d95afae10f0893, s.Struct)
	return str
}

func (s Repo_fstabRemove_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_fstabRemove_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabRemove_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_fstabRemove_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_fstabRemove_Params_List is a list of Repo_fstabRemove_Params.
type Repo_fstabRemove_Params_List struct{ capnp.List }

// NewRepo_fstabRemove_Params creates a new list of Repo_fstabRemove_Params.
func NewRepo_fstabRemove_Params_List(s *capnp.Segment, sz int32) (Repo_fstabRemove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_fstabRemove_Params_List{l}, err
}

func (s Repo_fstabRemove_Params_List) At(i int) Repo_fstabRemove_Params {
	return Repo_fstabRemove_Params{s.List.Struct(i)}
}

func (s Repo_fstabRemove_Params_List) Set(i int, v Repo_fstabRemove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabRemove_Params_List) String() string {
	str, _ := text.MarshalList(0x86d95afae10f0893, s.List)
	return str
}

// Repo_fstabRemove_Params_Promise is a wrapper for a Repo_fstabRemove_Params promised by a client call.
type Repo_fstabRemove_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabRemove_Params_Promise) Struct() (Repo_fstabRemove_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabRemove_Params{s}, err
}

type Repo_fstabRemove_Results struct{ capnp.Struct }

// Repo_fstabRemove_Results_TypeID is the unique identifier for the type Repo_fstabRemove_Results.
const Repo_fstabRemove_Results_TypeID = 0xc3fcefc580775485

func NewRepo_fstabRemove_Results(s *capnp.Segment) (Repo_fstabRemove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabRemove_Results{st}, err
}

func NewRootRepo_fstabRemove_Results(s *capnp.Segment) (Repo_fstabRemove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabRemove_Results{st}, err
}

func ReadRootRepo_fstabRemove_Results(msg *capnp.Message) (Repo_fstabRemove_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabRemove_Results{root.Struct()}, err
}

func (s Repo_fstabRemove_Results) String() string {
	str, _ := text.Marshal(0xc3fcefc580775485, s.Struct)
	return str
}

// Repo_fstabRemove_Results_List is a list of Repo_fstabRemove_Results.
type Repo_fstabRemove_Results_List struct{ capnp.List }

// NewRepo_fstabRemove_Results creates a new list of Repo_fstabRemove_Results.
func NewRepo_fstabRemove_Results_List(s *capnp.Segment, sz int32) (Repo_fstabRemove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabRemove_Results_List{l}, err
}

func (s Repo_fstabRemove_Results_List) At(i int) Repo_fstabRemove_Results {
	return Repo_fstabRemove_Results{s.List.Struct(i)}
}

func (s Repo_fstabRemove_Results_List) Set(i int, v Repo_fstabRemove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabRemove_Results_List) String() string {
	str, _ := text.MarshalList(0xc3fcefc580775485, s.List)
	return str
}

// Repo_fstabRemove_Results_Promise is a wrapper for a Repo_fstabRemove_Results promised by a client call.
type Repo_fstabRemove_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabRemove_Results_Promise) Struct() (Repo_fstabRemove_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabRemove_Results{s}, err
}

type Repo_fstabApply_Params struct{ capnp.Struct }

// Repo_fstabApply_Params_TypeID is the unique identifier for the type Repo_fstabApply_Params.
const Repo_fstabApply_Params_TypeID = 0xc7e5f661ac57ebb2

func NewRepo_fstabApply_Params(s *capnp.Segment) (Repo_fstabApply_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Params{st}, err
}

func NewRootRepo_fstabApply_Params(s *capnp.Segment) (Repo_fstabApply_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Params{st}, err
}

func ReadRootRepo_fstabApply_Params(msg *capnp.Message) (Repo_fstabApply_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabApply_Params{root.Struct()}, err
}

func (s Repo_fstabApply_Params) String() string {
	str, _ := text.Marshal(0xc7e5f661ac57ebb2, s.Struct)
	return str
}

// Repo_fstabApply_Params_List is a list of Repo_fstabApply_Params.
type Repo_fstabApply_Params_List struct{ capnp.List }

// NewRepo_fstabApply_Params creates a new list of Repo_fstabApply_Params.
func NewRepo_fstabApply_Params_List(s *capnp.Segment, sz int32) (Repo_fstabApply_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabApply_Params_List{l}, err
}

func (s Repo_fstabApply_Params_List) At(i int) Repo_fstabApply_Params {
	return Repo_fstabApply_Params{s.List.Struct(i)}
}

func (s Repo_fstabApply_Params_List) Set(i int, v Repo_fstabApply_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabApply_Params_List) String() string {
	str, _ := text.MarshalList(0xc7e5f661ac57ebb2, s.List)
	return str
}

// Repo_fstabApply_Params_Promise is a wrapper for a Repo_fstabApply_Params promised by a client call.
type Repo_fstabApply_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabApply_Params_Promise) Struct() (Repo_fstabApply_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabApply_Params{s}, err
}

type Repo_fstabApply_Results struct{ capnp.Struct }

// Repo_fstabApply_Results_TypeID is the unique identifier for the type Repo_fstabApply_Results.
const Repo_fstabApply_Results_TypeID = 0xb5bf271ecf3bc074

func NewRepo_fstabApply_Results(s *capnp.Segment) (Repo_fstabApply_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Results{st}, err
}

func NewRootRepo_fstabApply_Results(s *capnp.Segment) (Repo_fstabApply_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Results{st}, err
}

func ReadRootRepo_fstabApply_Results(msg *capnp.Message) (Repo_fstabApply_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabApply_Results{root.Struct()}, err
}

func (s Repo_fstabApply_Results) String() string {
	str, _ := text.Marshal(0xb5bf271ecf3bc074, s.Struct)
	return str
}

// Repo_fstabApply_Results_List is a list of Repo_fstabApply_Results.
type Repo_fstabApply_Results_List struct{ capnp.List }

// NewRepo_fstabApply_Results creates a new list of Repo_fstabApply_Results.
func NewRepo_fstabApply_Results_List(s *capnp.Segment, sz int32) (Repo_fstabApply_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabApply_Results_List{l}, err
}

func (s Repo_fstabApply_Results_List) At(i int) Repo_fstabApply_Results {
	return Repo_fstabApply_Results{s.List.Struct(i)}
}

func (s Repo_fstabApply_Results_List) Set(i int, v Repo_fstabApply_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabApply_Results_List) String() string {
	str, _ := text.MarshalList(0xb5bf271ecf3bc074, s.List)
	return str
}

// Repo_fstabApply_Results_Promise is a wrapper for a Repo_fstabApply_Results promised by a client call.
type Repo_fstabApply_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabApply_Results_Promise) Struct() (Repo_fstabApply_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabApply_Results{s}, err
}

type Repo_fstabList_Params struct{ capnp.Struct }

// Repo_fstabList_Params_TypeID is the unique identifier for the type Repo_fstabList_Params.
const Repo_fstabList_Params_TypeID = 0xd7315a3b3f92aa4a

func NewRepo_fstabList_Params(s *capnp.Segment) (Repo_fstabList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabList_Params{st}, err
}

func NewRootRepo_fstabList_Params(s *capnp.Segment) (Repo_fstabList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabList_Params{st}, err
}

func ReadRootRepo_fstabList_Params(msg *capnp.Message) (Repo_fstabList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabList_Params{root.Struct()}, err
}

func (s Repo_fstabList_Params) String() string {
	str, _ := text.Marshal(0xd7315a3b3f92aa4a, s.Struct)
	return str
}

// Repo_fstabList_Params_List is a list of Repo_fstabList_Params.
type Repo_fstabList_Params_List struct{ capnp.List }

// NewRepo_fstabList_Params creates a new list of Repo_fstabList_Params.
func NewRepo_fstabList_Params_List(s *capnp.Segment, sz int32) (Repo_fstabList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabList_Params_List{l}, err
}

func (s Repo_fstabList_Params_List) At(i int) Repo_fstabList_Params {
	return Repo_fstabList_Params{s.List.Struct(i)}
}

func (s Repo_fstabList_Params_List) Set(i int, v Repo_fstabList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabList_Params_List) String() string {
	str, _ := text.MarshalList(0xd7315a3b3f92aa4a, s.List)
	return str
}

// Repo_fstabList_Params_Promise is a wrapper for a Repo_fstabList_Params promised by a client call.
type Repo_fstabList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabList_Params_Promise) Struct() (Repo_fstabList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabList_Params{s}, err
}

type Repo_fstabList_Results struct{ capnp.Struct }

// Repo_fstabList_Results_TypeID is the unique identifier for the type Repo_fstabList_Results.
const Repo_fstabList_Results_TypeID = 0xc44d12b3aee49f34

func NewRepo_fstabList_Results(s *capnp.Segment) (Repo_fstabList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabList_Results{st}, err
}

func NewRootRepo_fstabList_Results(s *capnp.Segment) (Repo_fstabList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabList_Results{st}, err
}

func ReadRootRepo_fstabList_Results(msg *capnp.Message) (Repo_fstabList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabList_Results{root.Struct()}, err
}

func (s Repo_fstabList_Results) String() string {
	str, _ := text.Marshal(0xc44d12b3aee49f34, s.Struct)
	return str
}

func (s Repo_fstabList_Results) Mounts() (FsTabEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FsTabEntry_List{List: p.List()}, err
}

func (s Repo_fstabList_Results) HasMounts() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabList_Results) SetMounts(v FsTabEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMounts sets the mounts field to a newly
// allocated FsTabEntry_List, preferring placement in s's segment.
func (s Repo_fstabList_Results) NewMounts(n int32) (FsTabEntry_List, error) {
	l, err := NewFsTabEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return FsTabEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_fstabList_Results_List is a list of Repo_fstabList_Results.
type Repo_fstabList_Results_List struct{ capnp.List }

// NewRepo_fstabList_Results creates a new list of Repo_fstabList_Results.
func NewRepo_fstabList_Results_List(s *capnp.Segment, sz int32) (Repo_fstabList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_fstabList_Results_List{l}, err
}

func (s Repo_fstabList_Results_List) At(i int) Repo_fstabList_Results {
	return Repo_fstabList_Results{s.List.Struct(i)}
}

func (s Repo_fstabList_Results_List) Set(i int, v Repo_fstabList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabList_Results_List) String() string {
	str, _ := text.MarshalList(0xc44d12b3aee49f34, s.List)
	return str
}

// Repo_fstabList_Results_Promise is a wrapper for a Repo_fstabList_Results promised by a client call.
type Repo_fstabList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabList_Results_Promise) Struct() (Repo_fstabList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabList_Results{s}, err
}

type Repo_fstabUnmountAll_Params struct{ capnp.Struct }

// Repo_fstabUnmountAll_Params_TypeID is the unique identifier for the type Repo_fstabUnmountAll_Params.
const Repo_fstabUnmountAll_Params_TypeID = 0xbbec523e9fc1abfc

func NewRepo_fstabUnmountAll_Params(s *capnp.Segment) (Repo_fstabUnmountAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Params{st}, err
}

func NewRootRepo_fstabUnmountAll_Params(s *capnp.Segment) (Repo_fstabUnmountAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Params{st}, err
}

func ReadRootRepo_fstabUnmountAll_Params(msg *capnp.Message) (Repo_fstabUnmountAll_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabUnmountAll_Params{root.Struct()}, err
}

func (s Repo_fstabUnmountAll_Params) String() string {
	str, _ := text.Marshal(0xbbec523e9fc1abfc, s.Struct)
	return str
}

// Repo_fstabUnmountAll_Params_List is a list of Repo_fstabUnmountAll_Params.
type Repo_fstabUnmountAll_Params_List struct{ capnp.List }

// NewRepo_fstabUnmountAll_Params creates a new list of Repo_fstabUnmountAll_Params.
func NewRepo_fstabUnmountAll_Params_List(s *capnp.Segment, sz int32) (Repo_fstabUnmountAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabUnmountAll_Params_List{l}, err
}

func (s Repo_fstabUnmountAll_Params_List) At(i int) Repo_fstabUnmountAll_Params {
	return Repo_fstabUnmountAll_Params{s.List.Struct(i)}
}

func (s Repo_fstabUnmountAll_Params_List) Set(i int, v Repo_fstabUnmountAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabUnmountAll_Params_List) String() string {
	str, _ := text.MarshalList(0xbbec523e9fc1abfc, s.List)
	return str
}

// Repo_fstabUnmountAll_Params_Promise is a wrapper for a Repo_fstabUnmountAll_Params promised by a client call.
type Repo_fstabUnmountAll_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabUnmountAll_Params_Promise) Struct() (Repo_fstabUnmountAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabUnmountAll_Params{s}, err
}

type Repo_fstabUnmountAll_Results struct{ capnp.Struct }

// Repo_fstabUnmountAll_Results_TypeID is the unique identifier for the type Repo_fstabUnmountAll_Results.
const Repo_fstabUnmountAll_Results_TypeID = 0x8ae5aae9653b7b02

func NewRepo_fstabUnmountAll_Results(s *capnp.Segment) (Repo_fstabUnmountAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Results{st}, err
}

func NewRootRepo_fstabUnmountAll_Results(s *capnp.Segment) (Repo_fstabUnmountAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Results{st}, err
}

func ReadRootRepo_fstabUnmountAll_Results(msg *capnp.Message) (Repo_fstabUnmountAll_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabUnmountAll_Results{root.Struct()}, err
}

func (s Repo_fstabUnmountAll_Results) String() string {
	str, _ := text.Marshal(0x8ae5aae9653b7b02, s.Struct)
	return str
}

// Repo_fstabUnmountAll_Results_List is a list of Repo_fstabUnmountAll_Results.
type Repo_fstabUnmountAll_Results_List struct{ capnp.List }

// NewRepo_fstabUnmountAll_Results creates a new list of Repo_fstabUnmountAll_Results.
func NewRepo_fstabUnmountAll_Results_List(s *capnp.Segment, sz int32) (Repo_fstabUnmountAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabUnmountAll_Results_List{l}, err
}

func (s Repo_fstabUnmountAll_Results_List) At(i int) Repo_fstabUnmountAll_Results {
	return Repo_fstabUnmountAll_Results{s.List.Struct(i)}
}

func (s Repo_fstabUnmountAll_Results_List) Set(i int, v Repo_fstabUnmountAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabUnmountAll_Results_List) String() string {
	str, _ := text.MarshalList(0x8ae5aae9653b7b02, s.List)
	return str
}

// Repo_fstabUnmountAll_Results_Promise is a wrapper for a Repo_fstabUnmountAll_Results promised by a client call.
type Repo_fstabUnmountAll_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabUnmountAll_Results_Promise) Struct() (Repo_fstabUnmountAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabUnmountAll_Results{s}, err
}

type Repo_version_Params struct{ capnp.Struct }

// Repo_version_Params_TypeID is the unique identifier for the type Repo_version_Params.
const Repo_version_Params_TypeID = 0x98eadc167523156e

func NewRepo_version_Params(s *capnp.Segment) (Repo_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_version_Params{st}, err
}

func NewRootRepo_version_Params(s *capnp.Segment) (Repo_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_version_Params{st}, err
}

func ReadRootRepo_version_Params(msg *capnp.Message) (Repo_version_Params, error) {
	root, err := msg.RootPtr()
	return Repo_version_Params{root.Struct()}, err
}

func (s Repo_version_Params) String() string {
	str, _ := text.Marshal(0x98eadc167523156e, s.Struct)
	return str
}

// Repo_version_Params_List is a list of Repo_version_Params.
type Repo_version_Params_List struct{ capnp.List }

// NewRepo_version_Params creates a new list of Repo_version_Params.
func NewRepo_version_Params_List(s *capnp.Segment, sz int32) (Repo_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_version_Params_List{l}, err
}

func (s Repo_version_Params_List) At(i int) Repo_version_Params {
	return Repo_version_Params{s.List.Struct(i)}
}

func (s Repo_version_Params_List) Set(i int, v Repo_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_version_Params_List) String() string {
	str, _ := text.MarshalList(0x98eadc167523156e, s.List)
	return str
}

// Repo_version_Params_Promise is a wrapper for a Repo_version_Params promised by a client call.
type Repo_version_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_version_Params_Promise) Struct() (Repo_version_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_version_Params{s}, err
}

type Repo_version_Results struct{ capnp.Struct }

// Repo_version_Results_TypeID is the unique identifier for the type Repo_version_Results.
const Repo_version_Results_TypeID = 0xafe329bc8cad8f74

func NewRepo_version_Results(s *capnp.Segment) (Repo_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_version_Results{st}, err
}

func NewRootRepo_version_Results(s *capnp.Segment) (Repo_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_version_Results{st}, err
}

func ReadRootRepo_version_Results(msg *capnp.Message) (Repo_version_Results, error) {
	root, err := msg.RootPtr()
	return Repo_version_Results{root.Struct()}, err
}

func (s Repo_version_Results) String() string {
	str, _ := text.Marshal(0xafe329bc8cad8f74, s.Struct)
	return str
}

func (s Repo_version_Results) Version() (Version, error) {
	p, err := s.Struct.Ptr(0)
	return Version{Struct: p.Struct()}, err
}

func (s Repo_version_Results) HasVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_version_Results) SetVersion(v Version) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVersion sets the version field to a newly
// allocated Version struct, preferring placement in s's segment.
func (s Repo_version_Results) NewVersion() (Version, error) {
	ss, err := NewVersion(s.Struct.Segment())
	if err != nil {
		return Version{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Repo_version_Results_List is a list of Repo_version_Results.
type Repo_version_Results_List struct{ capnp.List }

// NewRepo_version_Results creates a new list of Repo_version_Results.
func NewRepo_version_Results_List(s *capnp.Segment, sz int32) (Repo_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_version_Results_List{l}, err
}

func (s Repo_version_Results_List) At(i int) Repo_version_Results {
	return Repo_version_Results{s.List.Struct(i)}
}

func (s Repo_version_Results_List) Set(i int, v Repo_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_version_Results_List) String() string {
	str, _ := text.MarshalList(0xafe329bc8cad8f74, s.List)
	return str
}

// Repo_version_Results_Promise is a wrapper for a Repo_version_Results promised by a client call.
type Repo_version_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_version_Results_Promise) Struct() (Repo_version_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_version_Results{s}, err
}

func (p Repo_version_Results_Promise) Version() Version_Promise {
	return Version_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo_waitForInit_Params struct{ capnp.Struct }

// Repo_waitForInit_Params_TypeID is the unique identifier for the type Repo_waitForInit_Params.
const Repo_waitForInit_Params_TypeID = 0xac8fbc382ae513de

func NewRepo_waitForInit_Params(s *capnp.Segment) (Repo_waitForInit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Params{st}, err
}

func NewRootRepo_waitForInit_Params(s *capnp.Segment) (Repo_waitForInit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Params{st}, err
}

func ReadRootRepo_waitForInit_Params(msg *capnp.Message) (Repo_waitForInit_Params, error) {
	root, err := msg.RootPtr()
	return Repo_waitForInit_Params{root.Struct()}, err
}

func (s Repo_waitForInit_Params) String() string {
	str, _ := text.Marshal(0xac8fbc382ae513de, s.Struct)
	return str
}

// Repo_waitForInit_Params_List is a list of Repo_waitForInit_Params.
type Repo_waitForInit_Params_List struct{ capnp.List }

// NewRepo_waitForInit_Params creates a new list of Repo_waitForInit_Params.
func NewRepo_waitForInit_Params_List(s *capnp.Segment, sz int32) (Repo_waitForInit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_waitForInit_Params_List{l}, err
}

func (s Repo_waitForInit_Params_List) At(i int) Repo_waitForInit_Params {
	return Repo_waitForInit_Params{s.List.Struct(i)}
}

func (s Repo_waitForInit_Params_List) Set(i int, v Repo_waitForInit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_waitForInit_Params_List) String() string {
	str, _ := text.MarshalList(0xac8fbc382ae513de, s.List)
	return str
}

// Repo_waitForInit_Params_Promise is a wrapper for a Repo_waitForInit_Params promised by a client call.
type Repo_waitForInit_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_waitForInit_Params_Promise) Struct() (Repo_waitForInit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_waitForInit_Params{s}, err
}

type Repo_waitForInit_Results struct{ capnp.Struct }

// Repo_waitForInit_Results_TypeID is the unique identifier for the type Repo_waitForInit_Results.
const Repo_waitForInit_Results_TypeID = 0x96fe51446ad697f9

func NewRepo_waitForInit_Results(s *capnp.Segment) (Repo_waitForInit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Results{st}, err
}

func NewRootRepo_waitForInit_Results(s *capnp.Segment) (Repo_waitForInit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_waitForInit_Results{st}, err
}

func ReadRootRepo_waitForInit_Results(msg *capnp.Message) (Repo_waitForInit_Results, error) {
	root, err := msg.RootPtr()
	return Repo_waitForInit_Results{root.Struct()}, err
}

func (s Repo_waitForInit_Results) String() string {
	str, _ := text.Marshal(0x96fe51446ad697f9, s.Struct)
	return str
}

// Repo_waitForInit_Results_List is a list of Repo_waitForInit_Results.
type Repo_waitForInit_Results_List struct{ capnp.List }

// NewRepo_waitForInit_Results creates a new list of Repo_waitForInit_Results.
func NewRepo_waitForInit_Results_List(s *capnp.Segment, sz int32) (Repo_waitForInit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_waitForInit_Results_List{l}, err
}

func (s Repo_waitForInit_Results_List) At(i int) Repo_waitForInit_Results {
	return Repo_waitForInit_Results{s.List.Struct(i)}
}

func (s Repo_waitForInit_Results_List) Set(i int, v Repo_waitForInit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_waitForInit_Results_List) String() string {
	str, _ := text.MarshalList(0x96fe51446ad697f9, s.List)
	return str
}

// Repo_waitForInit_Results_Promise is a wrapper for a Repo_waitForInit_Results promised by a client call.
type Repo_waitForInit_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_waitForInit_Results_Promise) Struct() (Repo_waitForInit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_waitForInit_Results{s}, err
}

type Repo_gatewayUserAdd_Params struct{ capnp.Struct }

// Repo_gatewayUserAdd_Params_TypeID is the unique identifier for the type Repo_gatewayUserAdd_Params.
const Repo_gatewayUserAdd_Params_TypeID = 0xcbd45f6552b4ba24

func NewRepo_gatewayUserAdd_Params(s *capnp.Segment) (Repo_gatewayUserAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_gatewayUserAdd_Params{st}, err
}

func NewRootRepo_gatewayUserAdd_Params(s *capnp.Segment) (Repo_gatewayUserAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_gatewayUserAdd_Params{st}, err
}

func ReadRootRepo_gatewayUserAdd_Params(msg *capnp.Message) (Repo_gatewayUserAdd_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserAdd_Params{root.Struct()}, err
}

func (s Repo_gatewayUserAdd_Params) String() string {
	str, _ := text.Marshal(0xcbd45f6552b4ba24, s.Struct)
	return str
}

func (s Repo_gatewayUserAdd_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_gatewayUserAdd_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserAdd_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_gatewayUserAdd_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_gatewayUserAdd_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserAdd_Params) SetPassword(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_gatewayUserAdd_Params) Folders() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Repo_gatewayUserAdd_Params) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) SetFolders(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Repo_gatewayUserAdd_Params) NewFolders(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Repo_gatewayUserAdd_Params) Rights() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(3)
	return capnp.TextList{List: p.List()}, err
}

func (s Repo_gatewayUserAdd_Params) HasRights() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) SetRights(v capnp.TextList) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewRights sets the rights field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Repo_gatewayUserAdd_Params) NewRights(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// Repo_gatewayUserAdd_Params_List is a list of Repo_gatewayUserAdd_Params.
type Repo_gatewayUserAdd_Params_List struct{ capnp.List }

// NewRepo_gatewayUserAdd_Params creates a new list of Repo_gatewayUserAdd_Params.
func NewRepo_gatewayUserAdd_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Repo_gatewayUserAdd_Params_List{l}, err
}

func (s Repo_gatewayUserAdd_Params_List) At(i int) Repo_gatewayUserAdd_Params {
	return Repo_gatewayUserAdd_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserAdd_Params_List) Set(i int, v Repo_gatewayUserAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xcbd45f6552b4ba24, s.List)
	return str
}

// Repo_gatewayUserAdd_Params_Promise is a wrapper for a Repo_gatewayUserAdd_Params promised by a client call.
type Repo_gatewayUserAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserAdd_Params_Promise) Struct() (Repo_gatewayUserAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserAdd_Params{s}, err
}

type Repo_gatewayUserAdd_Results struct{ capnp.Struct }

// Repo_gatewayUserAdd_Results_TypeID is the unique identifier for the type Repo_gatewayUserAdd_Results.
const Repo_gatewayUserAdd_Results_TypeID = 0xbd8d8f80992c4d78

func NewRepo_gatewayUserAdd_Results(s *capnp.Segment) (Repo_gatewayUserAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserAdd_Results{st}, err
}

func NewRootRepo_gatewayUserAdd_Results(s *capnp.Segment) (Repo_gatewayUserAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserAdd_Results{st}, err
}

func ReadRootRepo_gatewayUserAdd_Results(msg *capnp.Message) (Repo_gatewayUserAdd_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserAdd_Results{root.Struct()}, err
}

func (s Repo_gatewayUserAdd_Results) String() string {
	str, _ := text.Marshal(0xbd8d8f80992c4d78, s.Struct)
	return str
}

// Repo_gatewayUserAdd_Results_List is a list of Repo_gatewayUserAdd_Results.
type Repo_gatewayUserAdd_Results_List struct{ capnp.List }

// NewRepo_gatewayUserAdd_Results creates a new list of Repo_gatewayUserAdd_Results.
func NewRepo_gatewayUserAdd_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserAdd_Results_List{l}, err
}

func (s Repo_gatewayUserAdd_Results_List) At(i int) Repo_gatewayUserAdd_Results {
	return Repo_gatewayUserAdd_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserAdd_Results_List) Set(i int, v Repo_gatewayUserAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xbd8d8f80992c4d78, s.List)
	return str
}

// Repo_gatewayUserAdd_Results_Promise is a wrapper for a Repo_gatewayUserAdd_Results promised by a client call.
type Repo_gatewayUserAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserAdd_Results_Promise) Struct() (Repo_gatewayUserAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserAdd_Results{s}, err
}

type Repo_gatewayUserRm_Params struct{ capnp.Struct }

// Repo_gatewayUserRm_Params_TypeID is the unique identifier for the type Repo_gatewayUserRm_Params.
const Repo_gatewayUserRm_Params_TypeID = 0xbda24ef378533894

func NewRepo_gatewayUserRm_Params(s *capnp.Segment) (Repo_gatewayUserRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserRm_Params{st}, err
}

func NewRootRepo_gatewayUserRm_Params(s *capnp.Segment) (Repo_gatewayUserRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserRm_Params{st}, err
}

func ReadRootRepo_gatewayUserRm_Params(msg *capnp.Message) (Repo_gatewayUserRm_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserRm_Params{root.Struct()}, err
}

func (s Repo_gatewayUserRm_Params) String() string {
	str, _ := text.Marshal(0xbda24ef378533894, s.Struct)
	return str
}

func (s Repo_gatewayUserRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_gatewayUserRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_gatewayUserRm_Params_List is a list of Repo_gatewayUserRm_Params.
type Repo_gatewayUserRm_Params_List struct{ capnp.List }

// NewRepo_gatewayUserRm_Params creates a new list of Repo_gatewayUserRm_Params.
func NewRepo_gatewayUserRm_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_gatewayUserRm_Params_List{l}, err
}

func (s Repo_gatewayUserRm_Params_List) At(i int) Repo_gatewayUserRm_Params {
	return Repo_gatewayUserRm_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserRm_Params_List) Set(i int, v Repo_gatewayUserRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserRm_Params_List) String() string {
	str, _ := text.MarshalList(0xbda24ef378533894, s.List)
	return str
}

// Repo_gatewayUserRm_Params_Promise is a wrapper for a Repo_gatewayUserRm_Params promised by a client call.
type Repo_gatewayUserRm_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserRm_Params_Promise) Struct() (Repo_gatewayUserRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserRm_Params{s}, err
}

type Repo_gatewayUserRm_Results struct{ capnp.Struct }

// Repo_gatewayUserRm_Results_TypeID is the unique identifier for the type Repo_gatewayUserRm_Results.
const Repo_gatewayUserRm_Results_TypeID = 0xea498a2451bae614

func NewRepo_gatewayUserRm_Results(s *capnp.Segment) (Repo_gatewayUserRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserRm_Results{st}, err
}

func NewRootRepo_gatewayUserRm_Results(s *capnp.Segment) (Repo_gatewayUserRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserRm_Results{st}, err
}

func ReadRootRepo_gatewayUserRm_Results(msg *capnp.Message) (Repo_gatewayUserRm_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserRm_Results{root.Struct()}, err
}

func (s Repo_gatewayUserRm_Results) String() string {
	str, _ := text.Marshal(0xea498a2451bae614, s.Struct)
	return str
}

// Repo_gatewayUserRm_Results_List is a list of Repo_gatewayUserRm_Results.
type Repo_gatewayUserRm_Results_List struct{ capnp.List }

// NewRepo_gatewayUserRm_Results creates a new list of Repo_gatewayUserRm_Results.
func NewRepo_gatewayUserRm_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserRm_Results_List{l}, err
}

func (s Repo_gatewayUserRm_Results_List) At(i int) Repo_gatewayUserRm_Results {
	return Repo_gatewayUserRm_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserRm_Results_List) Set(i int, v Repo_gatewayUserRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserRm_Results_List) String() string {
	str, _ := text.MarshalList(0xea498a2451bae614, s.List)
	return str
}

// Repo_gatewayUserRm_Results_Promise is a wrapper for a Repo_gatewayUserRm_Results promised by a client call.
type Repo_gatewayUserRm_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserRm_Results_Promise) Struct() (Repo_gatewayUserRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserRm_Results{s}, err
}

type Repo_gatewayUserList_Params struct{ capnp.Struct }

// Repo_gatewayUserList_Params_TypeID is the unique identifier for the type Repo_gatewayUserList_Params.
const Repo_gatewayUserList_Params_TypeID = 0x936b942a74db0be0

func NewRepo_gatewayUserList_Params(s *capnp.Segment) (Repo_gatewayUserList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserList_Params{st}, err
}

func NewRootRepo_gatewayUserList_Params(s *capnp.Segment) (Repo_gatewayUserList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserList_Params{st}, err
}

func ReadRootRepo_gatewayUserList_Params(msg *capnp.Message) (Repo_gatewayUserList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserList_Params{root.Struct()}, err
}

func (s Repo_gatewayUserList_Params) String() string {
	str, _ := text.Marshal(0x936b942a74db0be0, s.Struct)
	return str
}

// Repo_gatewayUserList_Params_List is a list of Repo_gatewayUserList_Params.
type Repo_gatewayUserList_Params_List struct{ capnp.List }

// NewRepo_gatewayUserList_Params creates a new list of Repo_gatewayUserList_Params.
func NewRepo_gatewayUserList_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserList_Params_List{l}, err
}

func (s Repo_gatewayUserList_Params_List) At(i int) Repo_gatewayUserList_Params {
	return Repo_gatewayUserList_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserList_Params_List) Set(i int, v Repo_gatewayUserList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserList_Params_List) String() string {
	str, _ := text.MarshalList(0x936b942a74db0be0, s.List)
	return str
}

// Repo_gatewayUserList_Params_Promise is a wrapper for a Repo_gatewayUserList_Params promised by a client call.
type Repo_gatewayUserList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserList_Params_Promise) Struct() (Repo_gatewayUserList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserList_Params{s}, err
}

type Repo_gatewayUserList_Results struct{ capnp.Struct }

// Repo_gatewayUserList_Results_TypeID is the unique identifier for the type Repo_gatewayUserList_Results.
const Repo_gatewayUserList_Results_TypeID = 0x82f304d5d4e81ee4

func NewRepo_gatewayUserList_Results(s *capnp.Segment) (Repo_gatewayUserList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserList_Results{st}, err
}

func NewRootRepo_gatewayUserList_Results(s *capnp.Segment) (Repo_gatewayUserList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserList_Results{st}, err
}

func ReadRootRepo_gatewayUserList_Results(msg *capnp.Message) (Repo_gatewayUserList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserList_Results{root.Struct()}, err
}

func (s Repo_gatewayUserList_Results) String() string {
	str, _ := text.Marshal(0x82f304d5d4e81ee4, s.Struct)
	return str
}

func (s Repo_gatewayUserList_Results) Users() (capnp2.User_List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp2.User_List{List: p.List()}, err
}

func (s Repo_gatewayUserList_Results) HasUsers() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserList_Results) SetUsers(v capnp2.User_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewUsers sets the users field to a newly
// allocated capnp2.User_List, preferring placement in s's segment.
func (s Repo_gatewayUserList_Results) NewUsers(n int32) (capnp2.User_List, error) {
	l, err := capnp2.NewUser_List(s.Struct.Segment(), n)
	if err != nil {
		return capnp2.User_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_gatewayUserList_Results_List is a list of Repo_gatewayUserList_Results.
type Repo_gatewayUserList_Results_List struct{ capnp.List }

// NewRepo_gatewayUserList_Results creates a new list of Repo_gatewayUserList_Results.
func NewRepo_gatewayUserList_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_gatewayUserList_Results_List{l}, err
}

func (s Repo_gatewayUserList_Results_List) At(i int) Repo_gatewayUserList_Results {
	return Repo_gatewayUserList_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserList_Results_List) Set(i int, v Repo_gatewayUserList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserList_Results_List) String() string {
	str, _ := text.MarshalList(0x82f304d5d4e81ee4, s.List)
	return str
}

// Repo_gatewayUserList_Results_Promise is a wrapper for a Repo_gatewayUserList_Results promised by a client call.
type Repo_gatewayUserList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserList_Results_Promise) Struct() (Repo_gatewayUserList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserList_Results{s}, err
}

type Net struct{ Client capnp.Client }

// Net_TypeID is the unique identifier for the type Net.
const Net_TypeID = 0xaa133a60be5a7d01

func (c Net) RemoteAddOrUpdate(ctx context.Context, params func(Net_remoteAddOrUpdate_Params) error, opts ...capnp.CallOption) Net_remoteAddOrUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteAddOrUpdate_Params{Struct: s}) }
	}
	return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteRm(ctx context.Context, params func(Net_remoteRm_Params) error, opts ...capnp.CallOption) Net_remoteRm_Results_Promise {
	if c.Client == nil {
		return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteRm_Params{Struct: s}) }
	}
	return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteLs(ctx context.Context, params func(Net_remoteLs_Params) error, opts ...capnp.CallOption) Net_remoteLs_Results_Promise {
	if c.Client == nil {
		return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteLs_Params{Struct: s}) }
	}
	return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteUpdate(ctx context.Context, params func(Net_remoteUpdate_Params) error, opts ...capnp.CallOption) Net_remoteUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteUpdate_Params{Struct: s}) }
	}
	return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteSave(ctx context.Context, params func(Net_remoteSave_Params) error, opts ...capnp.CallOption) Net_remoteSave_Results_Promise {
	if c.Client == nil {
		return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteSave_Params{Struct: s}) }
	}
	return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemotePing(ctx context.Context, params func(Net_remotePing_Params) error, opts ...capnp.CallOption) Net_remotePing_Results_Promise {
	if c.Client == nil {
		return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remotePing_Params{Struct: s}) }
	}
	return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteClear(ctx context.Context, params func(Net_remoteClear_Params) error, opts ...capnp.CallOption) Net_remoteClear_Results_Promise {
	if c.Client == nil {
		return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteClear_Params{Struct: s}) }
	}
	return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) NetLocate(ctx context.Context, params func(Net_netLocate_Params) error, opts ...capnp.CallOption) Net_netLocate_Results_Promise {
	if c.Client == nil {
		return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocate_Params{Struct: s}) }
	}
	return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) NetLocateNext(ctx context.Context, params func(Net_netLocateNext_Params) error, opts ...capnp.CallOption) Net_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocateNext_Params{Struct: s}) }
	}
	return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Whoami(ctx context.Context, params func(Net_whoami_Params) error, opts ...capnp.CallOption) Net_whoami_Results_Promise {
	if c.Client == nil {
		return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_whoami_Params{Struct: s}) }
	}
	return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Connect(ctx context.Context, params func(Net_connect_Params) error, opts ...capnp.CallOption) Net_connect_Results_Promise {
	if c.Client == nil {
		return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_connect_Params{Struct: s}) }
	}
	return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Disconnect(ctx context.Context, params func(Net_disconnect_Params) error, opts ...capnp.CallOption) Net_disconnect_Results_Promise {
	if c.Client == nil {
		return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_disconnect_Params{Struct: s}) }
	}
	return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteOnlineList(ctx context.Context, params func(Net_remoteOnlineList_Params) error, opts ...capnp.CallOption) Net_remoteOnlineList_Results_Promise {
	if c.Client == nil {
		return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteOnlineList_Params{Struct: s}) }
	}
	return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteByName(ctx context.Context, params func(Net_remoteByName_Params) error, opts ...capnp.CallOption) Net_remoteByName_Results_Promise {
	if c.Client == nil {
		return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteByName_Params{Struct: s}) }
	}
	return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Net_Server interface {
	RemoteAddOrUpdate(Net_remoteAddOrUpdate) error

	RemoteRm(Net_remoteRm) error

	RemoteLs(Net_remoteLs) error

	RemoteUpdate(Net_remoteUpdate) error

	RemoteSave(Net_remoteSave) error

	RemotePing(Net_remotePing) error

	RemoteClear(Net_remoteClear) error

	NetLocate(Net_netLocate) error

	NetLocateNext(Net_netLocateNext) error

	Whoami(Net_whoami) error

	Connect(Net_connect) error

	Disconnect(Net_disconnect) error

	RemoteOnlineList(Net_remoteOnlineList) error

	RemoteByName(Net_remoteByName) error
}

func Net_ServerToClient(s Net_Server) Net {
	c, _ := s.(server.Closer)
	return Net{Client: server.New(Net_Methods(nil, s), c)}
}

func Net_Methods(methods []server.Method, s Net_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 14)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteAddOrUpdate{c, opts, Net_remoteAddOrUpdate_Params{Struct: p}, Net_remoteAddOrUpdate_Results{Struct: r}}
			return s.RemoteAddOrUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteRm{c, opts, Net_remoteRm_Params{Struct: p}, Net_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteLs{c, opts, Net_remoteLs_Params{Struct: p}, Net_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteUpdate{c, opts, Net_remoteUpdate_Params{Struct: p}, Net_remoteUpdate_Results{Struct: r}}
			return s.RemoteUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteSave{c, opts, Net_remoteSave_Params{Struct: p}, Net_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remotePing{c, opts, Net_remotePing_Params{Struct: p}, Net_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteClear{c, opts, Net_remoteClear_Params{Struct: p}, Net_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocate{c, opts, Net_netLocate_Params{Struct: p}, Net_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocateNext{c, opts, Net_netLocateNext_Params{Struct: p}, Net_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_whoami{c, opts, Net_whoami_Params{Struct: p}, Net_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_connect{c, opts, Net_connect_Params{Struct: p}, Net_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_disconnect{c, opts, Net_disconnect_Params{Struct: p}, Net_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteOnlineList{c, opts, Net_remoteOnlineList_Params{Struct: p}, Net_remoteOnlineList_Results{Struct: r}}
			return s.RemoteOnlineList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteByName{c, opts, Net_remoteByName_Params{Struct: p}, Net_remoteByName_Results{Struct: r}}
			return s.RemoteByName(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Net_remoteAddOrUpdate holds the arguments for a server call to Net.remoteAddOrUpdate.
type Net_remoteAddOrUpdate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteAddOrUpdate_Params
	Results Net_remoteAddOrUpdate_Results
}

// Net_remoteRm holds the arguments for a server call to Net.remoteRm.
type Net_remoteRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteRm_Params
	Results Net_remoteRm_Results
}

// Net_remoteLs holds the arguments for a server call to Net.remoteLs.
type Net_remoteLs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteLs_Params
	Results Net_remoteLs_Results
}

// Net_remoteUpdate holds the arguments for a server call to Net.remoteUpdate.
type Net_remoteUpdate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteUpdate_Params
	Results Net_remoteUpdate_Results
}

// Net_remoteSave holds the arguments for a server call to Net.remoteSave.
type Net_remoteSave struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteSave_Params
	Results Net_remoteSave_Results
}

// Net_remotePing holds the arguments for a server call to Net.remotePing.
type Net_remotePing struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remotePing_Params
	Results Net_remotePing_Results
}

// Net_remoteClear holds the arguments for a server call to Net.remoteClear.
type Net_remoteClear struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteClear_Params
	Results Net_remoteClear_Results
}

// Net_netLocate holds the arguments for a server call to Net.netLocate.
type Net_netLocate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_netLocate_Params
	Results Net_netLocate_Results
}

// Net_netLocateNext holds the arguments for a server call to Net.netLocateNext.
type Net_netLocateNext struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_netLocateNext_Params
	Results Net_netLocateNext_Results
}

// Net_whoami holds the arguments for a server call to Net.whoami.
type Net_whoami struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_whoami_Params
	Results Net_whoami_Results
}

// Net_connect holds the arguments for a server call to Net.connect.
type Net_connect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_connect_Params
	Results Net_connect_Results
}

// Net_disconnect holds the arguments for a server call to Net.disconnect.
type Net_disconnect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_disconnect_Params
	Results Net_disconnect_Results
}

// Net_remoteOnlineList holds the arguments for a server call to Net.remoteOnlineList.
type Net_remoteOnlineList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteOnlineList_Params
	Results Net_remoteOnlineList_Results
}

// Net_remoteByName holds the arguments for a server call to Net.remoteByName.
type Net_remoteByName struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteByName_Params
	Results Net_remoteByName_Results
}

type Net_remoteAddOrUpdate_Params struct{ capnp.Struct }

// Net_remoteAddOrUpdate_Params_TypeID is the unique identifier for the type Net_remoteAddOrUpdate_Params.
const Net_remoteAddOrUpdate_Params_TypeID = 0xf5c310bd5e2aa138

func NewNet_remoteAddOrUpdate_Params(s *capnp.Segment) (Net_remoteAddOrUpdate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteAddOrUpdate_Params{st}, err
}

func NewRootNet_remoteAddOrUpdate_Params(s *capnp.Segment) (Net_remoteAddOrUpdate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteAddOrUpdate_Params{st}, err
}

func ReadRootNet_remoteAddOrUpdate_Params(msg *capnp.Message) (Net_remoteAddOrUpdate_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteAddOrUpdate_Params{root.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Params) String() string {
	str, _ := text.Marshal(0xf5c310bd5e2aa138, s.Struct)
	return str
}

func (s Net_remoteAddOrUpdate_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteAddOrUpdate_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteAddOrUpdate_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteAddOrUpdate_Params_List is a list of Net_remoteAddOrUpdate_Params.
type Net_remoteAddOrUpdate_Params_List struct{ capnp.List }

// NewNet_remoteAddOrUpdate_Params creates a new list of Net_remoteAddOrUpdate_Params.
func NewNet_remoteAddOrUpdate_Params_List(s *capnp.Segment, sz int32) (Net_remoteAddOrUpdate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteAddOrUpdate_Params_List{l}, err
}

func (s Net_remoteAddOrUpdate_Params_List) At(i int) Net_remoteAddOrUpdate_Params {
	return Net_remoteAddOrUpdate_Params{s.List.Struct(i)}
}

func (s Net_remoteAddOrUpdate_Params_List) Set(i int, v Net_remoteAddOrUpdate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteAddOrUpdate_Params_List) String() string {
	str, _ := text.MarshalList(0xf5c310bd5e2aa138, s.List)
	return str
}

// Net_remoteAddOrUpdate_Params_Promise is a wrapper for a Net_remoteAddOrUpdate_Params promised by a client call.
type Net_remoteAddOrUpdate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteAddOrUpdate_Params_Promise) Struct() (Net_remoteAddOrUpdate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteAddOrUpdate_Params{s}, err
}

func (p Net_remoteAddOrUpdate_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_remoteAddOrUpdate_Results struct{ capnp.Struct }

// Net_remoteAddOrUpdate_Results_TypeID is the unique identifier for the type Net_remoteAddOrUpdate_Results.
const Net_remoteAddOrUpdate_Results_TypeID = 0xfcaa6dc30ba75197

func NewNet_remoteAddOrUpdate_Results(s *capnp.Segment) (Net_remoteAddOrUpdate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteAddOrUpdate_Results{st}, err
}

func NewRootNet_remoteAddOrUpdate_Results(s *capnp.Segment) (Net_remoteAddOrUpdate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteAddOrUpdate_Results{st}, err
}

func ReadRootNet_remoteAddOrUpdate_Results(msg *capnp.Message) (Net_remoteAddOrUpdate_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteAddOrUpdate_Results{root.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Results) String() string {
	str, _ := text.Marshal(0xfcaa6dc30ba75197, s.Struct)
	return str
}

// Net_remoteAddOrUpdate_Results_List is a list of Net_remoteAddOrUpdate_Results.
type Net_remoteAddOrUpdate_Results_List struct{ capnp.List }

// NewNet_remoteAddOrUpdate_Results creates a new list of Net_remoteAddOrUpdate_Results.
func NewNet_remoteAddOrUpdate_Results_List(s *capnp.Segment, sz int32) (Net_remoteAddOrUpdate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteAddOrUpdate_Results_List{l}, err
}

func (s Net_remoteAddOrUpdate_Results_List) At(i int) Net_remoteAddOrUpdate_Results {
	return Net_remoteAddOrUpdate_Results{s.List.Struct(i)}
}

func (s Net_remoteAddOrUpdate_Results_List) Set(i int, v Net_remoteAddOrUpdate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteAddOrUpdate_Results_List) String() string {
	str, _ := text.MarshalList(0xfcaa6dc30ba75197, s.List)
	return str
}

// Net_remoteAddOrUpdate_Results_Promise is a wrapper for a Net_remoteAddOrUpdate_Results promised by a client call.
type Net_remoteAddOrUpdate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteAddOrUpdate_Results_Promise) Struct() (Net_remoteAddOrUpdate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteAddOrUpdate_Results{s}, err
}

type Net_remoteRm_Params struct{ capnp.Struct }

// Net_remoteRm_Params_TypeID is the unique identifier for the type Net_remoteRm_Params.
const Net_remoteRm_Params_TypeID = 0xf485a561c31c83d2

func NewNet_remoteRm_Params(s *capnp.Segment) (Net_remoteRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteRm_Params{st}, err
}

func NewRootNet_remoteRm_Params(s *capnp.Segment) (Net_remoteRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteRm_Params{st}, err
}

func ReadRootNet_remoteRm_Params(msg *capnp.Message) (Net_remoteRm_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteRm_Params{root.Struct()}, err
}

func (s Net_remoteRm_Params) String() string {
	str, _ := text.Marshal(0xf485a561c31c83d2, s.Struct)
	return str
}

func (s Net_remoteRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remoteRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remoteRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remoteRm_Params_List is a list of Net_remoteRm_Params.
type Net_remoteRm_Params_List struct{ capnp.List }

// NewNet_remoteRm_Params creates a new list of Net_remoteRm_Params.
func NewNet_remoteRm_Params_List(s *capnp.Segment, sz int32) (Net_remoteRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteRm_Params_List{l}, err
}

func (s Net_remoteRm_Params_List) At(i int) Net_remoteRm_Params {
	return Net_remoteRm_Params{s.List.Struct(i)}
}

func (s Net_remoteRm_Params_List) Set(i int, v Net_remoteRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteRm_Params_List) String() string {
	str, _ := text.MarshalList(0xf485a561c31c83d2, s.List)
	return str
}

// Net_remoteRm_Params_Promise is a wrapper for a Net_remoteRm_Params promised by a client call.
type Net_remoteRm_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteRm_Params_Promise) Struct() (Net_remoteRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteRm_Params{s}, err
}

type Net_remoteRm_Results struct{ capnp.Struct }

// Net_remoteRm_Results_TypeID is the unique identifier for the type Net_remoteRm_Results.
const Net_remoteRm_Results_TypeID = 0xdb78f249dcc7b9f1

func NewNet_remoteRm_Results(s *capnp.Segment) (Net_remoteRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteRm_Results{st}, err
}

func NewRootNet_remoteRm_Results(s *capnp.Segment) (Net_remoteRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteRm_Results{st}, err
}

func ReadRootNet_remoteRm_Results(msg *capnp.Message) (Net_remoteRm_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteRm_Results{root.Struct()}, err
}

func (s Net_remoteRm_Results) String() string {
	str, _ := text.Marshal(0xdb78f249dcc7b9f1, s.Struct)
	return str
}

// Net_remoteRm_Results_List is a list of Net_remoteRm_Results.
type Net_remoteRm_Results_List struct{ capnp.List }

// NewNet_remoteRm_Results creates a new list of Net_remoteRm_Results.
func NewNet_remoteRm_Results_List(s *capnp.Segment, sz int32) (Net_remoteRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteRm_Results_List{l}, err
}

func (s Net_remoteRm_Results_List) At(i int) Net_remoteRm_Results {
	return Net_remoteRm_Results{s.List.Struct(i)}
}

func (s Net_remoteRm_Results_List) Set(i int, v Net_remoteRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteRm_Results_List) String() string {
	str, _ := text.MarshalList(0xdb78f249dcc7b9f1, s.List)
	return str
}

// Net_remoteRm_Results_Promise is a wrapper for a Net_remoteRm_Results promised by a client call.
type Net_remoteRm_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteRm_Results_Promise) Struct() (Net_remoteRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteRm_Results{s}, err
}

type Net_remoteLs_Params struct{ capnp.Struct }

// Net_remoteLs_Params_TypeID is the unique identifier for the type Net_remoteLs_Params.
const Net_remoteLs_Params_TypeID = 0xc18496cf650e6886

func NewNet_remoteLs_Params(s *capnp.Segment) (Net_remoteLs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteLs_Params{st}, err
}

func NewRootNet_remoteLs_Params(s *capnp.Segment) (Net_remoteLs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteLs_Params{st}, err
}

func ReadRootNet_remoteLs_Params(msg *capnp.Message) (Net_remoteLs_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteLs_Params{root.Struct()}, err
}

func (s Net_remoteLs_Params) String() string {
	str, _ := text.Marshal(0xc18496cf650e6886, s.Struct)
	return str
}

// Net_remoteLs_Params_List is a list of Net_remoteLs_Params.
type Net_remoteLs_Params_List struct{ capnp.List }

// NewNet_remoteLs_Params creates a new list of Net_remoteLs_Params.
func NewNet_remoteLs_Params_List(s *capnp.Segment, sz int32) (Net_remoteLs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteLs_Params_List{l}, err
}

func (s Net_remoteLs_Params_List) At(i int) Net_remoteLs_Params {
	return Net_remoteLs_Params{s.List.Struct(i)}
}

func (s Net_remoteLs_Params_List) Set(i int, v Net_remoteLs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteLs_Params_List) String() string {
	str, _ := text.MarshalList(0xc18496cf650e6886, s.List)
	return str
}

// Net_remoteLs_Params_Promise is a wrapper for a Net_remoteLs_Params promised by a client call.
type Net_remoteLs_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteLs_Params_Promise) Struct() (Net_remoteLs_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteLs_Params{s}, err
}

type Net_remoteLs_Results struct{ capnp.Struct }

// Net_remoteLs_Results_TypeID is the unique identifier for the type Net_remoteLs_Results.
const Net_remoteLs_Results_TypeID = 0xb2255c049c7bc42f

func NewNet_remoteLs_Results(s *capnp.Segment) (Net_remoteLs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteLs_Results{st}, err
}

func NewRootNet_remoteLs_Results(s *capnp.Segment) (Net_remoteLs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteLs_Results{st}, err
}

func ReadRootNet_remoteLs_Results(msg *capnp.Message) (Net_remoteLs_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteLs_Results{root.Struct()}, err
}

func (s Net_remoteLs_Results) String() string {
	str, _ := text.Marshal(0xb2255c049c7bc42f, s.Struct)
	return str
}

func (s Net_remoteLs_Results) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Net_remoteLs_Results) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteLs_Results) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Net_remoteLs_Results) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteLs_Results_List is a list of Net_remoteLs_Results.
type Net_remoteLs_Results_List struct{ capnp.List }

// NewNet_remoteLs_Results creates a new list of Net_remoteLs_Results.
func NewNet_remoteLs_Results_List(s *capnp.Segment, sz int32) (Net_remoteLs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteLs_Results_List{l}, err
}

func (s Net_remoteLs_Results_List) At(i int) Net_remoteLs_Results {
	return Net_remoteLs_Results{s.List.Struct(i)}
}

func (s Net_remoteLs_Results_List) Set(i int, v Net_remoteLs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteLs_Results_List) String() string {
	str, _ := text.MarshalList(0xb2255c049c7bc42f, s.List)
	return str
}

// Net_remoteLs_Results_Promise is a wrapper for a Net_remoteLs_Results promised by a client call.
type Net_remoteLs_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteLs_Results_Promise) Struct() (Net_remoteLs_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteLs_Results{s}, err
}

type Net_remoteUpdate_Params struct{ capnp.Struct }

// Net_remoteUpdate_Params_TypeID is the unique identifier for the type Net_remoteUpdate_Params.
const Net_remoteUpdate_Params_TypeID = 0xc089763bca3e3f44

func NewNet_remoteUpdate_Params(s *capnp.Segment) (Net_remoteUpdate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteUpdate_Params{st}, err
}

func NewRootNet_remoteUpdate_Params(s *capnp.Segment) (Net_remoteUpdate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteUpdate_Params{st}, err
}

func ReadRootNet_remoteUpdate_Params(msg *capnp.Message) (Net_remoteUpdate_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteUpdate_Params{root.Struct()}, err
}

func (s Net_remoteUpdate_Params) String() string {
	str, _ := text.Marshal(0xc089763bca3e3f44, s.Struct)
	return str
}

func (s Net_remoteUpdate_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteUpdate_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteUpdate_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteUpdate_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteUpdate_Params_List is a list of Net_remoteUpdate_Params.
type Net_remoteUpdate_Params_List struct{ capnp.List }

// NewNet_remoteUpdate_Params creates a new list of Net_remoteUpdate_Params.
func NewNet_remoteUpdate_Params_List(s *capnp.Segment, sz int32) (Net_remoteUpdate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteUpdate_Params_List{l}, err
}

func (s Net_remoteUpdate_Params_List) At(i int) Net_remoteUpdate_Params {
	return Net_remoteUpdate_Params{s.List.Struct(i)}
}

func (s Net_remoteUpdate_Params_List) Set(i int, v Net_remoteUpdate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteUpdate_Params_List) String() string {
	str, _ := text.MarshalList(0xc089763bca3e3f44, s.List)
	return str
}

// Net_remoteUpdate_Params_Promise is a wrapper for a Net_remoteUpdate_Params promised by a client call.
type Net_remoteUpdate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteUpdate_Params_Promise) Struct() (Net_remoteUpdate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteUpdate_Params{s}, err
}

func (p Net_remoteUpdate_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_remoteUpdate_Results struct{ capnp.Struct }

// Net_remoteUpdate_Results_TypeID is the unique identifier for the type Net_remoteUpdate_Results.
const Net_remoteUpdate_Results_TypeID = 0x99b03ceb2dad70db

func NewNet_remoteUpdate_Results(s *capnp.Segment) (Net_remoteUpdate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteUpdate_Results{st}, err
}

func NewRootNet_remoteUpdate_Results(s *capnp.Segment) (Net_remoteUpdate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteUpdate_Results{st}, err
}

func ReadRootNet_remoteUpdate_Results(msg *capnp.Message) (Net_remoteUpdate_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteUpdate_Results{root.Struct()}, err
}

func (s Net_remoteUpdate_Results) String() string {
	str, _ := text.Marshal(0x99b03ceb2dad70db, s.Struct)
	return str
}

// Net_remoteUpdate_Results_List is a list of Net_remoteUpdate_Results.
type Net_remoteUpdate_Results_List struct{ capnp.List }

// NewNet_remoteUpdate_Results creates a new list of Net_remoteUpdate_Results.
func NewNet_remoteUpdate_Results_List(s *capnp.Segment, sz int32) (Net_remoteUpdate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteUpdate_Results_List{l}, err
}

func (s Net_remoteUpdate_Results_List) At(i int) Net_remoteUpdate_Results {
	return Net_remoteUpdate_Results{s.List.Struct(i)}
}

func (s Net_remoteUpdate_Results_List) Set(i int, v Net_remoteUpdate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteUpdate_Results_List) String() string {
	str, _ := text.MarshalList(0x99b03ceb2dad70db, s.List)
	return str
}

// Net_remoteUpdate_Results_Promise is a wrapper for a Net_remoteUpdate_Results promised by a client call.
type Net_remoteUpdate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteUpdate_Results_Promise) Struct() (Net_remoteUpdate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteUpdate_Results{s}, err
}

type Net_remoteSave_Params struct{ capnp.Struct }

// Net_remoteSave_Params_TypeID is the unique identifier for the type Net_remoteSave_Params.
const Net_remoteSave_Params_TypeID = 0xb5dc333528e5f7ae

func NewNet_remoteSave_Params(s *capnp.Segment) (Net_remoteSave_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteSave_Params{st}, err
}

func NewRootNet_remoteSave_Params(s *capnp.Segment) (Net_remoteSave_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteSave_Params{st}, err
}

func ReadRootNet_remoteSave_Params(msg *capnp.Message) (Net_remoteSave_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteSave_Params{root.Struct()}, err
}

func (s Net_remoteSave_Params) String() string {
	str, _ := text.Marshal(0xb5dc333528e5f7ae, s.Struct)
	return str
}

func (s Net_remoteSave_Params) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Net_remoteSave_Params) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteSave_Params) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Net_remoteSave_Params) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteSave_Params_List is a list of Net_remoteSave_Params.
type Net_remoteSave_Params_List struct{ capnp.List }

// NewNet_remoteSave_Params creates a new list of Net_remoteSave_Params.
func NewNet_remoteSave_Params_List(s *capnp.Segment, sz int32) (Net_remoteSave_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteSave_Params_List{l}, err
}

func (s Net_remoteSave_Params_List) At(i int) Net_remoteSave_Params {
	return Net_remoteSave_Params{s.List.Struct(i)}
}

func (s Net_remoteSave_Params_List) Set(i int, v Net_remoteSave_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteSave_Params_List) String() string {
	str, _ := text.MarshalList(0xb5dc333528e5f7ae, s.List)
	return str
}

// Net_remoteSave_Params_Promise is a wrapper for a Net_remoteSave_Params promised by a client call.
type Net_remoteSave_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteSave_Params_Promise) Struct() (Net_remoteSave_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteSave_Params{s}, err
}

type Net_remoteSave_Results struct{ capnp.Struct }

// Net_remoteSave_Results_TypeID is the unique identifier for the type Net_remoteSave_Results.
const Net_remoteSave_Results_TypeID = 0xe83f954c9635f05a

func NewNet_remoteSave_Results(s *capnp.Segment) (Net_remoteSave_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteSave_Results{st}, err
}

func NewRootNet_remoteSave_Results(s *capnp.Segment) (Net_remoteSave_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteSave_Results{st}, err
}

func ReadRootNet_remoteSave_Results(msg *capnp.Message) (Net_remoteSave_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteSave_Results{root.Struct()}, err
}

func (s Net_remoteSave_Results) String() string {
	str, _ := text.Marshal(0xe83f954c9635f05a, s.Struct)
	return str
}

// Net_remoteSave_Results_List is a list of Net_remoteSave_Results.
type Net_remoteSave_Results_List struct{ capnp.List }

// NewNet_remoteSave_Results creates a new list of Net_remoteSave_Results.
func NewNet_remoteSave_Results_List(s *capnp.Segment, sz int32) (Net_remoteSave_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteSave_Results_List{l}, err
}

func (s Net_remoteSave_Results_List) At(i int) Net_remoteSave_Results {
	return Net_remoteSave_Results{s.List.Struct(i)}
}

func (s Net_remoteSave_Results_List) Set(i int, v Net_remoteSave_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteSave_Results_List) String() string {
	str, _ := text.MarshalList(0xe83f954c9635f05a, s.List)
	return str
}

// Net_remoteSave_Results_Promise is a wrapper for a Net_remoteSave_Results promised by a client call.
type Net_remoteSave_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteSave_Results_Promise) Struct() (Net_remoteSave_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteSave_Results{s}, err
}

type Net_remotePing_Params struct{ capnp.Struct }

// Net_remotePing_Params_TypeID is the unique identifier for the type Net_remotePing_Params.
const Net_remotePing_Params_TypeID = 0xbee5e0529f9017ff

func NewNet_remotePing_Params(s *capnp.Segment) (Net_remotePing_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remotePing_Params{st}, err
}

func NewRootNet_remotePing_Params(s *capnp.Segment) (Net_remotePing_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remotePing_Params{st}, err
}

func ReadRootNet_remotePing_Params(msg *capnp.Message) (Net_remotePing_Params, error) {
	root, err := msg.RootPtr()
	return Net_remotePing_Params{root.Struct()}, err
}

func (s Net_remotePing_Params) String() string {
	str, _ := text.Marshal(0xbee5e0529f9017ff, s.Struct)
	return str
}

func (s Net_remotePing_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remotePing_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remotePing_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remotePing_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remotePing_Params_List is a list of Net_remotePing_Params.
type Net_remotePing_Params_List struct{ capnp.List }

// NewNet_remotePing_Params creates a new list of Net_remotePing_Params.
func NewNet_remotePing_Params_List(s *capnp.Segment, sz int32) (Net_remotePing_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remotePing_Params_List{l}, err
}

func (s Net_remotePing_Params_List) At(i int) Net_remotePing_Params {
	return Net_remotePing_Params{s.List.Struct(i)}
}

func (s Net_remotePing_Params_List) Set(i int, v Net_remotePing_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remotePing_Params_List) String() string {
	str, _ := text.MarshalList(0xbee5e0529f9017ff, s.List)
	return str
}

// Net_remotePing_Params_Promise is a wrapper for a Net_remotePing_Params promised by a client call.
type Net_remotePing_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remotePing_Params_Promise) Struct() (Net_remotePing_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remotePing_Params{s}, err
}

type Net_remotePing_Results struct{ capnp.Struct }

// Net_remotePing_Results_TypeID is the unique identifier for the type Net_remotePing_Results.
const Net_remotePing_Results_TypeID = 0xad37ff6270c35769

func NewNet_remotePing_Results(s *capnp.Segment) (Net_remotePing_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_remotePing_Results{st}, err
}

func NewRootNet_remotePing_Results(s *capnp.Segment) (Net_remotePing_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_remotePing_Results{st}, err
}

func ReadRootNet_remotePing_Results(msg *capnp.Message) (Net_remotePing_Results, error) {
	root, err := msg.RootPtr()
	return Net_remotePing_Results{root.Struct()}, err
}

func (s Net_remotePing_Results) String() string {
	str, _ := text.Marshal(0xad37ff6270c35769, s.Struct)
	return str
}

func (s Net_remotePing_Results) Roundtrip() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Net_remotePing_Results) SetRoundtrip(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Net_remotePing_Results_List is a list of Net_remotePing_Results.
type Net_remotePing_Results_List struct{ capnp.List }

// NewNet_remotePing_Results creates a new list of Net_remotePing_Results.
func NewNet_remotePing_Results_List(s *capnp.Segment, sz int32) (Net_remotePing_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_remotePing_Results_List{l}, err
}

func (s Net_remotePing_Results_List) At(i int) Net_remotePing_Results {
	return Net_remotePing_Results{s.List.Struct(i)}
}

func (s Net_remotePing_Results_List) Set(i int, v Net_remotePing_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remotePing_Results_List) String() string {
	str, _ := text.MarshalList(0xad37ff6270c35769, s.List)
	return str
}

// Net_remotePing_Results_Promise is a wrapper for a Net_remotePing_Results promised by a client call.
type Net_remotePing_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remotePing_Results_Promise) Struct() (Net_remotePing_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remotePing_Results{s}, err
}

type Net_remoteClear_Params struct{ capnp.Struct }

// Net_remoteClear_Params_TypeID is the unique identifier for the type Net_remoteClear_Params.
const Net_remoteClear_Params_TypeID = 0xd35d6ae0fdbd9bc5

func NewNet_remoteClear_Params(s *capnp.Segment) (Net_remoteClear_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Params{st}, err
}

func NewRootNet_remoteClear_Params(s *capnp.Segment) (Net_remoteClear_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Params{st}, err
}

func ReadRootNet_remoteClear_Params(msg *capnp.Message) (Net_remoteClear_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteClear_Params{root.Struct()}, err
}

func (s Net_remoteClear_Params) String() string {
	str, _ := text.Marshal(0xd35d6ae0fdbd9bc5, s.Struct)
	return str
}

// Net_remoteClear_Params_List is a list of Net_remoteClear_Params.
type Net_remoteClear_Params_List struct{ capnp.List }

// NewNet_remoteClear_Params creates a new list of Net_remoteClear_Params.
func NewNet_remoteClear_Params_List(s *capnp.Segment, sz int32) (Net_remoteClear_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteClear_Params_List{l}, err
}

func (s Net_remoteClear_Params_List) At(i int) Net_remoteClear_Params {
	return Net_remoteClear_Params{s.List.Struct(i)}
}

func (s Net_remoteClear_Params_List) Set(i int, v Net_remoteClear_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteClear_Params_List) String() string {
	str, _ := text.MarshalList(0xd35d6ae0fdbd9bc5, s.List)
	return str
}

// Net_remoteClear_Params_Promise is a wrapper for a Net_remoteClear_Params promised by a client call.
type Net_remoteClear_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteClear_Params_Promise) Struct() (Net_remoteClear_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteClear_Params{s}, err
}

type Net_remoteClear_Results struct{ capnp.Struct }

// Net_remoteClear_Results_TypeID is the unique identifier for the type Net_remoteClear_Results.
const Net_remoteClear_Results_TypeID = 0xdc0aec8d179d4ec9

func NewNet_remoteClear_Results(s *capnp.Segment) (Net_remoteClear_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Results{st}, err
}

func NewRootNet_remoteClear_Results(s *capnp.Segment) (Net_remoteClear_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Results{st}, err
}

func ReadRootNet_remoteClear_Results(msg *capnp.Message) (Net_remoteClear_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteClear_Results{root.Struct()}, err
}

func (s Net_remoteClear_Results) String() string {
	str, _ := text.Marshal(0xdc0aec8d179d4ec9, s.Struct)
	return str
}

// Net_remoteClear_Results_List is a list of Net_remoteClear_Results.
type Net_remoteClear_Results_List struct{ capnp.List }

// NewNet_remoteClear_Results creates a new list of Net_remoteClear_Results.
func NewNet_remoteClear_Results_List(s *capnp.Segment, sz int32) (Net_remoteClear_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteClear_Results_List{l}, err
}

func (s Net_remoteClear_Results_List) At(i int) Net_remoteClear_Results {
	return Net_remoteClear_Results{s.List.Struct(i)}
}

func (s Net_remoteClear_Results_List) Set(i int, v Net_remoteClear_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteClear_Results_List) String() string {
	str, _ := text.MarshalList(0xdc0aec8d179d4ec9, s.List)
	return str
}

// Net_remoteClear_Results_Promise is a wrapper for a Net_remoteClear_Results promised by a client call.
type Net_remoteClear_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteClear_Results_Promise) Struct() (Net_remoteClear_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteClear_Results{s}, err
}

type Net_netLocate_Params struct{ capnp.Struct }

// Net_netLocate_Params_TypeID is the unique identifier for the type Net_netLocate_Params.
const Net_netLocate_Params_TypeID = 0xd701f5ae7e7560e9

func NewNet_netLocate_Params(s *capnp.Segment) (Net_netLocate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Net_netLocate_Params{st}, err
}

func NewRootNet_netLocate_Params(s *capnp.Segment) (Net_netLocate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Net_netLocate_Params{st}, err
}

func ReadRootNet_netLocate_Params(msg *capnp.Message) (Net_netLocate_Params, error) {
	root, err := msg.RootPtr()
	return Net_netLocate_Params{root.Struct()}, err
}

func (s Net_netLocate_Params) String() string {
	str, _ := text.Marshal(0xd701f5ae7e7560e9, s.Struct)
	return str
}

func (s Net_netLocate_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_netLocate_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_netLocate_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_netLocate_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Net_netLocate_Params) TimeoutSec() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Net_netLocate_Params) SetTimeoutSec(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Net_netLocate_Params) LocateMask() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Net_netLocate_Params) HasLocateMask() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Net_netLocate_Params) LocateMaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Net_netLocate_Params) SetLocateMask(v string) error {
	return s.Struct.SetText(1, v)
}

// Net_netLocate_Params_List is a list of Net_netLocate_Params.
type Net_netLocate_Params_List struct{ capnp.List }

// NewNet_netLocate_Params creates a new list of Net_netLocate_Params.
func NewNet_netLocate_Params_List(s *capnp.Segment, sz int32) (Net_netLocate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Net_netLocate_Params_List{l}, err
}

func (s Net_netLocate_Params_List) At(i int) Net_netLocate_Params {
	return Net_netLocate_Params{s.List.Struct(i)}
}

func (s Net_netLocate_Params_List) Set(i int, v Net_netLocate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocate_Params_List) String() string {
	str, _ := text.MarshalList(0xd701f5ae7e7560e9, s.List)
	return str
}

// Net_netLocate_Params_Promise is a wrapper for a Net_netLocate_Params promised by a client call.
type Net_netLocate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_netLocate_Params_Promise) Struct() (Net_netLocate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocate_Params{s}, err
}

type Net_netLocate_Results struct{ capnp.Struct }

// Net_netLocate_Results_TypeID is the unique identifier for the type Net_netLocate_Results.
const Net_netLocate_Results_TypeID = 0xd2117353ea065c72

func NewNet_netLocate_Results(s *capnp.Segment) (Net_netLocate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocate_Results{st}, err
}

func NewRootNet_netLocate_Results(s *capnp.Segment) (Net_netLocate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocate_Results{st}, err
}

func ReadRootNet_netLocate_Results(msg *capnp.Message) (Net_netLocate_Results, error) {
	root, err := msg.RootPtr()
	return Net_netLocate_Results{root.Struct()}, err
}

func (s Net_netLocate_Results) String() string {
	str, _ := text.Marshal(0xd2117353ea065c72, s.Struct)
	return str
}

func (s Net_netLocate_Results) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Net_netLocate_Results) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Net_netLocate_Results_List is a list of Net_netLocate_Results.
type Net_netLocate_Results_List struct{ capnp.List }

// NewNet_netLocate_Results creates a new list of Net_netLocate_Results.
func NewNet_netLocate_Results_List(s *capnp.Segment, sz int32) (Net_netLocate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_netLocate_Results_List{l}, err
}

func (s Net_netLocate_Results_List) At(i int) Net_netLocate_Results {
	return Net_netLocate_Results{s.List.Struct(i)}
}

func (s Net_netLocate_Results_List) Set(i int, v Net_netLocate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocate_Results_List) String() string {
	str, _ := text.MarshalList(0xd2117353ea065c72, s.List)
	return str
}

// Net_netLocate_Results_Promise is a wrapper for a Net_netLocate_Results promised by a client call.
type Net_netLocate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_netLocate_Results_Promise) Struct() (Net_netLocate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocate_Results{s}, err
}

type Net_netLocateNext_Params struct{ capnp.Struct }

// Net_netLocateNext_Params_TypeID is the unique identifier for the type Net_netLocateNext_Params.
const Net_netLocateNext_Params_TypeID = 0xc338177a5379031a

func NewNet_netLocateNext_Params(s *capnp.Segment) (Net_netLocateNext_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocateNext_Params{st}, err
}

func NewRootNet_netLocateNext_Params(s *capnp.Segment) (Net_netLocateNext_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocateNext_Params{st}, err
}

func ReadRootNet_netLocateNext_Params(msg *capnp.Message) (Net_netLocateNext_Params, error) {
	root, err := msg.RootPtr()
	return Net_netLocateNext_Params{root.Struct()}, err
}

func (s Net_netLocateNext_Params) String() string {
	str, _ := text.Marshal(0xc338177a5379031a, s.Struct)
	return str
}

func (s Net_netLocateNext_Params) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Net_netLocateNext_Params) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Net_netLocateNext_Params_List is a list of Net_netLocateNext_Params.
type Net_netLocateNext_Params_List struct{ capnp.List }

// NewNet_netLocateNext_Params creates a new list of Net_netLocateNext_Params.
func NewNet_netLocateNext_Params_List(s *capnp.Segment, sz int32) (Net_netLocateNext_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_netLocateNext_Params_List{l}, err
}

func (s Net_netLocateNext_Params_List) At(i int) Net_netLocateNext_Params {
	return Net_netLocateNext_Params{s.List.Struct(i)}
}

func (s Net_netLocateNext_Params_List) Set(i int, v Net_netLocateNext_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocateNext_Params_List) String() string {
	str, _ := text.MarshalList(0xc338177a5379031a, s.List)
	return str
}

// Net_netLocateNext_Params_Promise is a wrapper for a Net_netLocateNext_Params promised by a client call.
type Net_netLocateNext_Params_Promise struct{ *capnp.Pipeline }

func (p Net_netLocateNext_Params_Promise) Struct() (Net_netLocateNext_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocateNext_Params{s}, err
}

type Net_netLocateNext_Results struct{ capnp.Struct }

// Net_netLocateNext_Results_TypeID is the unique identifier for the type Net_netLocateNext_Results.
const Net_netLocateNext_Results_TypeID = 0x9a291d6964350a5b

func NewNet_netLocateNext_Results(s *capnp.Segment) (Net_netLocateNext_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_netLocateNext_Results{st}, err
}

func NewRootNet_netLocateNext_Results(s *capnp.Segment) (Net_netLocateNext_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_netLocateNext_Results{st}, err
}

func ReadRootNet_netLocateNext_Results(msg *capnp.Message) (Net_netLocateNext_Results, error) {
	root, err := msg.RootPtr()
	return Net_netLocateNext_Results{root.Struct()}, err
}

func (s Net_netLocateNext_Results) String() string {
	str, _ := text.Marshal(0x9a291d6964350a5b, s.Struct)
	return str
}

func (s Net_netLocateNext_Results) Result() (LocateResult, error) {
	p, err := s.Struct.Ptr(0)
	return LocateResult{Struct: p.Struct()}, err
}

func (s Net_netLocateNext_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_netLocateNext_Results) SetResult(v LocateResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated LocateResult struct, preferring placement in s's segment.
func (s Net_netLocateNext_Results) NewResult() (LocateResult, error) {
	ss, err := NewLocateResult(s.Struct.Segment())
	if err != nil {
		return LocateResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_netLocateNext_Results_List is a list of Net_netLocateNext_Results.
type Net_netLocateNext_Results_List struct{ capnp.List }

// NewNet_netLocateNext_Results creates a new list of Net_netLocateNext_Results.
func NewNet_netLocateNext_Results_List(s *capnp.Segment, sz int32) (Net_netLocateNext_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_netLocateNext_Results_List{l}, err
}

func (s Net_netLocateNext_Results_List) At(i int) Net_netLocateNext_Results {
	return Net_netLocateNext_Results{s.List.Struct(i)}
}

func (s Net_netLocateNext_Results_List) Set(i int, v Net_netLocateNext_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocateNext_Results_List) String() string {
	str, _ := text.MarshalList(0x9a291d6964350a5b, s.List)
	return str
}

// Net_netLocateNext_Results_Promise is a wrapper for a Net_netLocateNext_Results promised by a client call.
type Net_netLocateNext_Results_Promise struct{ *capnp.Pipeline }

func (p Net_netLocateNext_Results_Promise) Struct() (Net_netLocateNext_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocateNext_Results{s}, err
}

func (p Net_netLocateNext_Results_Promise) Result() LocateResult_Promise {
	return LocateResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_whoami_Params struct{ capnp.Struct }

// Net_whoami_Params_TypeID is the unique identifier for the type Net_whoami_Params.
const Net_whoami_Params_TypeID = 0x86541181da6400f7

func NewNet_whoami_Params(s *capnp.Segment) (Net_whoami_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_whoami_Params{st}, err
}

func NewRootNet_whoami_Params(s *capnp.Segment) (Net_whoami_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_whoami_Params{st}, err
}

func ReadRootNet_whoami_Params(msg *capnp.Message) (Net_whoami_Params, error) {
	root, err := msg.RootPtr()
	return Net_whoami_Params{root.Struct()}, err
}

func (s Net_whoami_Params) String() string {
	str, _ := text.Marshal(0x86541181da6400f7, s.Struct)
	return str
}

// Net_whoami_Params_List is a list of Net_whoami_Params.
type Net_whoami_Params_List struct{ capnp.List }

// NewNet_whoami_Params creates a new list of Net_whoami_Params.
func NewNet_whoami_Params_List(s *capnp.Segment, sz int32) (Net_whoami_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_whoami_Params_List{l}, err
}

func (s Net_whoami_Params_List) At(i int) Net_whoami_Params {
	return Net_whoami_Params{s.List.Struct(i)}
}

func (s Net_whoami_Params_List) Set(i int, v Net_whoami_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_whoami_Params_List) String() string {
	str, _ := text.MarshalList(0x86541181da6400f7, s.List)
	return str
}

// Net_whoami_Params_Promise is a wrapper for a Net_whoami_Params promised by a client call.
type Net_whoami_Params_Promise struct{ *capnp.Pipeline }

func (p Net_whoami_Params_Promise) Struct() (Net_whoami_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_whoami_Params{s}, err
}

type Net_whoami_Results struct{ capnp.Struct }

// Net_whoami_Results_TypeID is the unique identifier for the type Net_whoami_Results.
const Net_whoami_Results_TypeID = 0xd0071dd673841599

func NewNet_whoami_Results(s *capnp.Segment) (Net_whoami_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_whoami_Results{st}, err
}

func NewRootNet_whoami_Results(s *capnp.Segment) (Net_whoami_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_whoami_Results{st}, err
}

func ReadRootNet_whoami_Results(msg *capnp.Message) (Net_whoami_Results, error) {
	root, err := msg.RootPtr()
	return Net_whoami_Results{root.Struct()}, err
}

func (s Net_whoami_Results) String() string {
	str, _ := text.Marshal(0xd0071dd673841599, s.Struct)
	return str
}

func (s Net_whoami_Results) Whoami() (Identity, error) {
	p, err := s.Struct.Ptr(0)
	return Identity{Struct: p.Struct()}, err
}

func (s Net_whoami_Results) HasWhoami() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_whoami_Results) SetWhoami(v Identity) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWhoami sets the whoami field to a newly
// allocated Identity struct, preferring placement in s's segment.
func (s Net_whoami_Results) NewWhoami() (Identity, error) {
	ss, err := NewIdentity(s.Struct.Segment())
	if err != nil {
		return Identity{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_whoami_Results_List is a list of Net_whoami_Results.
type Net_whoami_Results_List struct{ capnp.List }

// NewNet_whoami_Results creates a new list of Net_whoami_Results.
func NewNet_whoami_Results_List(s *capnp.Segment, sz int32) (Net_whoami_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_whoami_Results_List{l}, err
}

func (s Net_whoami_Results_List) At(i int) Net_whoami_Results {
	return Net_whoami_Results{s.List.Struct(i)}
}

func (s Net_whoami_Results_List) Set(i int, v Net_whoami_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_whoami_Results_List) String() string {
	str, _ := text.MarshalList(0xd0071dd673841599, s.List)
	return str
}

// Net_whoami_Results_Promise is a wrapper for a Net_whoami_Results promised by a client call.
type Net_whoami_Results_Promise struct{ *capnp.Pipeline }

func (p Net_whoami_Results_Promise) Struct() (Net_whoami_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_whoami_Results{s}, err
}

func (p Net_whoami_Results_Promise) Whoami() Identity_Promise {
	return Identity_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_connect_Params struct{ capnp.Struct }

// Net_connect_Params_TypeID is the unique identifier for the type Net_connect_Params.
const Net_connect_Params_TypeID = 0xaf631f5cddda9aa3

func NewNet_connect_Params(s *capnp.Segment) (Net_connect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Params{st}, err
}

func NewRootNet_connect_Params(s *capnp.Segment) (Net_connect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Params{st}, err
}

func ReadRootNet_connect_Params(msg *capnp.Message) (Net_connect_Params, error) {
	root, err := msg.RootPtr()
	return Net_connect_Params{root.Struct()}, err
}

func (s Net_connect_Params) String() string {
	str, _ := text.Marshal(0xaf631f5cddda9aa3, s.Struct)
	return str
}

// Net_connect_Params_List is a list of Net_connect_Params.
type Net_connect_Params_List struct{ capnp.List }

// NewNet_connect_Params creates a new list of Net_connect_Params.
func NewNet_connect_Params_List(s *capnp.Segment, sz int32) (Net_connect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_connect_Params_List{l}, err
}

func (s Net_connect_Params_List) At(i int) Net_connect_Params {
	return Net_connect_Params{s.List.Struct(i)}
}

func (s Net_connect_Params_List) Set(i int, v Net_connect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_connect_Params_List) String() string {
	str, _ := text.MarshalList(0xaf631f5cddda9aa3, s.List)
	return str
}

// Net_connect_Params_Promise is a wrapper for a Net_connect_Params promised by a client call.
type Net_connect_Params_Promise struct{ *capnp.Pipeline }

func (p Net_connect_Params_Promise) Struct() (Net_connect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_connect_Params{s}, err
}

type Net_connect_Results struct{ capnp.Struct }

// Net_connect_Results_TypeID is the unique identifier for the type Net_connect_Results.
const Net_connect_Results_TypeID = 0xcb6e3e65f2dbc914

func NewNet_connect_Results(s *capnp.Segment) (Net_connect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Results{st}, err
}

func NewRootNet_connect_Results(s *capnp.Segment) (Net_connect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Results{st}, err
}

func ReadRootNet_connect_Results(msg *capnp.Message) (Net_connect_Results, error) {
	root, err := msg.RootPtr()
	return Net_connect_Results{root.Struct()}, err
}

func (s Net_connect_Results) String() string {
	str, _ := text.Marshal(0xcb6e3e65f2dbc914, s.Struct)
	return str
}

// Net_connect_Results_List is a list of Net_connect_Results.
type Net_connect_Results_List struct{ capnp.List }

// NewNet_connect_Results creates a new list of Net_connect_Results.
func NewNet_connect_Results_List(s *capnp.Segment, sz int32) (Net_connect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_connect_Results_List{l}, err
}

func (s Net_connect_Results_List) At(i int) Net_connect_Results {
	return Net_connect_Results{s.List.Struct(i)}
}

func (s Net_connect_Results_List) Set(i int, v Net_connect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_connect_Results_List) String() string {
	str, _ := text.MarshalList(0xcb6e3e65f2dbc914, s.List)
	return str
}

// Net_connect_Results_Promise is a wrapper for a Net_connect_Results promised by a client call.
type Net_connect_Results_Promise struct{ *capnp.Pipeline }

func (p Net_connect_Results_Promise) Struct() (Net_connect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_connect_Results{s}, err
}

type Net_disconnect_Params struct{ capnp.Struct }

// Net_disconnect_Params_TypeID is the unique identifier for the type Net_disconnect_Params.
const Net_disconnect_Params_TypeID = 0xe19b7cffa7304650

func NewNet_disconnect_Params(s *capnp.Segment) (Net_disconnect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Params{st}, err
}

func NewRootNet_disconnect_Params(s *capnp.Segment) (Net_disconnect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Params{st}, err
}

func ReadRootNet_disconnect_Params(msg *capnp.Message) (Net_disconnect_Params, error) {
	root, err := msg.RootPtr()
	return Net_disconnect_Params{root.Struct()}, err
}

func (s Net_disconnect_Params) String() string {
	str, _ := text.Marshal(0xe19b7cffa7304650, s.Struct)
	return str
}

// Net_disconnect_Params_List is a list of Net_disconnect_Params.
type Net_disconnect_Params_List struct{ capnp.List }

// NewNet_disconnect_Params creates a new list of Net_disconnect_Params.
func NewNet_disconnect_Params_List(s *capnp.Segment, sz int32) (Net_disconnect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_disconnect_Params_List{l}, err
}

func (s Net_disconnect_Params_List) At(i int) Net_disconnect_Params {
	return Net_disconnect_Params{s.List.Struct(i)}
}

func (s Net_disconnect_Params_List) Set(i int, v Net_disconnect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_disconnect_Params_List) String() string {
	str, _ := text.MarshalList(0xe19b7cffa7304650, s.List)
	return str
}

// Net_disconnect_Params_Promise is a wrapper for a Net_disconnect_Params promised by a client call.
type Net_disconnect_Params_Promise struct{ *capnp.Pipeline }

func (p Net_disconnect_Params_Promise) Struct() (Net_disconnect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_disconnect_Params{s}, err
}

type Net_disconnect_Results struct{ capnp.Struct }

// Net_disconnect_Results_TypeID is the unique identifier for the type Net_disconnect_Results.
const Net_disconnect_Results_TypeID = 0xb9095b6d17298884

func NewNet_disconnect_Results(s *capnp.Segment) (Net_disconnect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Results{st}, err
}

func NewRootNet_disconnect_Results(s *capnp.Segment) (Net_disconnect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Results{st}, err
}

func ReadRootNet_disconnect_Results(msg *capnp.Message) (Net_disconnect_Results, error) {
	root, err := msg.RootPtr()
	return Net_disconnect_Results{root.Struct()}, err
}

func (s Net_disconnect_Results) String() string {
	str, _ := text.Marshal(0xb9095b6d17298884, s.Struct)
	return str
}

// Net_disconnect_Results_List is a list of Net_disconnect_Results.
type Net_disconnect_Results_List struct{ capnp.List }

// NewNet_disconnect_Results creates a new list of Net_disconnect_Results.
func NewNet_disconnect_Results_List(s *capnp.Segment, sz int32) (Net_disconnect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_disconnect_Results_List{l}, err
}

func (s Net_disconnect_Results_List) At(i int) Net_disconnect_Results {
	return Net_disconnect_Results{s.List.Struct(i)}
}

func (s Net_disconnect_Results_List) Set(i int, v Net_disconnect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_disconnect_Results_List) String() string {
	str, _ := text.MarshalList(0xb9095b6d17298884, s.List)
	return str
}

// Net_disconnect_Results_Promise is a wrapper for a Net_disconnect_Results promised by a client call.
type Net_disconnect_Results_Promise struct{ *capnp.Pipeline }

func (p Net_disconnect_Results_Promise) Struct() (Net_disconnect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_disconnect_Results{s}, err
}

type Net_remoteOnlineList_Params struct{ capnp.Struct }

// Net_remoteOnlineList_Params_TypeID is the unique identifier for the type Net_remoteOnlineList_Params.
const Net_remoteOnlineList_Params_TypeID = 0xb13597d7a0d68f31

func NewNet_remoteOnlineList_Params(s *capnp.Segment) (Net_remoteOnlineList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteOnlineList_Params{st}, err
}

func NewRootNet_remoteOnlineList_Params(s *capnp.Segment) (Net_remoteOnlineList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteOnlineList_Params{st}, err
}

func ReadRootNet_remoteOnlineList_Params(msg *capnp.Message) (Net_remoteOnlineList_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteOnlineList_Params{root.Struct()}, err
}

func (s Net_remoteOnlineList_Params) String() string {
	str, _ := text.Marshal(0xb13597d7a0d68f31, s.Struct)
	return str
}

// Net_remoteOnlineList_Params_List is a list of Net_remoteOnlineList_Params.
type Net_remoteOnlineList_Params_List struct{ capnp.List }

// NewNet_remoteOnlineList_Params creates a new list of Net_remoteOnlineList_Params.
func NewNet_remoteOnlineList_Params_List(s *capnp.Segment, sz int32) (Net_remoteOnlineList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteOnlineList_Params_List{l}, err
}

func (s Net_remoteOnlineList_Params_List) At(i int) Net_remoteOnlineList_Params {
	return Net_remoteOnlineList_Params{s.List.Struct(i)}
}

func (s Net_remoteOnlineList_Params_List) Set(i int, v Net_remoteOnlineList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteOnlineList_Params_List) String() string {
	str, _ := text.MarshalList(0xb13597d7a0d68f31, s.List)
	return str
}

// Net_remoteOnlineList_Params_Promise is a wrapper for a Net_remoteOnlineList_Params promised by a client call.
type Net_remoteOnlineList_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteOnlineList_Params_Promise) Struct() (Net_remoteOnlineList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteOnlineList_Params{s}, err
}

type Net_remoteOnlineList_Results struct{ capnp.Struct }

// Net_remoteOnlineList_Results_TypeID is the unique identifier for the type Net_remoteOnlineList_Results.
const Net_remoteOnlineList_Results_TypeID = 0xb973694cb94aee47

func NewNet_remoteOnlineList_Results(s *capnp.Segment) (Net_remoteOnlineList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteOnlineList_Results{st}, err
}

func NewRootNet_remoteOnlineList_Results(s *capnp.Segment) (Net_remoteOnlineList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteOnlineList_Results{st}, err
}

func ReadRootNet_remoteOnlineList_Results(msg *capnp.Message) (Net_remoteOnlineList_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteOnlineList_Results{root.Struct()}, err
}

func (s Net_remoteOnlineList_Results) String() string {
	str, _ := text.Marshal(0xb973694cb94aee47, s.Struct)
	return str
}

func (s Net_remoteOnlineList_Results) Infos() (RemoteStatus_List, error) {
	p, err := s.Struct.Ptr(0)
	return RemoteStatus_List{List: p.List()}, err
}

func (s Net_remoteOnlineList_Results) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteOnlineList_Results) SetInfos(v RemoteStatus_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated RemoteStatus_List, preferring placement in s's segment.
func (s Net_remoteOnlineList_Results) NewInfos(n int32) (RemoteStatus_List, error) {
	l, err := NewRemoteStatus_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteStatus_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteOnlineList_Results_List is a list of Net_remoteOnlineList_Results.
type Net_remoteOnlineList_Results_List struct{ capnp.List }

// NewNet_remoteOnlineList_Results creates a new list of Net_remoteOnlineList_Results.
func NewNet_remoteOnlineList_Results_List(s *capnp.Segment, sz int32) (Net_remoteOnlineList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteOnlineList_Results_List{l}, err
}

func (s Net_remoteOnlineList_Results_List) At(i int) Net_remoteOnlineList_Results {
	return Net_remoteOnlineList_Results{s.List.Struct(i)}
}

func (s Net_remoteOnlineList_Results_List) Set(i int, v Net_remoteOnlineList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteOnlineList_Results_List) String() string {
	str, _ := text.MarshalList(0xb973694cb94aee47, s.List)
	return str
}

// Net_remoteOnlineList_Results_Promise is a wrapper for a Net_remoteOnlineList_Results promised by a client call.
type Net_remoteOnlineList_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteOnlineList_Results_Promise) Struct() (Net_remoteOnlineList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteOnlineList_Results{s}, err
}

type Net_remoteByName_Params struct{ capnp.Struct }

// Net_remoteByName_Params_TypeID is the unique identifier for the type Net_remoteByName_Params.
const Net_remoteByName_Params_TypeID = 0x91ac69870ceff408

func NewNet_remoteByName_Params(s *capnp.Segment) (Net_remoteByName_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Params{st}, err
}

func NewRootNet_remoteByName_Params(s *capnp.Segment) (Net_remoteByName_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Params{st}, err
}

func ReadRootNet_remoteByName_Params(msg *capnp.Message) (Net_remoteByName_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteByName_Params{root.Struct()}, err
}

func (s Net_remoteByName_Params) String() string {
	str, _ := text.Marshal(0x91ac69870ceff408, s.Struct)
	return str
}

func (s Net_remoteByName_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remoteByName_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteByName_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remoteByName_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remoteByName_Params_List is a list of Net_remoteByName_Params.
type Net_remoteByName_Params_List struct{ capnp.List }

// NewNet_remoteByName_Params creates a new list of Net_remoteByName_Params.
func NewNet_remoteByName_Params_List(s *capnp.Segment, sz int32) (Net_remoteByName_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteByName_Params_List{l}, err
}

func (s Net_remoteByName_Params_List) At(i int) Net_remoteByName_Params {
	return Net_remoteByName_Params{s.List.Struct(i)}
}

func (s Net_remoteByName_Params_List) Set(i int, v Net_remoteByName_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteByName_Params_List) String() string {
	str, _ := text.MarshalList(0x91ac69870ceff408, s.List)
	return str
}

// Net_remoteByName_Params_Promise is a wrapper for a Net_remoteByName_Params promised by a client call.
type Net_remoteByName_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteByName_Params_Promise) Struct() (Net_remoteByName_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteByName_Params{s}, err
}

type Net_remoteByName_Results struct{ capnp.Struct }

// Net_remoteByName_Results_TypeID is the unique identifier for the type Net_remoteByName_Results.
const Net_remoteByName_Results_TypeID = 0xac6cc5b649f638a8

func NewNet_remoteByName_Results(s *capnp.Segment) (Net_remoteByName_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Results{st}, err
}

func NewRootNet_remoteByName_Results(s *capnp.Segment) (Net_remoteByName_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Results{st}, err
}

func ReadRootNet_remoteByName_Results(msg *capnp.Message) (Net_remoteByName_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteByName_Results{root.Struct()}, err
}

func (s Net_remoteByName_Results) String() string {
	str, _ := text.Marshal(0xac6cc5b649f638a8, s.Struct)
	return str
}

func (s Net_remoteByName_Results) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteByName_Results) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteByName_Results) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteByName_Results) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteByName_Results_List is a list of Net_remoteByName_Results.
type Net_remoteByName_Results_List struct{ capnp.List }

// NewNet_remoteByName_Results creates a new list of Net_remoteByName_Results.
func NewNet_remoteByName_Results_List(s *capnp.Segment, sz int32) (Net_remoteByName_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteByName_Results_List{l}, err
}

func (s Net_remoteByName_Results_List) At(i int) Net_remoteByName_Results {
	return Net_remoteByName_Results{s.List.Struct(i)}
}

func (s Net_remoteByName_Results_List) Set(i int, v Net_remoteByName_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteByName_Results_List) String() string {
	str, _ := text.MarshalList(0xac6cc5b649f638a8, s.List)
	return str
}

// Net_remoteByName_Results_Promise is a wrapper for a Net_remoteByName_Results promised by a client call.
type Net_remoteByName_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteByName_Results_Promise) Struct() (Net_remoteByName_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteByName_Results{s}, err
}

func (p Net_remoteByName_Results_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type API struct{ Client capnp.Client }

// API_TypeID is the unique identifier for the type API.
const API_TypeID = 0xfc487818328b97ef

func (c API) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ListExplicitPins(ctx context.Context, params func(FS_listExplicitPins_Params) error, opts ...capnp.CallOption) FS_listExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_listExplicitPins_Params{Struct: s}) }
	}
	return FS_listExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ClearExplicitPins(ctx context.Context, params func(FS_clearExplicitPins_Params) error, opts ...capnp.CallOption) FS_clearExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_clearExplicitPins_Params{Struct: s}) }
	}
	return FS_clearExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) SetExplicitPins(ctx context.Context, params func(FS_setExplicitPins_Params) error, opts ...capnp.CallOption) FS_setExplicitPins_Results_Promise {
	if c.Client == nil {
		return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_setExplicitPins_Params{Struct: s}) }
	}
	return FS_setExplicitPins_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tar(ctx context.Context, params func(FS_tar_Params) error, opts ...capnp.CallOption) FS_tar_Results_Promise {
	if c.Client == nil {
		return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_tar_Params{Struct: s}) }
	}
	return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) DeletedNodes(ctx context.Context, params func(FS_deletedNodes_Params) error, opts ...capnp.CallOption) FS_deletedNodes_Results_Promise {
	if c.Client == nil {
		return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_deletedNodes_Params{Struct: s}) }
	}
	return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Undelete(ctx context.Context, params func(FS_undelete_Params) error, opts ...capnp.CallOption) FS_undelete_Results_Promise {
	if c.Client == nil {
		return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_undelete_Params{Struct: s}) }
	}
	return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) CommitInfo(ctx context.Context, params func(VCS_commitInfo_Params) error, opts ...capnp.CallOption) VCS_commitInfo_Results_Promise {
	if c.Client == nil {
		return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commitInfo_Params{Struct: s}) }
	}
	return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Quit(ctx context.Context, params func(Repo_quit_Params) error, opts ...capnp.CallOption) Repo_quit_Results_Promise {
	if c.Client == nil {
		return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_quit_Params{Struct: s}) }
	}
	return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Ping(ctx context.Context, params func(Repo_ping_Params) error, opts ...capnp.CallOption) Repo_ping_Results_Promise {
	if c.Client == nil {
		return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_ping_Params{Struct: s}) }
	}
	return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Init(ctx context.Context, params func(Repo_init_Params) error, opts ...capnp.CallOption) Repo_init_Results_Promise {
	if c.Client == nil {
		return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_init_Params{Struct: s}) }
	}
	return Repo_init_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mount(ctx context.Context, params func(Repo_mount_Params) error, opts ...capnp.CallOption) Repo_mount_Results_Promise {
	if c.Client == nil {
		return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_mount_Params{Struct: s}) }
	}
	return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unmount(ctx context.Context, params func(Repo_unmount_Params) error, opts ...capnp.CallOption) Repo_unmount_Results_Promise {
	if c.Client == nil {
		return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_unmount_Params{Struct: s}) }
	}
	return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigGet(ctx context.Context, params func(Repo_configGet_Params) error, opts ...capnp.CallOption) Repo_configGet_Results_Promise {
	if c.Client == nil {
		return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configGet_Params{Struct: s}) }
	}
	return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigSet(ctx context.Context, params func(Repo_configSet_Params) error, opts ...capnp.CallOption) Repo_configSet_Results_Promise {
	if c.Client == nil {
		return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configSet_Params{Struct: s}) }
	}
	return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigAll(ctx context.Context, params func(Repo_configAll_Params) error, opts ...capnp.CallOption) Repo_configAll_Results_Promise {
	if c.Client == nil {
		return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configAll_Params{Struct: s}) }
	}
	return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigDoc(ctx context.Context, params func(Repo_configDoc_Params) error, opts ...capnp.CallOption) Repo_configDoc_Results_Promise {
	if c.Client == nil {
		return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configDoc_Params{Struct: s}) }
	}
	return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Become(ctx context.Context, params func(Repo_become_Params) error, opts ...capnp.CallOption) Repo_become_Results_Promise {
	if c.Client == nil {
		return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_become_Params{Struct: s}) }
	}
	return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabAdd(ctx context.Context, params func(Repo_fstabAdd_Params) error, opts ...capnp.CallOption) Repo_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabAdd_Params{Struct: s}) }
	}
	return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabRemove(ctx context.Context, params func(Repo_fstabRemove_Params) error, opts ...capnp.CallOption) Repo_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabRemove_Params{Struct: s}) }
	}
	return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabApply(ctx context.Context, params func(Repo_fstabApply_Params) error, opts ...capnp.CallOption) Repo_fstabApply_Results_Promise {
	if c.Client == nil {
		return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabApply_Params{Struct: s}) }
	}
	return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabList(ctx context.Context, params func(Repo_fstabList_Params) error, opts ...capnp.CallOption) Repo_fstabList_Results_Promise {
	if c.Client == nil {
		return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabList_Params{Struct: s}) }
	}
	return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabUnmountAll(ctx context.Context, params func(Repo_fstabUnmountAll_Params) error, opts ...capnp.CallOption) Repo_fstabUnmountAll_Results_Promise {
	if c.Client == nil {
		return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabUnmountAll_Params{Struct: s}) }
	}
	return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Version(ctx context.Context, params func(Repo_version_Params) error, opts ...capnp.CallOption) Repo_version_Results_Promise {
	if c.Client == nil {
		return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_version_Params{Struct: s}) }
	}
	return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) WaitForInit(ctx context.Context, params func(Repo_waitForInit_Params) error, opts ...capnp.CallOption) Repo_waitForInit_Results_Promise {
	if c.Client == nil {
		return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_waitForInit_Params{Struct: s}) }
	}
	return Repo_waitForInit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserAdd(ctx context.Context, params func(Repo_gatewayUserAdd_Params) error, opts ...capnp.CallOption) Repo_gatewayUserAdd_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserAdd_Params{Struct: s}) }
	}
	return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserRm(ctx context.Context, params func(Repo_gatewayUserRm_Params) error, opts ...capnp.CallOption) Repo_gatewayUserRm_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserRm_Params{Struct: s}) }
	}
	return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserList(ctx context.Context, params func(Repo_gatewayUserList_Params) error, opts ...capnp.CallOption) Repo_gatewayUserList_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserList_Params{Struct: s}) }
	}
	return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteAddOrUpdate(ctx context.Context, params func(Net_remoteAddOrUpdate_Params) error, opts ...capnp.CallOption) Net_remoteAddOrUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteAddOrUpdate_Params{Struct: s}) }
	}
	return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteRm(ctx context.Context, params func(Net_remoteRm_Params) error, opts ...capnp.CallOption) Net_remoteRm_Results_Promise {
	if c.Client == nil {
		return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteRm_Params{Struct: s}) }
	}
	return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteLs(ctx context.Context, params func(Net_remoteLs_Params) error, opts ...capnp.CallOption) Net_remoteLs_Results_Promise {
	if c.Client == nil {
		return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteLs_Params{Struct: s}) }
	}
	return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteUpdate(ctx context.Context, params func(Net_remoteUpdate_Params) error, opts ...capnp.CallOption) Net_remoteUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteUpdate_Params{Struct: s}) }
	}
	return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteSave(ctx context.Context, params func(Net_remoteSave_Params) error, opts ...capnp.CallOption) Net_remoteSave_Results_Promise {
	if c.Client == nil {
		return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteSave_Params{Struct: s}) }
	}
	return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemotePing(ctx context.Context, params func(Net_remotePing_Params) error, opts ...capnp.CallOption) Net_remotePing_Results_Promise {
	if c.Client == nil {
		return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remotePing_Params{Struct: s}) }
	}
	return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteClear(ctx context.Context, params func(Net_remoteClear_Params) error, opts ...capnp.CallOption) Net_remoteClear_Results_Promise {
	if c.Client == nil {
		return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteClear_Params{Struct: s}) }
	}
	return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocate(ctx context.Context, params func(Net_netLocate_Params) error, opts ...capnp.CallOption) Net_netLocate_Results_Promise {
	if c.Client == nil {
		return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocate_Params{Struct: s}) }
	}
	return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocateNext(ctx context.Context, params func(Net_netLocateNext_Params) error, opts ...capnp.CallOption) Net_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocateNext_Params{Struct: s}) }
	}
	return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Whoami(ctx context.Context, params func(Net_whoami_Params) error, opts ...capnp.CallOption) Net_whoami_Results_Promise {
	if c.Client == nil {
		return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_whoami_Params{Struct: s}) }
	}
	return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Connect(ctx context.Context, params func(Net_connect_Params) error, opts ...capnp.CallOption) Net_connect_Results_Promise {
	if c.Client == nil {
		return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_connect_Params{Struct: s}) }
	}
	return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Disconnect(ctx context.Context, params func(Net_disconnect_Params) error, opts ...capnp.CallOption) Net_disconnect_Results_Promise {
	if c.Client == nil {
		return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_disconnect_Params{Struct: s}) }
	}
	return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteOnlineList(ctx context.Context, params func(Net_remoteOnlineList_Params) error, opts ...capnp.CallOption) Net_remoteOnlineList_Results_Promise {
	if c.Client == nil {
		return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteOnlineList_Params{Struct: s}) }
	}
	return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteByName(ctx context.Context, params func(Net_remoteByName_Params) error, opts ...capnp.CallOption) Net_remoteByName_Results_Promise {
	if c.Client == nil {
		return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteByName_Params{Struct: s}) }
	}
	return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type API_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	ListExplicitPins(FS_listExplicitPins) error

	ClearExplicitPins(FS_clearExplicitPins) error

	SetExplicitPins(FS_setExplicitPins) error

	Tar(FS_tar) error

	DeletedNodes(FS_deletedNodes) error

	Undelete(FS_undelete) error

	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	CommitInfo(VCS_commitInfo) error

	Quit(Repo_quit) error

	Ping(Repo_ping) error

	Init(Repo_init) error

	Mount(Repo_mount) error

	Unmount(Repo_unmount) error

	ConfigGet(Repo_configGet) error

	ConfigSet(Repo_configSet) error

	ConfigAll(Repo_configAll) error

	ConfigDoc(Repo_configDoc) error

	Become(Repo_become) error

	FstabAdd(Repo_fstabAdd) error

	FstabRemove(Repo_fstabRemove) error

	FstabApply(Repo_fstabApply) error

	FstabList(Repo_fstabList) error

	FstabUnmountAll(Repo_fstabUnmountAll) error

	Version(Repo_version) error

	WaitForInit(Repo_waitForInit) error

	GatewayUserAdd(Repo_gatewayUserAdd) error

	GatewayUserRm(Repo_gatewayUserRm) error

	GatewayUserList(Repo_gatewayUserList) error

	RemoteAddOrUpdate(Net_remoteAddOrUpdate) error

	RemoteRm(Net_remoteRm) error

	RemoteLs(Net_remoteLs) error

	RemoteUpdate(Net_remoteUpdate) error

	RemoteSave(Net_remoteSave) error

	RemotePing(Net_remotePing) error

	RemoteClear(Net_remoteClear) error

	NetLocate(Net_netLocate) error

	NetLocateNext(Net_netLocateNext) error

	Whoami(Net_whoami) error

	Connect(Net_connect) error

	Disconnect(Net_disconnect) error

	RemoteOnlineList(Net_remoteOnlineList) error

	RemoteByName(Net_remoteByName) error
}

func API_ServerToClient(s API_Server) API {
	c, _ := s.(server.Closer)
	return API{Client: server.New(API_Methods(nil, s), c)}
}

func API_Methods(methods []server.Method, s API_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 63)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "listExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_listExplicitPins{c, opts, FS_listExplicitPins_Params{Struct: p}, FS_listExplicitPins_Results{Struct: r}}
			return s.ListExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "clearExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_clearExplicitPins{c, opts, FS_clearExplicitPins_Params{Struct: p}, FS_clearExplicitPins_Results{Struct: r}}
			return s.ClearExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "setExplicitPins",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_setExplicitPins{c, opts, FS_setExplicitPins_Params{Struct: p}, FS_setExplicitPins_Results{Struct: r}}
			return s.SetExplicitPins(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_tar{c, opts, FS_tar_Params{Struct: p}, FS_tar_Results{Struct: r}}
			return s.Tar(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_deletedNodes{c, opts, FS_deletedNodes_Params{Struct: p}, FS_deletedNodes_Results{Struct: r}}
			return s.DeletedNodes(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_undelete{c, opts, FS_undelete_Params{Struct: p}, FS_undelete_Results{Struct: r}}
			return s.Undelete(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commitInfo{c, opts, VCS_commitInfo_Params{Struct: p}, VCS_commitInfo_Results{Struct: r}}
			return s.CommitInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_quit{c, opts, Repo_quit_Params{Struct: p}, Repo_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_ping{c, opts, Repo_ping_Params{Struct: p}, Repo_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "init",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_init{c, opts, Repo_init_Params{Struct: p}, Repo_init_Results{Struct: r}}
			return s.Init(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_mount{c, opts, Repo_mount_Params{Struct: p}, Repo_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_unmount{c, opts, Repo_unmount_Params{Struct: p}, Repo_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configGet{c, opts, Repo_configGet_Params{Struct: p}, Repo_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configSet{c, opts, Repo_configSet_Params{Struct: p}, Repo_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configAll{c, opts, Repo_configAll_Params{Struct: p}, Repo_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configDoc{c, opts, Repo_configDoc_Params{Struct: p}, Repo_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_become{c, opts, Repo_become_Params{Struct: p}, Repo_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabAdd{c, opts, Repo_fstabAdd_Params{Struct: p}, Repo_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabRemove{c, opts, Repo_fstabRemove_Params{Struct: p}, Repo_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabApply{c, opts, Repo_fstabApply_Params{Struct: p}, Repo_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabList{c, opts, Repo_fstabList_Params{Struct: p}, Repo_fstabList_Results{Struct: r}}
			return s.FstabList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabUnmountAll{c, opts, Repo_fstabUnmountAll_Params{Struct: p}, Repo_fstabUnmountAll_Results{Struct: r}}
			return s.FstabUnmountAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_version{c, opts, Repo_version_Params{Struct: p}, Repo_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "waitForInit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_waitForInit{c, opts, Repo_waitForInit_Params{Struct: p}, Repo_waitForInit_Results{Struct: r}}
			return s.WaitForInit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserAdd{c, opts, Repo_gatewayUserAdd_Params{Struct: p}, Repo_gatewayUserAdd_Results{Struct: r}}
			return s.GatewayUserAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserRm{c, opts, Repo_gatewayUserRm_Params{Struct: p}, Repo_gatewayUserRm_Results{Struct: r}}
			return s.GatewayUserRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserList{c, opts, Repo_gatewayUserList_Params{Struct: p}, Repo_gatewayUserList_Results{Struct: r}}
			return s.GatewayUserList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteAddOrUpdate{c, opts, Net_remoteAddOrUpdate_Params{Struct: p}, Net_remoteAddOrUpdate_Results{Struct: r}}
			return s.RemoteAddOrUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteRm{c, opts, Net_remoteRm_Params{Struct: p}, Net_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteLs{c, opts, Net_remoteLs_Params{Struct: p}, Net_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteUpdate{c, opts, Net_remoteUpdate_Params{Struct: p}, Net_remoteUpdate_Results{Struct: r}}
			return s.RemoteUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteSave{c, opts, Net_remoteSave_Params{Struct: p}, Net_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remotePing{c, opts, Net_remotePing_Params{Struct: p}, Net_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteClear{c, opts, Net_remoteClear_Params{Struct: p}, Net_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocate{c, opts, Net_netLocate_Params{Struct: p}, Net_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocateNext{c, opts, Net_netLocateNext_Params{Struct: p}, Net_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_whoami{c, opts, Net_whoami_Params{Struct: p}, Net_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_connect{c, opts, Net_connect_Params{Struct: p}, Net_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_disconnect{c, opts, Net_disconnect_Params{Struct: p}, Net_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteOnlineList{c, opts, Net_remoteOnlineList_Params{Struct: p}, Net_remoteOnlineList_Results{Struct: r}}
			return s.RemoteOnlineList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteByName{c, opts, Net_remoteByName_Params{Struct: p}, Net_remoteByName_Results{Struct: r}}
			return s.RemoteByName(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

const schema_ea883e7d5248d81b = "x\xda\xcc|{x\x14U\x9a\xf7y\xab\x12\x8ap\x0b" +
	"M\x05/\x08t\x13AM\xc6\x04\x92\x90O\xe4\x96\x0b" +
	"$\x90\x0c\x97T7A\xcd\x80k\xa5\xfb$)\xe8[" +
	"\xaa*\x840\xb2 \x03\"\xaexG\x04uQ\xf7c" +
	"\x04\x95At\x18\x17\x1c\x1cQY\x17GwDAE" +
	"\xc1\xd5Y\xd8\x11W\x16ox\x1b\x98\xfe\x9es\xaaO" +
	"\xd5\xe9\xa4\x93\xee\xb0~\xdf\xf3\xfd\x95t\xd5{\xea\xbc" +
	"\xe7\x9c\xf7v\xde\xf7w\xce\xb8\xe1\x97\x96\x0bE\x99\xdf" +
	"\x8dG\xc8\xd7\"d\xf6\x89\xb9~y\xe91c\xce#" +
	"+\x91\xcb\x03\x08e\x82\x84P\x89:\xecu@ \xb7" +
	"\x0d+C\x10;1\xf2\xd3\xc3G2\xbe^\x85\\\xb9" +
	"6\xc1\xd6ao\x13\x82=\x94\xe0l\xcd\xaf\xb4#S" +
	"\x06\xdcj\x11d\x90\xf7\xa7\x86-\x03\x94q\xfe\xbb\xc0" +
	"\x07\xb7\xb8\xe6\xdd\xea\x1a\xc5\x9e\x1f\xa1\xcfc\xf7\xf5\xcd" +
	"\xfe\xe4\xc7\x86\xa3\xb7\xf2\x9f\xdc?\xecI\xf2\xc9C\xf4" +
	"\x93\xdf_\x84\xaf\x1e\xf7\x8f\xaf\xae\xb5\x98\xa2M\xcf\x0e" +
	"\xd3I\xd3\xdb\xd6\xff\xc3\x1cmB\xe5m\xdc\x9bO\xac" +
	"7\xc2/'\xe1SO\x9e\xbc\x9dc\xe3M\xc2fF" +
	"\xcc\xf3\xda\xe6\xffuJy\xebN\xe4\x1a\x01\xb1\xcb\xde" +
	"\x9f\xe9]>\xf5\xb6\xcf\xecn\xbd \x1f\x19&\xc9G" +
	"\x86\xb9\xe5\xac\xcb\xca\x10\xfc\xfb\xe1\x82\xfc\x99\xb9\xda\xdd" +
	"\x8a\x07\xd8w\xf2.k$\xbc\x95\x92\xd7\xb1\xbe\xdf\x9c" +
	"\x19\xb0V{\xfa\x1eD\x87e}\xa5\xfe2\xca<\xa6" +
	"\x04\x1f\xf7\xff\xd0\xcc\xbf\x7f\xf1}\x1c#k.{\x9d" +
	"0\xf2\xd6\xf53\x9bv\xfa\xb5\xfb\xe3s-\x92W\x1d" +
	"\x97\xed%M\xd7]\xb6\x13A\xec\x85;\xe6Ly\xee" +
	"\xd7wn\xe0\x09F\x0d\x7f\x99\x10\x14\x0d'\x04\xfa\x15" +
	"\xf7\x9f>\xf4\xfc\xb6\x0d\x88\xe3\xee\xa0Ept8\xe9" +
	"\xfc\x87\x8d\xef.\x9a\xae\xfc\xed\x01\xae\xf3\x1f\x86?K" +
	":\x9fQy\xfaO\xdf\xbbfmD\xca\x08\xe0\xa7\xc1" +
	"Z\xb0\xe1\xb5 \x9f\x1f.\xc9\xe7\x87\xbbK\x0aF\xb8" +
	"\x01Al\x01\x94\x0e\x9b\xe5\xbdc#\xf7\xa9\x8a\x91t" +
	"\xaa\xaf{\xa3\xf5\xcc}\xfd\xc7=\x18_?\x81\xbc*" +
	"\x18\xb9\x8cpq\xed\xc8v\x04\xb1\xf0\xd0\xcb\xdb.:" +
	"\xf6\xd9\x83\\\xd3M#o'M?\x8c\xee(\xf8\xaf" +
	"\xc9\xcflB\x8eP\xac\x1bI\xf9\xfbE\xbf\xd2\x806" +
	"\"o3?\xaf\x1d#\xad\xc9\x19I\x86\xb6\xaeCz" +
	"\xf1\xe0\xa7\x0f<\xc4K\xcd\xf6\x91\x9b\xa9 R\x82\x87" +
	"\x85~\x1b/\xd9\xf6\xc4C\xf1\xd9\xa3l\x1d\x1d\xb9\x88" +
	"\x10\x9c\xa4l\x0dv\x95\xd5\xach\xbf\xf4\xe1\xf8\x17h" +
	"\xef5n\x9d\x10\xd4\xbb\xff\x82 v\xb12\xf7\xa3A" +
	"\xee\xe7\x1e\xe6\xa7\xb7\xc8\xf3,!\xa8\xf0\x90.b\xde" +
	"u\x1d\x17\xff\x18x\x84\xe7\x01{\xe8\xc8[)\xc1\xb7" +
	"\x17}!L\xdfx\xee\x1fyu\xba\xc7\xd3@\x08\x1e" +
	"\xa1\x04\xcf\xef}p\xc8}C\xd7l\xe1\x09\xf6y\xa8" +
	"\xf8\xbcI\x09&,{\xf9\xde7\xdf\xfet\x0b\xcf\xc3" +
	"y\x0f\x15\xc0\xacQ\x84\xe0_\xe7\\\xfc\xb2'\xb8\xfc" +
	"1^H\xf2FQ\x8d\x9d2\x8a\x08I\xc7\xe9;\xfd" +
	"O\x9d\xdc\xfe\x18RF\x81\xdd\xc7\x91Q\x8f\xd3\x89\x18" +
	"E&b\xf5\xf8\x86\xc7\x0b\xffn\xdc\xe3D\x16DN" +
	"\x16\xfa\x10\xca\xaa\xdcb\x90\xebs%\xb9>\xd7]\xb2" +
	".\xf7\x09\x01Al\xb1\xcfW\xf1\x95\\\xf9O\xfc\xb8" +
	"\x951\xf4\x8b\xea\x18\xc2\xd4\x9a\x9f-?\xe0{\xe7\xcc" +
	"\xff\xe6\xd6\xf5\x961\x8dd]\xf7\xbe=\xe4\xf5\xab\xa6" +
	"\xb4m\xe5\xc7\x13\x1aC\xa7\xac\x836}~\xeb.\x08" +
	"\\7\xee\xd7\xfc\xc2o\x1aC\xd7u;%\xc8]\xb2" +
	"j\xe7\xdb\xd5\xeb\x9eH\x10\xfa1\xd4\x02\x1d\xa7\x04\xf7" +
	"|\xb9l\xcb\xbdo6nC\xae\x11\xdch\x10\x94\x9c" +
	"\x1f3\x04\xe4\x81W\x90\x06YWH\x99\xf2\xc2<\x09" +
	"\xa1\xd8E\xd2\xc6\x0f\x1f\x9dw\xef6N:\xab\xf2\x1e" +
	"'\xbc\x8e\x9f?26\xeb\x17Y\xdb\xf9\xc5)\xcd\xa3" +
	"\xabW\x91Gz\x0a\x1d\xfeK8\xaby\xf9\xf68\xaf" +
	"T\xc4\xd4<\xba8\xa1<2\xb3\xe2\x90\x01\xae\xc2\xc6" +
	"\x87\x13\xbep0\x8f\x8a\xd8\x11\xfa\x85E\xab\xe6_y" +
	"\x00Nl\xef\xac\x86t\x19\xcf\xe6yA\xce\xca\x97\xe4" +
	"\xac|wIQ>UCX\xde\xf0\xe2M\x13\xe5'" +
	"\xbb\x0cn\xf6\xcf\xfa\x81\xbc\xf0g\xa4\xdd\x0d?[+" +
	"\xca\xfb\x0b\xc8\xe0F\xbd\xf3\xe6\x98\xd5O<\xf8$7" +
	"\xb8\xed\x05Tkwj\xb3\xee<9s\xe4S<k" +
	"\x1b\x0a\xa8z<V@X\xcb\x8f|\xf5\xd0\xb9\x7fY" +
	"\xf7\x14g[\xf7\x93\xf7\x19\xb1\xd6\xd0\xa2=w\x7f\xfe" +
	"\xcaS\xfc\xf2\xef(\xa0\xcb\xbf\x8f6\xdd6\xe1\xdb\x9a" +
	"\xdf\x1d\x08>\xcd\xaf\xe1\xf1\x02\xaa8\xa7)\xc1G\xf2" +
	"\xc9\xfc\x09\xbf\xbf\xebi\x8e\xad\x81\x85O\x92o/\x9a" +
	"\xf6\xce\xf6\xf2\x81g\x9f\xe6\xbf}\xde\xfa\xf6\xc0B\xd2" +
	"T\xbb\xee\x95hc\xec\x9a\x1dqq\xa6m\xa7\x14R" +
	"\x82\xd9\x94\xe0\x9f6\x7fp|\x81\xdb\xbf\x93\x93\xbd\xd6" +
	"\xc2U\xe4\xdb\xe6];\xee\xf8}\xde\x7f\xec\xe4\xbf\xbd" +
	"\xb0\xf0^\xba\\\xb4\xe9[\xbe\xbf}\xf8\xef\x85\xdf\xee" +
	"\xe4\xf9^_H\x97k\x13%P\x07M\xfa\xe3%\xe7" +
	"\xc6=\x13\x97=\x8bbO!\x9d\xb5\x03\x85d\xc5\x9f" +
	"o\xfdh\xfc\xc4\xf7\x7f\xf1L\x82\xb6\x8d\x19K)\x8a" +
	"\xc6\x12\x8a\xa2\xbb\xde}\xf4\xbd\x8d\xa5\xbb8\xfe6\x8c" +
	"\xa5\x0ea\xec\xab\xbf|8c\xc1\x98g\xf9\xee\xd7\x8d" +
	"\xa5\xfcm\x1aKM\xda\xec\x19/\xbf\xfbq\xe3\xb3\\" +
	"\xd3\x83c\xa9\x0f\xad\x7f\xe4\xaa\xcb\x9f\xbc\xfe\xe6\xdfv" +
	"rj\x94d\xf7\xd8\\\x90\x0f\x8c\x95\xe4\x03c\xdd\xf2" +
	"\xe9\xb1\xc4\xb2\x99/M\xfa\xd3\xc8+\xff\xb0\x9b\x9b\xff" +
	"C\xe3\xe8\xfc\xff\xe6\xbb\x93W\x95\x96\x1c\xdb\xcd\xf3\xb0" +
	"\x7f\x1cU\xbfC\xe3\x08\x0f_\x9e\xff\xe6\xd8\xfe)\x91" +
	"\xe7y\xb3\x0aET\xe6\x07\x16\x91\xf1]\xdb\xf6\xf7\xd5" +
	"\x8b\x8f\xbf\xf5<\xc7\xa4VD\xe7\x7f\xf5my\x17\x87" +
	"~\x91\xb5\x87{S_D5m\xc6\x7f\xd7\xee\x99\xa5" +
	"\x19{\xf8^\xab\x8a\xa8N\xdfPDz\xddy\xe5\xac" +
	"\xcb\xef>1p/\xef(\x8a\xe8\xc8\x9f\xfb\xe0\xfc\x94" +
	"G\xb7\xdf\xf8\x02/\xc7mE\xd4Q\xac\xa1Mw\x1c" +
	"\x8b\xdd\x97_\xf2\xab\x17\xb8\xb1\xee.\xdaL\x9a\x9e{" +
	"j\xff\x96\xa9\xde\xcf\xf97[\x8b\xe8J<\xf8\xea\xf2" +
	"\xca\xa2\x05\xb3\x7f\xdfY--kT\xe4\x05yG\x91" +
	"\x84\x90\xbc\x9d\x8ex\xe9\xec\xab7\xad\xbck\xfd>^" +
	"\x9a\x8b\xe9w\xee\x9f\xe0[\xfa\xf5\x9c\xc7\xf7\xf1\x12\x07" +
	"\xc5\x949W1a\xee\xe7[rnn\xaf\xd9\xbe\x8f" +
	"\x1bWQ1U2\xdf\xa4q\x0f|\xde\xf1\xbb}\xfc" +
	"\xb8F\x14S9\xca\xa3M7\xfb\x0e\x0f\xfa\xe5\x0b\xad" +
	"/&5\x1d5\xc5\xb9 \xdfP,\xc97\x14\xbb\xe5" +
	"u\xc5d\xcdk&\xef\xf8\xfc\xf5\x93{_\xe4\xb8\xec" +
	"(\xa1\xf3\x10\xbb\xf8\xee-\xde\x8fO\xbe\xc8\xcf\xbeV" +
	"B\xd7\xbc\xa3\x84t5\xe3\xd4\xbc\xff|\xf7\xeb\xe1\x7f" +
	"\xe0L\xc1\xa6\x12jE\xa6\x97M}}\xd2\x92u/" +
	"\xf1M\xd7\x94P\xff\xb5\x816m\x7fjc\xce\x95\xbe" +
	"\x1d/\xf1\xc1\xc1n\xeb\xdb\x07J\xc8\xe4}_x\xf4" +
	"\x83\x8f\x9a\x8e\xbf\xc4\xcb\xd3\xa8\xf1T\x9e\x0a\xc6\x13\x82" +
	"[[\x06\xe1?=\xb0z?\xbf\xf4\xe3i\xf40L" +
	"\xec\xf0-\xbbx\xc2+\xbc)\xe8\x18O\xcd\xcc\xba\xf1" +
	"\xd4\x0d\xcdk_y\xe0\xcc\xb9Wx\xeb7\x9e\x86\x17" +
	"\xe3\xb7\x9c\xf8\xcdsCf\xbf\xca/\xcc\xa6\xf1\xd4\x8a" +
	"l\xa7M\x9f\xfd\xaf\xeb\x9eV\xbf=\xf9\x1a\xd7\xf4\xe8" +
	"x*\xab7~\xf9\xcc\x15O\xdfY\x7f0\xc1\xa6\x8f" +
	"\xa7\x0bs\x846mzt\xd1\xe6\x7f\x1dy\xd3\xc1N" +
	"\xba(Q\x93>~\x08\xc8\x99\xa5\x92\x9cY\xea.)" +
	"*\xbd\x8b\x98\xf4\xf7|-eWl{\xee 7\xbb" +
	"\x05\xd7P\xd9\xce9\xf8\xe1Wxj\xf8\x8f\xdc\xd0/" +
	"\xbd\x86\x0e}\xf4\xde\xdfz\xf1\xdf\x1d\xfe#\x1f\xbbd" +
	"]C#\xbfK\xaf!\xab\xfd\xedie\xdd\x1d_}" +
	"\xf3\x06\xf7Q\xd7\x04*X\x9b\x86\xae6\xde\x1d!\xbd" +
	"\xc5/\xd9\xf9kV\xd1\x88b\x02\xf5I\xff\xbd\xf6\xb3" +
	"\xbf\xc9\x17\xbd\xd5Y\xb0h8\x907!\x17\xe4k'" +
	"H\xf2\xb5\x13\xdc%x\xc2kd\x00\x87k\xb4\x9c\x7f" +
	"\xfe\xb7\x9d\x87\xe2\xccP\x01,\x9dH\xedV\xd5D\x1a" +
	"\xa7.\xe8\xf3\x99\xcfp\xbd\xcd/\xd4\xc9\x89T\x08\xce" +
	"N$]\x1exh\xdf\xf9\x8f\x17-|\x87\x1b\xe8\xd0" +
	"It\xb6+\xa75\xfc5:f\xf3\xe1\xa4R\x9e9" +
	"\xa9\x18\xe4\xa1\x93$y\xe8$\xb7\\5\x89\x8c\xfb\xd4" +
	"Mm\x7f\xff\x9b\xb3\xf0\x1e\xb3\xbfT\x9e\xc6L\xa6\xcc" +
	"\x94N&\xccLy~\xd4\x86\xb9C\x07\xbc\xc7\xad\xec" +
	"\x11\xf2>#V\xfb\xe4\xbde\x93\x1a\x8a\xf87\x07&" +
	"S\x0d9p\xe0\xc8_\xbf\x1d\xbd\xf6=~\xcdwO" +
	"\xa6B\xba\x7f2\x19\xc0\xb4s\x0f4\x0c\xfc\xe2\x89\xf7" +
	"xy\xfad\xf2\xed\x84\xe0KJ0P]}\"4" +
	"\xf3\xcc{\xfc\xac\x0f\x9dB\xd9\x1a3\x85\x10<\xb0\xbe" +
	"D\xbd|K\xd5\xd1\x04\x138\x85\x06F\x0a%\xd06" +
	"o\xfb\xfe[c\xde\xd1d&\xbeu\x8a\x17\xe45S" +
	"\x88I\xbae\x0a\x99\x86/\xde^\xb9u\xda\x9f\xaf\xfc" +
	"\x90g\xf8\x86\xa9\xd4\x93\xe1\xa9\xd4\x8c\xefy\xedX\xcd" +
	"WK?\xe4f|\xcdT:\x0b\xdf\xbc\xf2tU\xc6" +
	"\x7fl\xfb\x90\x93\x9c\xb6\xa94v;8\xe7\x91\x8b\xd7" +
	"\x7f\xde\xef\x18\xd7F\x9dJ\xbd\xc6\xc9\xd7\x1e\xda\xb8\xb1" +
	"i\xed\xb1N\xbc\xd1\xc9W\xa6\xd6\x92N\x09o\xeaT" +
	"\xa2\xd0_l\x9b`.\x8a\x1e\xfc\x88\xeb`\xdfTK" +
	"\xa1\x8f\x9cx\xeb\xa6\xad\xbb>N\x08,\xa6R9\xd9" +
	"G\xb9~V\xbf\xfa\xd5\x7f~\xe4\x9b\x8f\x13\x02\x8b\xa9" +
	"t\x9aOS\x82\x97\xbf\xfey\xce\xda\x13\xf3>\xe1\x09" +
	"F\x94Q\xe1\xce+#\x04u\xd5\xe3\x9e\x88\xdd\xfc\xd0" +
	"'\xdc\x18j\xca\xe8\x1a\xef\x90^]1:w\xf7'" +
	"\xc9\xe6\xf7\xda\xb2|\x90k\xca\xc8\x18\xaa\xca\xc8\xfc\xfe" +
	"p\xf8\xe6\xdf.\xbc\xfe\xb9?w\x09\xc3\xf2\xca\x05\x90" +
	"K\xcb\xa9!/\x7f-C\xae\x99F\xc2\xb0I\xd3\xce" +
	"\x88\xd3/\xfb\xfe\xcfL*-C?\x8d0^R1" +
	"\x8d\x06v\xe7\xff\xa5\xcf\xef\xdf\xbfi\xe8_\x12\x04\x17" +
	"O\xa7K\xd6:\x9d\x08\xee\xaa?\xee}\xd9|x\xc1" +
	"_\xf8\xd9\xc9\xaa\xa2c\x1bZE\xc6\xd6\xf0E\xe9\x03" +
	"\xb36\x94}\xca\x8d\xad\xb4\x8aj\xd1\xfc\xab\xde\xf0\xfc" +
	"\xa14\xef\x14/\x0ec\xaa\xac\xa0\x846\xcd\xf9\xcf\xbd" +
	"\xca\xe8\xdbk>\xe3D_\xadz\x994\xbd\xfb\xf0G" +
	"\xee]_}\xc0\xbfQ\xaa\xe8j\x1dx\xf7\xe3\xbf\xae" +
	"\xcd\xde\xf5y\xa7\x09\xa3\x9aYQU\x0br}\x95$" +
	"\xd7W\xb9\xe55U\x84\xfd\xaf\xa6\xe4\xb4\x16\xacl>" +
	"\x9d\xe0\xd0\xaa\xad\xa5\xa9&<\x0c}\xfb\xdc\xef\xea\x97" +
	"\xbe\xf4\x05OPSM\xc3\xedzJ\xf0\xf5\xfd\xc2\xf5" +
	"\xf3\x8bG\x7f\xcdKf5uC\xff\xf6\xb9\xfa\xf3\x81" +
	"?n\xf9:!mQM\xcdy+m\xfa\xf6\xaf\x86" +
	"\xbf\xa2n]\xf3\x0d/\x17\xf7TS\xc1y\x8c\x12\xfc" +
	"|\xe2NyW\xc1\xe1\x04\x82\xfd\xd5t\xf6\xdf\xa4\x04" +
	"\x13\x1e\xcb\xbfq\xdf\xe0W\xce\xf2\x04\xa7\xabi\x88\x02" +
	"3\xe8^\xef\xf2\x86\xeb\xaf\xcd\x1a\xf3\x1dO0j\x06" +
	"\x9d\xe3\x02J\xf0\xceK\xef~\xf6\xce\x98\x0f\xbeKj" +
	"\xca\x16\xce\xa8\x0494\x83\xba\xde\x19T \xbc\x9fT" +
	"\xbe\xf0+w\xfd\xf7\xc9tj\xf9\xccb\x90\xd7\xcf\x94" +
	"\xe4\xf53\xdd\xf2\x9e\x99D\xab\xb6O=Z\xb6F\x7f" +
	"\xfe\x07\xde\x84\xd6P/r\xf4\\v\xc1\x95\xbf\xcd\xf8" +
	"\x91g\x0cj\xe8\xd0\x06\xd6\x10\xc6n\xbc2w\xc3\x8f" +
	"\xb7N\xff\x91[\xe2\x82\x1a\x1a\xb1\x8d\xae~u\xc8\x99" +
	"\x95\xbf\xfe\xb1\x8b\x98_Z\xd3\x0f\xe4\xbc\x1a*G5" +
	"k\x05y_-\x11\xf33\x1b\xff\xa1\xf8\x92\xa53\xcf" +
	"u!\xdfZ\xdb\x0f\xe4\xdd\x84F\xdeU+\xc9\xbbj" +
	"g \x14kXw\xe6\xfc\xc5\xd3\x17\x9f\xe3\xba\xddS" +
	"K9\xde\xa8<\xd1\xff\x95\xd0\x93\xe7\xb8\xb1l\xad\xfd" +
	"\x80\xbc\xb9F\xd8pdD\xfb\xad\xe7\x13\x02\xf0M\xb5" +
	"\xd4\x12o\xadmGsb\x06\xd6\x97`}\xac\xbf\x8f" +
	"\x1a\x0dG\xc7\x06#~5\xf8wjT+\xf4\x93\xdf" +
	"\x13\xab}\x85A\xcd0\xab\x96F\x83\x9a_3\xeb\xb4" +
	"\xb01\xda\x8b\x8d\xb6\xa0i \xa4d\x88\x19\x08e\x00" +
	"B\xae\x81\xf9\x08)}EPF\x0b\x90\x1d\xd5\xc2\x06" +
	"\x0cBP'\x02\x0cvl\x1d\x02\xf20E\x87^\x1c" +
	"\x8d\x146\xab&nW;\xea\x0d\xac\xcf\xd2\x0c3\xde" +
	"#\x18|\x87\xc5N\x87\xee6\x03\xeb\\\x8f\xb9\xb5\x0d" +
	"\x93\xabO\x8c\xb8\xb5s\x8f\x19\xdd\xf7\xd8\xda\xa6\x99\xa3" +
	"\xbde\xd6\xc8R4\x98\x83\xcd\xc2\xf6\x96\x88\x1a\xd2F" +
	"\x97\xd5\xa9\xba\x1ar\x1adv\xdfC\x93a\xaa\x8d^" +
	"\x1c\x8a,\xc1\xa3\xeb\xd4l\xd2\x8c\x1f\x8e\x17!e\x80" +
	"\x08\xca%\x02\xc4B\x91\xb6\xb09G\x0d!\xc00\x00" +
	"\x090 \xe5\x18\xaa}\x85m\xe1\xa8\x16\x1e\xed\xc5\xee" +
	"t\x86P\xed+4L\xb5\x19w\xa5\xef\x93b\x04\xf5" +
	"a\xca]E0h\xafJ\xca\xf9\x0dEL\\\x1d\x09" +
	"\x060\xe8u\x00J\x06\x08\xb1\x1b\xef\xdb\xa2\xec{\xf7" +
	"\xf6\x03H\xc9\x10\xa0b4\xc0\x00\x84\x8a\xa0\x11b\x15" +
	"\x9e&B\xa9gx\xcc\x16\xd5\xf4\xa8\x1e\x9d6\xf7h" +
	"\x86G\x0d\x06#\xed8\xe01#\x1e\xd5\xef\x97\xb0\xd1" +
	"I\x04'\xc6%\"G\x802\xeb#\xe9\xcf\x9e\xa9\xea" +
	"t<R\xd04\x92\x89u\x0e\x11\xeb\x88nB\x06\x12" +
	" \x83\xfbbf\xb7\"b1^\xd91G\x0d%]" +
	"q\xfe\xd3a5\xd4u\xa9{\xa1 \x96\x18\"\x94\x82" +
	"-\xb2\xec8Q\x99\xe3\x12\xac\x0c\xb0\x19\xab\"\xf3X" +
	".\x822K\x00\x17@\x0e\xb1\x1b\xae\x1a\xc2\xedt\x11" +
	"\x94:\x01\\\x82\x90\x03\x02B\xae\xd9\xc3\x10Rf\x8a" +
	"\xa0\xcc\x13\xa0,\xaa\xe3&m)\x1bDv\x93\x1e\x09" +
	"\xb1\x1f\xa2\x19Isp\xc9\xccM|l\xff\xffp\xd8" +
	"y\x0a\x99=Lf\x9dr\x04p\xfb\x89\xc2\xa4)8" +
	"tu\xdbU\xcd\xac\x8e\xe85ab\x93\xd2S\xe8i" +
	"\x91p\x93\xd6\\\x156\xf5\x0e\x84\x92+\x99'\xaed" +
	"\xf9D\xc9\xfc\x94^\xf4`\xd2\xc2s\x95\x16\xf6\x07\xdb" +
	"\x02Z\xb8\xd9\x13\xc2\xa6\xea\xd1\xb2\xc3M\x91<\x84\x94" +
	"\x1c{D\xcbs\x11R\x96\x8a\xa0\xac\xe6\xe6\xfc\x16\xf2" +
	"\xf0f\x11\x94\xdb\xb89_C\x1e\xae\x14A\xb9C\x00" +
	"\x97(\xe6\x80\x88\x90k]%B\xcaj\x11\x94\xbb\x05" +
	"\x80\x8c\x1c\xc8@\xc8\xb5~\x11B\xca\x1d\"(\x0f\x0a" +
	" -\xc6\x1dl\x05\xa4%j\xd0\xfe?\x10\xf1\xb3\xff" +
	"W\x04p\x93J,\x0e[\xa90\xc6\x01\xc3\x8b\x0d\x94" +
	"m\xaa\xba\x09\x80\x04\x80\xf4\xcc}T\x0b7\x8f\xaes" +
	"'\x1a\xef\x1e\xe8\xa9\xcd\xb3u\xa5\xaf=+y\xc4l" +
	"_%\x822\x9e\x9b\x95\"2\xd6\xabEP&0[" +
	"^\xa7\x9a\x08Z\xecqD\xa2\xa6\x16\x09\x1b0\xd8\xc9" +
	"\x9b \x80\xc1\xe9\x09\xc7\x12\xac\x1bZ$\x9c\xae\xca;" +
	"\x96\xa8>\x1aP\xcd$\x16\xbf\xfbval\xce\x8a\xf8" +
	"U\x13\xcf\xc1K\x1d\xef\xd8\x9d\xc9\xd5-w0\xd8\xd9" +
	"x\xa5?(K\x1c\xa7G\xfctXb\xa2\xa1\xccu" +
	":\xe1\xc5$]\x17\xc7Lo\xaaU\xabEH\x19'" +
	"\x822Y\x80\x18\xfdX\xe2\xaa\xc5t\x1c\x8d\xd4\xa9f" +
	"\x0bB(M\x16\xe8\xd04\xa2\xc5qQS\x06\xdb<" +
	"\xa8\xa4\xbb\x9bDP\x82\x1c\x0f\x1a1\x1b\x01\x11\x94(" +
	"\xa7O!\"N-\"(&\xa7O\xad\xa4yT\x04" +
	"\xe5f\x01b\x8d\xaa\x81;q\xe6\x8e\xb4\x87\x1d\xff\xb7" +
	"\xa2Q\xf5/\xc6\xe1\x80\xcdwT5\x8c\xf6\x88\x1eH" +
	"6\x96n]G\xb3\xaa7\xaa\xcdxZ$\x18\xc4~" +
	"gL\xdcJ5pA\x8c\xda\xdc\xacc\xc3\xd0\x90\xb8" +
	"\x04\xf7Z5\x93\xc9\x1aoRu\x1c\x0d\xf6B\x10H" +
	"d\x94D\xb0\x12\x9c\xbbj\xb6\xa4?\x15\x01\x1c\xc4&" +
	"\x0e\xcc\x89\x040\xb5\xff\xd9\xdd1K\xa2\xd30\xa1r" +
	"\xa2S\xbbz\x94VtZ\xed+\xf4\xab\xe6\x85\xc5&" +
	"\xddz0\x7f\x10\xabz2'\xfb\xff\xde\xcb&\x9f\xe2" +
	"\xf9\xd3|\x85\xfeH(\xa4\x995\xe1\xa6\x883zN" +
	"\x87\x1b\x1c\x1d\xb6Ux\"gx5c\xbe\x1a\xd4\x02" +
	"^$\xe2&&\x7fe\xd67a\xb0\x93\xff\xefd\xa3" +
	"\xc4\xa4\xec\xf8L\xd5M9\xe99|]\x051\x9f\xa9" +
	"R\xc2L\x1a\xb0z\x0cS5\x0b\x82\xdab\xec\x09`" +
	"\xc3\xafk\xd4\xf0{\"M\x1e5\xdc\xe1!r\x81\xa8" +
	"\xd1\x89\x0fJ\xae\x80|\x84|\x93A\x04\xdfLpf" +
	"]\xae\x82Z\x84|\xd3\xc9\xf3:\x10\x00\xacy\x97g" +
	"S\xf2\x99\xe4\xf1<B.\x025\x0e\xb2\x02\xc5\x08\xf9" +
	"f\x91\xe7\xd7\x93\xe7\x19+\xa9\xc3\x95\xeb\xe9\xf3:\xf2" +
	"|\x01y\x9e\x99\x99\x03\x99\x08\xc97\xd0\xe7\xf3\xc8\xf3" +
	"\x9b\xc8\xf3>B\x0e\xf4AH^\x08\x95\x08\xf9\xae'" +
	"\xcf\x03\xe4\xb9tK\x0e\xd0\xb4\x14e\xe7&\xf2<H" +
	"\x9e\xf7]\x95\x03}\x11\x925h@\xc8\xd7B\x9e\x9b" +
	"\xe4y\x96\x98\x03Y\x08\xc9\xad\xd0\x88\x90/J\x9e\xdf" +
	"L\x9e\xf7\xcb\xc8\x81~\x08\xc9\x1d\x94\x7f\x93<_I" +
	"\x9e\xf7\xcf\xcc\x81\xfe\x08\xc9\xcb)\xfd\xcd\xe4\xf9m\xd0" +
	"Y7M\x1d\xe3\x99\xaaA\x8d\xdd@$\xc0@\x04\xd9" +
	"\x86\xb6\x0cC\x16\x12 \x0b\x81[#\xf3\xea\xfc2\xa6" +
	"k:[\x7fw\x00G\xcd\x16\xa6'+B\x91\xc0<" +
	"\x8d\x0b\xbc5\xa3N\x0b\x871\xb5\x8a\xccbi\x86\xa5" +
	"'H\xd4\x9c\x08\xc3\x1f\x09\x9b8l\xceD\x92j\xb4" +
	"\xd8\\\x90]\xa8\xfd\xad\xb8\xc5M$\xe9\x9d+L\xa5" +
	"\xf3D\xa4`\xb0\x83L\xe8$\xca\x19\xddjV0\xd2" +
	"L\x14^J\x1d\xfcT\xfb\x0a\xf1R\xcd0\x8d\x94\xde" +
	"\xdf\"\xebb\xe8\xd3R\xef\x14>_\xc7K\xd2\x0f\xce" +
	"\xbb\x9a\xb6\x9e\x92\x07\xdd\x87\xe7bw+\x04\xd4\x08\xd4" +
	"\x89\x99\\\xb5\x18\x18\x88Gn\x15\xf2\x91 cA\x02" +
	"\x07\x01\x02\x0c\xf6 \xdf@\xdf\xce\x16$\x10l4\x05" +
	"\xb0\xb4\x8e\\A\xdf\x96\x0a\x12\x886F\x04X\xaeI" +
	"\xce\x13\x8a\x91 \x8f\x10$\xc8\xb0\xb3\xe7\xc0r\xf3\xb2" +
	"K\xa8D\x82\x9c)H\x90ig\x85\x81\xd5\x9d\xe5\x1f" +
	"\xc0\x8b\x04\xf9K\x90\xa0\x8f]`\x02V\xc7\x97O\xd2" +
	"\xb7\xc7A\x02\xc9.z\x01\xab+\xcb\x87\xe8\xdb\x83 " +
	"A_\x1bC\x02\x0c\xd0 \xef\xa3ow\x83\x04Yv" +
	"\xbe\x15X\x0aT\xde\x0e\x13\x91 ?\x02\x12\xf4\xb3\x8b" +
	"\x1e\xc0\xea\x8b\xf2=P\x8b\x04y\x1dH\xd0\xdf\xc64" +
	"\x01+AQ# \xc8m \xc1\x00\xbb\xb8\x04\xac\x0e" +
	"KM\x8d \xab \xc1@\xbb\x0c\x01\xacH%\xd7S" +
	"\xaef\x83\x04\x83\xec\xa2%0\x84\x93\\\x01\xab\x90 " +
	"_\x0b\x12d\xdbP\x1b`\xb5n\xb9\x00\xc8L\x8e\x02" +
	"\x09\x06\xdbew`\xb8 y(\xe5j H\xe0\xb2" +
	"kJ\xc0\xea\x992\xc02$\xb8~\x90`\x88]\xc9" +
	"\x04\x96)v\x9d\xd6\x91\xe0:)\x81lC\x9c\x80\x81" +
	"\xc3\\GW!\xc1uH\xcanm\xd3\xccr\x9a@" +
	"k.\x87l\x12:\x96\x83\x9bn!\xcaaE[8" +
	"\xfe_\xcc\xb2\x1130\x02\xe7\x97/\xe1WE\x10A" +
	"\xd0\xfe5=\x82\xc0_\x0ee\x8d\xd8\x1f\x09\xe1r\x88" +
	"\xd1TNE\x80X:\xf6\xcb\x8bCH\x8a,q\xde" +
	"F\xa3H\x0cv\xb0\x9f\xb34\xc3\xfa>\xcb\x02A<" +
	"\x0d\x84\xcaaE|OR\x0e1\xb6uE\x12\xe5=" +
	"\xc6\x12\x15\xa8\xcc\xc0zE \xc0?r\x1bX\xf7\x86" +
	"\xb8'\x10Og\xa0r\xa8\x83^\x18K\x1fv\x02\xa4" +
	"\xf4\xc2\xa9\x0b\x09\x06\xbb\xb7\xa7\xa6j\xdbS>B!" +
	"6l\xb4\x08\xca8.~*\xa8t\xc2\x16\xde\xb0\xad" +
	"0\xd5\xe69\xc9\x92@\xdd\x0eC\x8f\xa7\x12\xbbF\xe1" +
	"\x178\x12+OG\x02\x9860\x92\x07:\x97\xd0@" +
	"\xc7\x05{cal\xd2\xe0\x06\xda\x0c\x1a\xcex\xca\xac" +
	"Mfb\xce`b\xb2\x9cA\xad\x93\x1e\x88\x072\xae" +
	"u\x8d\x08)\xb7\x89\xa0\xdcO\xa2\x18\xc1\xda\xe2\xdcS" +
	"\xec\xa4\x07\\\x19\x1e+g\xb0AGH\xb9_\x04\xe5" +
	"Q\xba\xe3$]\xc2`\xa7\xb4\x1fw\x81A\xd50}" +
	"\x18\x87\xf9\xed\x8d\x1ei\x0b\x07L]CRt\xb6\xc1" +
	"\xcc\xbd\x1b\xebz\xc4q\xdaj\x9b\xd9\x82\xc3\xa6\x86\xdc" +
	"d\xd7\x1b\xe8\xe2\xcd\xc4\xee\xb6\xcaV\xcee\x02u\x0a" +
	"\xac\xf0\x01,+/\xef\x82{\x91 \xef\x00\xe2\x14X" +
	"a\x05XAQ~\x8c\x9a\xc1M@\x9c\x02\xab\xdd\x03" +
	"\x83\xb6\xc8\xeb\xe9\xdb5@\x9c\x02\x03\x0f\x00\x83\x01\xca" +
	"\x1d\xb0\x08\x09r+\x10\xa7\xc0\x90(\xc0\xcaZ2\xa6" +
	"Fr!\x10\xa7\xc00\x0b\xc0\xf0@\xb2B\xdf\xd6P" +
	"\xa7\xc0\xea\xc9\xc0J\x96\xf2\x14j\xe8J\xa9S`5" +
	"b`ui9\x8f\x1a\xd8Q\xd4)0T\x010\x08" +
	"\xa2<\x14\xf4\xb8\x91\xccb V\xa7\x8a.\x03q\x0a" +
	"\xae\xb3\xc4'0\xe8\x11\xb0\xc2\xbd\xebT%\x12\\\xc7" +
	"\x89G`\x85G`(\x18\xd7\xa1\x06$\xb8\x0e\x12\x7f" +
	"\xc0 A\xc0p0\xae}\xb7#\xc1\xb5\x87x\x03\x06" +
	"0\x05\x06\xaar\xedX\x84\x04\xd7V)f\x89KE" +
	"\x00\x02su\x9a\x0c\x01b\xec\xac\xa7\xde\x90e\x0a\xad" +
	"_\xb3\x0c\xfeW}\x14e\x07T\xd3!\xf6\xa9dS" +
	"k\xff\xac\xd3\x90H\xecu\xfc\xe7\xb4 \x92\xb0\xaa\x97" +
	"C\x8c\xe5O\x10\xed\xc8\xfe\xe5\xa6\xf9\x94r(\xb3\x8a" +
	"\x08\xe5\xb0\xc2\x1f\x09\x87\xb1\x9f\xd8\xcb\x80f\xd0\x1fH" +
	"\xa4?\xad/\xce\x0dCP\x0bcj\x1a\x1d\xb6*;" +
	"P61\x19\x89\xc62U\x8d#\xbd\xa4W\xb5\xaf\xd0" +
	"\x8c\xb4\xf9[R\xe5\xad{a^\xaa}\x85\xd4`\xb1" +
	"\xddr\xfa\xe6}\x06N\xbe\xff\xe5\x83\xb8%j\xb0\x0d" +
	"\xa7\xb9\xb9\xec\x92\x9cg)\xb1\xee3[\xdd\xd8\x99^" +
	"\xe6r\xe3\x93\x99\xfe\xc8Y\x95\xa5\xf3\xc8s\x9d\xec\x82" +
	"\xa4\x06\x83Nn\x81\xdf\x0b\x0c\xea\xc5D\xd4\xd1\xa4K" +
	"\x92\x9e\xf8\xb2\x94mA!\x0a\xfd\x91\x00\xfd\xb9\x0e\xfa" +
	"w\xdbA\\\xb6Y\x86\x815H\x9d\xe0L\x16\xb7W" +
	":\xab\xc2\x82\x0e\x18\xec \x11\xd2\xde\x015a\x93\x08" +
	"wW\xdf\xc9\xef;\xda[\"\xbd\x90\xed\xc5\x01MO" +
	"\x96k\xccw\xa2\x00;\x08\xd0\x9d<E\xa2\x0a\xf9u" +
	"\xac\x9a\xb8NEn\x1d\x87\x93l\xa7\xba\x1f\x91\xd1\x11" +
	"\xf6'\xeb\xbe6I\x9a\xc4\xcbe:\xdb5\xb3\xe5\xba" +
	"\x96H\x88w\x95a\x8c\x03\xd5\xd8\xf4#h\xe9\xc2A" +
	"\x9f\x14\x9247\xccLU\xef3\xd4\xb3\x8c\x1e\x17}" +
	"\xb4\x00+,B.\x9b\xc6\xab\xe4\xa0^\xac}\x97Z" +
	"\xaf\xd8M]%$\x854\xb3\xe7p\xe8\xf6\x98O\x0b" +
	"7\x07\xb1'\x08\x91f\xab\xa4\x82\x80\xcf\xf5\x12\x19X" +
	" \x82\xd2\xc2\xc5A8\x97K\x00\xb3L\x9a\x96\x1fO" +
	"\x00\xaf\xe4r\xbd\xcb\xf3\x9d0*\xbb\x85K'H!" +
	"\xa3\xd9N\xb4\x99j\xb3=-\xe4\xd9 \x04\xd4k\xa5" +
	"i\x14\x9d\x0aoE4\x1a\xecH\xd7L;\x8b\xe7S" +
	"ia\xbbK\\\xfd\x13\xae\x1es!Ib\xed\xca\x14" +
	"\xb1\xf6\x0aC\xf7\xd7q\x9a\xb6\"`\x98u\xc9\x9cW" +
	"\xff\x14\x09\x0b\xbb\xda\xd7\xa3!#\xd3\xc2\\\xb9?\xc9" +
	"\xe6\xa4\x17Z\x94\x0a\xfb\xa0\x85\x9b\"\xdc\x8c\xda\x00\xf9" +
	"\xb4\xf5\xa1-L\xf6/]\xf4!\xdd2@O\xa9z" +
	"\xc2_\x93\x8eq\xc0\xe1\xcf\x06A\xa5\xe5\xa18\xa9\x0c" +
	"\x04\xac\xa9\x10/\x0c\xac\xd0\xc5\x18%\x9f\x90\xd9\x84~" +
	".M\xd3Z\x9b\xa0\x14\xa6\x94/\x1a\xe9X\x0d\xcc\x0d" +
	"\x07;\xf8\xf4\xa1\x1e\x89\x98\xdd\x15\x8d\xd2\xab\xef\xdb\x03" +
	"7S\x9b\xd2\xcem\xbd!\xbbf\xd9\x1b\xe0A\xcf;" +
	"\xdd.\x96\xa1\xa7\xfa\x9b\x99\xb4:\xc2s@\xe4\xb7S" +
	"Udp\x1ay\xb8\x90D\xc2\x96\x1e\x0b\xdd\xc5\x10\xab" +
	"\x097E<\xaaG\x17-\x10I\x14c\xdd\xd3\x8e=" +
	"!\xad\xb9\xc5\xf4\x10\x97\xe9\xf6\x10\x07\x88PJk\xdd" +
	"\xd8Sen\xb5\x00\x107\xd6\xb7\xdc\xeb\x14\xba\x13g" +
	"\xb7I\x0b7c=\xaa#I\x0b\xdb5\xec\x15\x16P" +
	"\x85S`\xfb\xb8]\\AT\xbf\x1fG\xcd\x8a60" +
	"#V\x05\x17\xd2\xcd\xb2v\x0a$\xe3\xb6\xb9w1a" +
	"\x8a\xd4l\xafB$kG\xd1\x8b\xfasB\xdd:\xc9" +
	"N\xe4\xa7\x8a\xd1\x9d,\x12\x1bn\xaa,N1\x97\xc5" +
	"\xe1J\xd2\xddlC\xbaOEE\xa2\x1d\xffW\xbdY" +
	"\x1a\x11W/\xa2\xb4D<@\x92\xe8\x99_\x10S\xf3" +
	"/\xc6&\xab\xc3\xf4\x16!\x97\xa6\x948\xedl_)" +
	"u\xb3\x91\x1b-@\x19\xf5\x06\x9c\xae\xd9\x08\xd3\xde:" +
	"#\x1a\"\xa5]B\xb1\xa0y\x17\xb2\x95Nn\xfd\xa6" +
	"kM\xd0\x94\xdc\xf6\x0d\x8f\x87\xa4?\xc6\xa6kMM" +
	"X\xc7a\xc1\x8f=\x8d\xd8l\xc78\xec1\xdb#\x1e" +
	"\x7f\x19\x8dc\x0c\x84\x94\xe16'\xbb\x89@?#\x82" +
	"\xf2\x06'q\x07\x89\xc4\xbd*\x82\xf21g\xf3\x8e\x93" +
	"\x87\xef\x8b\xa0|\xc3E\xa8_\x92\x87\x9f\x8b\xe0\xebK" +
	"\xcb\x8d\x16\xbeG\xce\x84b\x84\xbc \x82o8_m" +
	"\xbc\x14&\"\xe4\xcb!\xcf\xc7\xd1jc\x1f\xab\xdaX" +
	"@\xab\x8aW\xb3\xe2\xa7[\x0d\x04\xf8\xc0\xa1S\xd9|" +
	"\x85\x95\xff\xec\x81@k\x0eG\xf4\x9e\x08B\x9aah" +
	"\xe1\xe6n\x09\xdc\x9d:\xb0\x01\xc6\xd6\xeb\xb2\x10\xd6\x9b" +
	"{xOs\xefA\xcdo\x12\xdf\xdf-Q\xbay\xde" +
	"4\xe33~\xc7\xdd5jH?\xe2`\xa0\xbbTn" +
	"\xb16\x85[\xb4E\xe4\x96\x89q\xa8\xd8\x83\x9d\xfdb" +
	"\x12,Jg\xaf\x18\xdf\xcf\x94\xe9\xc4ow~\x9a\xa6" +
	"\x99\xed\xc5\x86&\x0e\xeeM\x86\xeb\xe3-\x9cE\x06\x83" +
	"\x9d37i\xc5.\xd3ZT)\xdc\x8c{\xd6\xdf\xcf" +
	"bs\xc3\xd8\xd3\xa2\x19\xa6\x10\xd1;\xe20\xbd\xa6\x88" +
	"\xeeQ=\xd9MZ\x10#\xa4xl\xae\x0e\x91\xa5y" +
	"C\x04\xe5}ni\x8e\x10V\xdf\x12A9\xc6-\xcd" +
	"QBy8\xae\xd2li\x8e\xe7\xc7U\xfa\x84\xa3\xbc" +
	"\xaeO\xc8\"\x1e\x13A\xf9\xd4Q]\xd7\xc9U\x08)" +
	"'DP\xbe\x10\x00,\xb5u\x9d\xae\xb5t_\xf9^" +
	"\x00\x97\x04\x14!\xe0:\xdb\x80\x90\xf2\x8d\x08\xde\xce\xe5" +
	"\xfb2\x7f\x8b\x1an\xb6\x17?\xbb\x05\xab\x81\xaep\x8c" +
	"\xec0^\x9a\x04\xa5\xb1\x82*\xe4<'\xe4hW\x8d" +
	":\x1d/\xd1 \xd2f\x04;*L\xd4\xfbR~o" +
	"\xf6\x1fT) \x01+\xeb\xe5\xe00l\xe6g\x93\x87" +
	"\xb3DP\xae\xe7f\xbe\x9e\xccg\x9d\x08\xca\x82n\x00" +
	"\xde?%P0\xc1Y\xdb\xdb\xa6\x9f\xc4S;\xb1\xc3" +
	"\xb4 V\xf5.N0\xb9\xcc\xd7\x04\xb0;ljf" +
	"G\xcf\x11\xfb\x10\x16\xb17F\xc46\xd3\x13i\xd3=" +
	"\xfe6]\xc7a\xd3\xd3f`\xdd\xaa8\xe1\xc4h\xbd" +
	"1m\x1c\x1d\xa1\x0c\x8a\xa0,u\xa2\xf56\"\xbc\xa6" +
	"\x95o\x89\xc5\xbb\xaaG\x12\x07\xe4H\x04\xd2%\x0f\xe2" +
	"c\x9aam\xd8yi\xeb\xcd\x0a%\x11\xac\\\x07|" +
	"ec\xaf\x1a\x1c\x98\x95K\x00kTJ\x83#W\x09" +
	"\xe1\xb8\xa9\x85p\xa4\xcd\xf4!\x11\xfb\xedtm\x90\xf6" +
	"7[E\xa2\xb1\xb87\x89\xa1x\xe9\xb9+\xe4?\xad" +
	"\xb0\xac\xf3\xce\xa3\xe7\x0d#\x8b\x87\xff\xe7@\xbd\x04\xd6" +
	"m\x84[O\x87.:A>S\xa3XB\xeabL" +
	"\"\xad\xa4i\x9a\x04\xb0\x8e\xd6\xd4\x04\x83\x9d\xb3\xaei" +
	"\xa7\xaa\xe3i\xa7$\xfbx~#\xc6e\x02S|\xd3" +
	"\x129\xca.\xd0\xbcf*\x17\x9f\xdfS\x9e2\xca\xf9" +
	"\x11^\xc1\x12\\|\xb6\x1a\x08\xd8*\x94\x1dR9\xd9" +
	"K\xaeO\xe9\x82\x92.\xa4\xf8\x9d\xca\xacyC\xe9\x1e" +
	"l\x89\x03K\xbb$\xf7\xd23\x9ci\xa6Q8(\x93" +
	"UdN^Zp\xb6\x89\x13\x9dmb'\xcfka" +
	"\x1f\xd3\xc6\xb8\xb6\x85-\x94k\xef\xb2ON\xc9\xee\x02" +
	"\x90\xdc\xdd\xeb\x19\x89\x84\"zG\xf2\xb3g|\x8a9" +
	"N\xc8%D\xd9\xe9\xec\xb4\xf6x|_,\x06\xfei" +
	"\xa4\x8bK\x07w\xb6\x87\xc9}\xe6|\xacg\x1bZ$" +
	"\xdcIG\xf5d\xfe\xce\xcbA\xc4\x99\x8e\xb6.s " +
	"\xe2\xb6\x8ev48\xb5\x84x\xff\xf31r[\x95\xb4" +
	"\xc4\xc1x1\x82%\x9d\xf1\x8c\xf3Q\x19N$\x8e\xbf" +
	"\xf0\"1\x09LO\xecF\xb8\xa8$\xcf\xa2p\x09v" +
	"\xed\x10\xb0\xbb\xa9d\x85\"\xdd\xaa(\x86\x8e\x9d_\x04" +
	"v\"W\xbe\x96\xa2\xe4\x0a(\x86\x8e]8\x03\xec\xd6" +
	"\x1fy\x94\x90\x8b\x04y(\xc5\xd0\xb1\xcbG\x80\x9d\x83" +
	"\x95\xb3\xe8\x97\xcfS\xb8\x04\xbbj\x06\xd8u\x02\xf2\x97" +
	"\x14\xadv\x92\xc2%\xd8\xad\x1d\xc0nu\x91\x8f\x02\xe9" +
	"\xf7M\x0a\x97`w0\x00\xbb5@\xdeO\xdf\xee\xa6" +
	"p\x09v\x89\x11\xb0\x93\xe1\xf2v\xc8\x8d\xe3\xe0\xfa\xda" +
	"\xd7!\x00\xbb\xa5K\xbe\x07\x8a\xe3\x10\x8f,\xfb\xe0<" +
	"\xb0\xeb,(HV\x90C\x14C\xc7.X\x02v\x89" +
	"\x87\xac\xc22$\xc87P\x0c\x1d\xbb\xa1\x06\xd8\xf5\x13" +
	"\xf2l\xfa\xe5\x0a\x8a\xa1c'\xdc\x81\xdd($\x97\xd2" +
	"\xf1\xe6Q\x0c\x1d\xbb:\x0b\xd8\x85f\xf2\x08\xb8\x1d\x09" +
	"\xf2\xa5\x14C\xc7\xeeL\x02v\x97\x90<\x90BZ\xb2" +
	"(\x86\x8e\xdd\xcb\x05\xecz-\xd7\xf9U\x16\xc2c\xb0" +
	"}F\x19\xe8\xb5`H\xbb\xdbu*\xd7Bx\xb8\xec" +
	"C\xc8\xc0.ur\x1dZd!<\x86\xd8\x87\x9f\x81" +
	"\x1d~w\xed\xabE\x82k\xb7\xe4\xa6\x87:\xca!;" +
	"\xa8\x19f9H~\x95B\xe4\x16\x074\xbd\xdc\xca\x02" +
	".!o\xe3\x7f\xc8\xce\xaf\x1c\xa4\xa8\x16.\x077M" +
	"\xc3\x94C6\x892(\xea\xcc\xaac\xa02\xab\x92Q" +
	"\x0en\x9a\xa1,g`\xd6r\x88\xb1\xc3h\xc0\xd0\xa4" +
	"\x14\x7f\xc10\xa6\xc0,3\x10Zv,\x0c\x18i9" +
	"H&\xc5\x81\xb0\xd3\x02(;\x12\xc0\x84\x94\x99V\x8a" +
	"2I\x0duK\x084\xec8\x86\xc3Y5p\xc7\xb0" +
	"\x98MX\xd3\xe8$\xa2m\x9b\xb0\xbe\x96\xc3T1\x9b" +
	"\xb0\xc1\xeb`\xaa\xd8\xd9\xacG\xc8\xb3\x87EP\xb6\xb1" +
	"\xd30s\xdb\xc3H\xe4\"\xe1x\xa1\xaa\x1dI||" +
	"LI\xbdxI\x02\xf2\xca\xf2\xab\x09\xe6\xa4\xa7\x12s" +
	"\xf7\xb1\x90\x8e\x0d\xec$\x1e\xb9h9?\xd9Q\x85\\" +
	"go\xc6\x80f\xb3\x8b\x9d\x10:\xc1\x80\xf3X<w" +
	"SD\xf7\xe3\xde\xec\x10-\\e2\x87\x91*Y\x9e" +
	"VU5}lc0\x9e\x05\xedRq\xe1]$\x0e" +
	"\x9b\xba\x96\xce\x89\x94\x01\xe9\x16\x99\xd2\xaa\x89\xf23\xd5" +
	"5\xa4H>\xa4\x19\x96\x8e\xd6\x988\x94\xeaXc%" +
	"\xc4*<\x06\xad\xc3gx4\x13\x87\xac\x03\xc4\xed\xaa" +
	"\xe1Y\xac\x05\x838\xe0i\xec\xf0\x98-\xd8\xd3\xecG" +
	"\x89\xe7\\\x92\x0aOe\xb2s.\xddI\xcf\x8a\xf8\x81" +
	"\x00V\x98\xef\xb4iL?\xd4\xba\x90\x90\xa3\xc73\xcd" +
	"?\x1d\xd0\xd5\xc6\xb8\xa4\x99\x9a\xef|J*\xc5\xb6N" +
	"\x8fD\xcc\x0b\x89\xd5\x93m\xeb\xfe\x07\x05N\xab\x18\x9e" +
	"d_\xc1#\x8f\xba\xc3\xea\xa6\xaa\xeaW\x04\x18\xf2\xd0" +
	"\xd9\xf2_h9\xab\xe7\xd3\x1d\xbd6\x01|\xa6-\x8d" +
	"\x9c\xaa1Om\xb4\x0e\x1b\x13\xa5\xe4<Q~2\xc4" +
	"o\xbe\xe3\x9e\x98!^S\xcby'\x86\xf8]\x9f\xcf" +
	"\xc1\x803\xc0\xf2D\xf7Lt\\V\xe2\xae2Ax" +
	"\x93\x14\xdf\x13d\xaaL\xf5\x9bZ\x92\x93\x88\xddVX" +
	"\xdcMu\xaa\xa6\xf7\x9c\xa5\xfd*\xe6\xc5Q\xe2\x94\xc2" +
	"\x82I\x8b+\x01Zt\xd1\xc2\xcd\x1ew\x93\x16\xc4\x06" +
	"\x9d\xf2\x9eK\x89\xb9\\)\xd1\xd0\xfd]K\xe1R\xc0" +
	"0{(\x90\xa7\xf2\x96i^jac\xc8\x92\x81!" +
	"{\x91\xc8\xc8Ju\x88:-_1\x7f\x9a\xcf\xb2\xf7" +
	"W\xd1=\x02\xbb\x1e\x13\xd8\x9d1r\x11\x8d\xa8\xc7P" +
	"H5\xbb\x09\x0a\xd8Mz\xb4\xc4d\x01\x90\x05\xfb\xce" +
	"I`W\xc7\xc9@\xda\x92\xf0T\xb4o\xb1\x01v_" +
	"\x9e\xebT\xb1\x15\x9ef\xd8\x17\x0c\x01\xbb)\xc6u\x88" +
	"\xbc;@\xb6\x07\xec\xda$`\x17,\xb9\xf6T\"\xc1" +
	"\xb5\x83l\x0e\xd8\xddE\xc0\xae\xb0r=FB\xd7M" +
	"dk\xc0n;\x04v\xc7\x0c\x91y\xc1u\x0b\xd9\x18" +
	"\xb0\xcb\x14\x81\xddZ\xe8j#\xfdid[\xc0.\xf9" +
	"\x04v9\xa9ka\x03\x12\\\xf5\x92\x14\x8c4\x97\xb3" +
	"\xbd=\x0d8\x9bi\xa4k\xfd\xa5\x12Pno\x8a\xcb" +
	"!\xc6\xc2H\x1ayf\x93\x05/\x077E\xc4\xd1\xc3" +
	"\"\xd6\x91,$6E\x12\xe3\xd2\xe4ZRQWC" +
	"W\xa9N\xccT\x06\x03w\xc9\x13B\xceM8\x089" +
	"\x17\x8c\"\xe4\xdc\xc7\x99\xd2\xf7;\xa7\xa7\xbb\x88po" +
	"\x0cm\x17\xd0P\xcf\xc1S\x92j|2\x04g-\x87" +
	"\xe0Lp]!u\xe9t\x1c\xb5\x00?\xf1C\x06\xff" +
	"'\x00\x00\xff\xff\xf5|\x0a\x14"

func init() {
	schemas.Register(schema_ea883e7d5248d81b,
		0x809d4e73dc197b11,
		0x82f304d5d4e81ee4,
		0x860c3dd5698349f5,
		0x86541181da6400f7,
		0x86d95afae10f0893,
		0x87c49e302c6516f8,
		0x884238694e8b8d88,
		0x8ae5aae9653b7b02,
		0x8ed051e9369ac720,
		0x90690022482a2dd4,
		0x91ac69870ceff408,
		0x936b942a74db0be0,
		0x946963af664858d0,
		0x958ea6b33d4e8cbb,
		0x95a8b7d1ed942672,
		0x96fe51446ad697f9,
		0x974c11f8cfed4247,
		0x978c524c1a35015c,
		0x98300b93ef71cc57,
		0x98eadc167523156e,
		0x99b03ceb2dad70db,
		0x9a291d6964350a5b,
		0x9b96e8c9be077989,
		0x9ba7a818970a029c,
		0x9c19777f493f1110,
		0x9cb31f0ede4f5117,
		0x9d64fa17798952ff,
		0x9efc974402f016f6,
		0x9f8515931298bab7,
		0x9fe8d2cd92c27a38,
		0xa17d6c20c2174ec8,
		0xa1a9e5ab638eed79,
		0xa2305f2ea25a3484,
		0xa34213f24153536b,
		0xa4efd353c57d2b85,
		0xa5753d28ca12d2ba,
		0xa630576401b1a5b7,
		0xa78946d2af827622,
		0xa862cd929f7af191,
		0xa89254a0db970716,
		0xa9095b4cff1e5634,
		0xa97d67096ee7d46d,
		0xa99c622e110c1203,
		0xa9e401c52756826a,
		0xaa133a60be5a7d01,
		0xaa98a78425cdd321,
		0xab1e48e58e4c69af,
		0xab89c6fc9bf26f2a,
		0xabc3ec90b96a6d71,
		0xac6cc5b649f638a8,
		0xac8fbc382ae513de,
		0xacf50d40a9d3436a,
		0xad37ff6270c35769,
		0xaf631f5cddda9aa3,
		0xafe329bc8cad8f74,
		0xaff62edfdbfe53d0,
		0xb030fc18cb3b0e61,
		0xb05bd83a34de71b7,
		0xb13597d7a0d68f31,
		0xb2255c049c7bc42f,
		0xb262e0d6c2474d9c,
		0xb47c58aa23289d55,
		0xb5bf271ecf3bc074,
		0xb5dc333528e5f7ae,
		0xb76f3dc1dcf4fdf1,
		0xb7d0dd6b467e7539,
		0xb9095b6d17298884,
		0xb973694cb94aee47,
		0xba0de490234c27af,
		0xbb5ea9a03dfddab3,
		0xbb83332a93ffdcad,
		0xbbec523e9fc1abfc,
		0xbc4d5c31427dc498,
		0xbd8d8f80992c4d78,
		0xbda24ef378533894,
		0xbda949777c149f4b,
		0xbdb679ec96303b53,
		0xbe71bb7b0ed4539a,
		0xbebae5caecad3c49,
		0xbee5e0529f9017ff,
		0xbf1cf3d6e654e947,
		0xc089763bca3e3f44,
		0xc0ad53271497ab77,
		0xc0dd66dedad92ef8,
		0xc18496cf650e6886,
		0xc338177a5379031a,
		0xc3fcefc580775485,
		0xc44d12b3aee49f34,
		0xc7e5f661ac57ebb2,
		0xc9558eac26b0f15e,
		0xc9601ec89a6aa066,
		0xc9b3a8263f6853d7,
		0xcb6e3e65f2dbc914,
		0xcbd45f6552b4ba24,
		0xccf4f28c8951edf6,
		0xd0071dd673841599,
		0xd01613feea87ee6a,
		0xd1afceb8146949d4,
		0xd2117353ea065c72,
		0xd35d6ae0fdbd9bc5,
		0xd49a2570fb5a4342,
		0xd701f5ae7e7560e9,
		0xd70c154f9521b73d,
		0xd7315a3b3f92aa4a,
		0xd78724f6fbd5c5c5,
		0xd7a7f00d5a96fc43,
		0xd7ef486de484610d,
		0xd9459f2361338d96,
		0xd95473f6f8a89a69,
		0xdb27e243a580d2f0,
		0xdb78f249dcc7b9f1,
		0xdba8e30445acc3f4,
		0xdc0aec8d179d4ec9,
		0xdc876697979bc7e5,
		0xdec9706a7438a8f0,
		0xe0b1a560d0e4d51a,
		0xe0f49db8c42c72b2,
		0xe154e487144bf3c2,
		0xe19b7cffa7304650,
		0xe1b522247fc407ad,
		0xe2b3585db47cd4f9,
		0xe2f81b4403ef433b,
		0xe71560d8bc06c6fd,
		0xe75c9c74c2bacb82,
		0xe83f954c9635f05a,
		0xe92935bf20cc2856,
		0xea498a2451bae614,
		0xeadaf2b11fded490,
		0xecb10f87fbe0d6c5,
		0xed67802d71143df2,
		0xf0c07855b6fcd215,
		0xf3243256580294f3,
		0xf39ffa0d4b61ecce,
		0xf485a561c31c83d2,
		0xf4d42db113af3a4b,
		0xf5c310bd5e2aa138,
		0xf7250939585a23f6,
		0xf7da25d3ead6c0d3,
		0xf8551f83bb42e152,
		0xf9b772853fd93ea9,
		0xfa04b4272d0ffcd9,
		0xfa4486fa9522275e,
		0xfaa680ef12c44624,
		0xfc487818328b97ef,
		0xfc6b4417fdef895a,
		0xfcaa6dc30ba75197,
		0xfd86771dd5950237)
}
