// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type Sync struct{ Client capnp.Client }

// Sync_TypeID is the unique identifier for the type Sync.
const Sync_TypeID = 0xf5692a07c5cf7872

func (c Sync) GetStore(ctx context.Context, params func(Sync_getStore_Params) error, opts ...capnp.CallOption) Sync_getStore_Results_Promise {
	if c.Client == nil {
		return Sync_getStore_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf5692a07c5cf7872,
			MethodID:      0,
			InterfaceName: "api.capnp:Sync",
			MethodName:    "getStore",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Sync_getStore_Params{Struct: s}) }
	}
	return Sync_getStore_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Sync_Server interface {
	GetStore(Sync_getStore) error
}

func Sync_ServerToClient(s Sync_Server) Sync {
	c, _ := s.(server.Closer)
	return Sync{Client: server.New(Sync_Methods(nil, s), c)}
}

func Sync_Methods(methods []server.Method, s Sync_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf5692a07c5cf7872,
			MethodID:      0,
			InterfaceName: "api.capnp:Sync",
			MethodName:    "getStore",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Sync_getStore{c, opts, Sync_getStore_Params{Struct: p}, Sync_getStore_Results{Struct: r}}
			return s.GetStore(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Sync_getStore holds the arguments for a server call to Sync.getStore.
type Sync_getStore struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Sync_getStore_Params
	Results Sync_getStore_Results
}

type Sync_getStore_Params struct{ capnp.Struct }

// Sync_getStore_Params_TypeID is the unique identifier for the type Sync_getStore_Params.
const Sync_getStore_Params_TypeID = 0xdc63044e67499411

func NewSync_getStore_Params(s *capnp.Segment) (Sync_getStore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Sync_getStore_Params{st}, err
}

func NewRootSync_getStore_Params(s *capnp.Segment) (Sync_getStore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Sync_getStore_Params{st}, err
}

func ReadRootSync_getStore_Params(msg *capnp.Message) (Sync_getStore_Params, error) {
	root, err := msg.RootPtr()
	return Sync_getStore_Params{root.Struct()}, err
}

func (s Sync_getStore_Params) String() string {
	str, _ := text.Marshal(0xdc63044e67499411, s.Struct)
	return str
}

// Sync_getStore_Params_List is a list of Sync_getStore_Params.
type Sync_getStore_Params_List struct{ capnp.List }

// NewSync_getStore_Params creates a new list of Sync_getStore_Params.
func NewSync_getStore_Params_List(s *capnp.Segment, sz int32) (Sync_getStore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Sync_getStore_Params_List{l}, err
}

func (s Sync_getStore_Params_List) At(i int) Sync_getStore_Params {
	return Sync_getStore_Params{s.List.Struct(i)}
}

func (s Sync_getStore_Params_List) Set(i int, v Sync_getStore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Sync_getStore_Params_List) String() string {
	str, _ := text.MarshalList(0xdc63044e67499411, s.List)
	return str
}

// Sync_getStore_Params_Promise is a wrapper for a Sync_getStore_Params promised by a client call.
type Sync_getStore_Params_Promise struct{ *capnp.Pipeline }

func (p Sync_getStore_Params_Promise) Struct() (Sync_getStore_Params, error) {
	s, err := p.Pipeline.Struct()
	return Sync_getStore_Params{s}, err
}

type Sync_getStore_Results struct{ capnp.Struct }

// Sync_getStore_Results_TypeID is the unique identifier for the type Sync_getStore_Results.
const Sync_getStore_Results_TypeID = 0xf834409e30e8009c

func NewSync_getStore_Results(s *capnp.Segment) (Sync_getStore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Sync_getStore_Results{st}, err
}

func NewRootSync_getStore_Results(s *capnp.Segment) (Sync_getStore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Sync_getStore_Results{st}, err
}

func ReadRootSync_getStore_Results(msg *capnp.Message) (Sync_getStore_Results, error) {
	root, err := msg.RootPtr()
	return Sync_getStore_Results{root.Struct()}, err
}

func (s Sync_getStore_Results) String() string {
	str, _ := text.Marshal(0xf834409e30e8009c, s.Struct)
	return str
}

func (s Sync_getStore_Results) Data() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Sync_getStore_Results) HasData() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Sync_getStore_Results) SetData(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Sync_getStore_Results_List is a list of Sync_getStore_Results.
type Sync_getStore_Results_List struct{ capnp.List }

// NewSync_getStore_Results creates a new list of Sync_getStore_Results.
func NewSync_getStore_Results_List(s *capnp.Segment, sz int32) (Sync_getStore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Sync_getStore_Results_List{l}, err
}

func (s Sync_getStore_Results_List) At(i int) Sync_getStore_Results {
	return Sync_getStore_Results{s.List.Struct(i)}
}

func (s Sync_getStore_Results_List) Set(i int, v Sync_getStore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Sync_getStore_Results_List) String() string {
	str, _ := text.MarshalList(0xf834409e30e8009c, s.List)
	return str
}

// Sync_getStore_Results_Promise is a wrapper for a Sync_getStore_Results promised by a client call.
type Sync_getStore_Results_Promise struct{ *capnp.Pipeline }

func (p Sync_getStore_Results_Promise) Struct() (Sync_getStore_Results, error) {
	s, err := p.Pipeline.Struct()
	return Sync_getStore_Results{s}, err
}

type Meta struct{ Client capnp.Client }

// Meta_TypeID is the unique identifier for the type Meta.
const Meta_TypeID = 0xb02d2ba0578cc7ff

func (c Meta) Ping(ctx context.Context, params func(Meta_ping_Params) error, opts ...capnp.CallOption) Meta_ping_Results_Promise {
	if c.Client == nil {
		return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      0,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_ping_Params{Struct: s}) }
	}
	return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Meta) PubKey(ctx context.Context, params func(Meta_pubKey_Params) error, opts ...capnp.CallOption) Meta_pubKey_Results_Promise {
	if c.Client == nil {
		return Meta_pubKey_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      1,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "pubKey",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_pubKey_Params{Struct: s}) }
	}
	return Meta_pubKey_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Meta_Server interface {
	Ping(Meta_ping) error

	PubKey(Meta_pubKey) error
}

func Meta_ServerToClient(s Meta_Server) Meta {
	c, _ := s.(server.Closer)
	return Meta{Client: server.New(Meta_Methods(nil, s), c)}
}

func Meta_Methods(methods []server.Method, s Meta_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      0,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_ping{c, opts, Meta_ping_Params{Struct: p}, Meta_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      1,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "pubKey",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_pubKey{c, opts, Meta_pubKey_Params{Struct: p}, Meta_pubKey_Results{Struct: r}}
			return s.PubKey(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Meta_ping holds the arguments for a server call to Meta.ping.
type Meta_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_ping_Params
	Results Meta_ping_Results
}

// Meta_pubKey holds the arguments for a server call to Meta.pubKey.
type Meta_pubKey struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Meta_pubKey_Params
	Results Meta_pubKey_Results
}

type Meta_ping_Params struct{ capnp.Struct }

// Meta_ping_Params_TypeID is the unique identifier for the type Meta_ping_Params.
const Meta_ping_Params_TypeID = 0xe1a9fd466eca248c

func NewMeta_ping_Params(s *capnp.Segment) (Meta_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_ping_Params{st}, err
}

func NewRootMeta_ping_Params(s *capnp.Segment) (Meta_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_ping_Params{st}, err
}

func ReadRootMeta_ping_Params(msg *capnp.Message) (Meta_ping_Params, error) {
	root, err := msg.RootPtr()
	return Meta_ping_Params{root.Struct()}, err
}

func (s Meta_ping_Params) String() string {
	str, _ := text.Marshal(0xe1a9fd466eca248c, s.Struct)
	return str
}

// Meta_ping_Params_List is a list of Meta_ping_Params.
type Meta_ping_Params_List struct{ capnp.List }

// NewMeta_ping_Params creates a new list of Meta_ping_Params.
func NewMeta_ping_Params_List(s *capnp.Segment, sz int32) (Meta_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_ping_Params_List{l}, err
}

func (s Meta_ping_Params_List) At(i int) Meta_ping_Params { return Meta_ping_Params{s.List.Struct(i)} }

func (s Meta_ping_Params_List) Set(i int, v Meta_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_ping_Params_List) String() string {
	str, _ := text.MarshalList(0xe1a9fd466eca248c, s.List)
	return str
}

// Meta_ping_Params_Promise is a wrapper for a Meta_ping_Params promised by a client call.
type Meta_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_ping_Params_Promise) Struct() (Meta_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_ping_Params{s}, err
}

type Meta_ping_Results struct{ capnp.Struct }

// Meta_ping_Results_TypeID is the unique identifier for the type Meta_ping_Results.
const Meta_ping_Results_TypeID = 0x9a90fde15285e327

func NewMeta_ping_Results(s *capnp.Segment) (Meta_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_ping_Results{st}, err
}

func NewRootMeta_ping_Results(s *capnp.Segment) (Meta_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_ping_Results{st}, err
}

func ReadRootMeta_ping_Results(msg *capnp.Message) (Meta_ping_Results, error) {
	root, err := msg.RootPtr()
	return Meta_ping_Results{root.Struct()}, err
}

func (s Meta_ping_Results) String() string {
	str, _ := text.Marshal(0x9a90fde15285e327, s.Struct)
	return str
}

func (s Meta_ping_Results) Reply() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Meta_ping_Results) HasReply() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_ping_Results) ReplyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Meta_ping_Results) SetReply(v string) error {
	return s.Struct.SetText(0, v)
}

// Meta_ping_Results_List is a list of Meta_ping_Results.
type Meta_ping_Results_List struct{ capnp.List }

// NewMeta_ping_Results creates a new list of Meta_ping_Results.
func NewMeta_ping_Results_List(s *capnp.Segment, sz int32) (Meta_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_ping_Results_List{l}, err
}

func (s Meta_ping_Results_List) At(i int) Meta_ping_Results {
	return Meta_ping_Results{s.List.Struct(i)}
}

func (s Meta_ping_Results_List) Set(i int, v Meta_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_ping_Results_List) String() string {
	str, _ := text.MarshalList(0x9a90fde15285e327, s.List)
	return str
}

// Meta_ping_Results_Promise is a wrapper for a Meta_ping_Results promised by a client call.
type Meta_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_ping_Results_Promise) Struct() (Meta_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_ping_Results{s}, err
}

type Meta_pubKey_Params struct{ capnp.Struct }

// Meta_pubKey_Params_TypeID is the unique identifier for the type Meta_pubKey_Params.
const Meta_pubKey_Params_TypeID = 0xe0076d8cf038baab

func NewMeta_pubKey_Params(s *capnp.Segment) (Meta_pubKey_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_pubKey_Params{st}, err
}

func NewRootMeta_pubKey_Params(s *capnp.Segment) (Meta_pubKey_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Meta_pubKey_Params{st}, err
}

func ReadRootMeta_pubKey_Params(msg *capnp.Message) (Meta_pubKey_Params, error) {
	root, err := msg.RootPtr()
	return Meta_pubKey_Params{root.Struct()}, err
}

func (s Meta_pubKey_Params) String() string {
	str, _ := text.Marshal(0xe0076d8cf038baab, s.Struct)
	return str
}

// Meta_pubKey_Params_List is a list of Meta_pubKey_Params.
type Meta_pubKey_Params_List struct{ capnp.List }

// NewMeta_pubKey_Params creates a new list of Meta_pubKey_Params.
func NewMeta_pubKey_Params_List(s *capnp.Segment, sz int32) (Meta_pubKey_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Meta_pubKey_Params_List{l}, err
}

func (s Meta_pubKey_Params_List) At(i int) Meta_pubKey_Params {
	return Meta_pubKey_Params{s.List.Struct(i)}
}

func (s Meta_pubKey_Params_List) Set(i int, v Meta_pubKey_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_pubKey_Params_List) String() string {
	str, _ := text.MarshalList(0xe0076d8cf038baab, s.List)
	return str
}

// Meta_pubKey_Params_Promise is a wrapper for a Meta_pubKey_Params promised by a client call.
type Meta_pubKey_Params_Promise struct{ *capnp.Pipeline }

func (p Meta_pubKey_Params_Promise) Struct() (Meta_pubKey_Params, error) {
	s, err := p.Pipeline.Struct()
	return Meta_pubKey_Params{s}, err
}

type Meta_pubKey_Results struct{ capnp.Struct }

// Meta_pubKey_Results_TypeID is the unique identifier for the type Meta_pubKey_Results.
const Meta_pubKey_Results_TypeID = 0x9a5f4e41312da7d4

func NewMeta_pubKey_Results(s *capnp.Segment) (Meta_pubKey_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_pubKey_Results{st}, err
}

func NewRootMeta_pubKey_Results(s *capnp.Segment) (Meta_pubKey_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Meta_pubKey_Results{st}, err
}

func ReadRootMeta_pubKey_Results(msg *capnp.Message) (Meta_pubKey_Results, error) {
	root, err := msg.RootPtr()
	return Meta_pubKey_Results{root.Struct()}, err
}

func (s Meta_pubKey_Results) String() string {
	str, _ := text.Marshal(0x9a5f4e41312da7d4, s.Struct)
	return str
}

func (s Meta_pubKey_Results) Key() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Meta_pubKey_Results) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Meta_pubKey_Results) SetKey(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Meta_pubKey_Results_List is a list of Meta_pubKey_Results.
type Meta_pubKey_Results_List struct{ capnp.List }

// NewMeta_pubKey_Results creates a new list of Meta_pubKey_Results.
func NewMeta_pubKey_Results_List(s *capnp.Segment, sz int32) (Meta_pubKey_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Meta_pubKey_Results_List{l}, err
}

func (s Meta_pubKey_Results_List) At(i int) Meta_pubKey_Results {
	return Meta_pubKey_Results{s.List.Struct(i)}
}

func (s Meta_pubKey_Results_List) Set(i int, v Meta_pubKey_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Meta_pubKey_Results_List) String() string {
	str, _ := text.MarshalList(0x9a5f4e41312da7d4, s.List)
	return str
}

// Meta_pubKey_Results_Promise is a wrapper for a Meta_pubKey_Results promised by a client call.
type Meta_pubKey_Results_Promise struct{ *capnp.Pipeline }

func (p Meta_pubKey_Results_Promise) Struct() (Meta_pubKey_Results, error) {
	s, err := p.Pipeline.Struct()
	return Meta_pubKey_Results{s}, err
}

type API struct{ Client capnp.Client }

// API_TypeID is the unique identifier for the type API.
const API_TypeID = 0xb74958502f92fefd

func (c API) Version(ctx context.Context, params func(API_version_Params) error, opts ...capnp.CallOption) API_version_Results_Promise {
	if c.Client == nil {
		return API_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb74958502f92fefd,
			MethodID:      0,
			InterfaceName: "api.capnp:API",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(API_version_Params{Struct: s}) }
	}
	return API_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GetStore(ctx context.Context, params func(Sync_getStore_Params) error, opts ...capnp.CallOption) Sync_getStore_Results_Promise {
	if c.Client == nil {
		return Sync_getStore_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf5692a07c5cf7872,
			MethodID:      0,
			InterfaceName: "api.capnp:Sync",
			MethodName:    "getStore",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Sync_getStore_Params{Struct: s}) }
	}
	return Sync_getStore_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Ping(ctx context.Context, params func(Meta_ping_Params) error, opts ...capnp.CallOption) Meta_ping_Results_Promise {
	if c.Client == nil {
		return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      0,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_ping_Params{Struct: s}) }
	}
	return Meta_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) PubKey(ctx context.Context, params func(Meta_pubKey_Params) error, opts ...capnp.CallOption) Meta_pubKey_Results_Promise {
	if c.Client == nil {
		return Meta_pubKey_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      1,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "pubKey",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Meta_pubKey_Params{Struct: s}) }
	}
	return Meta_pubKey_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type API_Server interface {
	Version(API_version) error

	GetStore(Sync_getStore) error

	Ping(Meta_ping) error

	PubKey(Meta_pubKey) error
}

func API_ServerToClient(s API_Server) API {
	c, _ := s.(server.Closer)
	return API{Client: server.New(API_Methods(nil, s), c)}
}

func API_Methods(methods []server.Method, s API_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb74958502f92fefd,
			MethodID:      0,
			InterfaceName: "api.capnp:API",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := API_version{c, opts, API_version_Params{Struct: p}, API_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf5692a07c5cf7872,
			MethodID:      0,
			InterfaceName: "api.capnp:Sync",
			MethodName:    "getStore",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Sync_getStore{c, opts, Sync_getStore_Params{Struct: p}, Sync_getStore_Results{Struct: r}}
			return s.GetStore(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      0,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_ping{c, opts, Meta_ping_Params{Struct: p}, Meta_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb02d2ba0578cc7ff,
			MethodID:      1,
			InterfaceName: "api.capnp:Meta",
			MethodName:    "pubKey",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Meta_pubKey{c, opts, Meta_pubKey_Params{Struct: p}, Meta_pubKey_Results{Struct: r}}
			return s.PubKey(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// API_version holds the arguments for a server call to API.version.
type API_version struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  API_version_Params
	Results API_version_Results
}

type API_version_Params struct{ capnp.Struct }

// API_version_Params_TypeID is the unique identifier for the type API_version_Params.
const API_version_Params_TypeID = 0xfbab528dd0716804

func NewAPI_version_Params(s *capnp.Segment) (API_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return API_version_Params{st}, err
}

func NewRootAPI_version_Params(s *capnp.Segment) (API_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return API_version_Params{st}, err
}

func ReadRootAPI_version_Params(msg *capnp.Message) (API_version_Params, error) {
	root, err := msg.RootPtr()
	return API_version_Params{root.Struct()}, err
}

func (s API_version_Params) String() string {
	str, _ := text.Marshal(0xfbab528dd0716804, s.Struct)
	return str
}

// API_version_Params_List is a list of API_version_Params.
type API_version_Params_List struct{ capnp.List }

// NewAPI_version_Params creates a new list of API_version_Params.
func NewAPI_version_Params_List(s *capnp.Segment, sz int32) (API_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return API_version_Params_List{l}, err
}

func (s API_version_Params_List) At(i int) API_version_Params {
	return API_version_Params{s.List.Struct(i)}
}

func (s API_version_Params_List) Set(i int, v API_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s API_version_Params_List) String() string {
	str, _ := text.MarshalList(0xfbab528dd0716804, s.List)
	return str
}

// API_version_Params_Promise is a wrapper for a API_version_Params promised by a client call.
type API_version_Params_Promise struct{ *capnp.Pipeline }

func (p API_version_Params_Promise) Struct() (API_version_Params, error) {
	s, err := p.Pipeline.Struct()
	return API_version_Params{s}, err
}

type API_version_Results struct{ capnp.Struct }

// API_version_Results_TypeID is the unique identifier for the type API_version_Results.
const API_version_Results_TypeID = 0xebdd19e3dba3370b

func NewAPI_version_Results(s *capnp.Segment) (API_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return API_version_Results{st}, err
}

func NewRootAPI_version_Results(s *capnp.Segment) (API_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return API_version_Results{st}, err
}

func ReadRootAPI_version_Results(msg *capnp.Message) (API_version_Results, error) {
	root, err := msg.RootPtr()
	return API_version_Results{root.Struct()}, err
}

func (s API_version_Results) String() string {
	str, _ := text.Marshal(0xebdd19e3dba3370b, s.Struct)
	return str
}

func (s API_version_Results) Version() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s API_version_Results) SetVersion(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// API_version_Results_List is a list of API_version_Results.
type API_version_Results_List struct{ capnp.List }

// NewAPI_version_Results creates a new list of API_version_Results.
func NewAPI_version_Results_List(s *capnp.Segment, sz int32) (API_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return API_version_Results_List{l}, err
}

func (s API_version_Results_List) At(i int) API_version_Results {
	return API_version_Results{s.List.Struct(i)}
}

func (s API_version_Results_List) Set(i int, v API_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s API_version_Results_List) String() string {
	str, _ := text.MarshalList(0xebdd19e3dba3370b, s.List)
	return str
}

// API_version_Results_Promise is a wrapper for a API_version_Results promised by a client call.
type API_version_Results_Promise struct{ *capnp.Pipeline }

func (p API_version_Results_Promise) Struct() (API_version_Results, error) {
	s, err := p.Pipeline.Struct()
	return API_version_Results{s}, err
}

const schema_9bcb07fb35756ee6 = "x\xdat\x92OH\x14a\x18\xc6\x9f\xf7\xfb\xbei\xac" +
	"\\\x97\x8f\xaf\x0e\x1eB\x88\x15\xc1p\xd5\xfePH\xb0" +
	"\xabP\xb2E2\xb3\x1e\xea\x16\x93\x0d\xb6\xa4\xeb63" +
	"\x1b\xad\x10\xd1!\xba\x18Dt*\x89\"\"\xc2K\xb7" +
	"\xa0\xbb\x84E\xd4\xa1S\x7f \x93\"\x0c\xa1\x82 \x92" +
	"ibV\xc7\x19\xfft~\xbe\xefy\x9f\xe7\xf7\xbe]" +
	"\x87(\xcf\xba\xb5N\x0d0\x0fj\x9b\x827\x0f;\xba" +
	"{\x07N\xde\x82L\x13\xa0\x91\x0e\xa8\x8b\xec'H]" +
	"f9P\xd06w\xa58\xeb__\xa5\xdfc\x9f@" +
	"\xeaA]\x0f\x9eM\x1c\xbf\xbb\xab\xe31\xe4\x16\x1e|" +
	")W\xf7-\xea/n\x03\xa4\xa6\xd9\xb8\x9aa\xe1\xf3" +
	"ivUm\xe7:\x10\xf8\x7fot\x1a'\x0aO\xd6" +
	"=\xf6\x99\xa3(|\xa2|\xd6\xafZy\x1b\x10\xc8\x9b" +
	"\x85\xe1\x011\xf4~i\xb2\x08\xc5\x1d\xfc\x0fD0\xf5" +
	"\xf4\xc0\xf7\x89Q\xfdcB >\x0f\x11Ld\x9e\x97" +
	"\x0f\xfb\x8ff\x13\xc2g\xf6\x16\"\xd8\xba\xff\xfe\xbb\xb9" +
	"\xe6\x0f\xdf`6Q\xa4\xcc\xd4K\xbe\xac\x97p.\xbc" +
	"\x9a\xd6\xdbK\xbf\xd6\xe5Z`\xe3\xeaG\xbd\xc4\x02\xeb" +
	"W\xcdaB\x7f\xf2k\xd7\x9d\xfc\xde\xdf1\x8f=\xc4" +
	"\x19\x81\x94\xc6C/q\xe6\xdc\xebk\xc5\xa9E\xc8\xa6" +
	"hT+\x9fGW`UJ\xd9!\xabRf\x95\x9e" +
	"c\xb6ge+\xd5SG\xedZ\xa6h\xb7\xb8\xd5\x11" +
	"\xcf5\x05\x17\x80 @\xa6v\x02f\x03's\x1b#" +
	"\xfd\xac]\xa3\x14\x18\xa5@\xeb-J\xe5\xe1L\xd1v" +
	"\xab\xfa\x1a\x83\xdd\xb1A\x8bcWFj\xd4\x08F\x8d" +
	"\x09\x0b\xe4\x96<\x0c\"\xb3\x81k\xc0\x0a=\x8aV." +
	"\xbb\xdb\xc1d\xabN\xb4\x82\x9c\xa2s\x91\xcd=`2" +
	"\xa5\xa7\xc3\x08y\xca-\x95\xc9\x93A\x89\x11-\x95\x9e" +
	"^\xa3\x10N\x10\xf5\x09\x11\x1a\x8a\xf6!e\x1f\x98\xd4" +
	"\xf4K\xe7m\xc7-\x8d\x95\xf3d6Pb\x1d@|" +
	"_@\xb2\xfe`\xad<\x94\x1d\xb6\xbdAo\xcc\xb13" +
	"9\xc3r\xacQ\xf7\x7f\x88\x0d+\xbd\xb1\x1c\xe2\x0b\xbf" +
	"\xf2\xd5b\xafQ\xc8.'\xdap=}1\xdd(9" +
	"\x090\x12k\xf8\x86!\xe3\xf6\xd1=\xd3$\x96/H" +
	"\x1e\x01\x93\x9b\xf5 \xea\x01`5A\xbe\xb6h\xb8\xeb" +
	"\x11\xcfE2M{\x9c&}\xda\xf2\xac\x8d\xae%\xd9" +
	"h\x99\xc6\xbf\x00\x00\x00\xff\xff\xc6\x9a'\x15"

func init() {
	schemas.Register(schema_9bcb07fb35756ee6,
		0x9a5f4e41312da7d4,
		0x9a90fde15285e327,
		0xb02d2ba0578cc7ff,
		0xb74958502f92fefd,
		0xdc63044e67499411,
		0xe0076d8cf038baab,
		0xe1a9fd466eca248c,
		0xebdd19e3dba3370b,
		0xf5692a07c5cf7872,
		0xf834409e30e8009c,
		0xfbab528dd0716804)
}
