syntax = "proto3";
package brig.daemon;
option go_package = "wire";

import "store.proto";

// The ordering in here has no particular meaning.
// The numbers just get incremented in the order that
// they were added - which is a nice history book of brig.
enum MessageType {
    STAGE = 0;
    CAT = 1;
    PING = 2;
    QUIT = 3;
    MOUNT = 4;
    UNMOUNT = 5;
	RM = 6;
    ONLINE_STATUS = 7;
    SYNC = 8;
    LIST = 9;
    MV = 10;
    MKDIR = 11;

    REMOTE_ADD = 12;
    REMOTE_REMOVE = 13;
    REMOTE_LIST = 14;
    REMOTE_LOCATE = 15;
    REMOTE_SELF = 16;

    HISTORY = 17;
    STATUS = 18;
    COMMIT = 19;
    DIFF = 20;
    LOG = 21;

    PIN = 22;
    RESET= 23;

    EXPORT = 24;
    IMPORT = 25;
}

enum OnlineQuery {
    // Connect to the network:
    GO_ONLINE = 0;
    // Disconnect all:
    GO_OFFLINE = 1;
    // Do not alter status; just return current:
    IS_ONLINE = 2;
}

message Command {
    message StageCmd {
		// The abs path to the file we're going to add.
        string file_path = 1;
		// The virtual abs path inside the repo (e.g. /photos/me.png)
        string repo_path = 2;
    }

    message CatCmd {
		// The abs path of the file to cat inside the repo.
        string repo_path = 1;
		// Where to stream the result.
        string file_path = 2;
    }

    message PingCmd {
    }

    message QuitCmd {
    }

    message MountCmd {
        // Where to mount the filesystem
        string mount_point = 1;
    }

    message UnmountCmd {
        // Where to unmount the filesystem
        string mount_point = 1;
    }

	message RmCmd {
		string repo_path = 1;
        bool recursive = 2;
	}

    message HistoryCmd {
        // Which file to show the history of:
        string repo_path = 1;
    }

    message OnlineStatusCmd {
        OnlineQuery query = 1;
    }

    message SyncCmd {
        string who = 1;
    }

    message ListCmd {
        string root = 1;
        int32 depth = 2;
    }

    message MvCmd {
        string source = 1;
        string dest = 2;
    }

    message MkdirCmd {
        string path = 1;
        bool create_parents = 2;
    }

    message RemoteAddCmd {
        string id = 1;
        string hash = 2;
    }

    message RemoteRemoveCmd {
        string id = 1;
    }

    message RemoteListCmd {
        bool needsOnline = 1;
    }

    message RemoteLocateCmd {
        string id = 1;
        int32 peer_limit = 2;
        int32 timeout_ms = 3;
    }

    message RemoteSelfCmd  {
    }

    message StatusCmd {
    }

    message CommitCmd {
        string message = 1;
    }

    message DiffCmd {
        bytes low = 1;
        bytes high = 2;
    }

    message LogCmd {
        bytes low = 1;
        bytes high = 2;
    }

    message PinCmd {
        // Balance can be either:
        //  > 0: Pin the path.
        // == 0: Do nothing (but respond pinning status)
        //  < 0: Unpin the object. 
        // Future implementation might use the exact value.
        int32 balance = 1;
        string path = 2;
    }

    message ResetCmd {
      string repo_path = 1;
      string commit_ref = 2;
    }

    message ExportCmd {
      // Which store to export?
      string who = 1;
    }

    message ImportCmd {
        bytes data = 1;
    }

    MessageType command_type = 1;

    // TODO: rename to stage command
    StageCmd add_command = 2;
    CatCmd cat_command = 3;
    PingCmd ping_command = 4;
    QuitCmd quit_command = 5;
    MountCmd mount_command = 6;
    UnmountCmd unmount_command = 7;
    RmCmd rm_command = 8;
    HistoryCmd history_command = 9;
    OnlineStatusCmd online_status_command = 10;
    SyncCmd sync_command = 11;
    ListCmd list_command = 12;
    MvCmd mv_command = 13;
    MkdirCmd mkdir_command = 14;

    RemoteAddCmd remote_add_command = 15;
    RemoteRemoveCmd remote_remove_command = 16;
    RemoteListCmd remote_list_command = 17;
    RemoteLocateCmd remote_locate_command = 18;
    RemoteSelfCmd remote_self_command = 19;

    StatusCmd status_command = 20;
    CommitCmd commit_command = 21;
    DiffCmd diff_command = 22;
    LogCmd log_command = 23;

    PinCmd pin_command = 24;

    ExportCmd export_command = 25;
    ImportCmd import_command = 26;

    ResetCmd reset_command = 27;
}

message Remote {
    string id = 1;
    string hash = 2;
    bool is_online = 3;
}

message Response {
    message ListResp {
        brig.store.Nodes entries = 1;
    }

    message HistoryResp {
        brig.store.History history = 1;
    }

    message RemoteListResp {
        repeated Remote remotes = 1;
    }

    message RemoteLocateResp {
        repeated string hashes = 1;
    }

    message RemoteSelfResp {
        Remote self = 1;
    }

    message OnlineStatusResp {
        bool is_online = 1;
    }

    message StatusResp {
        brig.store.Node stage_commit = 1;
    }

    message LogResp {
        brig.store.Nodes Nodes = 1;
    }

    message PinResp {
        bool is_pinned = 1;
    }

    message ExportResp {
        bytes data = 1;
    }

    MessageType response_type = 1;
    bool success = 2;
    string error = 3;

    HistoryResp history_resp = 4;
    ListResp list_resp = 5;
    RemoteListResp remote_list_resp = 6;
    RemoteLocateResp remote_locate_resp = 7;
    RemoteSelfResp remote_self_resp = 8;
    OnlineStatusResp online_status_resp = 9;
    StatusResp status_resp = 10;
    LogResp log_resp = 11;
    PinResp pin_resp = 12;
    ExportResp export_resp = 13;
}
