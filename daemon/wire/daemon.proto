package brig.daemon;
option go_package = "wire";

import "store.proto";

// The ordering in here has no particular meaning.
// The numbers just get incremented in the order that
// they were added - which is a nice history book of brig.
enum MessageType {
    ADD = 0;
    CAT = 1;
    PING = 2;
    QUIT = 3;
    MOUNT = 4;
    UNMOUNT = 5;
	RM = 6;
    HISTORY = 7;
    LOG = 8;
    ONLINE_STATUS = 9;
    FETCH = 10;
    LIST = 11;
    MV = 12;
    MKDIR = 13;

    REMOTE_ADD = 14;
    REMOTE_REMOVE = 15;
    REMOTE_LIST = 16;
    REMOTE_LOCATE = 17;
    REMOTE_SELF = 18;
}

enum OnlineQuery {
    // Connect to the network:
    GO_ONLINE = 0;
    // Disconnect all:
    GO_OFFLINE = 1;
    // Do not alter status; just return current:
    IS_ONLINE = 2;
}

message Command {
    message AddCmd {
		// The abs path to the file we're going to add.
        required string file_path = 1;
		// The virtual abs path inside the repo (e.g. /photos/me.png)
        required string repo_path = 2;
    }

    message CatCmd {
		// The abs path of the file to cat inside the repo.
        required string repo_path = 1;
		// Where to stream the result.
        required string file_path = 2;
    }

    message PingCmd {
    }

    message QuitCmd {
    }

    message MountCmd {
        // Where to mount the filesystem
        required string mount_point = 1;
    }

    message UnmountCmd {
        // Where to unmount the filesystem
        required string mount_point = 1;
    }

	message RmCmd {
		required string repo_path = 1;
        required bool recursive = 2;
	}

    message HistoryCmd {
        // Which file to show the history of:
        required string repo_path = 1;
    }

    message LogCmd {
        // No arguments yet.
    }

    message OnlineStatusCmd {
        required OnlineQuery query = 1;
    }

    message FetchCmd {
        required string who = 1;
    }

    message ListCmd {
        required string root = 1;
        required int32 depth = 2;
    }

    message MvCmd {
        required string source = 1;
        required string dest = 2;
    }

    message MkdirCmd {
        required string path = 1;
    }

    message RemoteAddCmd {
        required string id = 1;
        required string hash = 2;
    }

    message RemoteRemoveCmd {
        required string id = 1;
    }

    message RemoteListCmd {
        optional bool needsOnline = 1;
    }

    message RemoteLocateCmd {
        required string id = 1;
        optional int32 peer_limit = 2;
        optional int32 timeout_ms = 3;
    }

    message RemoteSelfCmd  {
    }

    required MessageType command_type = 1;

    optional AddCmd add_command = 2;
    optional CatCmd cat_command = 3;
    optional PingCmd ping_command = 4;
    optional QuitCmd quit_command = 5;
    optional MountCmd mount_command = 6;
    optional UnmountCmd unmount_command = 7;
    optional RmCmd rm_command = 8;
    optional HistoryCmd history_command = 9;
    optional LogCmd log_command = 10;
    optional OnlineStatusCmd online_status_command = 11;
    optional FetchCmd fetch_command = 12;
    optional ListCmd list_command = 13;
    optional MvCmd mv_command = 14;
    optional MkdirCmd mkdir_command = 15;

    optional RemoteAddCmd remote_add_command = 16;
    optional RemoteRemoveCmd remote_remove_command = 17;
    optional RemoteListCmd remote_list_command = 18;
    optional RemoteLocateCmd remote_locate_command = 19;
    optional RemoteSelfCmd remote_self_command = 20;
}

message Remote {
    required string id = 1;
    required string hash = 2;
    optional bool is_online = 3;
}

message Response {
    message ListResp {
        required brig.store.Dirlist dirlist = 1;
    }

    message HistoryResp {
        required brig.store.History history = 1;
    }

    message RemoteListResp {
        repeated Remote remotes = 1;
    }

    message RemoteLocateResp {
        repeated string hashes = 1;
    }

    message RemoteSelfResp {
        required Remote self = 1;
    }

    message OnlineStatusResp {
        required bool is_online = 1;
    }

    required MessageType response_type = 1;
    required bool success = 2;
    optional string error = 3;

    optional HistoryResp history_resp = 4;
    optional ListResp list_resp = 5;
    optional RemoteListResp remote_list_resp = 6;
    optional RemoteLocateResp remote_locate_resp = 7;   
    optional RemoteSelfResp remote_self_resp = 8;
    optional OnlineStatusResp online_status_resp = 9;
}
