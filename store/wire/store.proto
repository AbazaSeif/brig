package brig.store;
option go_package = "wire";

message File {
    required string path = 1;
    optional bytes key = 2;
    optional bytes hash = 3;
    required int64 file_size = 4;
    required int32 kind = 5;
    
    // Timestamp formated as RFC 3339
    required bytes mod_time = 6;
}

// Dirent is like a file, but does not include sensitive information.
message Dirent {
    required string path = 1;
    required int64 file_size = 2;
    required int32 kind = 3;
    required bytes mod_time = 4;
}

message Dirlist {
    repeated Dirent entries = 1;
}

message Checkpoint {
    required bytes hash = 1;
    required bytes mod_time = 2;
    required int64 file_size = 3;
    required int32 change = 4;
    required string author = 5;
    required string path = 6;
}

message History {
    repeated Checkpoint hist = 1 [packed=false];
}

// A pack stores the history of a file besides it's metadata.
// i.e. everything needed for an exported file.
message Pack {
    required File file = 1;
    required History history = 2;
}

// Store is the exported form of a store.
message Store {
    repeated Pack packs = 1;
    required Commits commits = 2;
}

// Commit is a bag of changes, either automatically done
// or by the user.
message Commit {
    required string message = 1;
    required string author = 2;
    required bytes mod_time = 3;
    required bytes hash = 4;
    required bytes tree_hash = 5;

    // List of checkpoints: 
    repeated Checkpoint checkpoints = 6;

    // Link to parent hash:
    optional bytes parent_hash = 7;
}

// Commits is an ordered list of commits
message Commits {
    repeated Commit commits = 1;
}
